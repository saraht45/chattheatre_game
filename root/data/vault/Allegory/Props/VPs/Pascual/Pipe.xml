<object clone="/base/obj/thing" owner="sendnoodlez">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.001" density="0.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pipe"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pipes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ebony"/>
          <Base:Adjective adjective="engraved"/>
          <Base:Adjective adjective="long-stemmed"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             long-stemmed engraved ebony pipe
          </Base:Description>
          <Base:Description type="examine">
             This is $[if($this.lit) { return "a lit"; } else { return "an unlit"; }] pipe features a long ebony stem affixed to a ceramic bowl by means of a steel fitting called a saddle. An elaborate filigree design decorates both the stem and the saddle.<sbr/><quality-full/>
          </Base:Description>
          <Base:Description type="look">
             This is $[if($this.lit) { return "a lit"; } else { return "an unlit"; }] pipe features a long ebony stem affixed to a ceramic bowl by means of a steel fitting called a saddle. An elaborate filigree design decorates both the stem and the saddle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bowl" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bowl"/>
            <Base:SName sname="bulb"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bowls"/>
            <Base:PName pname="bulb"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ceramic"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             long-stemmed engraved ebony pipe's ceramic bowl
          </Base:Description>
          <Base:Description type="examine">
             This long-stemmed engraved ebony pipe's ceramic bowl can be filled with opium.
          </Base:Description>
          <Base:Description type="look">
             A long-stemmed engraved ebony pipe's ceramic bowl.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stem" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stem"/>
            <Base:SName sname="bit"/>
            <Base:SName sname="mouthpiece"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bits"/>
            <Base:PName pname="mouthpieces"/>
            <Base:PName pname="stems"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ebony"/>
          <Base:Adjective adjective="long"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             engraved ebony pipe's long stem
          </Base:Description>
          <Base:Description type="examine">
             The long ebony stem of this pipe.
          </Base:Description>
          <Base:Description type="look">
             The long stem of this engraved ebony pipe.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="effect:type">"drug"</Core:Property>
      <Core:Property property="export:effect:type">
         "drug"
      </Core:Property>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:trait:objecttype">
         "cigar"
      </Core:Property>
      <Core:Property property="export:trait:quality">
         24
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "bitter, ammonia-like aroma"
      </Core:Property>
      <Core:Property property="merry:lib:do_smoke">
         X[M] if(!\$this.lit) \{      
    EmitTo(\$actor, Describe(this, nil, \$actor) + " is not lit.");      
    return FALSE;      
\}      
      
\$delay(1, FALSE, "4bf9");           
             
if(!\$adverb) \{             
  \$adverb_str = "";             
\} else \{             
  \$adverb_str = \$adverb+" ";             
\}                              
          
switch(random(8))                   
\{            
  case 7:                   
    \$sizes = "light";                   
  break;              
  case 6:                   
    \$sizes = "meager";                   
  break;       
  case 5:                   
    \$sizes = "slight";                   
  break;       
  case 4:                   
    \$sizes = "little";                   
  break;         
  case 3:                   
    \$sizes = "tiny";                   
  break;         
  case 2:                   
    \$sizes = "miniature";                   
  break;                   
  case 1:                   
    \$sizes = "small";                   
  break;                   
  case 0:                   
    \$sizes = "scant";                   
  break;                   
  default:                   
  break;                   
\}         
         
switch(random(3))                   
\{                   
  case 2:                   
    \$plumes = "clouds";                   
  break;       
  case 1:                   
    \$plumes = "clouds";                   
  break;                   
  case 0:                   
    \$plumes = "plumes";                   
  break;                             
  default:                   
  break;                   
\}         
         
switch(random(7))                   
\{       
  case 6:                   
    \$desc1 = "float";                   
  break;           
  case 5:                   
    \$desc1 = "dance";                   
  break;                   
  case 4:                   
    \$desc1 = "curl";                   
  break;         
  case 3:                   
    \$desc1 = "emanate";                   
  break;         
  case 2:                   
    \$desc1 = "radiate";                   
  break;                   
  case 1:                   
    \$desc1 = "rise";                  
  break;                   
  case 0:                   
    \$desc1 = "billow";                  
  break;                   
  default:                   
  break;                   
\}         
         
switch(random(3))                   
\{                   
  case 2:                   
    \$direct = "upward";                   
  break;                   
  case 1:                   
    \$direct = "skyward";                 
  break;                   
  case 0:                   
    \$direct = "outward";                  
  break;                   
  default:                   
  break;                   
\}         
         
switch(random(3))                   
\{          
  case 2:                   
    \$taste = "flavor";                   
  break;                
  case 1:                   
    \$taste = "taste";                   
  break;                   
  case 0:                   
    \$taste = "sensation";                   
  break;                             
  default:                   
  break;                   
\}         
                        
EmitTo( \$actor, "You puff " + \$adverb_str + "on " + Describe(this) + ", the " + \$taste + " of the opium fills your mouth and " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + "." );                                                 
EmitIn( \$actor."base:environment", Describe(\$actor)+ " puffs " + \$adverb_str + "on " +Describe(\$this, \$actor)+ " as " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + ".", \$actor);
      </Core:Property>
      <Core:Property property="merry:lib:emitsmoke">
         X[M] switch(random(7))                   
\{          
  case 6:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" glows faintly as the opium burns, emanating a bitter, ammonia-like scent.");        
  break;                
  case 5:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" releases a curling tendril of smoke into the air, filling the area with the pungent scent of opium.");        
  break;                
  case 4:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" burns, sending a tendril of smoke dancing upward into the air.");                   
  break;                
  case 3:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" burns, releasing sinuous wisps of smoke curling through the air.");                   
  break;                
  case 2:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" releases a small tendril of smoke into the air.");                   
  break;                   
  case 1:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" emits a bitter, ammonia-like scent.");                   
  break;                   
  case 0:                   
    EmitIn(\$actor."base:environment", Describe(\$this)+" glows slightly as the opium burns.");                   
  break;                   
  default:                   
  break;                   
\}                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makesmoke">
         X[M] \$this.lit = 1;      
      
Set(\$this, "trait:smell", "bitter and strongly of pungent ammonia");         
      
\$delay(1, TRUE, "3a66");      
      
for(\$i = 0; \$i \< 20; \$i++) \{      
    if(!\$this.lit) \{      
        \$i = 25;      
    \} else \{      
        Call(\$this, "emitsmoke");      
        \$delay(90 + random(30), TRUE, "3883");      
    \}      
\}           
      
if(\$i == 26) return TRUE;         
      
\$this.lit = nil;        
      
EmitIn(\$actor."base:environment", Describe(\$this)+" goes out, giving off a solitary tendril of smoke.");       
                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:extinguish-dob">
         X[M] if(\$this.lit) \{            
    Set(\$this, "trait:smell", "pungent, bitter opium");          
    \$this.lit = nil;     
    \$delay(1, TRUE, "ceb3");     
    EmitIn(\$actor."base:environment", Describe(\$this)+" goes out, giving off a solitary tendril of smoke.");           
    return TRUE;            
\} else \{            
    EmitTo(\$actor, Describe(this) + " is not lit.");            
    return FALSE;            
\}
      </Core:Property>
      <Core:Property property="merry:react:inhale-iob">
         X[M] \$ob = \$this; 
if(\$actor."is:drugged" != 1)\{ 
Call(\$\{Allegory:Props:VPs:Pascual:PipeEffects\}, "effects"); 
 ::do_smoke();    
\} else \{ 
 ::do_smoke(); 
\}
      </Core:Property>
      <Core:Property property="merry:react:light-dob">
         X[M] return Call(\$this, "makesmoke");
      </Core:Property>
      <Core:Property property="merry:react:puff-dob">
         X[M] \$ob = \$this; 
if(\$actor."is:drugged" != 1)\{ 
Call(\$\{Allegory:Props:VPs:Pascual:PipeEffects\}, "effects"); 
 ::do_smoke();    
\} else \{ 
 ::do_smoke(); 
\}
      </Core:Property>
      <Core:Property property="merry:react:puff-iob">
         X[M] \$ob = \$this; 
if(\$actor."is:drugged" != 1)\{ 
Call(\$\{Allegory:Props:VPs:Pascual:PipeEffects\}, "effects"); 
 ::do_smoke();    
\} else \{ 
 ::do_smoke(); 
\}
      </Core:Property>
      <Core:Property property="merry:react:smoke-dob">
         X[M] \$ob = \$this; 
if(\$actor."is:drugged" != 1)\{ 
Call(\$\{Allegory:Props:VPs:Pascual:PipeEffects\}, "effects"); 
 ::do_smoke();    
\} else \{ 
 ::do_smoke(); 
\}
      </Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1567809027, "sendnoodlez", "X", 1567809058, "sendnoodlez", "E", 1567809173, "sendnoodlez", "K", 1567809187, "sendnoodlez", "E", 1567809278, "sendnoodlez", "X", 1567809344, "sendnoodlez", "E", 1567809495, "sendnoodlez", "K", 1567809574, "sendnoodlez", "X", 1567809625, "sendnoodlez", "E", 1567809663, "sendnoodlez", "X", 1567809728, "sendnoodlez", "E", 1567809793, "sendnoodlez", "E", 1567809833, "sendnoodlez", "X", 1567810131, "sendnoodlez", "X", 1567810313, "sendnoodlez", "E", 1567810364, "sendnoodlez", "K", 1567810432, "sendnoodlez", "E", 1567810470, "sendnoodlez", "E", 1567810536, "sendnoodlez", "E", 1567810573, "sendnoodlez", "X", 1567810586, "sendnoodlez", "E", 1567810753, "sendnoodlez", "E", 1567810869, "sendnoodlez", "E", 1567810919, "sendnoodlez", "E", 1567811388, "sendnoodlez", "E", 1567811412, "sendnoodlez", "E", 1567811543, "sendnoodlez", "E", 1567811625, "sendnoodlez", "E", 1567811692, "sendnoodlez", "E", 1567811908, "sendnoodlez", "E", 1567811983, "sendnoodlez", "E", 1567886677, "sendnoodlez", "K", 1567886833, "sendnoodlez", "E", 1567886868, "sendnoodlez", "E", 1567886886, "sendnoodlez", "E", 1579916180, "sendnoodlez", "R", 1607183770, "sendnoodlez", "E", 1607183773, "sendnoodlez", "E", 1607183775, "sendnoodlez", "E", 1607183783, "sendnoodlez", "K", 1607183932, "sendnoodlez", "E", 1607184080, "sendnoodlez", "E", 1607184129, "sendnoodlez", "K", 1607184273, "sendnoodlez", "K", 1607184341, "sendnoodlez", "E", 1607198587, "sendnoodlez", "E", 1607198627, "sendnoodlez", "K", 1607198642, "sendnoodlez", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
