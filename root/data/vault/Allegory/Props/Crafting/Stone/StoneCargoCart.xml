<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Crafting:Fabrics:UrCompressionStorage)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="box"/>
            <Base:SName sname="cart"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="carts"/>
            <Base:PName pname="boxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cargo"/>
          <Base:Adjective adjective="stone"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) stone cargo cart
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:color) $(this.trait:material) stone cargo cart, intended for storing stone. To store the stone, just put it into the cart. To take stone out, search the cart to see what is available, then search the sart and specify what to remove. For example: search stone cart 'white granite stone to remove all white granite stone.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) $(this.trait:material) stone cargo cart, intended for storing stone. To store the stone, just put it into the cart. To take stone out, search the cart to see what is available, then search the sart and specify what to remove. For example: search stone cart 'white granite stone to remove all white granite stone.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:compression:suffix_plural">
         "stones"
      </Core:Property>
      <Core:Property property="export:compression:suffix_singular">
         "stone"
      </Core:Property>
      <Core:Property property="merry:lib:check_object_is_valid">
         X[M] /* check if this object can be compressed */

/* code here is for a pot of dye */
if(\$item."trait:objecttype" != "stone") \{
 EmitTo(\$actor, Describe(\$item, nil, \$actor)+" is not stone that will fit in the cart.");
 return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:find_key">
         X[M] /* find the key used to identify this item */
string key;
key = "";
if(\$item."trait:material") \{
 key = Str(\$item."trait:material");
\}
if(\$item."trait:color") \{
 if(key != "")
  key = Str(\$item."trait:color")+" "+key;
 else
  key = Str(\$item."trait:color");
\}
if(!key \|\| key == " " \|\| key == "")
 key = "uncolored";
return key;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1586363101, "jominey", "E", 1595788639, "jominey", "E", 1595788726, "jominey", "K", 1632365427, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
