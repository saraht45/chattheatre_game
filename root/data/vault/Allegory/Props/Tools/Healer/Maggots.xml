<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="jar"/>
            <Base:SName sname="maggot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="jars"/>
            <Base:PName pname="maggots"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hook-like"/>
          <Base:Adjective adjective="off-white"/>
          <Base:Adjective adjective="tiny"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             jar of maggots
          </Base:Description>
          <Base:Description type="examine">
             A glass jar full of off-white maggots. Each pest has one pair of tiny hook-like parts to aid in feeding, and no legs.
          </Base:Description>
          <Base:Description type="look">
             A glass jar full of off-white maggots. Each pest has one pair of tiny hook-like parts to aid in feeding, and no legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="wound"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="backup:merry:react-post:apply-dob">
         X[M] if(!\$iob) return TRUE;
EmitTo(\$actor, "You strategically pour your maggots onto "+Describe(\$iob)+".");
EmitIn(\$actor."base:environment", Describe(\$this)+" immedately goes to work on the flesh of "+Describe(\$iob)+".", \$actor);

/* move the maggot onto the victim */
this."base:environment" = NRefOb(\$iob[0]);
/* end the script if the maggot didn't move (because the victim was holding too much) */
if(this."base:environment" != NRefOb(\$iob[0])) return TRUE;
/* make the maggot into clothing */
this."base:parts-covered" = (\{ name(this) \});
/* make the victim wear the maggot */
this."base:clothing:worn" = TRUE;
this."base:worn-by" = NRefOb(\$iob[0]);
if(!NRefOb(\$iob[0])."base:clothes-worn"[name(this)]) \{
  NRefOb(\$iob[0])."base:clothes-worn"[name(this)] = (\{ this \});
\} else \{
  NRefOb(\$iob[0])."base:clothes-worn"[name(this)] \|= (\{ this \});
\}

\$delay(30, TRUE, "6cfc");
if(\$this."base:clothing:worn")\{
\$this."trait:full" = 1;
EmitTo(\$actor, Describe(\$this)+ " suddenly stops feeding from "+Describe(\$iob)+". They appear to be satiated.");
EmitIn(\$actor."base:environment", Describe(\$this)+" suddenly stops feeding from "+Describe(\$iob)+".");
\$this."base:worn-by" = nil;

return TRUE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         1500
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:apply-dob">
         \<Allegory:Lib:Combat:Cards:Libraries:Wounds\>
      </Core:Property>
      <Core:Property property="merry:react-pre:wear">
         X[M] EmitTo(\$actor, "You cannot simply wear that. You will need to apply it to some infected or rotting flesh.");

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1569449498, "jominey", "E", 1569449515, "jominey", "E", 1569450345, "jominey", "E", 1569450545, "jominey", "E", 1569450556, "jominey", "E", 1572892785, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
