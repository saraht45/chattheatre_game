<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.0025" density="8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="needle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="needles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="curved"/>
          <Base:Adjective adjective="stitching"/>
          <Base:Adjective adjective="thin"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) stitching needle
          </Base:Description>
          <Base:Description type="examine">
             A thin, curved $(this.trait:material) needle used for stitching. {? | $(this.trait:thread) | The eye of the needle is strung with a line of surgical thread. | With a bit of simple thread, a healer could close wounds with this. } {? | $(this.trait:ointment) | The end of the needle is coated with a bit of  $(this.trait:ointment) ointment. } <makers-mark/>
          </Base:Description>
          <Base:Description type="look">
             A thin, curved $(this.trait:material) stitching needle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eye" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pname: eyes"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eye"/>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="needle"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             eye of the $(this.trait:material) stitching needle
          </Base:Description>
          <Base:Description type="look">
             The eye of the $(this.trait:material) stitching needle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         500
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "surgical needle"
      </Core:Property>
      <Core:Property property="merry:react-pre:dip-dob">
         X[M] /* EmitTo(\$actor, dump_value(args));   */                
if(\$into \&\& sizeof(\$into) == 1) \{                               
\$ointment_ob = NRefOb(\$into[0]);                     
if(\$ointment_ob."trait:objecttype" == "ointment") \{                 
if(\$this."trait:ointment") \{                 
EmitTo(\$actor, Describe(\$this, nil, \$actor)+ " is already coated with " +\$this."trait:ink"+ " ointment. You will need to wipe it off before attempting to add more.");               
return FALSE;                 
\} else if(\$ointment_ob."trait:ointment") \{                    
\$this."trait:ointment" = \$ointment_ob."trait:ointment";                        
\}                              
\}                      
\}                             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:empty-dob">
         X[M] if(\$this."trait:thread") \{        
EmitTo(\$actor, "You empty the eye of " +Describe(\$this, nil, \$actor)+ " of surgical thread.");      
EmitIn(\$actor."base:environment", Describe(\$actor)+ " empties the eye of " +Describe(\$this, \$actor)+ " of surgical thread", \$actor);        
\$this."trait:thread" = nil;    
\$thread = Spawn(\$\{Allegory:Props:Tools:Healer:Thread\}); 
\$thread."base:environment" = \$actor;     
return FALSE;        
\} else \{        
EmitTo(\$actor, "There is nothing to empty from the eye of " +Describe(\$this, nil, \$actor)+ ".");        
return FALSE;        
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:thread-dob">
         X[M] /* EmitTo(\$actor, dump_value(args));   */                
if(\$using \&\& sizeof(\$using) == 1) \{                               
\$thread_ob = NRefOb(\$using[0]);                     
if(\$thread_ob."trait:objecttype" == "surgicalthread") \{                 
if(\$this."trait:thread") \{                 
EmitTo(\$actor, Describe(\$this, nil, \$actor)+ " is already strung with surgical thread. You will need to empty it before attempting to add more.");               
return FALSE;                 
\} else \{                    
\$this."trait:thread" = 1; 
Slay(\$thread_ob);                    
\}                              
\}                      
\}       
if(\$iob \&\& sizeof(\$iob) == 1) \{                               
\$thread_ob = NRefOb(\$iob[0]);                     
if(\$thread_ob."trait:objecttype" == "surgicalthread") \{                 
if(\$this."trait:thread") \{                 
EmitTo(\$actor, Describe(\$this, nil, \$actor)+ " is already strung with surgical thread. You will need to remove it before attempting to add more.");               
return FALSE;                 
\} else \{                    
\$this."trait:thread" = 1;           
Slay(\$thread_ob);              
\}                              
\}                      
\}                             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:wipe-dob">
         X[M] if(\$this."trait:ointment") \{             
EmitTo(\$actor, "You wipe " +Describe(\$this, nil, \$actor)+ " free of " +\$this."trait:ointment"+ " ointment.");           
EmitIn(\$actor."base:environment", Describe(\$actor)+ " wipes " +Describe(\$this, \$actor)+ " free of " +\$this."trait:ointment"+ " ointment.", \$actor);             
\$this."trait:ointment" = nil;             
return FALSE;             
\} else \{             
EmitTo(\$actor, "There is nothing to wipe from " +Describe(\$this, nil, \$actor)+ ".");             
return FALSE;             
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1149008375, "tunk_bodin", "X", 1149008475, "tunk_bodin", "X", 1149009218, "tunk_bodin", "X", 1149009238, "tunk_bodin", "X", 1149009258, "tunk_bodin", "X", 1149009320, "tunk_bodin", "X", 1149009343, "tunk_bodin", "X", 1149009380, "tunk_bodin", "X", 1149009400, "tunk_bodin", "X", 1149009412, "tunk_bodin", "X", 1149009446, "tunk_bodin", "X", 1149009473, "tunk_bodin", "X", 1149009531, "tunk_bodin", "X", 1149009550, "tunk_bodin", "X", 1149009569, "tunk_bodin", "X", 1149009640, "tunk_bodin", "X", 1149009724, "tunk_bodin", "X", 1149009858, "tunk_bodin", "X", 1149010183, "tunk_bodin", "X", 1149010266, "tunk_bodin", "X", 1149010326, "tunk_bodin", "X", 1149010403, "tunk_bodin", "X", 1149010434, "tunk_bodin", "X", 1149010642, "tunk_bodin", "X", 1149010676, "tunk_bodin", "X", 1149010777, "tunk_bodin", "X", 1149010878, "tunk_bodin", "X", 1149013281, "tunk_bodin", "X", 1150559819, "tunk_bodin", "X", 1150560469, "tunk_bodin", "X", 1150560525, "tunk_bodin", "X", 1150563371, "tunk_bodin", "X", 1150563572, "tunk_bodin", "X", 1150563646, "tunk_bodin", "X", 1150563882, "tunk_bodin", "X", 1150564023, "tunk_bodin", "X", 1150564224, "tunk_bodin", "X", 1201552335, "jsfox", "X", 1210396682, "slurpeeslurp", "E", 1210396907, "slurpeeslurp", "E", 1210397266, "slurpeeslurp", "E", 1259884701, "balkaar", "E", 1284268437, "jominey", "K", 1569525136, "jominey", "E", 1572892648, "sendnoodlez", "R", 1572892681, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:objecttype">
         "stitchingneedle"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
