<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="polish"/>
            <Base:SName sname="bottle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="polishes"/>
            <Base:PName pname="bottles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="nail"/>
          <Base:Adjective adjective="small"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             small bottle of {? equal | $(this.trait:color) | none || $(this.trait:color) } nail polish
          </Base:Description>
          <Base:Description type="examine">
             A small bottle of $(this.trait:color) nail polish, suitable for painting nails with. It comes complete with a miniature paintbrush attached to the inside of the lid. There seems to be enough nail polish for another $(this.trait:quantity) applications. {? | $(this.trait:color) || <sbr/>Before you can use this, you'll need to add some pigment to it. Adding some clothes dye should do the trick! }
          </Base:Description>
          <Base:Description type="look">
             A small bottle of {? equal | $(this.trait:color) | none || $(this.trait:color) } nail polish. There seems to be enough nail polish for another $(this.trait:quantity) applications.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="brush" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="brush"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="brushes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="small"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             small black brush
          </Base:Description>
          <Base:Description type="examine">
             A many-whiskered small black brush has been attached to the lid on the inside of the nail polish for easy application.
          </Base:Description>
          <Base:Description type="look">
             The small black brush attached to the lid on the nail polish.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         500
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "nail polish"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "nailpolish"
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="merry:react-post:apply-dob">
         X[M] if(!\$iob) return TRUE;
/* Show nail base color after a while */

if(NRefDetail(\$iob[0]) == "toenails") \{
    \$property = "appearance:toenails";
\} else if(NRefDetail(\$iob[0]) == "fingernails")\{
    \$property = "appearance:nailcolor";
\}  else \{
EmitTo(\$actor, "Do you want to paint your fingernails or your toenails?");
return FALSE;
\}

\$this."trait:quantity" = \$this."trait:quantity" - 1;

if(Get(NRefOb(\$iob[0]), \$property) != this."trait:color") \{
  \$array = Get(NRefOb(\$iob[0]), "savedprop:" + \$property);
  
  if(\$array \&\& sizeof(\$array)) \{
    \$array -= (\{ nil \});
    \$original = \$array[0];
  \} else \{
    \$original = Str(Get(NRefOb(\$iob[0]), \$property)); 
  \}
    
  ironclaw::set_prop(\$obj: NRefOb(\$iob[0]), \$prop: \$property, \$value: this."trait:color"+" chipping to "+\$original, \$timer: 60*60*24*7*3);
\}


ironclaw::set_prop(\$obj: NRefOb(\$iob[0]), \$prop: \$property, \$value: this."trait:color", \$timer: 60*60*24*7*2);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:add-dob">
         X[M] EmitTo(\$actor, "Try applying the nail polish instead.");  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:apply-dob">
         X[M] if(!\$iob) return TRUE;               
/* Check that the nail polish has a color. */                     
if(!this."trait:color") \{                     
  EmitTo(\$actor, "Before you can apply this, you'll need to add some pigment to it. Adding some clothes dye to "+Describe(this, nil, \$actor)+" should do the trick!");                     
  return FALSE;                     
\} 
 
/* Make sure we're only applying it to one person. */             
if(sizeof(\$iob) \> 1) \{                     
  EmitTo(\$actor, "You may only apply "+Describe(this, nil, \$actor)+" to one person at a time.");                     
  return FALSE;                     
\}      
 
/* Check that the bottle isn't empty. */ 
if(\$quantity == 0)\{           
EmitTo(\$actor, +Describe(\$item)+ "is empty.");           
\$this."trait:empty" = 1;           
return FALSE;           
\}          
                  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{                     
if(\$this."no:slay" == 1) \{                     
return FALSE;                     
\} else \{              
EmitTo(\$this."base:environment", "You have used the last of " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");                
Slay(\$this);                     
return TRUE;              
\}                     
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1573100176, "jominey", "E", 1579800019, "jominey", "E", 1597089967, "jominey", "P", 1597090010, "jominey", "P", 1597090044, "jominey", "P", 1597090072, "jominey", "P", 1597090156, "jominey", "P", 1597090191, "jominey", "P", 1597090244, "jominey", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">10</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
