<object clone="/obj/properties" owner="ezralee">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:druggedemits">
         X[M] /* The emits sent while drugged */     
switch(random(15)) \{  
  case 14:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " dips " + \$actor."base:possessive" + " eyelids lower over " + \$actor."base:possessive" + " " + Str(\$actor."appearance:eyeshape") + " " + Str(\$actor."appearance:eyecolor") + " eyes.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You dip your eyelids lower over your " + Str(\$actor."appearance:eyeshape") + " " + Str(\$actor."appearance:eyecolor") + " eyes.", "social:first"));
    break;  
  \}  
  case 13:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " releases " + \$actor."base:possessive" + " laugh irrepressibly through " + \$actor."base:possessive" + " " + Str(\$actor."appearance:lipshape") + " lips.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You release your laugh irrepressibly through your " + Str(\$actor."appearance:lipshape") + " lips.", "social:first"));
    break;  
  \}  
  case 12:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " curls " + \$actor."base:possessive" + " " + Str(\$actor."appearance:lipshape") + " lips ever-so-slightly into " + \$actor."base:possessive" + " smile.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You curl your " + Str(\$actor."appearance:lipshape") + " lips ever-so-slightly into your smile.", "social:first"));
    break;  
  \}  
  case 11:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " weaves " + \$actor."base:possessive" + " smile off-and-on over " + \$actor."base:possessive" + " expression.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You weave your smile off-and-on over your expression.", "social:first"));
    break;  
  \}  
  case 10:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " wrinkles " + \$actor."base:possessive" + " " + Str(\$actor."appearance:browshape") + " forehead perplexedly.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You wrinkle your " + Str(\$actor."appearance:browshape") + " forehead perplexedly.", "social:first"));
    break;  
  \} 
  case 9:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " parts " + \$actor."base:possessive" + " " + Str(\$actor."appearance:lipshape") + " lips speechlessly.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You part your " + Str(\$actor."appearance:lipshape") + " lips speechlessly.", "social:first"));
    break;  
  \}  
  case 8:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " unfocusedly washes " + \$actor."base:possessive" + " gaze over " + Describe(\$actor."base:environment") + ".", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You unfocusedly wash your gaze over " + Describe(\$actor."base:environment") + ".", "social:third"));
    break;  
  \}  
  case 7:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " lends " + \$actor."base:possessive" + " attention not-at-all to " + Describe(\$actor."base:environment") + ".", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You lend your attention not-at-all to " + Describe(\$actor."base:environment") + ".", "social:third"));
    break;  
  \}  
  case 6:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " unfocusedly distracts " + \$actor."base:possessive" + " attention with " + \$actor."base:possessive" + " thoughts.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You unfocusedly distract your attention with your thoughts.", "social:first"));
    break;  
  \}  
  case 5:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " wanders away with " + \$actor."base:possessive" + " thoughts.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You wander away with your thoughts.", "social:first"));
    break;  
  \}  
  case 4:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " sinks deeper-and-deeper into " + \$actor."base:possessive" + " mind.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You sink deeper-and-deeper into your mind.", "social:first"));
    break;  
  \}  
  case 3:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " droops " + \$actor."base:possessive" + " frame bit-by-bit.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You droop your frame bit-by-bit.", "social:first"));
    break;  
  \}  
  case 2:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " seems to be confused.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You seem to be confused.", "social:first"));
    break;  
  \}  

  case 1:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " becomes oblivious to " + Describe(\$actor."base:environment") + ".", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You become oblivious to " + Describe(\$actor."base:environment") + ".", "social:third"));
    break;  
  \}  
  case 0:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " reminisces self-indulgently.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You reminisce self-indulgently.", "social:first"));
    break;  
  \}  
  default:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$actor)) + " reminisces self-indulgently.", "social:third"), \$actor);
    EmitTo(\$actor, TAG("You reminisce self-indulgently.", "social:first"));
    break; 
  \}  
\} 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:effects">
         X[M] /* The first emit and the timer starter */      
EmitTo(\$actor, Describe(\$ob, nil, \$actor)+ " tastes earthy and herbal with subtle hints of something spicy or citrusy. You feel warm and fuzzy as the marijuana begins to kick in.");                   
EmitIn(\$actor."base:environment", Describe(\$actor)+ " " +\$verb+ "s " +Describe(\$ob, nil, nil, STYLE_NONPOSS)+ " and " +\$actor."base:possessive"+ " eyes begin to glaze over as relaxation sets in.", \$actor);               
 
if(\$ob."effect:type" == "drug") \{     
  \$actor."is:drugged" = 1;        
  Call(\$this, "starttimer");              
\} else \{    
  return FALSE;    
\}
      </Core:Property>
      <Core:Property property="merry:lib:starttimer">
         X[M] /* The timer and finish code when it runs out */         
if(\$this.timer)                       
\{                                        
  \$delay(1, TRUE, "484b");                       
  
  if(\$actor."is:drugged") \{                  
    Call(\$this, "druggedemits");       
    return TRUE;   
  \}               
  return TRUE;                       
\} else \{  
                       
\}   
  
/* NOTE: this timer applies to ALL effects, poisons, etc.  In the future, this lib should be updated to allow each individual substance to declare how long they last and their frequency */  
/* Duration should call from the substance's "trait:duration" property in the future */  
/* Duration for now is set to 1 hour */  
\$duration = 60 * 60;  
  
/* Frequency should call from the substance's "trait:frequency property in the future */  
/* Duration for now is set to 5 minutes */  
\$frequency = 60 * 15;  
  
/* The ticker to kill the script when the time is up */  
\$curTime = 0;  
                      
\$delay(1, TRUE, "8a49");  
  
while(\$curTime \< \$duration) \{           
  if(\$actor."is:drugged") \{                  
    Call(\$this, "druggedemits");  
  \}    
 
  /* Add some randomness to the frequency of the call */  
  \$randDel = \$frequency + random(20);  
  \$curTime = \$curTime + \$randDel;  
  
  \$delay(\$randDel, TRUE, "b73d");                 
\}                       
          
\$actor."is:drugged" = nil;          
EmitTo(\$actor, "You feel your head has mostly cleared.");  
EmitIn(\$actor."base:environment", Describe(\$actor)+ " seems to be more lucid now.", \$actor);               
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1567811046, "sendnoodlez", "E", 1567811231, "sendnoodlez", "E", 1567811286, "sendnoodlez", "E", 1567811839, "sendnoodlez", "E", 1567811857, "sendnoodlez", "E", 1579916198, "sendnoodlez", "R", 1607184363, "sendnoodlez", "E", 1607185308, "sendnoodlez", "E", 1607185308, "sendnoodlez", "E", 1607190979, "sendnoodlez", "E", 1607191105, "sendnoodlez", "E", 1607191306, "sendnoodlez", "E", 1607191418, "sendnoodlez", "E", 1607191456, "sendnoodlez", "E", 1607191610, "sendnoodlez", "E", 1607191743, "sendnoodlez", "E", 1607191844, "sendnoodlez", "E", 1607192090, "sendnoodlez", "E", 1607192357, "sendnoodlez", "E", 1607192522, "sendnoodlez", "E", 1607192686, "sendnoodlez", "E", 1607192930, "sendnoodlez", "E", 1607193047, "sendnoodlez", "E", 1607193138, "sendnoodlez", "E", 1607197096, "sendnoodlez", "E", 1607197200, "sendnoodlez", "E", 1607197339, "sendnoodlez", "E", 1607197632, "sendnoodlez", "E", 1607197722, "sendnoodlez", "E", 1607197739, "sendnoodlez", "E", 1607197874, "sendnoodlez", "E", 1607198001, "sendnoodlez", "E", 1607198189, "sendnoodlez", "E", 1607198259, "sendnoodlez", "E", 1607198352, "sendnoodlez", "E", 1607198436, "sendnoodlez", "E", 1607198494, "sendnoodlez", "E", 1607198842, "sendnoodlez", "E", 1607569313, "sendnoodlez", "E", 1700271871, "ezralee", "E", 1700272093, "ezralee", "E", 1700272122, "ezralee", "E", 1700272274, "ezralee", "R" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
