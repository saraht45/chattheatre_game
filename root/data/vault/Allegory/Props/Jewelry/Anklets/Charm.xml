<object clone="/base/obj/thing" owner="meandmine">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Jewelry:Urs:UrAnklet)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="true" public-container="true" tight="false" capacity="1" maxweight="1" verb2="hold" verb3="holds"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="hanging" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="true" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="charm"/>
          <Base:Adjective adjective="empty"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="charm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="anklet"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:charm:color) $(this.trait:charm:material) $(this.trait:charm:type) charm
          </Base:Description>
          <Base:Description type="examine">
             <a_or_an> $(this.trait:charm:color) $(this.trait:charm:type) $(this.trait:charm:material) charm hanging from a ring on the anklet. $(this.trait:engraving)</a_or_an>
          </Base:Description>
          <Base:Description type="look">
             <a_or_an> $(this.trait:charm:color) $(this.trait:charm:type) $(this.trait:charm:material) charm hanging from a ring of the anklet.</a_or_an>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="empty">1</Core:Property>
      <Core:Property property="export:trait:brief">
         "charm anklet"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         X[S] A simple woven anklet with small rings dangling downward upon which charms can be attached and displayed.
      </Core:Property>
      <Core:Property property="export:trait:type">
         "charm anklet"
      </Core:Property>
      <Core:Property property="merry:lib:set_adjective">
         X[M] mapping db;    
    
\$oldtrait = Str(Get(\$this, \$prop));    
\$newtrait = Str(\$adj);    
\$words = explode(\$oldtrait, " ");    
    
for(\$i = 0; \$i \< sizeof(\$words); \$i++) \{    
    Set(\$this, "details:default:adjective:" + Str(\$words[\$i]), FALSE);    
    if(\$prop == "trait:quantity") \{    
        Set(\$this, "details:default:sname:" + Str(\$words[\$i]), FALSE);    
    \}    
    if(\$prop == "trait:type") \{    
        if(\$oldtrait == "charm") \{    
        \$plural = "charms";    
        \} else if(db[\$oldtrait]) \{    
            \$plural = Str(db[\$oldtrait][0]);    
        \} else \{    
            \$plural = \$oldtrait;    
        \}    
        Set(\$this, "details:default:adjective:" + Str(\$plural), FALSE);    
    \}    
\}    
    
\$words = explode(\$newtrait, " ");    
for(\$i = 0; \$i \< sizeof(\$words); \$i++) \{    
    Set(\$this, "details:default:adjective:" + Str(\$words[\$i]), TRUE);    
    if(\$prop == "trait:quantity") \{    
        Set(\$this, "details:default:sname:" + Str(\$words[\$i]), TRUE);    
    \}    
    if(\$prop == "trait:type") \{    
        if(\$newtrait == "charm") \{    
        \$plural = "charms";    
        \} else if(db[\$newtrait]) \{    
            \$plural = Str(db[\$newtrait][0]);    
        \} else \{    
            \$plural = \$newtrait;    
        \}    
        \$newtrait = \$plural;    
        Set(\$this, "details:default:adjective:" + Str(\$plural), TRUE);    
    \}    
\}    
    
Set(\$this, \$prop, \$newtrait);
      </Core:Property>
      <Core:Property property="merry:lib:set_desc">
         X[M] /* check if empty */                 
\$contents = \$this."base:inventory";                 
if(!sizeof(\$contents))\{               
    Set(\$this, "details:default:adjective:empty", TRUE);               
  \$this.empty = TRUE;              
  \$quantity = "empty";           
    \} else \{          
    Set(\$this, "details:default:adjective:empty", FALSE);          
    \$this.empty = FALSE;          
    \$sz = Int(sizeof(\$contents));          
    if(\$sz \< 3) \{          
        \$quantity = "small";          
    \} else if(\$sz \> 3 \&\& \$sz \< 6) \{          
        \$quantity = "medium";          
    \} else if(\$sz \> 6 \&\& \$sz \< 12) \{          
        \$quantity = "large ";          
    \} else if (\$sz \> 12) \{          
        \$quantity = "overstuffed";          
    \}       
::set_adjective(\$adj: \$quantity, \$prop: "trait:quantity");               
\}      
return "";
      </Core:Property>
      <Core:Property property="merry:react:place-where">
         X[M] if(sizeof(\$what) \&\& sizeof(\$what) \> 1) \{                   
    EmitTo(\$actor, "You can only add one charm to the bracelet at a time.");                   
    return FALSE;                   
\}          
            
if (\$obprep == PREP_INSIDE) \{            
    if(\$this."base:environment" != \$actor) \{      
        EmitTo(\$actor, "You need to be holding " + Describe(\$this) + ".");      
        return FALSE;      
    \}      
             
    if(NRefOb(\$what[0])."trait:objecttype" != "charm") \{       
        EmitTo(\$actor, Describe(\$this, nil, \$actor) + " will only accept charms.");      
        return FALSE;      
    \}              
\}              
           
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1574444853, "jominey", "E", 1574444935, "jominey", "K", 1574729073, "jominey", "E", 1585699878, "sendnoodlez", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
