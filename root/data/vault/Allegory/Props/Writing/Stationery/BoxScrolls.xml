<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="box"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="boxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="scroll"/>
          <Base:Adjective adjective="scrolls"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             box of {? | $(this.trait:embossing) | embossed } $(this.trait:color) $(this.trait:material) scrolls
          </Base:Description>
          <Base:Description type="examine">
             A box of $(this.trait:color) $(this.trait:material) scrolls. $(this.trait:embossing) There appears to be about <quantity/> scrolls remaining. <makers-mark/> <sbr/> <quality-full/>
          </Base:Description>
          <Base:Description type="look">
             A box of $(this.trait:color) $(this.trait:material) scrolls. $(this.trait:embossing)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         500
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:emboss-dob">
         \<Allegory:Lib:Crafting:Custom:Embossing\>
      </Core:Property>
      <Core:Property property="merry:react-post:pull-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Writing:Stationery:Scroll\});       
\$item."trait:color" = \$this."trait:color";       
\$item."trait:material" = \$this."trait:material";        
\$item."trait:quality" = \$this."trait:quality";  
\$item."trait:embossing" = \$this."trait:embossing";       
\$item."trait:madeby" = \$this."trait:madeby";       
\$item."trait:madeby:object" = \$this."trait:madeby:object";        
\$item."trait:madeby:account" = \$this."trait:madeby:account";  
\$item."trait:marked" = \$this."trait:marked";       
\$item."base:environment" = \$actor; 
EmitIn(\$actor."base:environment", Describe(\$actor)+" pulls a scroll from "+Describe(\$this, \$actor)+".");  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:pull-dob">
         X[M] \$quantity = \$this."trait:quantity";      
if(\$quantity == 0)\{      
EmitTo(\$actor, +Describe(\$item)+ "is empty.");      
\$this."trait:empty" = 1;      
return FALSE;      
\}      
      
\$this."trait:quantity" = \$this."trait:quantity" - 10;      
return TRUE;      
      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{               
if(\$this."no:slay" == 1) \{               
return FALSE;               
\} else \{        
EmitTo(\$this."base:environment", "You have taken the last scroll from " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");          
Slay(\$this);               
return TRUE;        
\}               
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1570116124, "sendnoodlez", "K", 1570116209, "sendnoodlez", "K", 1570116222, "sendnoodlez", "E", 1570116366, "sendnoodlez", "X", 1570116429, "sendnoodlez", "K", 1570116445, "sendnoodlez", "X", 1570116477, "sendnoodlez", "X", 1570116495, "sendnoodlez", "X", 1570116523, "sendnoodlez", "E", 1570116570, "sendnoodlez", "K", 1570117253, "sendnoodlez", "E", 1570117374, "sendnoodlez", "E", 1570117455, "sendnoodlez", "X", 1570117554, "sendnoodlez", "E", 1570117618, "sendnoodlez", "E", 1570117763, "sendnoodlez", "E", 1570117783, "sendnoodlez", "E", 1570117831, "sendnoodlez", "K", 1572903036, "jominey", "E", 1572904529, "sendnoodlez", "X", 1573706141, "sendnoodlez", "R", 1574191839, "sendnoodlez", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
