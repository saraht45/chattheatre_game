<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="basin"/>
            <Base:SName sname="sink"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="basins"/>
            <Base:PName pname="sinks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="adorned"/>
          <Base:Adjective adjective="copper"/>
          <Base:Adjective adjective="garland"/>
          <Base:Adjective adjective="impeccable"/>
          <Base:Adjective adjective="solid"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             lavatory basin
          </Base:Description>
          <Base:Description type="examine">
             A solid copper lavatory basin complete with a solid copper faucet attached to the southern wall. It has an impeccable finish, giving it a unique inherent beauty. The inside of the basin is adorned with a garland pattern.
          </Base:Description>
          <Base:Description type="look">
             A solid copper lavatory basin complete with a solid copper faucet attached to the southern wall.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="faucet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="faucet"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="faucets"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="copper"/>
          <Base:Adjective adjective="looming"/>
          <Base:Adjective adjective="solid"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             solid copper faucet
          </Base:Description>
          <Base:Description type="look">
             A solid copper faucet looming over a solid copper lavatory basin. It contains two white knobs, one for hot water and one for cold water.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knob-1" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knob"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="knobs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="first"/>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             hot water knob
          </Base:Description>
          <Base:Description type="look">
             A white knob on the left side of the faucet labeled with the letter, "H." {? not | $(this.details:water-hot:hidden) |It is turned to the on position.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knob-2" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knob"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="knobs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
          <Base:Adjective adjective="second"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             cold water knob
          </Base:Description>
          <Base:Description type="look">
             A white knob on the right side of the faucet labeled with the letter, "C." {? not | $(this.details:water-cold:hidden) |It is turned to the on position.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="water-cold" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="waters"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cold"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             some cold water
          </Base:Description>
          <Base:Description type="look">
             The cold water flowing from the faucet into the basin underneath.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="water-hot" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="waters"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hot"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             some hot water
          </Base:Description>
          <Base:Description type="look">
             The hot water flowing from the faucet into the basin underneath.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:act:start">
         X[M] /* We want the sink to be turned off when it is first spawned. */
  /* First, make sure that the adjectives "on" and "running" are not in the default detail. */
  this."detail:adjective:on" = FALSE;
  this."detail:adjective:running" = FALSE;
  /* Second, hide the water details for the cold water and hot water. */
  this."details:water-cold:hidden" = TRUE;
  this."details:water-hot:hidden" = TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:emitaction">
         X[M] /* This code determines the emits given off by the sink when it is running */

if(\$this."base:environment")
\{
  \$room = \$this."base:environment";
  switch(random(7))
  \{
    case 6:
      EmitIn( \$room, "The water rhythmically, yet gently flows from the faucet." );
    break;
    case 5:
      EmitIn( \$room, "The water splatters over the inside of the basin as an air bubble comes through the faucet." );
    break;
    case 4:
      EmitIn( \$room, "You hear a small rushing sound accompanied by a soft gurgle as water gushes out of the tap, and into the basin." );
    break;
    case 3:
      EmitIn( \$room, "The water from the faucet meets the copper basin, creating a light trickle of sound." );
    break;
    case 2:
      EmitIn( \$room, "The water spiritedly gurgles from the faucet." );
    break;
    case 1:
      EmitIn( \$room, "The water gently ripples in the basin." );
    break;
    case 0:
      EmitIn( \$room, "A flow of clear water runs steadily from the faucet down into the basin." );
    break;
    default:
    break;
  \}
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makeaction">
         X[M] \$this.stoptimer = nil;       
if(\$this.emitter)       
\{       
  /* the script is already running, so we exit */       
  return TRUE;       
\}       
\$this.emitter = 1;       
/* delay once before first action */       
\$delay(random(25)+3, TRUE, "dede");       
while(\$this.emitter \&\& !\$this.stoptimer)       
\{       
  /* while we are turned on, and not told to stop */       
  Call(\$this, "emitaction");       
  \$delay(random(25)+3, TRUE, "c732");       
\}       
\$this.emitter = nil;       
\$this.stoptimer = nil;       
       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:turn-dob">
         X[M] \$knob = NRefDetail(\$target);

/* The actor is targeting the hot water knob. */
if(\$knob == "knob-1") \{
  /* Is the water already running? */
  /* No, the water is off. Turn it on. */
  if(this."details:water-hot:hidden") \{
    EmitTo(\$actor, "A stream of hot water pours from the solid copper faucet into the lavatory basin as you turn the knob.");
    EmitIn(\$actor."base:environment", "A stream of hot water pours from the solid copper faucet into the lavatory basin as "+Describe(\$actor)+" turns the knob.", \$actor);
    this."detail:adjective:running" = TRUE;
    this."detail:adjective:on" = TRUE;
    this."details:water-hot:hidden" = FALSE;
    Call(\$this, "makeaction");
  \} else \{
    /* Yes, the water is on. Turn it off. */
    EmitTo(\$actor, "The hot water abruptly comes to a halt as you shut it off.");
    EmitIn(\$actor."base:environment", "The hot water abruptly comes to a halt as "+Describe(\$actor)+" shuts it off.", \$actor);
    this."detail:adjective:on" = FALSE;
    this."detail:adjective:running" = FALSE;
    this."details:water-hot:hidden" = TRUE;
    \$this.stoptimer = 1;
  \}
/* The actor is targeting the cold water knob. */
\} else if(\$knob == "knob-2") \{
  /* Is the water on? */
  /* No, the water is off. Turn it on. */
  if(this."details:water-cold:hidden") \{
  EmitTo(\$actor, "A stream of cold water pours from the solid copper faucet into the lavatory basin as you turn the knob.");
  EmitIn(\$actor."base:environment", "A stream of cold water pours from the solid copper faucet into the lavatory basin as "+Describe(\$actor)+" turns the knob.", \$actor);
  this."detail:adjective:running" = TRUE;
  this."detail:adjective:on" = TRUE;
  this."details:water-cold:hidden" = FALSE;
  Call(\$this, "makeaction");
  \} else \{
   /* Yes, the water is on. Turn it off. */
  EmitTo(\$actor, "The cold water abruptly comes to a halt as you shut it off.");
  EmitIn(\$actor."base:environment", "The cold water abruptly comes to a halt as "+Describe(\$actor)+" shuts it off.", \$actor);
  this."detail:adjective:on" = FALSE;
  this."detail:adjective:running" = FALSE;
  this."details:water-cold:hidden" = TRUE;
  \$this.stoptimer = 1;
  \}
\}
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1194107706, "rorschakovacs", "E", 1194107916, "rorschakovacs", "E", 1194128412, "rorschakovacs", "E", 1194128535, "rorschakovacs", "E", 1194129138, "rorschakovacs", "E", 1194129216, "rorschakovacs", "E", 1194129237, "rorschakovacs", "E", 1194129330, "rorschakovacs", "E", 1194129522, "rorschakovacs", "E", 1194129964, "rorschakovacs", "E", 1307233185, "tunk_bodin", "R", 1307234250, "tunk_bodin", "R", 1569958098, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
