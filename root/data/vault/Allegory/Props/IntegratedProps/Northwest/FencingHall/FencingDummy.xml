<object clone="/base/obj/thing" owner="lidiab">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="platform"/>
            <Base:SName sname="catwalk"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="platforms"/>
            <Base:PName pname="catwalks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fencing"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fencing platform
          </Base:Description>
          <Base:Description type="examine">
             The fencing platform is a construction of thick wooden beams that form a roughly rectangular support for a catwalk, ten feet high into the air. The catwalk itself is approximately ten inches on all of its square sides to allow for the proper placement of feet during bouts with the fencing dummy, but only just. A complicated construct of weighted pulleys, levers, and various sized gears are engineered below the catwalk to one side. The mechanisms provide movement to reels of thick, oiled rope for the dummy to move through a series of three parallel slots in the catwalk above; One zig-zagged, one straight, and one winding in a serpentine fashion, winding atop one another to provide a variety of possible movements for the wooden fencing dummy stationed on the catwalk. Below a rope ladder to one side, a single crank can be wound to operate the dummy above. The area surrounding the base of the platform has been covered in a thick, padded mat to cushion the fall of the many who've attempted the feat of besting the catwalk's champion.
          </Base:Description>
          <Base:Description type="look">
             A six foot high wooden platform erected in the far eastern portion of the room. It is intended for bouts, specifically of skill and balance, upon a ten foot high catwalk, against a wooden fencing dummy that moves along a complexly engineered runner. The dummy itself is operated by a single crank at the base of the platform, which cues a series of levers, gears, and weighted pulleys to move the dummy in a series of controlled movements and stances along its guiding runner. The area surrounding the base of the platform has been covered in a thick, padded mat.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="dummy" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dummy"/>
            <Base:SName sname="champion"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="dummies"/>
            <Base:PName pname="champions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fence"/>
          <Base:Adjective adjective="fencing"/>
          <Base:Adjective adjective="platform"/>
          <Base:Adjective adjective="platform's"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             wooden fencing dummy
          </Base:Description>
          <Base:Description type="examine">
             A wooden dummy specifically engineered for bouts of fencing. Its appearance is made to be roughly the shape of a rather large ermine, and created entirely from wood. It boasts a head, though it is rather cone-like in shape, with a helmet carved into its surface. A rounded triangle shape takes place of the torso, and where there would be legs, with two jointed arms that dangle to either side. Both extremities boast a round tipped pole that act as swords, and are connected at the back to a pair of ropes which hook through loops at both forearms, and biceps, to control the movement. A series of circles have been first carved, and then painted upon the torso in a series of broadening bullseyes to represent point marks; Red being the highest at the center for ten points, yellow the second highest, and next widest, at five points, and green for one point as the largest target.
          </Base:Description>
          <Base:Description type="look">
             A wooden dummy stationed upon the ten foot catwalk of the fencing platform.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gears" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gear"/>
            <Base:SName sname="pulley"/>
            <Base:SName sname="lever"/>
            <Base:SName sname="construct"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="levers"/>
            <Base:PName pname="pulleys"/>
            <Base:PName pname="gears"/>
            <Base:PName pname="constructs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="complicated"/>
          <Base:Adjective adjective="construct"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             complicated construct of gears, weighted pulleys and levers
          </Base:Description>
          <Base:Description type="look">
             A complicated construct of weighted pulleys, levers, and various sized gears are engineered below the catwalk to one side. The mechanisms provide movement to reels of thick, oiled rope for the dummy to move through a series of three parallel slots in the catwalk above
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mat" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="padded"/>
          <Base:Adjective adjective="thick"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             thick, padded mat
          </Base:Description>
          <Base:Description type="look">
             A thick, padded mad surrounding the base of the fencing platform.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:script:squeeze">
         X[M] EmitIn(\$actor."base:environment", Describe(\$this)+" flexes its muscles and squeaks.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:expired_play">
         X[M] /* player didn't answer in time */
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:no_play">
         X[M] /* decided not to play */
EmitTo(\$actor, "You decide not to try the strength testing game.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:play_game">
         X[M] /* charge cost to play */
\$tokens = Match(\$actor, "token", \$actor, "faire");
if(sizeof(\$tokens) \< 1) \{
  EmitTo(\$actor, "You don't have a token. Buy one from the faire attendant.");
  return TRUE;
\} else \{
  EmitTo(\$actor, "You hand a token to the barrel ride attendant.");
  Slay(NRefOb(\$tokens[0]));
\}


/* skill tester code */
EmitTo(\$actor, "You climb onto the greased barrel.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" climbs onto the greased barrel.", \$actor);
\$skill = ironclaw::roll(\$roller: \$actor, \$skills: (\{ \}), \$bonus: (\{ "trait:agility" \}));
\$skill += random(5);
switch(\$skill) \{
  case 1:
    EmitTo(\$actor, "Immediately after climbing onto the barrel, you slip off the other side.");
    EmitIn(\$actor."base:environment", "Immediately after climbing onto the barrel, "+Describe(\$actor)+" slips off the other side.", \$actor);
    break;
  case 2:
    EmitTo(\$actor, "You only manage to cling onto the barrel for a few moments, before slipping off, and landing in the mud.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" only manages to cling onto the barrel for a few moments, before slipping off, and landing in the mud.", \$actor);
    break;
  case 3:
    EmitTo(\$actor, "Although you slide halfway off the barrel, you manage to cling on for a short while longer, before being shaken off.");
    EmitIn(\$actor."base:environment", "Although "+Describe(\$actor)+" slides halfway off the barrel, "+\$actor."base:pronoun"+" manages to cling on for a short while, before being shaken off.", \$actor);
    break;
  case 4:
    EmitTo(\$actor, "Clinging for dear life to the barrel, you suddenly find yourself slipping from the side of the large wooden ride. You attempt to readjust your grip and right yourself but only succeed in causing yourself fall straight into the mud below.");
    EmitIn(\$actor."base:environment", "Clinging to the barrel, "+Describe(\$actor)+" slips to the side. "+capitalize(\$actor."base:pronoun")+" attempts to right "+\$actor."base:objective"+"self, but instead falls straight into the mud below.", \$actor);
    break;
  case 5:
    EmitTo(\$actor, "You get flung high in the air, before landing in the mud with a huge splash!");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" gets flung in the air, before landing in the mud with a huge splash!", \$actor);
    break;
  case 6:
    EmitTo(\$actor, "Up and Down. Back and Forth. Side to Side. You groan mentally to yourself and you cling to the wooden barrel under you. Why did you agree to this? Who knows, your just waiting for it to end. Oh here they go again. You shut you eyes against the nasuea and suddenly everything stops. Thinking its over and you won, you peek open your eyes only to find yourself laying in a pile of mud. Well its better than being back on that barrel.");
    EmitIn(\$actor."base:environment", "Up and Down. Back and Forth. Side to Side. "+Describe(\$actor)+" is thrown every which way. Although it seems certain that "+\$actor."base:pronoun"+" has won, "+\$actor."base:pronoun"+" finally ends up in the mud.", \$actor);
    break;
  case 7:
    EmitTo(\$actor, "You ride the bucking barrel like an expert, until eventually being thrown into the mud.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" rides the barrel like an expert, until eventually being thrown into the mud.", \$actor);
    break;
  case 8:
    EmitTo(\$actor, "You seem to be unshakable, until a sudden jolt at the last minute flings you into the mud.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" seems to be unshakable, until a sudden jolt at the last minute flings "+\$actor."base:objective"+" into the mud.", \$actor);
    break;
  default:
    EmitTo(\$actor, "You manage to cling on, while the barrel bucks and throws you, until finally the rope-pullers are tired out.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" managed to cling on, while the rope-pullers throw "+\$actor."base:objective"+" around. Finally, they concede the battle.", \$actor);
    /* give a prize */
    \$prize = Spawn(\$\{IronClaw:Props:Misc:Faire:Spurs\});
    EmitTo(\$actor, "The assistant congratulates you, and hands you "+Describe(\$prize)+".");
    EmitIn(\$actor."base:environment", "The assistant contgratulates "+Describe(\$actor)+", and hands "+\$actor."base:objective"+" "+Describe(\$prize)+".", \$actor);
    \$prize."base:environment" = \$actor;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:play-dob">
         X[M] /*

  D=Accept and pay for an object.

*/

/* ask if the player wants to play this */
interaction::question(\$question: "Do you want to play this game? It will cost you one token.", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play");

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1145000898, "tonyd", "E", 1145000955, "tonyd", "E", 1145000992, "tonyd", "E", 1145001010, "tonyd", "E", 1145001095, "tonyd", "E", 1145001166, "tonyd", "E", 1145001236, "tonyd", "E", 1145001333, "tonyd", "E", 1145001408, "tonyd", "E", 1145001963, "tonyd", "P", 1145002011, "tonyd", "P", 1145002265, "tonyd", "P", 1145002361, "tonyd", "P", 1145002398, "tonyd", "P", 1145002451, "tonyd", "P", 1145002497, "tonyd", "P", 1145002549, "tonyd", "P", 1145002623, "tonyd", "P", 1145002664, "tonyd", "P", 1145002919, "tonyd", "P", 1145002961, "tonyd", "P", 1145002987, "tonyd", "P", 1145003090, "tonyd", "P", 1145003112, "tonyd", "P", 1145003476, "tonyd", "P", 1145003760, "tonyd", "P", 1151730169, "tonyd", "E", 1151730196, "tonyd", "E", 1151732709, "tonyd", "E", 1151732781, "tonyd", "P", 1151732877, "tonyd", "E", 1151732914, "tonyd", "P", 1151733113, "tonyd", "P", 1151733160, "tonyd", "E", 1151733178, "tonyd", "E", 1151733245, "tonyd", "E", 1151733277, "tonyd", "E", 1151733348, "tonyd", "E", 1151733363, "tonyd", "E", 1151733549, "tonyd", "P", 1151733605, "tonyd", "P", 1151733715, "tonyd", "P", 1151733998, "tonyd", "P", 1151735820, "tonyd", "P", 1151736132, "tonyd", "P", 1151736203, "tonyd", "P", 1151736431, "tonyd", "P", 1151736682, "tonyd", "P", 1168068882, "tonyd", "E", 1168068893, "tonyd", "R", 1237848155, "morwenlorelie", "R", 1321244624, "tonyd", "P", 1321244753, "tonyd", "P", 1346534345, "slurpeeslurp", "E", 1464379064, "lidiab", "K", 1464379068, "lidiab", "E", 1464379072, "lidiab", "E", 1464402851, "lidiab", "R", 1464761632, "lidiab", "K", 1464762020, "lidiab", "K", 1464763271, "lidiab", "K", 1464763358, "lidiab", "K", 1464763377, "lidiab", "K", 1464763431, "lidiab", "K", 1464764630, "lidiab", "K", 1569958899, "sendnoodlez", "R", 1570838650, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
