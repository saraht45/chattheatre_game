<object clone="/base/obj/thing" owner="dmwtst">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCraftingContainer)"/>
    <Base:Bulk immobile="false" mass="1" density="5"/>
    <Base:Container flexible="false" transparent-container="true" public-container="true" tight="true" capacity="0.03" maxweight="1" verb2="hold" verb3="holds"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="true" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bowl"/>
            <Base:SName sname="basin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bowls"/>
            <Base:PName pname="basins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="etched"/>
          <Base:Adjective adjective="gleaming"/>
          <Base:Adjective adjective="silver"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             enameled basin
          </Base:Description>
          <Base:Description type="examine">
             An enameled white basin. It holds clean, fresh water which is routinely replaced.
          </Base:Description>
          <Base:Description type="look">
             An enameled white basin.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="water" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
            <Base:SName sname="liquid"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="liquids"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="basin"/>
          <Base:Adjective adjective="bowl"/>
          <Base:Adjective adjective="clean"/>
          <Base:Adjective adjective="fresh"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the basin's water
          </Base:Description>
          <Base:Description type="examine">
             Clean, fresh water which is routinely replaced.
          </Base:Description>
          <Base:Description type="look">
             Clean, fresh water.
          </Base:Description>
          <Base:Description type="react-post:sense/smell-dob">
             The light scent of sulfur.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-pre:drink-what">
         X[M] if(NRefDetail(\$what[0]) == "water") \{         
EmitTo(\$actor, "You drink from " +Describe(\$what[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " drinks " +Describe(\$what[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:gulp-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You gulp loudly from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " gulps " +Describe(\$iob[0])+ " loudly.", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:guzzle-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You guzzle from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " guzzles " +Describe(\$iob[0])+ " loudly.", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:lap-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You lap from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " laps " +Describe(\$iob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:lick-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{         
EmitTo(\$actor, "You lick " +Describe(\$dob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " licks " +Describe(\$dob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:quaff-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You quaff sloppily from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " quaffs " +Describe(\$iob[0])+ " sloppily.", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:savor-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{         
EmitTo(\$actor, "You savor " +Describe(\$dob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " savors " +Describe(\$dob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:savour-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{         
EmitTo(\$actor, "You savour " +Describe(\$dob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " savours " +Describe(\$dob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:sip-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You sip from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " sips " +Describe(\$iob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:slurp-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You slurp from " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " slurps " +Describe(\$iob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:swallow-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{         
EmitTo(\$actor, "You swallow " +Describe(\$dob[0])+ ", making you cough and sputter yet leaves a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " swallows " +Describe(\$dob[0])+ " before coughing and sputtering.", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:swill-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{         
EmitTo(\$actor, "You swill " +Describe(\$iob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " swills " +Describe(\$iob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:taste-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{         
EmitTo(\$actor, "You taste " +Describe(\$dob[0])+ " and it is delicious, refreshing and carries a sulfuric aftertaste.");         
EmitIn(\$actor."base:environment", Describe(\$actor)+ " tastes " +Describe(\$dob[0])+ ".", \$actor);         
return FALSE;         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1168673352, "tunk_bodin", "X", 1168673799, "tunk_bodin", "X", 1168675764, "tunk_bodin", "X", 1171936412, "tunk_bodin", "E", 1171936445, "tunk_bodin", "E", 1307402396, "tunk_bodin", "R", 1450740092, "dmwtst", "K", 1569969958, "sendnoodlez", "R", 1599539829, "ezralee", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
