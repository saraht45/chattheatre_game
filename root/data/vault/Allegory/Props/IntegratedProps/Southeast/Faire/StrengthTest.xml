<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tester"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="testers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="strength"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             strength tester
          </Base:Description>
          <Base:Description type="examine">
             A fully installed strength tester is set up here. The flat rounded pad is a pale blue color, and attached to the wooden base is a chain that is strung through a large padded hammer on the other end. The stand of the tester is marked with levels of strength, and a large brass gong is attached at the top. There is a small box with a slot near the pad for the token to be inserted. In gaudy painted letters it says, "Hit Pad with Hammer to Play!"
          </Base:Description>
          <Base:Description type="look">
             A fully installed strength tester. The tester stands about ten feet tall, with marks along the side to measure strength. It has a pad for hitting, a gong at the top of the tester, and a hammer attached by a chain.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hammer" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hammer"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="hammers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="padded"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             padded hammer
          </Base:Description>
          <Base:Description type="examine">
             A padded hammer, attached to the strength tester by a chain.
          </Base:Description>
          <Base:Description type="look">
             A padded hammer.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pad" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pad"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="padded"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             strength tester's pad
          </Base:Description>
          <Base:Description type="look">
             A pad, which measures the force of a hit.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:script:squeeze">
         X[M] EmitIn(\$actor."base:environment", Describe(\$this)+" flexes its muscles and squeaks."); 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:expired_play">
         X[M] /* player didn't answer in time */ 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:no_play">
         X[M] /* decided not to play */ 
EmitTo(\$actor, "You decide not to try the strength testing game."); 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:play_game">
         X[M] /* charge cost to play */
\$tokens = Match(\$actor, "token", \$actor, "faire");
if(sizeof(\$tokens) \< 1) \{
  EmitTo(\$actor, "You don't have a token. Buy one from the faire attendant.");
  return TRUE;
\} else \{
  EmitTo(\$actor, "You slide a token into the slot on the strength tester.");
  Slay(NRefOb(\$tokens[0]));
\}


/* skill tester code */
EmitTo(\$actor, "You strike the pad of the strength tester with the padded hammer.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" strikes the pad of the strength tester with the padded hammer.", \$actor);
\$skill = ironclaw::roll(\$roller: \$actor, \$skills: (\{ \}), \$bonus: (\{ "trait:strength", "trait:luck" \}));
\$skill += random(5);
switch(\$skill) \{
  case 1:
    EmitIn(\$this."base:environment", "The ball hardly moves.");
    break;
  case 2:
    EmitIn(\$this."base:environment", "The ball hops slightly.");
    break;
  case 3:
    EmitIn(\$this."base:environment", "The ball jumps about a quarter of the way up the pole.");
    break;
  case 4:
    EmitIn(\$this."base:environment", "The ball jumps about a third of the way up the pole.");
    break;
  case 5:
    EmitIn(\$this."base:environment", "The ball flies halfway up the pole.");
    break;
  case 6:
    EmitIn(\$this."base:environment", "The ball leaps almost to the top of the pole.");
    break;
  case 7:
    EmitIn(\$this."base:environment", "The ball jumps up the pole, stopping inches before the gong.");
    break;
  case 8:
    EmitIn(\$this."base:environment", "The ball flies up the pole, almost brushing the gong at the top.");
    break;
  default:
    EmitIn(\$this."base:environment", "The ball flies up the length of the pole, striking the gong.");
    /* give a prize */
    \$prize = Spawn(\$\{Ironclaw:Props:Clothing:Misc:ClothDoll\});
    \$prize."trait:type" = "weightlifter";
    \$prize."trait:color" = "none";
    \$prize."trait:material" = "none";
    \$prize."merry:react-post:squeeze-dob" = \$this."script:squeeze";
    \$prize."trait:extradesc" = "The doll appears to be rubbery, and squeaky.";
    EmitTo(\$actor, "The assistant congratulates you, and hands you "+Describe(\$prize)+".");
    EmitIn(\$actor."base:environment", "The assistant congratulates "+Describe(\$actor)+", and hands "+\$actor."base:objective"+" "+Describe(\$prize)+".", \$actor);
    \$prize."base:environment" = \$actor;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:hit-dob">
         X[M] /* skill tester code */ 
\$skill = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ \$actor."trait:strength" \})); 
\$skill += random(5); 
switch(\$skill) \{ 
  case 1: 
    EmitIn(\$this."base:environment", "The ball hardly moves."); 
    break; 
  case 2: 
    EmitIn(\$this."base:environment", "The ball hops slightly."); 
    break; 
  case 3: 
    EmitIn(\$this."base:environment", "The ball jumps about a quarter of the way up the pole."); 
    break; 
  case 4: 
    EmitIn(\$this."base:environment", "The ball jumps about a third of the way up the pole."); 
    break; 
  case 5: 
    EmitIn(\$this."base:environment", "The ball flies halfway up the pole."); 
    break; 
  case 6: 
    EmitIn(\$this."base:environment", "The ball leaps almost to the top of the pole."); 
    break; 
  case 7: 
    EmitIn(\$this."base:environment", "The ball jumps up the pole, stopping inches before the gong."); 
    break; 
  case 8: 
    EmitIn(\$this."base:environment", "The ball flies up the pole, almost brushing the gong at the top."); 
    break; 
  default: 
    EmitIn(\$this."base:environment", "The ball flies up the length of the pole, striking the gong."); 
    /* give a prize */ 
    \$prize = Spawn(\$\{Ironclaw:Props:Clothing:Misc:ClothDoll\}); 
    \$prize."trait:type" = "weightlifter"; 
    \$prize."trait:color" = "none"; 
    \$prize."trait:material" = "none"; 
    \$prize."merry:react-post:squeeze-dob" = \$this."script:squeeze"; 
    EmitIn(\$this."base:environment", "The assistant congratulates you, and hands you "+Describe(\$prize)+"."); 
    \$prize."base:environment" = \$actor; 
\} 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:hit-dob">
         X[M] /* 
 
  D=Accept and pay for an object. 
 
*/ 
 
/* ask if the player wants to play this */ 
interaction::question(\$question: "Do you want to play this game? It will cost you one token.", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play"); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:play-dob">
         X[M] /* 
 
  D=Accept and pay for an object. 
 
*/ 
 
/* ask if the player wants to play this */ 
interaction::question(\$question: "Do you want to play this game? It will cost you one token.", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play"); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1145000898, "tonyd", "E", 1145000955, "tonyd", "E", 1145000992, "tonyd", "E", 1145001010, "tonyd", "E", 1145001095, "tonyd", "E", 1145001166, "tonyd", "E", 1145001236, "tonyd", "E", 1145001333, "tonyd", "E", 1145001408, "tonyd", "E", 1145001963, "tonyd", "P", 1145002011, "tonyd", "P", 1145002265, "tonyd", "P", 1145002361, "tonyd", "P", 1145002398, "tonyd", "P", 1145002451, "tonyd", "P", 1145002497, "tonyd", "P", 1145002549, "tonyd", "P", 1145002623, "tonyd", "P", 1145002664, "tonyd", "P", 1145002919, "tonyd", "P", 1145002961, "tonyd", "P", 1145002987, "tonyd", "P", 1145003090, "tonyd", "P", 1145003112, "tonyd", "P", 1145003476, "tonyd", "P", 1145003760, "tonyd", "P", 1151730169, "tonyd", "E", 1151730196, "tonyd", "E", 1151737157, "tonyd", "P", 1174618521, "tunk_bodin", "X", 1237848185, "morwenlorelie", "R", 1321241946, "tonyd", "P", 1321241959, "tonyd", "P", 1519184203, "ezralee", "R", 1569787070, "sendnoodlez", "R", 1569799851, "sendnoodlez", "R", 1580102243, "jominey", "E", 1580102259, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
