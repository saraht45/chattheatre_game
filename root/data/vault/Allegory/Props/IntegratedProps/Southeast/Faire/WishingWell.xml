<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCraftingContainer)"/>
    <Base:Bulk immobile="false" mass="10" density="1.4"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="50"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="well"/>
            <Base:SName sname="wishingwell"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wells"/>
            <Base:PName pname="wishingwells"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wishing"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             wishing well
          </Base:Description>
          <Base:Description type="examine">
             A sturdy $(this.trait:material) wishing well. It stands roughly 8 feet tall from the base to the peak of the roof. The well, itself, spans a diameter of roughly 5 feet. There is a working spindle and handle but the rope and bucket seem to have gone missing long ago. Deep within is the telltale glimmer of water.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:material) wishing well.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="base" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="base"/>
            <Base:SName sname="side"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bases"/>
            <Base:PName pname="sides"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="well"/>
          <Base:Adjective adjective="wishing"/>
          <Base:Adjective adjective="wishingwell"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the sides of the $(this.trait:material) wishing well
          </Base:Description>
          <Base:Description type="examine">
             The sides of the $(this.trait:material) wishing well raise about 3 feet off the ground and consist of several $(this.trait:material) slats forming a circle. Two metal straps encircle it and maintain its structural integrity.
          </Base:Description>
          <Base:Description type="look">
             The sides of the $(this.trait:material) wishing well.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="handle" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="spindle"/>
            <Base:SName sname="handle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="spindles"/>
            <Base:PName pname="handles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="well"/>
          <Base:Adjective adjective="wishing"/>
          <Base:Adjective adjective="wishingwell"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the handle and spindle of the $(this.trait:material) wishing well
          </Base:Description>
          <Base:Description type="examine">
             The handle and spindle mechanism of the $(this.trait:material) wishing well. It is this contraption that would normally raise and lower the bucket in order to receive water from the depths of the well. Alas, the rope and bucket are missing.
          </Base:Description>
          <Base:Description type="look">
             The handle and spindle mechanism of the $(this.trait:material) wishing well.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="roof" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="true" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="roof"/>
            <Base:SName sname="peak"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="roofs"/>
            <Base:PName pname="peaks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="peaked"/>
          <Base:Adjective adjective="well"/>
          <Base:Adjective adjective="wishing"/>
          <Base:Adjective adjective="wishingwell"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the peaked roof of the $(this.trait:material) wishing well
          </Base:Description>
          <Base:Description type="examine">
             The peaked roof of the $(this.trait:material) wishing well. It raises approximately 8 feet off the ground. The peak is formed several $(this.trait:material) laid across an A-frame.
          </Base:Description>
          <Base:Description type="look">
             The peaked roof of the $(this.trait:material) wishing well.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:objecttype">
         "well"
      </Core:Property>
      <Core:Property property="merry:react-pre:cast-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " casts a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you cast the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;              
\} else if(\$what \&\& (sizeof(\$what) \> 1)) \{          
EmitTo(\$actor, "The power of wishes are tied to a single coin at a time, however the wishing well will gladly swallow your coins. Some lessons are learned through loss.");          
while(\$what \&\& (sizeof(\$what) \> 0))         
\{         
\$coin = NRefOb(\$what[0]);       
Slay(\$coin);         
\}         
return FALSE;          
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:chuck-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " chucks a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you chuck the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;                                         
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drop-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " drops a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you drop the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;                                         
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:fling-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                        
\{                             
\$coin = NRefOb(\$what[0]);                          
if(\$evoke) \{                                                
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                 
                   
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                 
EmitIn( \$actor."base:environment", Describe(\$actor)+ " flings a coin into the wishing well.", \$actor );              
\} else \{                                   
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you fling the coin in the wishing well.");                                   
\}                                               
Slay(\$coin);                                   
  return FALSE;                                        
\} else \{                                       
return TRUE;                                         
\}                                         
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:pitch-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " pitches a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you pitch the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;                                         
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:throw-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " throws a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you throw the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;                                         
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:toss-where">
         X[M] if(\$what \&\& (sizeof(\$what) == 1) \&\& (NRefOb(\$what[0])."cash:value"))                                         
\{                              
\$coin = NRefOb(\$what[0]);                           
if(\$evoke) \{                                                 
chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "wish", \$actor: \$actor);                  
                    
EmitTo( \$actor, "You feel your wish may have been heard as you watch the coin sparkle during its descent into the wishing well." );                                  
EmitIn( \$actor."base:environment", Describe(\$actor)+ " tosses a coin into the wishing well.", \$actor );               
\} else \{                                    
    EmitTo(\$actor, "Next time, speak your wish aloud -as- you toss the coin in the wishing well.");                                    
\}                                                
Slay(\$coin);                                    
  return FALSE;                                         
\} else \{                                        
return TRUE;                                          
\}                                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1130614983, "tunk_bodin", "X", 1130615021, "tunk_bodin", "X", 1130615031, "tunk_bodin", "X", 1130615736, "tunk_bodin", "X", 1137360777, "tunk_bodin", "X", 1137376114, "tunk_bodin", "X", 1137377127, "tunk_bodin", "X", 1137377810, "tunk_bodin", "X", 1137378726, "tunk_bodin", "X", 1137380321, "tunk_bodin", "X", 1137380421, "tunk_bodin", "E", 1137380592, "tunk_bodin", "X", 1137381389, "tunk_bodin", "X", 1137381538, "tunk_bodin", "X", 1137381570, "tunk_bodin", "X", 1137381611, "tunk_bodin", "X", 1137381637, "tunk_bodin", "X", 1137381921, "tunk_bodin", "X", 1137381955, "tunk_bodin", "X", 1137381974, "tunk_bodin", "X", 1137383464, "tunk_bodin", "X", 1137385916, "tunk_bodin", "X", 1137386228, "tunk_bodin", "X", 1137387047, "tunk_bodin", "X", 1137387226, "tunk_bodin", "X", 1137387531, "tunk_bodin", "X", 1137389345, "tunk_bodin", "X", 1137389506, "tunk_bodin", "X", 1137389589, "tunk_bodin", "X", 1137389696, "tunk_bodin", "X", 1137392444, "tunk_bodin", "X", 1137428421, "tunk_bodin", "X", 1137428597, "tunk_bodin", "X", 1137428697, "tunk_bodin", "X", 1137428833, "tunk_bodin", "X", 1137432397, "tunk_bodin", "X", 1137432782, "tunk_bodin", "X", 1137432848, "tunk_bodin", "X", 1137435042, "tunk_bodin", "X", 1137435096, "tunk_bodin", "X", 1137436124, "tunk_bodin", "X", 1137445487, "tunk_bodin", "X", 1137452053, "tunk_bodin", "X", 1137452096, "tunk_bodin", "X", 1137452540, "tunk_bodin", "X", 1137452606, "tunk_bodin", "X", 1140983848, "tunk_bodin", "X", 1140984349, "tunk_bodin", "X", 1140984460, "tunk_bodin", "X", 1140984518, "tunk_bodin", "X", 1142798681, "tunk_bodin", "X", 1142798817, "tunk_bodin", "X", 1142799197, "tunk_bodin", "X", 1142799255, "tunk_bodin", "X", 1142799310, "tunk_bodin", "X", 1172112567, "tunk_bodin", "X", 1428957657, "jominey", "E", 1428957675, "jominey", "E", 1428957708, "jominey", "E", 1428957715, "jominey", "E", 1428957725, "jominey", "E", 1428957735, "jominey", "E", 1428957740, "jominey", "E", 1519183935, "ezralee", "R", 1569787086, "sendnoodlez", "R", 1569799863, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="trait:objecttype">
         "well"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
