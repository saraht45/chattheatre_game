<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.2" density="0.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="true" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bucket"/>
            <Base:SName sname="applebucket"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="buckets"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="apple"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             wooden bucket of apples
          </Base:Description>
          <Base:Description type="examine">
             A watertight wooden bucket filled to the brim with... well, water. Floating and bobbing in the bucket are several ripe, red apples. The general idea of the bucket game is to bob for an apple without using any of your limbs. Warning: some of these apples look a tad odd and may not be what they appear. [OOC: play applebucket]
          </Base:Description>
          <Base:Description type="look">
             A watertight wooden bucket filled to the brim with... well, water. Floating and bobbing in the bucket are several ripe, red apples.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="apple" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="apple"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="apples"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             ripe red apple
          </Base:Description>
          <Base:Description type="examine">
             A ripe red apple... or is it?
          </Base:Description>
          <Base:Description type="look">
             It appears to be a ripe red apple.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:expired_play">
         X[M] /* player didn't answer in time */           
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:no_play">
         X[M] /* decided not to play */           
EmitTo(\$actor, "You opt not to try. Spoil sport.");           
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:play_game">
         X[M] \$tokens = Match(\$actor, "token", \$actor, "faire");
if(sizeof(\$tokens) \< 1) \{
  EmitTo(\$actor, "You don't have a token. Buy one from the faire attendant.");
  return TRUE;
\} else \{
  EmitTo(\$actor, "You turn a token over to the apple harvester.");
  Slay(NRefOb(\$tokens[0]));
\}

/* skill tester code */
EmitTo(\$actor, "You lower your head to the apple bucket.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" lowers "+\$actor."base:possessive"+" head into the apple bucket.", \$actor);
\$delay(random(10)+5, TRUE, "8e7d");
\$skill = ironclaw::roll(\$roller: \$actor, \$skills: (\{ \}), \$bonus: (\{ "trait:speed", "trait:luck" \}));
\$skill += random(5);
switch(\$skill) \{
  case 1:
    EmitTo(\$actor, "The apples seem to bob and float away from your mouth.");
    EmitIn(\$actor."base:environment", "The apples seem to bob and float away from "+Describe(\$actor)+"'s mouth.", \$actor);
    break;
  case 2:
    EmitTo(\$actor, "As your mouth closes on the nearest red apple, it squeaks? A taste of rubber invades your mouth.");
    EmitIn(\$actor."base:environment", "As "+\$actor."base:possessive"+ " mouth nears the closest red apple, it squeaks?", \$actor);
    /* give the fake apple */
     \$fake = Spawn(\$\{IronClaw:Props:Misc:Faire:RubberBall\});
     \$fake."base:environment" = \$actor;
    break;
  case 3:
    EmitTo(\$actor, "The apples ride the rippling water and settle close the sides of the bucket and nowhere near your mouth.");
    EmitIn(\$actor."base:environment", "The apples ride the rippling water and settle near the sides of the bucket which is nowhere near "+Describe(\$actor)+"'s mouth.", \$actor);
    break;
  case 4:
    EmitTo(\$actor, "The apples elude you.");
    EmitIn(\$actor."base:environment", "The apples elude "+Describe(\$actor)+".", \$actor);
    break;
  case 5:
    EmitTo(\$actor, "The apples elude you.");
    EmitIn(\$actor."base:environment", "The apples elude "+Describe(\$actor)+".", \$actor);
    break;
  case 6:
    EmitTo(\$actor, "The apples elude you.");
    EmitIn(\$actor."base:environment", "The apples elude "+Describe(\$actor)+".", \$actor);
    break;
  case 7:
    EmitTo(\$actor, "The apples elude you.");
    EmitIn(\$actor."base:environment", "The apples elude "+Describe(\$actor)+".", \$actor);
    break;
  case 8:
    EmitTo(\$actor, "The apples elude you.");
    EmitIn(\$actor."base:environment", "The apples elude "+Describe(\$actor)+".", \$actor);
    break;
  default:
    EmitTo(\$actor, "You adroitly chomp the apple with a resounding CRUNCH.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+" adroitly chomps the apple with a resounding CRUNCH.", \$actor);
    /* give the apple */
     \$apple = Spawn(\$\{Allegory:Props:Plants:A:AppleRed:AppleRedFruit\});
     \$apple."base:environment" = \$actor;
    /* give a prize */
    \$prize = Spawn(\$\{Ironclaw:Props:Clothing:Misc:ClothDoll\});
    \$prize."trait:type" = "apple";
    \$prize."trait:color" = "red";
    \$prize."trait:material" = "felt";
    EmitTo(\$actor, "The assistant congratulates you, and hands you "+Describe(\$prize)+".");
    EmitIn(\$actor."base:environment", "The assistant congratulates "+Describe(\$actor)+", and hands "+\$actor."base:objective"+" "+Describe(\$prize)+".", \$actor);
    \$prize."base:environment" = \$actor;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:grab-dob">
         X[M] /*           
           
  D=Ask if actor wants to play game.           
           
*/           
           
/* ask if the player wants to play this */           
interaction::question(\$question: "The assistant shows the bucket to you, \\"There are red apples in here. If you can grab one without using your hands, feet or tail, I'll give you a prize. Only one token, what do you say?\\"", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play");           
           
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:play-dob">
         X[M] /*           
           
  D=Ask if actor wants to play game.           
           
*/           
           
/* ask if the player wants to play this */           
interaction::question(\$question: "The assistant shows the bucket to you, \\"There are red apples in here. If you can grab one without using your hands, feet or tail, I'll give you a prize. Only one token, what do you say?\\"", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play");           
           
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1145058270, "tonyd", "E", 1145058412, "tonyd", "P", 1145058453, "tonyd", "P", 1145058833, "tonyd", "P", 1145058871, "tonyd", "P", 1145059014, "tonyd", "P", 1145059033, "tonyd", "P", 1145059140, "tonyd", "P", 1145059567, "tonyd", "P", 1145059700, "tonyd", "P", 1145059803, "tonyd", "P", 1145060501, "tonyd", "P", 1145060583, "tonyd", "P", 1145060644, "tonyd", "P", 1145060701, "tonyd", "P", 1145060781, "tonyd", "P", 1145060834, "tonyd", "P", 1145060885, "tonyd", "P", 1145061541, "tonyd", "P", 1145230455, "tonyd", "P", 1145231998, "tonyd", "P", 1145232135, "tonyd", "P", 1145232255, "tonyd", "P", 1145232345, "tunk_bodin", "X", 1145232350, "tonyd", "P", 1145232367, "tonyd", "P", 1145232415, "tunk_bodin", "X", 1145232484, "tonyd", "P", 1145232639, "tonyd", "P", 1145233838, "tunk_bodin", "X", 1145234007, "tunk_bodin", "X", 1145234620, "tunk_bodin", "X", 1145234680, "tunk_bodin", "X", 1145234732, "tunk_bodin", "X", 1145235407, "tunk_bodin", "X", 1145235482, "tunk_bodin", "X", 1145235574, "tunk_bodin", "X", 1145235761, "tunk_bodin", "X", 1151732486, "tonyd", "E", 1151732944, "tunk_bodin", "X", 1227400049, "rastalabor", "X", 1237848150, "morwenlorelie", "R", 1321242016, "tonyd", "P", 1519184171, "ezralee", "R", 1569787049, "sendnoodlez", "R", 1569799833, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
