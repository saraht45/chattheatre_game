<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="plant"/>
            <Base:SName sname="lily"/>
            <Base:SName sname="sorbonne"/>
            <Base:SName sname="vegetation"/>
            <Base:SName sname="flower"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="vegetations"/>
            <Base:PName pname="plants"/>
            <Base:PName pname="lilies"/>
            <Base:PName pname="sorbonnes"/>
            <Base:PName pname="flowers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="northwest"/>
          <Base:Adjective adjective="oval"/>
          <Base:Adjective adjective="pink"/>
          <Base:Adjective adjective="potted"/>
          <Base:Adjective adjective="rosy"/>
          <Base:Adjective adjective="small"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             potted plant with rosy blossoms
          </Base:Description>
          <Base:Description type="examine">
             A potted, oval shaped plant growing to five feet tall stands in the northwest corner of this room. It is a beautiful flowering vegetation with a brilliant display of pink and rosy red sorbonne lily flowers. It is green in color and armed with thick, heavy spines. Leaves are palmately compound with long petiole.<sbr/> This plant has $[if($this."trait:quantity" == 0) { return "no flowers"; } else if ($this."trait:quantity" == 1) { return "one flower"; } else { return desc_cardinal($this."trait:quantity")+ " flowers"; }] ready to be harvested.
          </Base:Description>
          <Base:Description type="look">
             A potted plant with pink and rosy red sorbonne lily flowers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         12
      </Core:Property>
      <Core:Property property="merry:react:harvest-dob">
         X[M] /* check there are flowers available */                
if(\$this."trait:quantity" \< 1) \{                
  EmitTo(\$actor, "There are no harvestable flowers on "+Describe(\$this)+".");                
  return FALSE;                
\}                
                
/* reduce the number of flowers on the plant */                
\$this."trait:quantity" -= 1;                
                
/* create the flower object and give it to the player */                
\$object = Spawn(\$\{Allegory:Props:Plants:L:LilySorbonne:LilySorbonneFlower\}); \$object."base:environment" = \$actor;                
                
/* emit message to player and room */                
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");                
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);                
                
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pick-dob">
         X[M] /* check there are flowers available */                
if(\$this."trait:quantity" \< 1) \{                
  EmitTo(\$actor, "There are no harvestable flowers on "+Describe(\$this)+".");                
  return FALSE;                
\}                
                
/* reduce the number of flowers on the plant */                
\$this."trait:quantity" -= 1;                
                
/* create the flower object and give it to the player */                
\$object = Spawn(\$\{Allegory:Props:Plants:L:LilySorbonne:LilySorbonneFlower\}); \$object."base:environment" = \$actor;                
                
/* emit message to player and room */                
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");                
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);                
                
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:smell-dob">
         X[M] EmitTo( \$actor, "" );                          
                          
\$room = \$actor."base:environment";                          
EmitTo( \$actor, "The small potted plants smells of a delightfully sweet floral fragrance." );                          
EmitIn( \$room, Describe ( \$actor ) + " smells " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:sniff-dob">
         X[M] EmitTo( \$actor, "" );                          
                          
\$room = \$actor."base:environment";                          
EmitTo( \$actor, "The small potted plant smells of a delightfully sweet floral fragrance." );                          
EmitIn( \$room, Describe ( \$actor ) + " smells " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" \>= 12) return TRUE;  
/* wait a while, then add a flower */  
\$delay((2*24*60*60), TRUE, "7032");  
if(\$this."trait:quantity" \< 12)  
\$this."trait:quantity" += 1;  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127067900, "tunk_bodin", "X", 1127068737, "tunk_bodin", "X", 1272093440, "slurpeeslurp", "E", 1272093447, "slurpeeslurp", "E", 1272093524, "slurpeeslurp", "E", 1272093664, "slurpeeslurp", "E", 1272094554, "slurpeeslurp", "E", 1272094587, "slurpeeslurp", "E", 1272094613, "slurpeeslurp", "E", 1272094668, "slurpeeslurp", "E", 1272094739, "slurpeeslurp", "E", 1272096332, "slurpeeslurp", "E", 1272096562, "slurpeeslurp", "E", 1272096771, "slurpeeslurp", "E", 1272096789, "slurpeeslurp", "K", 1294329463, "tunk_bodin", "X", 1295635986, "tunk_bodin", "X", 1307223583, "tunk_bodin", "R", 1307223813, "tunk_bodin", "R", 1571156980, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
