<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="plant"/>
            <Base:SName sname="lisianthus"/>
            <Base:SName sname="vegetation"/>
            <Base:SName sname="flower"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="vegetations"/>
            <Base:PName pname="lisianthuses"/>
            <Base:PName pname="plants"/>
            <Base:PName pname="flowers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="golden"/>
          <Base:Adjective adjective="oval"/>
          <Base:Adjective adjective="potted"/>
          <Base:Adjective adjective="small"/>
          <Base:Adjective adjective="southwest"/>
          <Base:Adjective adjective="yellow"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             potted plant with yellow blossoms
          </Base:Description>
          <Base:Description type="examine">
             A potted, oval shaped plant growing to five feet tall in the southwest corner of the room. It is a beautiful flowering vegetation with a brilliant display of yellow and golden, rose-like lisianthus flowers. It is green in color and armed with thick, heavy spines. Leaves are palmately compound with long petiole.<sbr/> This plant has $[if($this."trait:quantity" == 0) { return "no flowers"; } else if ($this."trait:quantity" == 1) { return "one flower"; } else { return desc_cardinal($this."trait:quantity")+ " flowers"; }] ready to be harvested.
          </Base:Description>
          <Base:Description type="look">
             A potted plant with yellow and golden, rose-like lisianthus flowers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         12
      </Core:Property>
      <Core:Property property="merry:react:harvest-dob">
         X[M] /* check there are flowers available */               
if(\$this."trait:quantity" \< 1) \{               
  EmitTo(\$actor, "There are no harvestable flowers on "+Describe(\$this)+".");               
  return FALSE;               
\}               
               
/* reduce the number of flowers on the plant */               
\$this."trait:quantity" -= 1;               
               
/* create the flower object and give it to the player */               
\$object = Spawn(\$\{Allegory:Props:Plants:L:Lisianthus:LisianthusFlower\}); \$object."base:environment" = \$actor;               
               
/* emit message to player and room */               
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");               
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);               
               
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pick-dob">
         X[M] /* check there are flowers available */               
if(\$this."trait:quantity" \< 1) \{               
  EmitTo(\$actor, "There are no harvestable flowers on "+Describe(\$this)+".");               
  return FALSE;               
\}               
               
/* reduce the number of flowers on the plant */               
\$this."trait:quantity" -= 1;               
               
/* create the flower object and give it to the player */               
\$object = Spawn(\$\{Allegory:Props:Plants:L:Lisianthus:LisianthusFlower\}); \$object."base:environment" = \$actor;               
               
/* emit message to player and room */               
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");               
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);               
               
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:smell-dob">
         X[M] EmitTo( \$actor, "" );                         
                         
\$room = \$actor."base:environment";                         
EmitTo( \$actor, "The small potted tree smells of a unique rose fragrance." );                         
EmitIn( \$room, Describe ( \$actor ) + " smells " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:sniff-dob">
         X[M] EmitTo( \$actor, "" );                         
                         
\$room = \$actor."base:environment";                         
EmitTo( \$actor, "The small potted tree smells of a unique rose fragrance." );                         
EmitIn( \$room, Describe ( \$actor ) + " smells " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] /* stop when we hit 12 flowers on the plant */               
if(\$this."trait:quantity" \>= 12) return TRUE;               
               
/* wait a while, then add a flower */               
\$delay((2*24*60*60), TRUE, "9d85");               
if(\$this."trait:quantity" \< 12)               
  \$this."trait:quantity" += 1;               
               
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127067900, "tunk_bodin", "X", 1127068469, "tunk_bodin", "X", 1127068634, "tunk_bodin", "X", 1127068760, "tunk_bodin", "X", 1272090941, "slurpeeslurp", "E", 1272090951, "slurpeeslurp", "E", 1272090966, "slurpeeslurp", "E", 1272091079, "slurpeeslurp", "E", 1272091127, "slurpeeslurp", "E", 1272091224, "slurpeeslurp", "E", 1272091309, "slurpeeslurp", "E", 1272091377, "slurpeeslurp", "E", 1272092853, "slurpeeslurp", "E", 1272096247, "slurpeeslurp", "E", 1272096683, "slurpeeslurp", "E", 1272096725, "slurpeeslurp", "K", 1295636016, "tunk_bodin", "X", 1307223603, "tunk_bodin", "R", 1307223829, "tunk_bodin", "R", 1571156985, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
