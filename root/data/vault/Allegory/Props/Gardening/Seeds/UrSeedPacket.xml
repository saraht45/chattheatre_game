<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="sitting" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="packet"/>
            <Base:SName sname="envelope"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="packets"/>
            <Base:PName pname="envelopes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="seed"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:type) seed packet
          </Base:Description>
          <Base:Description type="examine">
             A small, brown envelope containing $(this.trait:quantity) $(this.trait:type) $[if($this."trait:quantity" == 1) return "seed"; else return "seeds";]. You can <acmd tag="command" cmd="tear packet">tear</acmd> it open to get the seeds out.
          </Base:Description>
          <Base:Description type="look">
             A small, brown envelope containing $(this.trait:quantity) $(this.trait:type) $[if($this."trait:quantity" == 1) return "seed"; else return "seeds";].
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         1000
      </Core:Property>
      <Core:Property property="export:trait:color:variations:extended">
         (\{ "red-speckled white", "sun-kissed orange", "wintery blue", "spring green", "shadowy purple", "stark-white", "white-tipped pink", "velvety red", "creamy orange", "powdered blue", "sage green", "velvety purple", "ivory", "pastel pink", "pure cyan", "pinkish-purple" \})
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         1
      </Core:Property>
      <Core:Property property="merry:react:tear-dob">
         X[M] if(\$this.opened) \{
    EmitTo(\$actor, Describe(\$this) + " has already been opened.");
    return FALSE;
\}

\$this.opened = 1;

if(\$this."base:environment" != \$actor) \{
    EmitTo(\$actor, "You need to be holding " + Describe(\$this) + ".");
    return FALSE;
\}

\$seed = \$this."trait:seed:object";
\$quantity = \$this."trait:quantity";
\$newseeds = (\{ \});

for(\$i = 0; \$i \< \$quantity; \$i++) \{
    \$newseed = Spawn(\$seed);
    \$newseed."trait:stage" = 0;
    \$newseed."base:environment" = \$actor;
    \$newseeds += (\{ \$newseed \});
    \$delay(0.001, FALSE, "e36d");
    if(\$this."trait:color:variations:extended" \&\& sizeof(\$this."trait:color:variations:extended") \&\& \$seed."trait:color:variations" \&\& sizeof(\$seed."trait:color:variations")) \{
        \$variations = \$this."trait:color:variations:extended" + \$seed."trait:color:variations";
        \$newseed."trait:color" = \$variations[random(sizeof(\$variations))];
    \}
\}

EmitTo(\$actor, TAG("You tear open " + Describe(\$this, nil, \$actor) + " revealing " + Describe(\$newseeds, nil, nil, STYLE_NONPOSS) + ".", "social:first"));
EmitIn(\$actor."base:environment", TAG(Describe(\$actor) + " tears open " + Describe(\$this, \$actor) + " revealing " + Describe(\$newseeds, nil, nil, STYLE_NONPOSS) + ".", "social:third"), \$actor);

Slay(\$this);

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1418784641, "jominey", "E", 1418843792, "jominey", "E", 1575993613, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
