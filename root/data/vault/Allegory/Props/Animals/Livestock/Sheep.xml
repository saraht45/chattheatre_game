<object clone="/base/obj/thing" owner="sendnoodlez">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Animals:Livestock:UrLivestock)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sheep"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sheep"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             <a_or_an>$[if($this.tended == 0); return "sheared";] $(this.trait:appearance:body) $(this.trait:appearance:fleece) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>
          </Base:Description>
          <Base:Description type="examine">
             <a_or_an>$(this.trait:appearance:body) $(this.trait:appearance:fleece) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>.  $(this.trait:look) $[::get_fleece_desc()]
          </Base:Description>
          <Base:Description type="look">
             <a_or_an>$(this.trait:appearance:body) $(this.trait:appearance:fleece) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>. $(this.trait:look) $[::get_fleece_desc()]
          </Base:Description>
          <Base:Description type="pbrief">
             $[if($this.tended == 0); return "sheared";] $(this.trait:appearance:body) $(this.trait:appearance:fleece) $(this.trait:breed) $(this.trait:animaltype)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:feeding:accepts">
         (\{ (\{ "trait:objecttype", "hay" \}) \})
      </Core:Property>
      <Core:Property property="export:feeding:restrictions">
         (\{ "farmland", 1 \})
      </Core:Property>
      <Core:Property property="export:harvest:frequency">
         30
      </Core:Property>
      <Core:Property property="export:isapet">1</Core:Property>
      <Core:Property property="export:nip:trait:movement:frequency">
         0
      </Core:Property>
      <Core:Property property="export:trait:animaltype">
         "sheep"
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This relatively small, domesticated mammal stands approximately three feet in height at the withers, with a crimped hair coat of wool which grows continuously and must be sheared seasonally. The sheep has a short tail, cloven hooves, and a compact head with dark, alert eyes and tapered ears. Some breeds also feature horns in varying shapes and sizes."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "sheep"
      </Core:Property>
      <Core:Property property="export:trait:spawnedparts">
         ([ "body":"bodies", "ears":"ears", "eyes":"eyes", "fleece":"fleeces", "head":"heads", "hooves":"hooves", "horns":"horns", "legs":"legs", "muzzle":"muzzles", "neck":"necks", "nose":"noses", "stomach":"stomachs", "tail":"tails", "teeth":"teeth" ])
      </Core:Property>
      <Core:Property property="export:trait:spawnedtraits">
         ([ "appearance:body":(\{ "large", "small" \}), "appearance:ears":(\{ "tapered" \}), "appearance:eyes":(\{ "dark" \}), "appearance:fleece":(\{ "brown", "white", "black", "grey", "silver", "red", "moorit" \}), "appearance:hooves":(\{ "split" \}), "appearance:horns":(\{ "short" \}) ])
      </Core:Property>
      <Core:Property property="merry:lib:eat">
         X[M] \$food."trait:quantity" = Int(\$food."trait:quantity") - 10;
EmitTo(\$actor, TAG("You scoop a pile of hay onto the ground before " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", "social:first"));
EmitIn(\$actor."base:environment", TAG(Describe(\$actor) + " scoops a pile of hay onto the ground before " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", "social:third"), \$actor);
\$delay(2, FALSE, "af69");
EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " bleats softly between mouthfuls of hay.", "social:third"));

return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:get_fleece_desc">
         X[M] \$tended = Int(\$this.tended);

if(\$tended == 0) \{
    return "It has been sheared recently and bears no fleece at all.";

\} else if(\$tended \< 10) \{
    return "It is covered in a small amount of " + \$this."trait:appearance:fleece" + " fleece.";

\} else if(\$tended \< 29) \{
    return "It is covered in a moderate amount of " + \$this."trait:appearance:fleece" + " fleece.";

\} else \{
    return "It is covered in a thick amount of " + \$this."trait:appearance:fleece" + " fleece.";
\}
      </Core:Property>
      <Core:Property property="merry:react:shear-dob">
         X[M] if(!::readyforharvest()) \{
    EmitTo(\$actor, "There is not enough fleece to shear.");
    return FALSE;
\}

\$inventory = \$actor."base:inventory";
for(\$i = 0; !\$tool \&\& \$i \< sizeof(\$inventory); \$i++) \{
    if(\$inventory[\$i]."trait:objecttype" == "sheep shears") \{
        \$tool = \$inventory[\$i];
    \}
\}

if(!\$tool) \{
    EmitTo(\$actor, "You need to be holding sheep shears in order to do that.");
    return FALSE;
\}

\$fleece = Spawn(\$\{Allegory:Props:Animals:Livestock:Produce:Fleece\});
\$fleece."trait:color" = \$this."trait:appearance:fleece";

\$quality = allegory::roll(\$roller: \$actor, \$skills: (\{ "skill:general:animal-husbandry" \}), \$bonus: (\{ "trait:intelligence" \}));

\$fleece."trait:quality" = \$quality;

\$quantity = 100;

\$fleece."trait:quantity" = \$quantity;

\$fleece."base:environment" = \$actor;

if(!\$fleece."base:environment") \$fleece."base:environment" = \$actor."base:environment";

EmitTo(\$actor, TAG("With " + Describe(\$tool, nil, nil, STYLE_NONPOSS) + ", you shear " + Describe(\$fleece, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", "social:first"));
EmitIn(\$actor."base:environment", TAG("With " + Describe(\$tool, nil, nil, STYLE_NONPOSS) + ", " + Describe(\$actor) + " shears " + Describe(\$fleece, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", "social:third"), \$actor);

\$this.lastharvested = time();
\$this.lastharvestedby = \$actor;
\$this.tended = 0;

return FALSE;
      </Core:Property>
      <Core:Property property="petbody">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1598486395, "jominey", "E", 1598486444, "jominey", "E", 1627366571, "ezralee", "K", 1627366613, "ezralee", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
