<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fleece"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fleeces"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="raw"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) raw fleece
          </Base:Description>
          <Base:Description type="examine">
             <a_or_an>$(this.trait:color) raw fleece</a_or_an>. Sheared from a sheep, this material can be processed into wool fiber. There appears to be about <quantity/> handfuls remaining. <sbr/><quality-full/>
          </Base:Description>
          <Base:Description type="look">
             <a_or_an>$(this.trait:color) raw fleece</a_or_an>. Sheared from a sheep, this material can be processed into wool fiber.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:help">
         "Weavers can COMB the fleece into wool fibers using carding combs."
      </Core:Property>
      <Core:Property property="merry:react:comb-dob">
         X[M] if(!\$actor."crafting:override" \&\& Str(\$actor."trait:class1") != "weaver" \&\& Str(\$actor."trait:class2") != "weaver") \{
    EmitTo(\$actor, "You aren't sure how to do that. Try finding a weaver.");
    return FALSE;
\}


\$inventory = \$actor."base:inventory";
for(\$i = 0; !\$tool \&\& \$i \< sizeof(\$inventory); \$i++) \{
    if(\$inventory[\$i]."trait:objecttype" == "carding combs") \{
        \$tool = \$inventory[\$i];
    \}
\}

if(!\$tool) \{
    EmitTo(\$actor, "You need to be holding a pair of carding combs in order to do that.");
    return FALSE;
\}

\$fiber = Spawn(\$\{Allegory:Props:Materials:Weaving:Fiber:Wool\});
\$fiber."trait:quality" = \$this."trait:quality";
\$fiber."trait:quantity" = \$this."trait:quantity";
\$fiber."trait:color" = \$this."trait:color";

EmitTo(\$actor, TAG("With " + Describe(\$tool, nil, nil, STYLE_NONPOSS) + " in hand, you repeatedly pull them through the fibers of " + Describe(\$this, nil, nil, STYLE_NONPOSS) + " until you are left with " + Describe(\$fiber) + ".", "social:first"));
EmitIn(\$actor."base:environment", TAG("With " + Describe(\$tool, nil, nil, STYLE_NONPOSS) + " in hand, " + Describe(\$actor) + " repeatedly pulls them through the fibers of " + Describe(\$this, nil, nil, STYLE_NONPOSS) + " until " + Str(\$actor."trait:nominative") + " is left with " + Describe(\$fiber) + ".", "social:third"), \$actor);

\$fiber."base:environment" = \$actor;
if(!\$fiber."base:environment") \$fiber."base:environment" = \$actor."base:environment";

Slay(\$this);

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1589048739, "jominey", "E", 1589049121, "jominey", "E", 1589049186, "jominey", "E", 1589049241, "jominey", "E", 1589049311, "jominey", "E", 1589049321, "jominey", "E", 1589049494, "jominey", "E", 1589049515, "jominey", "E", 1589049612, "jominey", "K", 1589049649, "jominey", "E", 1589049734, "jominey", "E", 1589049739, "jominey", "E", 1598234131, "jominey", "K", 1598234186, "jominey", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
