<object clone="/base/obj/thing" owner="sendnoodlez">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Animals:Livestock:UrLivestock)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pig"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pigs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             <a_or_an>$(this.trait:appearance:body) $(this.trait:appearance:coat) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>
          </Base:Description>
          <Base:Description type="examine">
             <a_or_an>$(this.trait:appearance:body) $(this.trait:appearance:coat) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>. $(this.trait:look)
          </Base:Description>
          <Base:Description type="look">
             <a_or_an>$(this.trait:appearance:body) $(this.trait:appearance:color) $(this.trait:breed) $(this.trait:animaltype)</a_or_an>. $(this.trait:look)
          </Base:Description>
          <Base:Description type="pbrief">
             $(this.trait:appearance:body) $(this.trait:appearance:coat) $(this.trait:breed) $(this.trait:animaltype)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:command:bounce">
         (\{ "THIS squeals in delight as NOMINATIVE bounces in a jerky, inelegant circle while tossing POSSESSIVE head.", "THIS abruptly begins to bounce and swirl as NOMINATIVE squeals in a display of excitement." \})
      </Core:Property>
      <Core:Property property="export:command:head-toss">
         (\{ "THIS tosses POSSESSIVE head back and forth with an exaggerated, expressive motion.", "THIS throws POSSESSIVE head back with a snort before shaking it to and fro." \})
      </Core:Property>
      <Core:Property property="export:command:nap">
         (\{ "THIS rolls onto POSSESSIVE side with a long sigh before POSSESSIVE eyelids droop.", "THIS opens POSSESSIVE jaw in a wide yawn before slumping POSSESSIVE head onto the ground to nap." \})
      </Core:Property>
      <Core:Property property="export:command:roll">
         (\{ "THIS cumbersomely flops POSSESSIVE body to the ground, POSSESSIVE stubby legs flailing as NOMINATIVE writhes back and forth.", "THIS rolls onto POSSESSIVE side, POSSESSIVE body wiggling every which way as NOMINATIVE flops on the ground." \})
      </Core:Property>
      <Core:Property property="export:command:root">
         (\{ "THIS burrows POSSESSIVE nose into the soil, upturning the ground as NOMINATIVE snorts and snuffles.", "THIS eagerly roots at the ground, POSSESSIVE nose leaving behind furrows in the soil." \})
      </Core:Property>
      <Core:Property property="export:command:snort">
         (\{ "THIS wriggles POSSESSIVE nose to and fro with a snuffly snorting sound.", "THIS snorts softly with a small crinkle of POSSESSIVE nose." \})
      </Core:Property>
      <Core:Property property="export:command:snuffle">
         (\{ "THIS snuffles softly while wiggling POSSESSIVE nose to-and-fro.", "THIS searches the ground with a wriggling motion of POSSESSIVE nose." \})
      </Core:Property>
      <Core:Property property="export:command:squeal-happy">
         (\{ "THIS lifts POSSESSIVE head, letting loose a squeal of delight as NOMINATIVE wags his curly tail with a flourish.", "THIS swiftly waggles POSSESSIVE curly tail while squealing, the sound punctuated by little snorts of pleasure." \})
      </Core:Property>
      <Core:Property property="export:command:squeal-mad">
         (\{ "THIS squeals with a low and disgruntled sound, POSSESSIVE hoof stomping on the ground with a grunt.", "THIS unleashes a bevy of displeased squeals and grunts as POSSESSIVE ears fold back against POSSESSIVE head." \})
      </Core:Property>
      <Core:Property property="export:command:stamp">
         (\{ "THIS firmly stamps POSSESSIVE hoof against the ground with a soft snort.", "THIS stomps POSSESSIVE hoof twice against the ground while making small guttural sounds." \})
      </Core:Property>
      <Core:Property property="export:command:wag">
         (\{ "THIS wriggles and writhes POSSESSIVE curly tail in a flurry of motion.", "THIS wags POSSESSIVE curly tail in a swift movement." \})
      </Core:Property>
      <Core:Property property="export:feeding:accepts">
         (\{ (\{ "base:edible", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:isapet">1</Core:Property>
      <Core:Property property="export:nip:trait:movement:frequency">
         0
      </Core:Property>
      <Core:Property property="export:trait:animaltype">
         "pig"
      </Core:Property>
      <Core:Property property="export:trait:commands:extra">
         (\{ "hunt", "snort", "roll", "root", "squeal-happy", "squeal-mad", "bounce", "nap", "lay", "snuffle", "wag", "stamp", "head-toss" \})
      </Core:Property>
      <Core:Property property="export:trait:look">
         "With some breeds exceeding 800 pounds when fully grown, this domesticated relative of the wild boar varies considerably in size and weight. The pig has a long head with tapered ears and a flat, flared snout. Its short legs end in cloven hooves, and it has a small, tufted tail which is naturally curled in some breeds."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "pig"
      </Core:Property>
      <Core:Property property="export:trait:spawnedparts">
         ([ "body":"bodies", "coat":"coats", "ears":"ears", "eyes":"eyes", "head":"heads", "hooves":"hooves", "legs":"legs", "neck":"necks", "snout":"snouts", "stomach":"stomachs", "tail":"tails", "teeth":"teeth" ])
      </Core:Property>
      <Core:Property property="export:trait:spawnedtraits">
         ([ "appearance:body":(\{ "large", "plump", "bulky", "fat", "round" \}), "appearance:coat":(\{ "pink", "reddish-brown", "black", "black and white spotted", "black and white banded", "grey", "brown and black spotted" \}), "appearance:ears":(\{ "tapered" \}), "appearance:eyes":(\{ "dark" \}), "appearance:hooves":(\{ "split" \}), "appearance:snout":(\{ "flat" \}), "appearance:tail":(\{ "curled" \}) ])
      </Core:Property>
      <Core:Property property="merry:lib:eat">
         X[M] \$food."base:environment" = \$this;

\$delay(0.01, TRUE, "8aed");

Social(\$this, "gobble", nil, nil, nil, \$food);

Set(\$this, "truffle:hunts", 0);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:hunt">
         X[M] if(\$this.busy) \{
    EmitTo(\$actor, Describe(\$this) + " is already busy.");
    return FALSE;
\}

if(Int(\$this."truffle:hunts") \>= 5) \{
    EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " snorts exhaustedly and lies down.", "social:third"));
    return FALSE;
\}

if(!\$actor."base:environment"."woodcutting:default:array") \{
    EmitTo(\$actor, "This is not a suitable location to hunt truffles.");
    return FALSE;
\}

\$this.busy = 1;
EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " snorts and snuffles the ground in search of something.", "social:third"));

for(\$i = 0; \$i \< 5; \$i++) \{
    \$delay(30, FALSE, "511a");
    switch(random(4)) \{
        case 0:
        \{
            EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " suddenly runs to a new spot, its tail jiggling with excitement.", "social:third"));
            break;
        \}
       
        case 1:
        \{
            EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " roots furiously at the ground before swallowing a grub worm.", "social:third"));
            break;
        \}

        case 2:
        \{
            EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " pauses as if deep in thought. A foul stench suddenly invades the surroundings.", "social:third"));
            break;
        \}

        case 3:
        \{
            EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " snorts and snuffles the ground in search of something.", "social:third"));
            break;
        \}

        default:
        \{
            EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " suddenly runs to a new spot, its tail jiggling with excitement.", "social:third"));
            break;
        \}
    \}
    \$delay(30, FALSE, "7f59");
\}

\$roll = allegory::roll(\$roller: \$actor, \$skills: (\{ "skill:general:animal-husbandry" \}), \$bonus: (\{ "trait:intelligence" \}));

\$chance = 10 + \$roll;

\$roll2 = random(80);

if(\$roll2 \<= \$chance) \{
    EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " stops dead in its tracks, squealing and rooting the soil in excitement.", "social:third"));

    \$quantity = allegory::roll(\$roller: \$actor, \$skills: (\{ "skill:general:animal-husbandry" \}), \$bonus: (\{ "trait:intelligence" \}));
    \$quantity = \$quantity/4;
    if(\$quantity \< 1) \$quantity = 1;

    \$truffles = (\{ \});
    for(\$i = 0; \$i \< \$quantity; \$i++) \{
        \$truffle = Spawn(\$\{Allegory:Props:Food:Cooking:Mushrooms:Edible:Truffle\});
        \$truffle."base:environment" = \$this."base:environment";
        \$truffles += (\{ \$truffle \});
    \}

    \$delay(3, FALSE, "c25d");

    EmitIn(\$this."base:environment", TAG(capitalize(Describe(\$this)) + " reveals " + Describe(\$truffles, nil, nil, STYLE_NONPOSS) + ".", "social:third"));
\} else \{
    EmitIn(\$this."base:environment", TAG("After an exhaustive search, " + Describe(\$this) + " turns three times before plopping on the ground for a rest.", "social:third"));
\}

\$this."truffle:hunts" = Int(\$this."truffle:hunts") + 1;

if(\$this."truffle:hunts" \>= 5) \{
    \$this.lastharvested = time();
    \$this.lastharvestedby = \$actor;
    \$this.tended = 0;
\}

\$this.busy = nil;
      </Core:Property>
      <Core:Property property="merry:lib:lay">
         X[M] EmitIn(\$actor."base:environment", Describe(\$this)+" sinks " + \$this."base:possessive" + " body slowly down onto the ground."); 

Social(this, "lie", "cumbersomely", nil, "beside", \$actor );

return TRUE;
      </Core:Property>
      <Core:Property property="petbody">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1593964029, "jominey", "E", 1598484445, "jominey", "E", 1600647764, "jominey", "E", 1600647846, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
