<object clone="/base/obj/thing" owner="abiwan">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="garment"/>
            <Base:SName sname="clothing"/>
            <Base:SName sname="garb"/>
            <Base:SName sname="pair"/>
            <Base:SName sname="thing"/>
            <Base:SName sname="item"/>
            <Base:SName sname="everything"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="clothes"/>
            <Base:PName pname="clothings"/>
            <Base:PName pname="garments"/>
            <Base:PName pname="items"/>
            <Base:PName pname="pairs"/>
            <Base:PName pname="stuff"/>
            <Base:PName pname="things"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             pair of {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) } {? | $(this.trait:ribbon:material) | beribboned } {? | $(this.trait:gem:type) | {? equal | $(this.trait:gem:type) | impearled | impearled | $(this.trait:gem:material)-$(this.trait:gem:type) } } {? | $(this.details:stud:snames) | $(this.trait:stud:color) $(this.trait:stud:material)-studded } {? | $(this.details:bead:snames) | beaded } {? | $(this.details:paillette:snames) | sparkling } {? equal | $(this.trait:pearl) | none || $(this.trait:pearl) } {? | $(this.details:feather:snames) | feathered } {? | $(this.details:trimming:snames) | $(this.trait:trimming:material)-trimmed } {? | $(this.details:overlay:snames) | $(this.trait:overlay:material)-overlaid } {? | $(this.details:ruffle:snames) | ruffled } {? | $(this.details:flower:snames) | flowered } {? | $(this.trait:painting) | painted } {? | $(this.trait:embroidery) | {? | $(this.trait:embroidery:pattern) | $(this.trait:embroidery:pattern)} embroidered } {? equal | $(this.trait:type) | none || $(this.trait:type) } {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) }  $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             A pair of {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) } {? | $(this.trait:ribbon:material) | beribboned } {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } $(this.trait:brief){? | $(this.details:button:snames) | secured with $(this.trait:buttons:color) $(this.trait:buttons:material) $(this.trait:buttons:type) buttons}{? | $(this.details:bead:snames) | adorned with $(this.trait:bead:color) $(this.trait:bead:material) $(this.trait:bead:shape) beads}{? | $(this.details:paillette:snames) | sparkling with $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes}{? | $(this.details:stud:snames) | reinforced with $(this.trait:stud:color) $(this.trait:stud:material) studs}. {? | $(this.details:gempieces:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s cover the fabric.} {? | $(this.details:flower:snames) | Delicate $(this.trait:flower:color) $(this.trait:flower:material) $(this.trait:flower:brief)s are tactically scattered here and there.} {? | $(this.details:lining:snames) | A $(this.trait:lining:color) $(this.trait:lining:material) lining has been sewn along the inside contours.} {? | $(this.details:trimming:snames) | A $(this.trait:trimming:color) $(this.trait:trimming:material) trimming runs along the edge.} {? | $(this.details:overlay:snames) | Some $(this.trait:overlay:color) $(this.trait:overlay:material) covers the outside of the piece.} {? | $(this.details:ruffle:snames) | Frilled $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles embellish the garment.} {? | $(this.details:lace:snames) | The $(this.trait:brief) is decorated with a $(this.trait:lace:color) $(this.trait:lace:material) lace.} {? | $(this.details:fringe:snames) | {? | $(this.details:lace:snames) | and a |The $(this.trait:brief) is decorated with a } $(this.trait:fringe:color) $(this.trait:fringe:material) fringe.} {? | $(this.details:feather:snames) | You also note the $(this.trait:feather:color) $(this.trait:feather:type) feathers, which are carefully attached to the clothing.} {? | $(this.details:ribbon:snames) | The material is entwined with $(this.trait:ribbon:color) $(this.trait:ribbon:material) ribbons.} {? | $(this.details:buckle:snames) | The piece is finished with a set of $(this.trait:buckle:color) $(this.trait:buckle:material) buckles.} $(this.trait:examine) {? | $(this.trait:embroidery) | $(this.trait:embroidery)} {? | $(this.trait:painting) | $(this.trait:painting)} <makers-mark/> <sbr/> <quality-full/>
          </Base:Description>
          <Base:Description type="look">
             A pair of {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) } {? | $(this.trait:ribbon:material) | beribboned } {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } $(this.trait:brief){? | $(this.details:button:snames) | secured with $(this.trait:buttons:color) $(this.trait:buttons:material) $(this.trait:buttons:type) buttons}{? | $(this.details:bead:snames) | adorned with $(this.trait:bead:color) $(this.trait:bead:material) $(this.trait:bead:shape) beads}{? | $(this.details:paillette:snames) | sparkling with $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes}{? | $(this.details:stud:snames) | reinforced with $(this.trait:stud:color) $(this.trait:stud:material) studs}. {? | $(this.details:gempieces:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s cover the fabric.} {? | $(this.details:flower:snames) | Delicate $(this.trait:flower:color) $(this.trait:flower:material) $(this.trait:flower:brief)s are tactically scattered here and there.} {? | $(this.details:lining:snames) | A $(this.trait:lining:color) $(this.trait:lining:material) lining has been sewn along the inside contours.} {? | $(this.details:trimming:snames) | A $(this.trait:trimming:color) $(this.trait:trimming:material) trimming runs along the edge.} {? | $(this.details:overlay:snames) | Some $(this.trait:overlay:color) $(this.trait:overlay:material) covers the outside of the piece.} {? | $(this.details:ruffle:snames) | Frilled $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles embellish the garment.} {? | $(this.details:lace:snames) | The $(this.trait:brief) is decorated with a $(this.trait:lace:color) $(this.trait:lace:material) lace.} {? | $(this.details:fringe:snames) | {? | $(this.details:lace:snames) | and a |The $(this.trait:brief) is decorated with a } $(this.trait:fringe:color) $(this.trait:fringe:material) fringe.} {? | $(this.details:feather:snames) | You also note the $(this.trait:feather:color) $(this.trait:feather:type) feathers, which are carefully attached to the clothing.} {? | $(this.details:ribbon:snames) | The material is entwined with $(this.trait:ribbon:color) $(this.trait:ribbon:material) ribbons.} {? | $(this.details:buckle:snames) | The piece is finished with a set of $(this.trait:buckle:color) $(this.trait:buckle:material) buckles.} $(this.trait:examine) {? | $(this.trait:embroidery) | $(this.trait:embroidery)} {? | $(this.trait:painting) | $(this.trait:painting)}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bead" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:bead:color) | none | gaudy | $(this.trait:bead:color) }{? equal | $(this.trait:bead:material) | none | gaudy | $(this.trait:bead:material) } $(this.trait:bead:shape) beads
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:bead:color) | none | gaudy | $(this.trait:bead:color) } {? equal | $(this.trait:bead:material) | none | gaudy | $(this.trait:bead:material) } $(this.trait:bead:shape) beads adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="button" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:buttons:color) | none | gaudy | $(this.trait:buttons:color) }{? equal | $(this.trait:buttons:material) | none | gaudy | $(this.trait:buttons:material) } {? equal | $(this.trait:buttons:type) | none | gaudy | $(this.trait:buttons:type) } buttons
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:buttons:color) | none | gaudy | $(this.trait:buttons:color) } {? equal | $(this.trait:buttons:material) | none | gaudy | $(this.trait:buttons:material) } {? equal | $(this.trait:buttons:type) | none | gaudy | $(this.trait:buttons:type) } buttons adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="feather" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:feather:color) $(this.trait:feather:type) feathers of a $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:feather:color) $(this.trait:feather:type) feathers decorate this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flower" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:flower:color) | none | fake | $(this.trait:flower:color) }{? equal | $(this.trait:flower:material) | none | fake | $(this.trait:flower:material) } $(this.trait:flower:brief)s
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:flower:color) | none | fake | $(this.trait:flower:color) } {? equal | $(this.trait:flower:material) | none | fake | $(this.trait:flower:material) } $(this.trait:flower:brief)s adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fringe" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:fringe:color) | none || $(this.trait:fringe:color) } {? equal | $(this.trait:fringe:material) | none || $(this.trait:fringe:material) } fringe
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:fringe:color) | none || $(this.trait:fringe:color) } {? equal | $(this.trait:fringe:material) | none || $(this.trait:fringe:material) } fringe decorating this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gempieces" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) }{? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material) } gems
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) } {? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material) } gems adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lace" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.trait:lace:color) $(this.trait:lace:material) lace on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:lace:color) $(this.trait:lace:material) lace on the $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lining" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:lining:color) | none | soft | $(this.trait:lining:color) } {? equal | $(this.trait:lining:material) | none | soft | $(this.trait:lining:material) } lining inside the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A length of {? equal | $(this.trait:lining:color) | none | soft | $(this.trait:lining:color) } {? equal | $(this.trait:lining:material) | none | soft | $(this.trait:lining:material) } lining inside the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="overlay" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:overlay:color) | none | soft | $(this.trait:overlay:color) } {? equal | $(this.trait:overlay:material) | none | soft | $(this.trait:overlay:material) } covering the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A length of {? equal | $(this.trait:overlay:color) | none | soft | $(this.trait:overlay:color) } {? equal | $(this.trait:overlay:material) | none | soft | $(this.trait:overlay:material) } covering the $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="paillette" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes on the $(this.details:default:descriptions:brief)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ribbon" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:ribbon:color) | none | | $(this.trait:ribbon:color) }{? equal | $(this.trait:flower:material) | none | | $(this.trait:ribbon:material) } ribbons
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:ribbon:color) | none | | $(this.trait:ribbon:color) } {? equal | $(this.trait:ribbon:material) | none | | $(this.trait:ribbon:material) } ribbons decorating this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ruffle" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles embellish this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stud" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:stud:color) | none | blunt | $(this.trait:stud:color) } {? equal | $(this.trait:stud:material) | none | blunt | $(this.trait:stud:material) } studs on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             Some {? equal | $(this.trait:stud:color) | none | blunt | $(this.trait:stud:color) } {? equal | $(this.trait:stud:material) | none | blunt | $(this.trait:stud:material) } studs adorn this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="trimming" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             the $(this.trait:trimming:color) $(this.trait:trimming:material) trimming on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:trimming:color) $(this.trait:trimming:material) trimming decorates this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:bead">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "bead" \}), (\{ "pname", "beads" \}) \}), "properties":(\{ (\{ "trait:color", "trait:bead:color" \}), (\{ "trait:material", "trait:bead:material" \}), (\{ "trait:brief", "trait:bead:brief" \}), (\{ "trait:type", "trait:bead:shape" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:button">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "button" \}), (\{ "pname", "buttons" \}) \}), "properties":(\{ (\{ "trait:color", "trait:buttons:color" \}), (\{ "trait:material", "trait:buttons:material" \}), (\{ "trait:buttons:type", "trait:buttons:type" \}), (\{ "trait:type", "trait:buttons:type" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:feather">
         ([ "adj-list-default":(\{ "feathered" \}), "adj-prop":(\{ "trait:color", "trait:type" \}), "names":(\{ (\{ "sname", "feather" \}), (\{ "pname", "feathers" \}) \}), "properties":(\{ (\{ "trait:color", "trait:feather:color" \}), (\{ "trait:type", "trait:feather:type" \}), (\{ "trait:quality", "trait:feather:quality" \}) \}), "skill":"tailoring" ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:flower">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "flower" \}), (\{ "pname", "flowers" \}) \}), "properties":(\{ (\{ "trait:color", "trait:flower:color" \}), (\{ "trait:material", "trait:flower:material" \}), (\{ "trait:brief", "trait:flower:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:fringe">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "fringe" \}), (\{ "pname", "fringes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:fringe:color" \}), (\{ "trait:material", "trait:fringe:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:gempieces">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "gem" \}), (\{ "pname", "gems" \}) \}), "properties":(\{ (\{ "trait:color", "trait:gem:color" \}), (\{ "trait:material", "trait:gem:material" \}), (\{ "trait:gem:type", "trait:gem:type" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lace">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lace" \}), (\{ "pname", "laces" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lace:color" \}), (\{ "trait:material", "trait:lace:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lining">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lining" \}), (\{ "pname", "linings" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lining:color" \}), (\{ "trait:material", "trait:lining:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:overlay">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "overlay" \}), (\{ "pname", "overlays" \}) \}), "properties":(\{ (\{ "trait:color", "trait:overlay:color" \}), (\{ "trait:material", "trait:overlay:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:paillette">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "paillette" \}), (\{ "pname", "paillettes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:paillette:color" \}), (\{ "trait:material", "trait:paillette:material" \}), (\{ "trait:brief", "trait:paillette:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:ribbon">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "ribbon" \}), (\{ "pname", "ribbons" \}) \}), "properties":(\{ (\{ "trait:color", "trait:ribbon:color" \}), (\{ "trait:material", "trait:ribbon:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:ruffle">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "ruffle" \}), (\{ "pname", "ruffles" \}) \}), "properties":(\{ (\{ "trait:color", "trait:ruffle:color" \}), (\{ "trait:material", "trait:ruffle:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:stud">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "stud" \}), (\{ "pname", "studs" \}) \}), "properties":(\{ (\{ "trait:color", "trait:stud:color" \}), (\{ "trait:material", "trait:stud:material" \}), (\{ "trait:brief", "trait:stud:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:trimming">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "trimming" \}), (\{ "pname", "trimmings" \}) \}), "properties":(\{ (\{ "trait:color", "trait:trimming:color" \}), (\{ "trait:material", "trait:trimming:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:basematerial">
         "cloth"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "garment"
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:embroider-dob">
         \<Allegory:Lib:Crafting:Custom:Embroider\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:engrave-dob">
         X[M] EmitTo(\$actor, "You cannot engrave that.");      
      
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:paint-iob">
         X[M] if((sizeof(Match(\$actor, "paint")) == 0) \&\& (sizeof(Match(\$actor, "paintbrush")) == 0)) \{                         
  EmitTo(\$actor, "You need a paintbrush and some paint.");                         
  return FALSE;                         
\} else if(sizeof(Match(\$actor, "paintbrush")) == 0) \{                         
  EmitTo(\$actor, "You need a paintbrush.");                         
  return FALSE;                         
\} else if(sizeof(Match(\$actor, "paint")) == 0) \{                         
  EmitTo(\$actor, "You need some paint.");                         
  return FALSE;                         
\}        
   
if(\$this."base:environment" != \$actor) \{   
  EmitTo(\$actor, "You must be holding " + Describe(\$this, nil, \$actor) + " to paint on it.");   
  return FALSE;   
\}   
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:fit-dob">
         X[M] /* fitting the clothes to a specific person */          
          
object database;          
database = \$\{Allegory:Lib:Crafting:Clothing:FittingDB\};          
          
/* sanity check */          
if(this."trait:nofit") return TRUE;          
          
if(sizeof(\$dob) != 1) \{          
 EmitTo(\$actor, "Please only attempt to fit one garment at a time.");          
 return FALSE;          
\}          
          
if(!this."base:worn-by") \{          
 EmitTo(\$actor, "How can you fit "+Describe(this, nil, \$actor)+" while nobody is wearing it?");          
 return FALSE;          
\}          
          
if(FALSE \&\& this."base:worn-by" == \$actor) \{          
 EmitTo(\$actor, "You can't fit "+Describe(this, nil, \$actor)+" yourself! You'll need someone else to fit it for you.");          
 return FALSE;          
\}          
          
if(this."trait:fit") \{          
 if(this."base:worn-by" == this."trait:fittedto") \{          
  EmitTo(\$actor, Describe(this, nil, \$actor)+" has already been fitted.");          
  return FALSE;          
 \} else \{          
  this."trait:fittedto" = this."base:worn-by";          
  EmitTo(\$actor, "You adjust the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".");          
  EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, this."base:worn-by")+" to suit you.");          
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".", \$actor, this."base:worn-by");          
 \}          
\}          
        
/*        
\$skill1 = Int(\$actor."skill:career:tailor");          
\$skill2 = Int(\$actor."skill:career:seamstress");          
          
if(\$skill1 \>= \$skill2) \{          
    \$skill = \$skill1;          
\} else \{          
    \$skill = \$skill2;          
\}         
*/      
      
if(Str(\$actor."trait:class1") == "seamstress" \|\| Str(\$actor."trait:class2") == "seamstress") \{      
    \$skill = Int(\$actor."skill:alteration:tailoring");       
\} else \{      
    \$skill = 0;      
\}      
          
\$skill *= 2;          
          
/* \$skill = Int(\$actor."skill:alteration:tailoring")+Int(\$actor."career:alteration:tailoring"); */          
          
if(\$(raw-evoke)) \{          
 \$tmp = Get(database, \$(raw-evoke));          
 if(\$tmp) \{          
  /* found a change to make */          
  if(\$tmp["skill"] \&\& \$tmp["skill"] \> \$skill) \{          
   EmitTo(\$actor, "You don't have enough skill to fit "+Describe(this, nil, \$actor)+" in that way.");          
   return FALSE;          
  \}          
  /* no further objections. Make the change. */          
  EmitTo(\$actor, "You adjust "+Describe(this, nil, \$actor)+" to be "+\$(raw-evoke)+".");          
  if (\$actor != this."base:worn-by") \{          
    EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts "+Describe(this, nil, this."base:worn-by")+" to be "+\$(raw-evoke)+".");          
  \}          
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts "+Describe(this, \$actor)+" to be "+\$(raw-evoke)+".", \$actor, this."base:worn-by");          
          
  /* set the new fit */          
  this."trait:fit" = \$(raw-evoke);          
  this."trait:fittedto" = this."base:worn-by";          
          
  /* and set the adjectives */          
  \$words = explode(\$(raw-evoke), " ");          
  for(\$i = 0; \$i \< sizeof(\$words); \$i++)          
   Set(this, "details:default:adjective:" + lower_case(\$words[\$i])+":local", 1);          
          
  return FALSE;          
 \}          
\}          
          
/* list fitted options */          
\$options = (\{ \});          
\$tmp = Get(database, "*");          
\$indices = map_indices(\$tmp);          
\$indices -= (\{ "revisions" \});          
          
for(\$i=0;\$i\<sizeof(\$indices);\$i++) \{          
 if(typeof(\$tmp[\$indices[\$i]]) == T_MAPPING \&\& (!\$tmp[\$indices[\$i]]["skill"] \|\| Int(\$tmp[\$indices[\$i]]["skill"]) \<= \$skill)) \{          
  \$options \|= (\{ \$indices[\$i] \});          
 \}          
\}          
          
if(!sizeof(\$options)) \{          
 EmitTo(\$actor, "You don't know how to fit "+Describe(this, nil, \$actor)+".");          
 return FALSE;          
\}          
          
EmitTo(\$actor, "To fit clothing to someone specific, they must be wearing the clothing. Then the command is:");          
EmitTo(\$actor, "fit "+Describe(this)+" 'STYLE");          
EmitTo(\$actor, "Your fit options are: "+implode(\$options, ", "));          
          
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:paint-iob">
         X[M] if(\$dob \&\& NRefOb(\$dob[0])) \{   
    Call(\$\{Allegory:Lib:Crafting:Custom:Painting\}, "paint", \$item: \$this, \$brief: Describe(\$dob[0]));   
    return TRUE;   
\} else \{   
    Popup(\$actor, \$\{Allegory:Lib:Crafting:Custom:Painting\}, "html:index", \$actor: \$actor, \$action: "paint", \$item: Str(\$this), \$using: Str(NRefOb(\$using[0])));   
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:bead:material">
         X[M] if(!\$this."trait:bead:material") return TRUE;            
Set(\$this, "details:bead:sname:" +Str(\$this."trait:bead:material")+ ":local", 1);            
Set(\$this, "details:bead:sname:gem:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:buttons:material">
         X[M] if(!\$this."trait:buttons:material") return TRUE;            
Set(\$this, "details:button:sname:" +Str(\$this."trait:buttons:material")+ ":local", 1);            
Set(\$this, "details:button:sname:button:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:flower:material">
         X[M] if(!\$this."trait:flower:material") return TRUE;            
Set(\$this, "details:flower:sname:" +Str(\$this."trait:flower:material")+ ":local", 1);            
Set(\$this, "details:flower:sname:flower:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:fringe:material">
         X[M] if(!\$this."trait:fringe:material") return TRUE;            
Set(\$this, "details:fringe:sname:" +Str(\$this."trait:fringe:material")+ ":local", 1);            
Set(\$this, "details:fringe:sname:fringe:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:gem:material">
         X[M] if(!\$this."trait:gem:material") return TRUE;            
Set(\$this, "details:gem:sname:" +Str(\$this."trait:gem:material")+ ":local", 1);            
Set(\$this, "details:gem:sname:gem:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:lace:material">
         X[M] if(!\$this."trait:lace:material") return TRUE;            
Set(\$this, "details:lace:sname:" +Str(\$this."trait:lace:material")+ ":local", 1);            
Set(\$this, "details:lace:sname:lace:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:overlay:material">
         X[M] if(!\$this."trait:overlay:material") return TRUE;           
Set(\$this, "details:overlay:sname:" +Str(\$this."trait:overlay:material")+ ":local", 1);           
Set(\$this, "details:overlay:sname:overlay:local", 1);           
           
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:ruffle:material">
         X[M] if(!\$this."trait:ruffle:material") return TRUE;            
Set(\$this, "details:ruffle:sname:" +Str(\$this."trait:ruffle:material")+ ":local", 1);            
Set(\$this, "details:ruffle:sname:ruffle:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:stud:material">
         X[M] if(!\$this."trait:stud:material") return TRUE;            
Set(\$this, "details:stud:sname:" +Str(\$this."trait:stud:material")+ ":local", 1);            
Set(\$this, "details:stud:sname:gem:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:trimming:material">
         X[M] if(!\$this."trait:trimming:material") return TRUE;            
Set(\$this, "details:trimming:sname:" +Str(\$this."trait:trimming:material")+ ":local", 1);            
Set(\$this, "details:trimming:sname:trimming:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1102305664, "tonyd", "X", 1102314101, "tonyd", "E", 1136534196, "tunk_bodin", "X", 1136534217, "tunk_bodin", "X", 1139196722, "tunk_bodin", "X", 1140466384, "barbra18", "E", 1172083794, "tunk_bodin", "E", 1186623913, "rorschakovacs", "E", 1186680250, "rorschakovacs", "E", 1234700526, "balkaar", "E", 1234700555, "balkaar", "E", 1234700573, "balkaar", "E", 1234700754, "balkaar", "E", 1234700777, "balkaar", "E", 1234700897, "balkaar", "E", 1234700918, "balkaar", "E", 1234702539, "balkaar", "E", 1234702854, "balkaar", "E", 1234702876, "balkaar", "E", 1234702917, "balkaar", "E", 1234703466, "balkaar", "E", 1234703576, "balkaar", "E", 1234704993, "balkaar", "E", 1234705284, "balkaar", "E", 1234720703, "balkaar", "E", 1234721410, "balkaar", "E", 1234724368, "balkaar", "E", 1234731374, "balkaar", "E", 1234731385, "balkaar", "E", 1234731390, "balkaar", "E", 1234731413, "balkaar", "E", 1234731438, "balkaar", "E", 1234731461, "balkaar", "E", 1234731491, "balkaar", "E", 1234731508, "balkaar", "E", 1234731526, "balkaar", "E", 1234732424, "balkaar", "E", 1234732452, "balkaar", "E", 1234732542, "balkaar", "E", 1234732566, "balkaar", "E", 1234732819, "balkaar", "E", 1234736743, "balkaar", "E", 1238096219, "morwenlorelie", "K", 1238266763, "morwenlorelie", "K", 1238266770, "morwenlorelie", "E", 1238266774, "morwenlorelie", "E", 1238855324, "morwenlorelie", "K", 1238855383, "morwenlorelie", "K", 1238855395, "morwenlorelie", "E", 1238855439, "morwenlorelie", "X", 1238855508, "morwenlorelie", "K", 1238855536, "morwenlorelie", "X", 1238967203, "balkaar", "E", 1238967209, "balkaar", "E", 1238967274, "balkaar", "E", 1242776570, "morwenlorelie", "K", 1249187074, "tonyd", "E", 1249187178, "tonyd", "E", 1250364103, "jominey", "E", 1250364278, "jominey", "E", 1259109988, "slurpeeslurp", "E", 1259109995, "slurpeeslurp", "E", 1259110020, "slurpeeslurp", "E", 1263293148, "slurpeeslurp", "E", 1266790062, "morwenlorelie", "K", 1271208956, "catobelpas", "E", 1283716045, "slurpeeslurp", "E", 1283716116, "slurpeeslurp", "E", 1283716400, "balkaar", "E", 1283716575, "balkaar", "E", 1283716760, "slurpeeslurp", "E", 1283719177, "rastalabor", "X", 1284321717, "jominey", "S", 1294447944, "jominey", "K", 1294447977, "jominey", "K", 1294448635, "jominey", "K", 1305339786, "jominey", "E", 1305339887, "jominey", "E", 1305416195, "jominey", "E", 1305416477, "jominey", "K", 1305422723, "jominey", "E", 1305423208, "jominey", "E", 1305493211, "slurpeeslurp", "E", 1306096628, "slurpeeslurp", "R", 1308397970, "morwenlorelie", "X", 1309384427, "morwenlorelie", "K", 1318477318, "morwenlorelie", "X", 1318477407, "morwenlorelie", "X", 1318479264, "morwenlorelie", "E", 1320070452, "morwenlorelie", "K", 1320070515, "morwenlorelie", "X", 1351095795, "lidiab", "K", 1351095849, "lidiab", "E", 1351095900, "lidiab", "E", 1363786566, "slurpeeslurp", "K", 1363786578, "slurpeeslurp", "E", 1388911010, "pp74", "K", 1390321775, "jominey", "K", 1399047236, "slurpeeslurp", "E", 1430153737, "slurpeeslurp", "E", 1433027479, "rorschakovacs", "X", 1434843086, "slurpeeslurp", "K", 1503014447, "jominey", "E", 1503014467, "jominey", "E", 1503014487, "jominey", "E", 1503015673, "jominey", "E", 1503016000, "jominey", "P", 1503016032, "jominey", "P", 1503016054, "jominey", "P", 1503016175, "jominey", "P", 1503016323, "jominey", "P", 1503016450, "jominey", "P", 1503017164, "jominey", "E", 1503018458, "jominey", "E", 1503018501, "jominey", "E", 1503018551, "jominey", "E", 1503021062, "jominey", "E", 1528325779, "jominey", "E", 1561486561, "sendnoodlez", "R", 1561486622, "sendnoodlez", "R", 1561486628, "sendnoodlez", "R", 1562091778, "sendnoodlez", "E", 1572983094, "sendnoodlez", "R", 1573059418, "sendnoodlez", "E", 1573068918, "sendnoodlez", "E", 1582856338, "sendnoodlez", "E", 1584723423, "sendnoodlez", "K", 1584723432, "sendnoodlez", "E", 1584723452, "sendnoodlez", "X", 1584723512, "sendnoodlez", "E", 1584926488, "sendnoodlez", "K", 1593964079, "sendnoodlez", "X", 1593964210, "sendnoodlez", "E", 1593964310, "sendnoodlez", "E", 1593964522, "sendnoodlez", "X", 1603745039, "sendnoodlez", "X", 1603745065, "sendnoodlez", "X", 1603745171, "sendnoodlez", "E", 1603745244, "sendnoodlez", "X", 1603745463, "sendnoodlez", "E", 1605891057, "sendnoodlez", "E", 1642032215, "sendnoodlez", "X", 1642032261, "sendnoodlez", "E", 1642191942, "sendnoodlez", "K", 1642192020, "sendnoodlez", "E", 1642192063, "sendnoodlez", "E", 1642192260, "sendnoodlez", "X", 1642192462, "sendnoodlez", "E", 1642192683, "sendnoodlez", "K", 1642192882, "sendnoodlez", "E", 1643381745, "sendnoodlez", "E", 1645763308, "ezralee", "K", 1647442484, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
