<object clone="/base/obj/thing" owner="annemairi">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="badge"/>
            <Base:SName sname="collar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="badges"/>
            <Base:PName pname="collars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } badge
          </Base:Description>
          <Base:Description type="examine">
             <describe what="$(this)" nonposs="1" cap="1"/>{? | $(this.details:lace:snames) | with {? equal | $(this.trait:lace:color) | none || $(this.trait:lace:color) }{? equal | $(this.trait:lace:material) | none || $(this.trait:lace:material) } lace decoration}.{? equal | $(this.trait:badge:material) | none || It bears a {? equal | $(this.trait:badge:shape) | none | uncut | $(this.trait:badge:shape) }{? equal | $(this.trait:badge:material) | none || $(this.trait:badge:material) }badge with a {? equal | $(this.trait:clasp:material) | none || $(this.trait:clasp:material) }clasp{? equal | $(this.trait:etching) | none |.|, etched with $(this.trait:etching).}{? | $(this.is:engraved) | It has been engraved on the back side.}}<br/> This is a collar that fastens around the neck. <sbr/> $(this.quality_description)
          </Base:Description>
          <Base:Description type="look">
             <describe what="$(this)" nonposs="1" cap="1"/>{? | $(this.details:lace:snames) | with {? equal | $(this.trait:lace:color) | none || $(this.trait:lace:color) }{? equal | $(this.trait:lace:material) | none || $(this.trait:lace:material) } lace decoration}. {? equal | $(this.trait:badge:material) | none || It bears a {? equal | $(this.trait:badge:shape) | none | uncut | $(this.trait:badge:shape) }{? equal | $(this.trait:badge:material) | none || $(this.trait:badge:material) }badge with a {? equal | $(this.trait:clasp:material) | none || $(this.trait:clasp:material) }clasp{? equal | $(this.trait:etching) | none |.|, etched with $(this.trait:etching).}{? | $(this.is:engraved) | It has been engraved on the back side.}}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="badge" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="badge"/>
          <Base:Adjective adjective="collar"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:badge:shape) $(this.trait:badge:material) badge of the badge
          </Base:Description>
          <Base:Description type="look">
             The badge's {? equal | $(this.trait:badge:shape) | none | uncut | $(this.trait:badge:shape) }{? equal | $(this.trait:badge:material) | none || $(this.trait:badge:material) }badge with a {? equal | $(this.trait:clasp:material) | none || $(this.trait:clasp:material) }clasp{? equal | $(this.trait:etching) | none |.|, etched with $(this.trait:etching).}{? | $(this.is:engraved) | It has been engraved on the back side.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lace" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="badge"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:lace:color) | none || $(this.trait:lace:color) }{? equal | $(this.trait:lace:material) | none || $(this.trait:lace:material) }lace
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:lace:color) | none || $(this.trait:lace:color) }{? equal | $(this.trait:lace:material) | none || $(this.trait:lace:material) }lace on this $(this.details:default:descriptions:brief) adds decoration.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="neck"/>
      <Base:Covered value="throat"/>
      <Base:Covered value="chest"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="alteration:ignorealterationchecks">
         0
      </Core:Property>
      <Core:Property property="export:alteration:add:default:badge">
         ([ "adj-list-default":(\{ "set" \}), "adj-prop":(\{ "trait:material", "trait:shape", "trait:shape", "trait:badge:shape", "trait:etching", "trait:badge:material", "trait:clasp:material" \}), "names":(\{ (\{ "sname", "badge" \}), (\{ "pname", "badges" \}) \}), "properties":(\{ (\{ "trait:shape", "trait:badge:shape" \}), (\{ "trait:material", "trait:badge:material" \}), (\{ "trait:clasp:material", "trait:clasp:material" \}), (\{ "trait:etching", "trait:etching" \}), (\{ "is:engraved", "is:engraved" \}), (\{ "details:default:description:writing", "details:default:description:writing" \}), (\{ "details:default:description:writing", "details:badge:description:writing" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lace">
         ([ "adj-list-default":(\{ "lacy" \}), "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lace" \}), (\{ "pname", "laces" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lace:color" \}), (\{ "trait:material", "trait:lace:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:lace:dye">
         ([ "adj-prop":(\{ "trait:color" \}), "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:lace:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:is:engravable">
         1
      </Core:Property>
      <Core:Property property="export:trait:badge:material">
         "none"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "badge"
      </Core:Property>
      <Core:Property property="export:trait:clasp:material">
         "none"
      </Core:Property>
      <Core:Property property="export:trait:etching">
         "none"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "badge"
      </Core:Property>
      <Core:Property property="export:trait:shape">
         "none"
      </Core:Property>
      <Core:Property property="merry:react-pre:touch-dob">
         X[M] if(\$actor != \$this."base:environment") return TRUE;            
EmitTo(\$actor, "The choker begins to flare briefly and you feel as if your emotions are being supressed.");            
EmitIn(\$actor."base:environment", Describe(\$this)+ " suddenly begins to flare brightly around " +Describe(\$actor)+"'s neck. Within mere moments, " +\$actor."trait:Nominative"+ " appears to be to be in a state of emotionlessness.", \$actor);
      </Core:Property>
      <Core:Property property="merry:react-pre:wear-dob">
         X[S] /* Determine the gender of the actor */
if(\$(actor.)"base:gender" == 2) \{
    gender = "female";
\} else \{
    gender = "male";
\}
//* Choose the appropriate title based on gender */
if(gender == "male") \{
    title = (\{ "Guardsman" \});
\} else \{
    title = (\{ "Guardswoman" \});
Set(\$(actor), "details:default:adjectives:" + \$(actor.)"trait:title", TRUE);
break;
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:badge:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "badge");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:badge:shape">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "badge");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:clasp:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "badge");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:etching">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "badge");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:lace:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "lace");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1102312379, "tonyd", "X", 1102312418, "tonyd", "X", 1102312676, "tonyd", "E", 1102312804, "tonyd", "E", 1102312946, "tonyd", "E", 1102312971, "tonyd", "E", 1102313360, "tonyd", "E", 1102313385, "tonyd", "E", 1102313698, "tonyd", "E", 1102313730, "tonyd", "E", 1102313760, "tonyd", "E", 1102313778, "tonyd", "E", 1102313910, "tonyd", "E", 1102314969, "tonyd", "E", 1102314986, "tonyd", "E", 1102315252, "tonyd", "E", 1102315331, "tonyd", "E", 1102315419, "tonyd", "E", 1102315469, "tonyd", "E", 1102315509, "tonyd", "E", 1102315653, "tonyd", "E", 1102315689, "tonyd", "E", 1102315913, "tonyd", "E", 1102315944, "tonyd", "E", 1102316160, "tonyd", "E", 1102722113, "tonyd", "E", 1102722121, "tonyd", "E", 1102723433, "tonyd", "E", 1102723452, "tonyd", "E", 1102725463, "tonyd", "E", 1102725971, "tonyd", "E", 1102727694, "tonyd", "E", 1102728027, "tonyd", "E", 1102737382, "tonyd", "E", 1102818089, "tonyd", "E", 1102823410, "tonyd", "E", 1102823445, "tonyd", "E", 1102824774, "tonyd", "E", 1102825200, "tonyd", "E", 1102825270, "tonyd", "E", 1102825861, "tonyd", "E", 1103000935, "tonyd", "E", 1103002715, "tonyd", "E", 1103002786, "tonyd", "E", 1103069521, "tonyd", "E", 1103070439, "tonyd", "E", 1103071522, "tonyd", "E", 1103072176, "tonyd", "E", 1103072602, "tonyd", "E", 1103072808, "tonyd", "E", 1103078278, "tonyd", "E", 1103084033, "tonyd", "E", 1103084078, "tonyd", "E", 1103084148, "tonyd", "E", 1103084391, "tonyd", "E", 1103084493, "tonyd", "E", 1103084608, "tonyd", "E", 1103084651, "tonyd", "E", 1103084725, "tonyd", "E", 1103084822, "tonyd", "E", 1103084892, "tonyd", "E", 1103084923, "tonyd", "E", 1103084953, "tonyd", "E", 1103085056, "tonyd", "E", 1103085100, "tonyd", "E", 1103089195, "tonyd", "E", 1103091115, "tonyd", "E", 1103154368, "tonyd", "E", 1103253009, "tonyd", "E", 1103253256, "tonyd", "E", 1103253438, "tonyd", "E", 1103253537, "tonyd", "P", 1103253693, "tonyd", "P", 1103253903, "tonyd", "E", 1103253939, "tonyd", "E", 1103253967, "tonyd", "E", 1103254055, "tonyd", "P", 1107035735, "tonyd", "E", 1107050389, "tonyd", "E", 1107050526, "tonyd", "E", 1107050573, "tonyd", "E", 1119040713, "librarysage", "E", 1119040908, "librarysage", "E", 1119775042, "tonyd", "E", 1136534975, "tunk_bodin", "X", 1136537270, "tunk_bodin", "X", 1136537435, "tunk_bodin", "X", 1140410030, "tonyd", "P", 1140410061, "tonyd", "P", 1140410135, "tonyd", "P", 1140511181, "sinistrelle", "X", 1140511271, "sinistrelle", "X", 1140511324, "sinistrelle", "E", 1140511355, "sinistrelle", "E", 1140511396, "sinistrelle", "X", 1140511432, "sinistrelle", "E", 1140511496, "sinistrelle", "E", 1140511556, "sinistrelle", "E", 1140511595, "sinistrelle", "E", 1140511732, "sinistrelle", "E", 1140511760, "sinistrelle", "X", 1140512507, "sinistrelle", "E", 1140512520, "sinistrelle", "E", 1140512539, "sinistrelle", "E", 1140513128, "sinistrelle", "E", 1140922153, "tunk_bodin", "X", 1140922213, "tunk_bodin", "X", 1140922329, "tunk_bodin", "X", 1140922455, "tunk_bodin", "X", 1140922568, "tunk_bodin", "X", 1140922814, "tunk_bodin", "X", 1140922851, "tunk_bodin", "X", 1157371109, "barbra18", "X", 1157371299, "barbra18", "X", 1157371405, "barbra18", "X", 1157371449, "barbra18", "X", 1157371499, "barbra18", "X", 1157371823, "barbra18", "X", 1157371895, "barbra18", "X", 1157371955, "barbra18", "X", 1157372001, "barbra18", "X", 1157372097, "barbra18", "X", 1157372138, "barbra18", "X", 1157372237, "barbra18", "X", 1723150527, "annemairi", "E", 1723150565, "annemairi", "E", 1723150703, "annemairi", "E", 1723150736, "annemairi", "E", 1723150750, "annemairi", "E", 1723150769, "annemairi", "E", 1723150800, "annemairi", "E", 1723150828, "annemairi", "E", 1723150854, "annemairi", "E", 1723150866, "annemairi", "E", 1723150878, "annemairi", "E", 1723150885, "annemairi", "E", 1723168039, "annemairi", "E", 1723168043, "annemairi", "E", 1723168056, "annemairi", "E", 1723168113, "annemairi", "E", 1723168128, "annemairi", "E", 1723168166, "annemairi", "E", 1723168172, "annemairi", "E", 1723168836, "annemairi", "E", 1723169017, "annemairi", "K", 1723169371, "annemairi", "E", 1723169404, "annemairi", "E", 1723169448, "annemairi", "E", 1723169644, "annemairi", "E", 1723169698, "annemairi", "E", 1723169827, "annemairi", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:seesmagic">0</Core:Property>
      <Core:Property property="storyhost">0</Core:Property>
      <Core:Property property="theatre:notwhobody">0</Core:Property>
      <Core:Property property="trait:titles:valid">
         (\{ "Guardsman", "Guardswoman" \})
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
