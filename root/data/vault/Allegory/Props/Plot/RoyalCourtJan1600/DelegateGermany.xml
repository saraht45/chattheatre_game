<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lord"/>
            <Base:SName sname="valtz"/>
            <Base:SName sname="der"/>
            <Base:SName sname="kermascht"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="der"/>
          <Base:Adjective adjective="kermascht"/>
          <Base:Adjective adjective="lord"/>
          <Base:Adjective adjective="valtz"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:browshape">
         "wrinkled"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "skinny"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "scraggly"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "pale grey"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "owlish"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "grey"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "thinning"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "unruly"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "little"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "wide"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "thin"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "chiseled"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "milk white"
      </Core:Property>
      <Core:Property property="export:chargen:age">
         "73"
      </Core:Property>
      <Core:Property property="export:trait:age">
         "73"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "Lord Valtz"
      </Core:Property>
      <Core:Property property="export:trait:lastname">
         "der Kermascht"
      </Core:Property>
      <Core:Property property="export:trait:ownerone">
         \<Chatters:AE:mo:morven\>
      </Core:Property>
      <Core:Property property="export:trait:ownertwo">
         \<Chatters:AE:he:heinrich\>
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] EmitTo(\$actor, "You cannot take " + Describe(\$this)+ " because it is not yours.");        
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* Check if the actor is the controller. */        
        
if((\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo")) \{        
   if(\$evoke) \{        
        
      /* Identify the command from the actor's evoke. */        
      \$command = \$evoke[1..strlen(\$evoke)-2];        
        
       /* Select appropriate emit based on the command. */        
      if(\$command == "introduction") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " swiftly dips his torso into a short, curt bow, \\"Mein name ist Lord Valtz der Kermascht, formerly of das grund und boden Alsace.\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "thanks") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " dips his head curtly and says, \\"Danke. I thank you.\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "yes") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " curtly nods his head with a cool gaze, \\"Ja, yes. Of course.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " dips his head affirmatively with a flat expression, \\"Ja. I agree.\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " subtly nods his head, his left thumb hitched in his belt, \\"Ja, das is correct.\\" ", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "no") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " swiftly shakes his head, \\"Nein. No.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shakes his head side to side with a narrowing of the eyes, \\"Nein, of course not.\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " snorts and shakes his head, \\"Nein!\\" ", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "frown") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " twists his face into a distinct, sour frown.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " frowns distinctly, his eyes narrowing subtly.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " purses his lips before a frown colors his expression.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "smile") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " quirks the corner of his mouth upright, a smile crinkling the eyes.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " glimpses to the side, a smile sneaking across his expression.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " flashes his teeth briefly in a smile.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "angry") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " narrows his eyes, the color of his cheeks growing florid as he stews.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " briefly sucks his teeth, his expression sour and angry.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " irately sneers, his gaze angry and dark.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "happy") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " exhales with a contented expression on his face.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " idly toys with his black gold and quartz pendant necklace, his expression relaxed and observant.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smooths his hair back, enjoying the surroundings with an almost pleasant expression on his face.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "like") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " arches his eyebrows, his expression satisfied and almost impressed.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nods in approval, his expression pensive and serene.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " touches his chin, eventually nodding with a pleased expression to the face.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "dislike") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " sneers in obvious disapproval.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " makes a face, the dislike clearly plastered over his expression.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " glances to the side with a disapproving sigh.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "follow") \{           
    EmitTo(\$actor, Describe(this)+" will now follow you.");                        
    this.follow = \$actor;                     
    Social(this, "walk", nil, nil, "towards", \$actor );       
      \} else \{        
         EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      /* If the actor did not give a command, list commands to the controller. */        
      EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      EmitTo(\$actor, "You cannot control "+Describe(\$this)+".");        
\}        
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1580076586, "sendnoodlez", "R", 1580076632, "sendnoodlez", "X", 1580076684, "sendnoodlez", "K", 1580078093, "sendnoodlez", "X", 1580078921, "sendnoodlez", "E", 1580079248, "sendnoodlez", "E", 1580079340, "sendnoodlez", "E", 1580097215, "sendnoodlez", "E", 1580336800, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
