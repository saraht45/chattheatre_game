<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eoghan"/>
            <Base:SName sname="sir"/>
            <Base:SName sname="maclarnaen"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="MacLarnaen"/>
          <Base:Adjective adjective="eoghan"/>
          <Base:Adjective adjective="sir"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:browshape">
         "smooth"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "waifish"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "bushy"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "blue grey"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "wide"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "auburn"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "long"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "bristly"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "tall"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "thin"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "firm"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "prominent"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "alabaster"
      </Core:Property>
      <Core:Property property="export:chargen:age">
         "35"
      </Core:Property>
      <Core:Property property="export:trait:age">
         "35"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "Sir Eoghan"
      </Core:Property>
      <Core:Property property="export:trait:lastname">
         "MacLarnaen"
      </Core:Property>
      <Core:Property property="export:trait:ownerone">
         \<Chatters:AE:do:dominic\>
      </Core:Property>
      <Core:Property property="export:trait:ownertwo">
         \<Chatters:AE:va:valentin\>
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] EmitTo(\$actor, "You cannot take " + Describe(\$this)+ " because it is not yours.");         
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* Check if the actor is the controller. */        
        
if((\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo")) \{        
   if(\$evoke) \{        
        
      /* Identify the command from the actor's evoke. */        
      \$command = \$evoke[1..strlen(\$evoke)-2];        
        
       /* Select appropriate emit based on the command. */        
      if(\$command == "introduction") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " stammers nervously as he bows, \\"Och! I-I am Sir Eoghan M-MacLarnaen. Halo.\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "thanks") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " sheepishly flushes, his head held low, \\"Och, moran taing! Thank ye!\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "yes") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nervously bobs his head as he replies, \\"Aye, aye. Yes.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " bobs his head up and down as he nervously answers in a thick Scottish brogue, \\"Och! Aye!\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shifts his weight from side to side as he nods anxiously, \\"Aye, yes. Aye.\\" ", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "no") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " hurriedly shakes his head as he stammers a reply, \\"N-Naw...I mean no.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + "  anxiously shakes his head before replying in the negative, \\"Och, naw!\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " bites his lower lip, shaking his head no with a nervous expression on his face.", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "frown") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " looks more fearful than anything as a frown curves the corners of his mouth.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nervously fidgets as he frowns.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " subtly frowns, his forehead creased with worry.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "smile") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles sheepishly, his cheeks rosy with blush.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nervously smiles, his eyes cast to the side.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " fidgets and shifts to the side as a smile sneaks across his face.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "angry") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " crinkles his brow, his features a mixture of anger and concern.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " purses his lips, nervously covering his mouth as his eyes spark with a mixture of anxiety and anger.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " chews his lower lip with a subtle anxious anger dancing briefly over his face.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "happy") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " flashes a boyish grin, his unease disappearing for a moment as he does so.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " looks content for a moment, his features relaxing into a small smile.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shifts his feet, a momentary look of contentment flitting across his face.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "like") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " crinkles his eyes in a momentary expression of approval.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " widens his eyes, clearly approving of the events that transpired.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " gasps softly, his face betraying his approval.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "dislike") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " frowns softly, his head hanging in disapproval.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " frowns softly, his head hanging in disapproval.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " frowns softly, his head hanging in disapproval.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "follow") \{           
    EmitTo(\$actor, Describe(this)+" will now follow you.");                        
    this.follow = \$actor;                     
    Social(this, "walk", nil, nil, "towards", \$actor );       
      \} else \{        
         EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      /* If the actor did not give a command, list commands to the controller. */        
      EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      EmitTo(\$actor, "You cannot control "+Describe(\$this)+".");        
\}        
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1580076069, "sendnoodlez", "R", 1580076099, "sendnoodlez", "X", 1580076138, "sendnoodlez", "K", 1580081014, "sendnoodlez", "X", 1580081239, "sendnoodlez", "E", 1580081644, "sendnoodlez", "E", 1580081713, "sendnoodlez", "E", 1580088242, "sendnoodlez", "E", 1580097152, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
