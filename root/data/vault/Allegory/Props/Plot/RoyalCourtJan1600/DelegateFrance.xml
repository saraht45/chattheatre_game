<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="luka"/>
            <Base:SName sname="birroir"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="lord"/>
          <Base:Adjective adjective="luka"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:browshape">
         "lined"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "gaunt"
      </Core:Property>
      <Core:Property property="export:appearance:cheekshape">
         "high"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "scant"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "amber"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "bright"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "chestnut"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "close-cropped"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "ample"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "short"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "full"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "wide"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "fine"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "fair"
      </Core:Property>
      <Core:Property property="export:chargen:age">
         "45"
      </Core:Property>
      <Core:Property property="export:trait:age">
         "45"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "Lord Luka"
      </Core:Property>
      <Core:Property property="export:trait:lastname">
         "Birroir"
      </Core:Property>
      <Core:Property property="export:trait:ownerone">
         \<Chatters:AE:ni:nicolas\>
      </Core:Property>
      <Core:Property property="export:trait:ownertwo">
         \<Chatters:AE:em:emmaline\>
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] EmitTo(\$actor, "You cannot take " + Describe(\$this)+ " because it is not yours.");     
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* Check if the actor is the controller. */     
     
if((\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo")) \{     
   if(\$evoke) \{     
     
      /* Identify the command from the actor's evoke. */     
      \$command = \$evoke[1..strlen(\$evoke)-2];     
     
       /* Select appropriate emit based on the command. */     
      if(\$command == "introduction") \{     
switch(random(1)) \{    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smoothly bows, his left hand resting on his chest, \\"Bonjour. I am Lord Luka Birroir, admiral of z'e army of z'e King of France, long may He reign!\\" ", "social:third"));    
    break;    
  \}    
\}   
      \} else if(\$command == "thanks") \{     
switch(random(1)) \{    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " subtly inclines his head, murmuring in a soft French accent, \\"Merci. Z'is is appreciated more z'en you know.\\" ", "social:third"));    
    break;    
  \}    
\}   
      \} else if(\$command == "yes") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nods once, a smile tugging at the corner of his lips, \\"Oui, d'accord. Of course.\\" ", "social:third"));    
    break;     
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nods just-a-bit, expressing with a smile, \\"Oui, yes!\\" ", "social:third"));    
    break;    
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " dips his head affirmatively, \\"Yes, oui.\\" ", "social:third"));    
    break;    
  \}    
\}    
      \} else if(\$command == "no") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " gives a subtle shake of his head, commenting quietly, \\"Non.\\" ", "social:third"));    
    break;     
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shakes his head negatively, \\"Non. I do not z'ink so.\\" ", "social:third"));    
    break;    
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " pauses before shaking his head slowly, \\"Non. Of course not.\\" ", "social:third"));    
    break;    
  \}    
\}    
      \} else if(\$command == "frown") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " crinkles his nose just a bit as his face twists into a subtle frown.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " subtly arches his eyebrow as a frown colors his expression.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " looks almost disgusted as he frowns.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "smile") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " appears amused as a smile tugs at the corner of his mouth.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " curves his lips into a smile that just barely colors his expression.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " arches his eyebrow, smiling faintly as a breath of a laugh parts his lips.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "angry") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " twists his face into a scowl, his eyebrows knit together with a look of stern anger.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " narrows his eyes while licking his lower lip, anger clearly evident in his expression.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " tugs his gloves tight over his hands, his expression glowering and seething.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "happy") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " relaxes a little, quietly observing the surroundings with an aloof, content expression on his face.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " flashes a flicker of a smile as he surveys the area with a pleased expression on his face.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " glimpses side to side, surveying the surroundings with an aloof expression of contentment.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "like") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " arches his eyebrow with a look of approval clearly splashed on his face.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles despite himself, the look of approval on his face indicative of his thoughts.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " appears pleased, a smile tugging at the corner of his lips.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "dislike") \{        
switch(random(3)) \{    
  case 0:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " sneers, a look of blatant disapproval clearly displayed on his expression.", "social:third"));    
    break;    
  \}    
  case 1:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " scoffs, a look of displeasure contorting his face.", "social:third"));    
    break;   
  \}    
  default:    
  \{    
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " snorts with derision, his expression clearly disapproving.", "social:third"));    
    break;   
  \}    
\}    
      \} else if(\$command == "follow") \{        
    EmitTo(\$actor, Describe(this)+" will now follow you.");                     
    this.follow = \$actor;                  
    Social(this, "walk", nil, nil, "towards", \$actor );    
      \} else \{     
         EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}     
   \} else \{     
      /* If the actor did not give a command, list commands to the controller. */     
      EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}     
   \} else \{     
      EmitTo(\$actor, "You cannot control "+Describe(\$this)+".");     
\}     
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1579981850, "sendnoodlez", "R", 1579981869, "sendnoodlez", "X", 1579981903, "sendnoodlez", "K", 1579981952, "sendnoodlez", "X", 1579982068, "sendnoodlez", "E", 1579982172, "sendnoodlez", "E", 1579982279, "sendnoodlez", "E", 1579982508, "sendnoodlez", "E", 1579982621, "sendnoodlez", "E", 1579982832, "sendnoodlez", "E", 1579983003, "sendnoodlez", "E", 1579983182, "sendnoodlez", "E", 1580075542, "sendnoodlez", "X", 1580075908, "sendnoodlez", "X", 1580078042, "sendnoodlez", "E", 1580097098, "sendnoodlez", "E", 1580097236, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
