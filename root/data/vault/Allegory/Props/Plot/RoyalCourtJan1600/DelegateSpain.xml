<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="duke"/>
            <Base:SName sname="salazar"/>
            <Base:SName sname="arayas"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="arayas"/>
          <Base:Adjective adjective="d"/>
          <Base:Adjective adjective="d'aryas"/>
          <Base:Adjective adjective="duke"/>
          <Base:Adjective adjective="salazar"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:browshape">
         "narrow"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "toned"
      </Core:Property>
      <Core:Property property="export:appearance:earshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "scant"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "pale blue"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "bright"
      </Core:Property>
      <Core:Property property="export:appearance:facialhair">
         "beard"
      </Core:Property>
      <Core:Property property="export:appearance:faciallength">
         "silky"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "ash brown"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "shoulder-length"
      </Core:Property>
      <Core:Property property="export:appearance:hairstyle">
         "windblown"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "silky"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "average"
      </Core:Property>
      <Core:Property property="export:appearance:jawshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "full"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "full"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "chiseled"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "bronze"
      </Core:Property>
      <Core:Property property="export:chargen:age">
         "34"
      </Core:Property>
      <Core:Property property="export:trait:age">
         "34"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "Duke Salazar"
      </Core:Property>
      <Core:Property property="export:trait:lastname">
         "d'Arayas"
      </Core:Property>
      <Core:Property property="export:trait:ownerone">
         \<Chatters:AE:do:dominic\>
      </Core:Property>
      <Core:Property property="export:trait:ownertwo">
         \<Chatters:AE:di:diego\>
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] EmitTo(\$actor, "You cannot take " + Describe(\$this)+ " because it is not yours.");        
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* Check if the actor is the controller. */        
        
if((\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo")) \{        
   if(\$evoke) \{        
        
      /* Identify the command from the actor's evoke. */        
      \$command = \$evoke[1..strlen(\$evoke)-2];        
        
       /* Select appropriate emit based on the command. */        
      if(\$command == "introduction") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " sinuously bows his torso, effortlessly flashing a smile as he does, \\"Hola. I am Duke Salazar d'Arayas of Barcelona.\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "thanks") \{        
switch(random(1)) \{       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " rests his hand on his stomach, bowing subtly as he expresses, \\"Gracias. S'ank you.\\" ", "social:third"));       
    break;       
  \}       
\}      
      \} else if(\$command == "yes") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " easily dips his head as he responds, \\"Si, por supuesto...of course.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles with a sly expression, \\"Si, of course.\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nods just once before answering affirmatively, \\"Si, yes.\\" ", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "no") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " arches his eyebrow subtly before responding, \\"No, absolutamente no.\\" ", "social:third"));       
    break;        
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shakes his head side to side as he responds, \\"No. Of course not.\\" ", "social:third"));       
    break;       
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " shakes his head negatively as he responds with a casual smile, \\"Dios mio, no.\\" ", "social:third"));       
    break;       
  \}       
\}       
      \} else if(\$command == "frown") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " twists his lips into a subtle, lopsided frown.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " snorts almost soundlessly as a frown curves his lips.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " twists his lips into a frown with a scoffing sound.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "smile") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles with a sly little twist of the lips.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " splays a flash of a smile across his face with a glint in his eye.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles with a lopsided curve of the mouth.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "angry") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " narrows his eyes with a derisive scoffing sound.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " snorts, his expression cold and angry.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " sneers openly, anger flashing in his gaze.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "happy") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " tousles his hair with a relaxed motion, keenly observing the surroundings with a contented expression.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " glimpses side to side with a sly, relaxed expression on his face.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " appears to be content as he surveys the surroundings with a relaxed and languid demeanor.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "like") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " nods with a sly smile tugging at the corner of his mouth, a look of approval coloring his expression.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " gives a little scrunch of the eye, his nod of approval subtle and amused.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " cocks his head to the side, a sly smile tugging at the corner of his mouth as he approvingly dips his head.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "dislike") \{           
switch(random(3)) \{       
  case 0:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " openly scoffs, his face twisted with a look of disapproval.", "social:third"));       
    break;       
  \}       
  case 1:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " visibly rolls his eyes with an exaggerated expression of disapproval.", "social:third"));       
    break;      
  \}       
  default:       
  \{       
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " snorts with derision, his expression clearly disapproving.", "social:third"));       
    break;      
  \}       
\}       
      \} else if(\$command == "follow") \{           
    EmitTo(\$actor, Describe(this)+" will now follow you.");                        
    this.follow = \$actor;                     
    Social(this, "walk", nil, nil, "towards", \$actor );       
      \} else \{        
         EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      /* If the actor did not give a command, list commands to the controller. */        
      EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: introduction, thanks, yes, no, frown, smile, angry, happy, like, dislike, follow");\}        
   \} else \{        
      EmitTo(\$actor, "You cannot control "+Describe(\$this)+".");        
\}        
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1580075715, "sendnoodlez", "R", 1580075734, "sendnoodlez", "X", 1580075766, "sendnoodlez", "K", 1580075834, "sendnoodlez", "X", 1580077001, "sendnoodlez", "X", 1580077030, "sendnoodlez", "X", 1580077169, "sendnoodlez", "E", 1580077377, "sendnoodlez", "E", 1580077595, "sendnoodlez", "E", 1580078013, "sendnoodlez", "E", 1580088101, "sendnoodlez", "X", 1580088120, "sendnoodlez", "E", 1580097175, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
