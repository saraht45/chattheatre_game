<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="instrument"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="instruments"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="musical"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             musical instrument
          </Base:Description>
          <Base:Description type="look">
             A musical instrument.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="examples">
         X[M] switch(TRUE) \{  
  case 12:  
    if((\$description = Get(\$this, "descriptions:playing:12")) \&\& (\$descriptions)) break;  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and your fingers masterfully weave a song.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". The sounds soothe your ears and take you to a dream world.", \$actor);  
    break;  
  case 11:  
    if((\$description = Get(\$this, "descriptions:playing:11")) \&\& (\$descriptions)) break;  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and your fingers weave a song.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". The sounds soothe your ears.", \$actor);  
    break;  
  case 10:  
    if((\$description = Get(\$this, "descriptions:playing:10")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune with few unnoticable mistakes in it.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". You sense some minor mistakes, but the tune continues without interruption.", \$actor);  
    break;  
  case 9:  
    if((\$description = Get(\$this, "descriptions:playing:9")) \&\& (\$descriptions)) break;  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune with few unnoticable mistakes in it.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". You sense some minor mistakes, but the tune continues without interruption.", \$actor);  
    break;  
  case 8:  
    if((\$description = Get(\$this, "descriptions:playing:8")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune, but some mistakes are noticable.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". The tune is disturbed by some mistakes.", \$actor);  
    break;  
  case 7:  
    if((\$description = Get(\$this, "descriptions:playing:7")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune, but some mistakes are noticable.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". The tune is disturbed by some mistakes.", \$actor);  
    break;  
  case 6:  
    if((\$description = Get(\$this, "descriptions:playing:6")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune with controlled pauses in it. More practice would make it better.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". Although not very, the melody is nice to listen.", \$actor);  
    break;  
  case 5:  
    if((\$description = Get(\$this, "descriptions:playing:5")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", and begin a tune with controlled pauses in it. More practice would make it better.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". Although not very, the melody is nice to listen.", \$actor);  
    break;  
  case 4:  
    if((\$description = Get(\$this, "descriptions:playing:4")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", slowly making a tune with untimed pauses in it. You still need more practice.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". You can barely make out a tune.", \$actor);  
    break;  
  case 3:  
    if((\$description = Get(\$this, "descriptions:playing:3")) \&\& (\$descriptions)) break;  
  
   EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", slowly making a tune with untimed pauses in it. You still need more practice.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". You can barely make out a tune.", \$actor);  
    break;  
  case 2:  
    if((\$description = Get(\$this, "descriptions:playing:2")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", creating grating sounds with few notes in it. You need more practice.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". A terrible sound emanates from the instrument and the notes aren't clear.", \$actor);  
    break;  
  case 1:  
    if((\$description = Get(\$this, "descriptions:playing:1")) \&\& (\$descriptions)) break;  
  
    EmitTo(\$actor, "You skillfully pluck at " + Describe(\$this) + ", creating a horrible grating sound. You need more practice.");  
EmitIn(\$actor."base:environment", Describe (\$actor) + " plucks away at " + Describe (\$this) + ". A terrible sound emanates from the instrument.", \$actor);  
    break;  
  default:  
    \$description = \$this."descriptions:playing:0";  
break;  
\}  
return FALSE;
      </Core:Property>
      <Core:Property property="export:descriptions:playing:0">
         (\{ (\{ "\{ACTOR\|INSTRUMENT_FULL\} fills the \{room\|area\|surroundings\} with \{pleasant\|unpleasant\|lovely\|horrible\|\|\|\|\|\|\} \{sound\|noise\|music\|tunes\}.", "\{ACTOR fill\|INSTRUMENT_FULL fills\} the \{room\|area\|surroundings\} with \{pleasant\|unpleasant\|lovely\|horrible\|\|\|\|\|\|\} \{sound\|noise\|music\|tunes\}." \}) \})
      </Core:Property>
      <Core:Property property="merry:lib:play">
         X[M] /* The player wants to play this instrument */
\$result = ironclaw::roll(\$roller: \$actor, \$skills: (\{ "academic:music" \}), \$bonus: (\{ "trait:charisma", "trait:perception", "trait:intelligence" \}));

EmitTo(\$\{Chatters:AE:ro:roo\}, dump_value(\$result));

/* Give output depending how the player rolled */
switch(\$result) \{
  case 24:
    if((\$description = Get(\$this, "descriptions:playing:24")) \&\& (\$description)) break;
  case 23:
    if((\$description = Get(\$this, "descriptions:playing:23")) \&\& (\$description)) break;
  case 22:
    if((\$description = Get(\$this, "descriptions:playing:22")) \&\& (\$description)) break;
  case 21:
    if((\$description = Get(\$this, "descriptions:playing:21")) \&\& (\$description)) break;
  case 20:
    if((\$description = Get(\$this, "descriptions:playing:20")) \&\& (\$description)) break;
  case 19:
    if((\$description = Get(\$this, "descriptions:playing:19")) \&\& (\$description)) break;
  case 18:
    if((\$description = Get(\$this, "descriptions:playing:18")) \&\& (\$description)) break;
  case 17:
    if((\$description = Get(\$this, "descriptions:playing:17")) \&\& (\$description)) break;
  case 16:
    if((\$description = Get(\$this, "descriptions:playing:16")) \&\& (\$description)) break;
  case 15:
    if((\$description = Get(\$this, "descriptions:playing:15")) \&\& (\$description)) break;
  case 14:
    if((\$description = Get(\$this, "descriptions:playing:14")) \&\& (\$description)) break;
  case 13:
    if((\$description = Get(\$this, "descriptions:playing:13")) \&\& (\$description)) break;
  case 12:
    if((\$description = Get(\$this, "descriptions:playing:12")) \&\& (\$description)) break;
  case 11:
    if((\$description = Get(\$this, "descriptions:playing:11")) \&\& (\$description)) break;
  case 10:
    if((\$description = Get(\$this, "descriptions:playing:10")) \&\& (\$description)) break;
  case 9:
    if((\$description = Get(\$this, "descriptions:playing:9")) \&\& (\$description)) break;
  case 8:
    if((\$description = Get(\$this, "descriptions:playing:8")) \&\& (\$description)) break;
  case 7:
    if((\$description = Get(\$this, "descriptions:playing:7")) \&\& (\$description)) break;
  case 6:
    if((\$description = Get(\$this, "descriptions:playing:6")) \&\& (\$description)) break;
  case 5:
    if((\$description = Get(\$this, "descriptions:playing:5")) \&\& (\$description)) break;
  case 4:
    if((\$description = Get(\$this, "descriptions:playing:4")) \&\& (\$description)) break;
  case 3:
    if((\$description = Get(\$this, "descriptions:playing:3")) \&\& (\$description)) break;
  case 2:
    if((\$description = Get(\$this, "descriptions:playing:2")) \&\& (\$description)) break;
  case 1:
    if((\$description = Get(\$this, "descriptions:playing:1")) \&\& (\$description)) break;
  case 0:
    if((\$description = Get(\$this, "descriptions:playing:0")) \&\& (\$description)) break;
  default:
    \$description = \$this."descriptions:playing:12";
    break;
\}

/* Choose one of the possible descriptions */
if(!\$description) \{
  EmitTo(\$actor, "Error in musical instrument.");
  return FALSE;
\}

\$description = copy(\$description[random(sizeof(\$description))]);

if(sizeof(\$description) != 2)
\{
  EmitTo(\$actor, "Error in musical instrument return values.");
\}

/* Parse any sam */
\$description[0] = UnSAM(ParseXML(\$description[0]));
\$description[1] = UnSAM(ParseXML(\$description[1]));

/* Replace words in the string */
\$description[0] = replace_strings(\$description[0],
  "ACTOR_POSSESSIVE", \$actor."base:possessive",
  "ACTOR_OBJECTIVE", \$actor."base:objective",
  "ACTOR_PRONOUN", \$actor."base:pronoun",
  "ACTOR", Describe(\$actor),
  "INSTRUMENT_FULL", Describe(\$this),
  "INSTRUMENT", Describe(\$this, \$actor));
\$description[1] = replace_strings(\$description[1],
  "ACTOR_POSSESSIVE", "your",
  "ACTOR_OBJECTIVE", "your",
  "ACTOR_PRONOUN", "you",
  "ACTOR", "you",
  "INSTRUMENT_FULL", Describe(\$this, \$actor, \$actor),
  "INSTRUMENT", Describe(\$this, nil, nil, STYLE_NONPOSS));

EmitTo(\$actor, \$description[1]);
EmitIn(\$actor."base:environment", \$description[0], \$actor);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:play-dob">
         X[M] return Call (\$this, "play");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:condition">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1574777063, "jominey", "E", 1574777797, "jominey", "E", 1574778713, "jominey", "E", 1574778784, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
