<object clone="/base/obj/thing" owner="lidiab">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="0.8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="plate"/>
            <Base:SName sname="bruschetta"/>
            <Base:SName sname="food"/>
            <Base:SName sname="snack"/>
            <Base:SName sname="spuntino"/>
            <Base:SName sname="spuntini"/>
            <Base:SName sname="bread"/>
            <Base:SName sname="arrangement"/>
            <Base:SName sname="spuntinis"/>
            <Base:SName sname="spuntinos"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="breads"/>
            <Base:PName pname="arrangments"/>
            <Base:PName pname="spuntini"/>
            <Base:PName pname="bruschettas"/>
            <Base:PName pname="snacks"/>
            <Base:PName pname="foods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bread"/>
          <Base:Adjective adjective="layered"/>
          <Base:Adjective adjective="mozzarella"/>
          <Base:Adjective adjective="sliced"/>
          <Base:Adjective adjective="sourdough"/>
          <Base:Adjective adjective="toasted"/>
          <Base:Adjective adjective="tomato"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             plate of bruschetta spuntini
          </Base:Description>
          <Base:Description type="examine">
             A plate of bruschetta spuntini, or bruschetta 'snacks' arranged in a decorative floret shape. Each spuntino consists of a layered arrangement of sliced, roasted cherry tomato and traditional mozzarella cheese atop an angle-sliced oval of toasted sourdough bread. Each arrangement in its entirety has been graced with a fine drizzle of olive oil, and garnished with a single, curled leaf of basil upon the top.  <br/> <br/>  There appears to be $(this.trait:quantity) snacks left to <acmd tag="command" cmd="pluck plate">pluck</acmd>.
          </Base:Description>
          <Base:Description type="look">
             A plate of bruschetta spuntini, or bruschetta 'snacks' arranged in a decorative floret shape.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         3000
      </Core:Property>
      <Core:Property property="export:trait:age:fresh">
         2880
      </Core:Property>
      <Core:Property property="export:trait:age:old">
         5760
      </Core:Property>
      <Core:Property property="export:trait:age:slay">
         20160
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="export:trait:setprop">
         (\{ (\{ "details:default:adjective:bruschetta", nil \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:fresh">
         (\{ (\{ "details:default:adjective:bruschetta", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:smell", "of rotting tomatoes, and smelly cheese" \}), (\{ "trait:taste", "an arrangement of gross, with rotting tomatoes, a wilted something that tastes like it came from the sewers, and rock hard bread. You think you may have just broken a tooth!" \}), (\{ "details:default:adjective:partially", 1 \}), (\{ "details:default:adjective:eaten", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "tart, yet sweet roasted tomato, the singular scent of olive oil, and warm baked bread with a hint of salt"
      </Core:Property>
      <Core:Property property="merry:react-post:handle-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Food:Shareable:Snacks:BruschettaSingle\});
EmitIn(\$actor."base:environment", Describe(\$actor)+" takes "+Describe(\$item)+" from "+Describe(\$this, \$actor)+".");
\$item."base:environment" = \$actor;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:pluck-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Food:Shareable:Snacks:BruschettaSingle\});
EmitIn(\$actor."base:environment", Describe(\$actor)+" plucks "+Describe(\$item)+" from "+Describe(\$this, \$actor)+".");
\$item."base:environment" = \$actor;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:handle-dob">
         X[M] \$quantity = \$this."trait:quantity";
if(\$quantity == 0)\{
EmitTo(\$actor, "Who took all the bruschetta!!! It's gone.");
\$this."trait:empty" = 1;
return FALSE;
\}

\$this."trait:quantity" = \$this."trait:quantity" - 1;
return TRUE;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:pluck-dob">
         X[M] \$quantity = \$this."trait:quantity";
if(\$quantity == 0)\{
EmitTo(\$actor, "Who took all the bruschetta!!! It's gone.");
\$this."trait:empty" = 1;
return FALSE;
\}

\$this."trait:quantity" = \$this."trait:quantity" - 1;
return TRUE;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{         
if(\$this."no:slay" == 1) \{         
return FALSE;         
\} else \{  
EmitTo(\$this."base:environment", "You have eaten the last of " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");    
Slay(\$this);         
return TRUE;  
\}         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1148704399, "sinistrelle", "E", 1148704510, "sinistrelle", "E", 1148704979, "sinistrelle", "E", 1148705189, "tonyd", "P", 1148787340, "lunamoon", "E", 1148800026, "sinistrelle", "E", 1148883435, "sinistrelle", "E", 1148883458, "sinistrelle", "E", 1148883561, "sinistrelle", "E", 1149196649, "tunk_bodin", "X", 1213521304, "slurpeeslurp", "E", 1213521308, "slurpeeslurp", "E", 1213521312, "slurpeeslurp", "E", 1213521314, "slurpeeslurp", "E", 1213521316, "slurpeeslurp", "E", 1213521318, "slurpeeslurp", "E", 1213521320, "slurpeeslurp", "E", 1213521345, "slurpeeslurp", "E", 1213521351, "slurpeeslurp", "E", 1213521418, "slurpeeslurp", "E", 1213521755, "slurpeeslurp", "E", 1213521861, "slurpeeslurp", "E", 1213521876, "tonyd", "P", 1213522107, "slurpeeslurp", "E", 1213522115, "slurpeeslurp", "E", 1213522129, "slurpeeslurp", "E", 1213522133, "slurpeeslurp", "E", 1213522219, "slurpeeslurp", "E", 1213522292, "slurpeeslurp", "E", 1213522436, "slurpeeslurp", "E", 1213522460, "slurpeeslurp", "E", 1213522515, "slurpeeslurp", "E", 1213523361, "slurpeeslurp", "E", 1213523562, "slurpeeslurp", "E", 1213524228, "slurpeeslurp", "E", 1213582111, "slurpeeslurp", "E", 1214401964, "rorschakovacs", "E", 1218112699, "rorschakovacs", "E", 1218112923, "rorschakovacs", "E", 1218283095, "slurpeeslurp", "E", 1218283113, "slurpeeslurp", "E", 1218283123, "slurpeeslurp", "E", 1218283141, "slurpeeslurp", "E", 1218283144, "slurpeeslurp", "E", 1218283162, "slurpeeslurp", "E", 1218283418, "slurpeeslurp", "E", 1218283479, "slurpeeslurp", "E", 1218283538, "slurpeeslurp", "E", 1218283670, "slurpeeslurp", "E", 1218283723, "slurpeeslurp", "E", 1218283845, "slurpeeslurp", "E", 1218283856, "slurpeeslurp", "E", 1218283921, "slurpeeslurp", "E", 1218283924, "slurpeeslurp", "E", 1218283942, "slurpeeslurp", "E", 1263585146, "slurpeeslurp", "E", 1263585276, "slurpeeslurp", "E", 1263585375, "slurpeeslurp", "E", 1263585397, "slurpeeslurp", "E", 1263585709, "slurpeeslurp", "E", 1263585723, "slurpeeslurp", "E", 1263585735, "slurpeeslurp", "E", 1395859064, "slurpeeslurp", "K", 1395859301, "slurpeeslurp", "E", 1395859677, "slurpeeslurp", "E", 1395860109, "slurpeeslurp", "E", 1395860222, "slurpeeslurp", "E", 1395863004, "slurpeeslurp", "E", 1428022028, "slurpeeslurp", "E", 1434779182, "slurpeeslurp", "E", 1513391963, "jominey", "K", 1513392014, "jominey", "K", 1513392034, "jominey", "E", 1513392050, "jominey", "E", 1519981979, "lidiab", "E", 1519982365, "lidiab", "E", 1519982401, "lidiab", "R", 1519982461, "lidiab", "E", 1519982500, "lidiab", "E", 1519982551, "lidiab", "E", 1519982608, "lidiab", "E", 1519983945, "lidiab", "E", 1519984067, "lidiab", "K", 1519984970, "lidiab", "R", 1519984974, "lidiab", "E", 1519985696, "lidiab", "E", 1519985810, "lidiab", "E", 1519985900, "lidiab", "K", 1519986539, "lidiab", "E", 1519989539, "lidiab", "K", 1519989568, "lidiab", "K", 1519989631, "lidiab", "K", 1519989679, "lidiab", "K", 1593435510, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:old:brief">
         "a rotting plate of bruschetta spuntinos"
      </Core:Property>
      <Core:Property property="trait:old:examine">
         "A plate of what once were bruschetta spuntino snacks. Still arranged in their floret pattern, that is all the resemblance they bear to their former glory. Wilted basil leaves look like slimy seaweed, atop what you think may have once been tomatoes, but now quite possibly resemble bloody worms. Rock hard bread finishes this fancy feast, that looks hard enough to hurt, if thrown.  \\r\\n There appears to be \$(this.trait:quantity) bruschetta snacks left."
      </Core:Property>
      <Core:Property property="trait:old:look">
         "A plate of rotten, smelly bruschetta spuntinos."
      </Core:Property>
      <Core:Property property="trait:old:variant">
         "partially eaten"
      </Core:Property>
      <Core:Property property="trait:quantity">12</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
