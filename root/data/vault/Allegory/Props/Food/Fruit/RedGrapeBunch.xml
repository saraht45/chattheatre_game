<object clone="/base/obj/thing" owner="lunamoon">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:Fruit:UrFruitBundle)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bunch"/>
            <Base:SName sname="food"/>
            <Base:SName sname="grape"/>
            <Base:SName sname="vine"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bunches"/>
            <Base:PName pname="foods"/>
            <Base:PName pname="grapes"/>
            <Base:PName pname="vines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="grape"/>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bunch of red grapes on a vine
          </Base:Description>
          <Base:Description type="examine">
             A small bunch of grapes hanging from a thin brown vine. This healthy food is comprised of a short, thin stem with many thinner branches jutting out of its sides with ripe red grapes dangling from them. <sbr/> This plant has $[if($this."trait:quantity" == 0) { return "no grapes"; } else if ($this."trait:quantity" == 1) { return "one grape"; } else { return desc_cardinal($this."trait:quantity")+ " grapes"; }] ready to be picked.
          </Base:Description>
          <Base:Description type="look">
             A bunch of red grapes hanging from a thin, brown vine.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         800
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         15
      </Core:Property>
      <Core:Property property="merry:react:pick-dob">
         X[M] /* check there are grapes available */ 
if(\$this."trait:quantity" \< 1) \{ 
  EmitTo(\$actor, "There are no grapes left on your "+Describe(\$this)+"."); 
  return FALSE; 
\} 
 
/* reduce the number of grapes on the bunch */ 
\$this."trait:quantity" -= 1; 
 
/* create the grape object and give it to the player */ 
\$object = Spawn(\$\{Allegory:Props:Food:Fruit:RedGrapeSingle\}); \$object."base:environment" = \$actor; 
 
/* emit message to player and room */ 
EmitTo(\$actor, "You pick "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+"."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" picks "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pick-what">
         X[M] /* check there are grapes available */ 
if(\$this."trait:quantity" \< 1) \{ 
  EmitTo(\$actor, "There are no grapes left on your "+Describe(\$this)+"."); 
  return FALSE; 
\} 
 
/* reduce the number of grapes on the bunch */ 
\$this."trait:quantity" -= 1; 
 
/* create the grape object and give it to the player */ 
\$object = Spawn(\$\{Allegory:Props:Food:Fruit:RedGrapeSingle\}); \$object."base:environment" = \$actor; 
 
/* emit message to player and room */ 
EmitTo(\$actor, "You pick "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+"."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" picks "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{         
if(\$this."no:slay" == 1) \{         
return FALSE;         
\} else \{  
EmitTo(\$this."base:environment", "You have eaten the last grape from " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");    
Slay(\$this);         
return TRUE;  
\}         
\}

/* stop when we hit 15 grapes on the bunch */ 
/* if(\$this."trait:quantity" \>= 35) return TRUE;  */
 
/* wait a while, then add a grape */ 
/*
\$delay((2*24*60), TRUE, "9d85"); 
if(\$this."trait:quantity" \< 15) 
  \$this."trait:quantity" += 1; 
*/
 
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1170616551, "necate", "E", 1233654151, "morwenlorelie", "R", 1286652628, "slurpeeslurp", "E", 1286652637, "slurpeeslurp", "E", 1286652638, "slurpeeslurp", "E", 1286652648, "slurpeeslurp", "R", 1286655942, "slurpeeslurp", "E", 1307648741, "slurpeeslurp", "E", 1312585998, "tunk_bodin", "X", 1434778650, "slurpeeslurp", "E", 1434778666, "slurpeeslurp", "E", 1497836213, "jominey", "K", 1579720960, "jominey", "E", 1579721015, "jominey", "E", 1584314795, "heavenlyheather", "K", 1587064766, "sendnoodlez", "R", 1593369909, "jominey", "E", 1593444153, "jominey", "E", 1599882405, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
