<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:Cooking:Meat:UrMeat)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="meat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="meats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="animal"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:state) $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             <a_or_an>$(this.trait:state) $(this.trait:brief)</a_or_an>. $(this.trait:examine) <quality-full/>
          </Base:Description>
          <Base:Description type="look">
             <a_or_an>$(this.trait:state) $(this.trait:brief)</a_or_an>. $(this.trait:look)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react:cut-dob">
         X[M] object meat;

if(!\$this."trait:slice") return TRUE;

meat = Spawn(\$this."trait:slice");
meat."base:environment" = \$actor;

meat."trait:state" = \$this."trait:state";
meat."trait:taste" = \$this."trait:taste";
meat."trait:smell" = \$this."trait:smell";

if(this."trait:state" == "roasted") \{
    meat."trait:look" = meat."trait:cooked:look";
    meat."trait:examine" = meat."trait:cooked:examine";
\}

meat."consumable:effects" = \$this."consumable:effects";

\$this."trait:slice:quantity" = Int(\$this."trait:slice:quantity") - 1;

if(Int(\$this."trait:slice:quantity") \<= 0) \{
    EmitTo(\$actor, "You cut the final " + replace_strings(Describe(meat, nil, nil, STYLE_NONPOSS), "a ", "", "an ", "") + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".");
    EmitIn(\$actor."base:environment", Describe(\$actor) + " cuts the final " + replace_strings(Describe(meat, nil, nil, STYLE_NONPOSS), "a ", "", "an ", "") + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", \$actor);
    Slay(\$this);
    return FALSE;
\}

\$this."trait:quantity" = Int(\$this."trait:quantity") - Int(meat."trait:quantity");

EmitTo(\$actor, "You cut " + Describe(meat, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".");
EmitIn(\$actor."base:environment", Describe(\$actor) + " cuts " + Describe(meat, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", \$actor);

\$this."trait:sliced" = 1;



return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:slice-dob">
         X[M] object meat;

if(!\$this."trait:slice") return TRUE;

meat = Spawn(\$this."trait:slice");
meat."base:environment" = \$actor;

meat."trait:state" = \$this."trait:state";
meat."trait:taste" = \$this."trait:taste";
meat."trait:smell" = \$this."trait:smell";

if(this."trait:state" == "roasted") \{
    meat."trait:look" = meat."trait:cooked:look";
    meat."trait:examine" = meat."trait:cooked:examine";
\}

meat."consumable:effects" = \$this."consumable:effects";

\$this."trait:slice:quantity" = Int(\$this."trait:slice:quantity") - 1;

if(Int(\$this."trait:slice:quantity") \<= 0) \{
    EmitTo(\$actor, "You cut the final " + replace_strings(Describe(meat, nil, nil, STYLE_NONPOSS), "a ", "", "an ", "") + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".");
    EmitIn(\$actor."base:environment", Describe(\$actor) + " cuts the final " + replace_strings(Describe(meat, nil, nil, STYLE_NONPOSS), "a ", "", "an ", "") + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", \$actor);
    Slay(\$this);
    return FALSE;
\}

\$this."trait:quantity" = Int(\$this."trait:quantity") - Int(meat."trait:quantity");

EmitTo(\$actor, "You cut " + Describe(meat, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".");
EmitIn(\$actor."base:environment", Describe(\$actor) + " cuts " + Describe(meat, nil, nil, STYLE_NONPOSS) + " from " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".", \$actor);

\$this."trait:sliced" = 1;

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1587006818, "jominey", "E", 1587007244, "jominey", "E", 1587600987, "jominey", "E", 1587601034, "jominey", "E", 1587601043, "jominey", "E", 1588969247, "jominey", "K", 1588969663, "jominey", "E", 1588970468, "jominey", "E", 1588970673, "jominey", "E", 1588970821, "jominey", "E", 1588976672, "jominey", "E", 1588976686, "jominey", "E", 1588979386, "jominey", "E", 1588979399, "jominey", "E", 1593453429, "jominey", "R", 1595463678, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
