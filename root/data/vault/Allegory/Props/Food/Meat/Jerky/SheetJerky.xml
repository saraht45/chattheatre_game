<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:UrFood)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="food"/>
            <Base:SName sname="sheet"/>
            <Base:SName sname="foodstuff"/>
            <Base:SName sname="edibles"/>
            <Base:SName sname="jerky"/>
            <Base:SName sname="meat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foods"/>
            <Base:PName pname="sheets"/>
            <Base:PName pname="foodstuffs"/>
            <Base:PName pname="jerkies"/>
            <Base:PName pname="meats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             $(this.trait:examine){? | $(this.trait:eaten) | Someone appears to have <eaten what="$(this)"/>it.} There appears to be $(this.trait:quantity) strips left on the jerky.
          </Base:Description>
          <Base:Description type="look">
             $(this.trait:look){? | $(this.trait:eaten) | Someone appears to have <eaten what="$(this)"/>it.}
          </Base:Description>
          <Base:Description type="pbrief">
             sheets of jerky
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         4000
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "sheet of beef jerky"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "A good-sized sheet of juicy beef jerky, ideal for tearing into strips."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "A good-sized sheet of beef jerky."
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:brief", "rock-hard sheet of jerky" \}), (\{ "details:default:adjective:rock-hard", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "juicy meat and mild spices"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "jerky"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "remarkably juicy and tender, with a mellow blend of spices attached"
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react:tear-dob">
         X[M] \$strip = Spawn(\$\{Allegory:Props:Food:Meat:Jerky:JerkyStrip\});


/* check there is a strip available */
if(\$this."trait:quantity" \< 1) \{
  EmitTo(\$actor, "There is nore more meat left, alas!.");
  return FALSE;
\}

/* reduce the number of strips left */
\$this."trait:quantity" -= 1;

/* create the strip object and give it to the player */


EmitTo(\$actor, "You tear "+Describe(\$strip)+ " from a sheet of beef jerky.");
if(\$this."trait:quantity" == 0)\{
EmitTo(\$actor, "You take the last "+Describe(\$strip)+".");
\$this."trait:empty" = 1;
\$this."trait:trash" = 1;
\}

EmitIn(\$actor."base:environment", Describe(\$actor)+" tears "+Describe(\$strip)+ " from a sheet of beef jerky.", \$actor);
\$strip."base:environment" = \$actor;





return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{         
if(\$this."no:slay" == 1) \{         
return FALSE;         
\} else \{  
EmitTo(\$this."base:environment", "You have eaten the last strip of meat from " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");    
Slay(\$this);         
return TRUE;  
\}         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1131852891, "tunk_bodin", "X", 1138580474, "tunk_bodin", "X", 1138580557, "tunk_bodin", "X", 1146184731, "tunk_bodin", "X", 1151199202, "tonyd", "E", 1197320169, "slurpeeslurp", "E", 1197320600, "slurpeeslurp", "E", 1197320680, "slurpeeslurp", "E", 1213868051, "slurpeeslurp", "E", 1213868510, "slurpeeslurp", "E", 1213868629, "slurpeeslurp", "E", 1213868647, "slurpeeslurp", "E", 1213868685, "slurpeeslurp", "E", 1213868689, "slurpeeslurp", "E", 1213868712, "slurpeeslurp", "K", 1213869102, "slurpeeslurp", "E", 1213869129, "slurpeeslurp", "E", 1213869712, "slurpeeslurp", "E", 1213870505, "slurpeeslurp", "E", 1213870861, "slurpeeslurp", "E", 1213871241, "slurpeeslurp", "E", 1213871509, "slurpeeslurp", "E", 1213871556, "slurpeeslurp", "E", 1214201765, "slurpeeslurp", "E", 1214201988, "slurpeeslurp", "E", 1214202087, "slurpeeslurp", "E", 1214202209, "slurpeeslurp", "E", 1214202690, "slurpeeslurp", "E", 1225574525, "morwenlorelie", "R", 1283642507, "slurpeeslurp", "E", 1283643005, "slurpeeslurp", "E", 1283643068, "slurpeeslurp", "E", 1283643161, "slurpeeslurp", "E", 1283643199, "slurpeeslurp", "E", 1283643268, "slurpeeslurp", "E", 1283643315, "slurpeeslurp", "E", 1283643373, "slurpeeslurp", "E", 1283643689, "slurpeeslurp", "E", 1283654579, "slurpeeslurp", "E", 1283654592, "slurpeeslurp", "K", 1283654871, "slurpeeslurp", "E", 1283655110, "slurpeeslurp", "E", 1284492800, "slurpeeslurp", "E", 1284495435, "haystack", "E", 1284495520, "haystack", "E", 1284496279, "haystack", "E", 1284496303, "haystack", "E", 1284496505, "haystack", "E", 1284496599, "slurpeeslurp", "E", 1286653073, "slurpeeslurp", "R", 1307648683, "slurpeeslurp", "E", 1310855156, "slurpeeslurp", "E", 1310855404, "slurpeeslurp", "E", 1310856000, "slurpeeslurp", "E", 1310856039, "slurpeeslurp", "E", 1310856085, "slurpeeslurp", "E", 1310856149, "slurpeeslurp", "E", 1310856191, "slurpeeslurp", "E", 1310936500, "slurpeeslurp", "E", 1431055957, "slurpeeslurp", "E", 1431055964, "slurpeeslurp", "E", 1431055971, "slurpeeslurp", "E", 1431055986, "slurpeeslurp", "E", 1431056536, "slurpeeslurp", "K", 1434778376, "slurpeeslurp", "E", 1588187964, "sendnoodlez", "R", 1593453428, "jominey", "R", 1595463987, "jominey", "R", 1696140910, "ezralee", "E", 1696224473, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
