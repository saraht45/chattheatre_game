<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:Vegetables:UrVegetable)"/>
    <Base:Bulk immobile="false" mass="0.05" density="0.2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="food"/>
            <Base:SName sname="foodstuff"/>
            <Base:SName sname="edibles"/>
            <Base:SName sname="artichoke"/>
            <Base:SName sname="vegetable"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foods"/>
            <Base:PName pname="foodstuffs"/>
            <Base:PName pname="artichokes"/>
            <Base:PName pname="vegetables"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:cooked) $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             $(this.trait:examine){? | $(this.trait:eaten) | Someone appears to have <eaten what="$(this)"/>it.} There appears to be $(this.trait:quantity) artichoke leaves left.
          </Base:Description>
          <Base:Description type="look">
             $(this.trait:look){? | $(this.trait:eaten) | Someone appears to have <eaten what="$(this)"/>it.}
          </Base:Description>
          <Base:Description type="pbrief">
             artichokes
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         3000
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "artichoke"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "A large, unopened vegetable flower which has been steamed and coated in a light, buttery sauce. You can peel off the leaves to eat the bases of the thick, green petals."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "A large, unopened vegetable flower."
      </Core:Property>
      <Core:Property property="export:trait:name">
         "artichoke"
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         20
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:brief", "spotted artichoke" \}), (\{ "details:default:adjective:spotted", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "vegetatively sweet"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "artichoke"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "mild, and slightly buttery"
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react-post:peel-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Food:Vegetables:ArtichokeLeaf\});
EmitIn(\$actor."base:environment", Describe(\$actor)+" peels "+Describe(\$item)+" from "+Describe(\$this, \$actor)+".");
\$item."base:environment" = \$actor;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:peel-dob">
         X[M] \$quantity = \$this."trait:quantity";
if(\$quantity == 0)\{
EmitTo(\$actor, "The artichoke is gone, alas!");
\$this."trait:empty" = 1;
return FALSE;
\}

\$this."trait:quantity" = \$this."trait:quantity" - 1;
return TRUE;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{         
if(\$this."no:slay" == 1) \{         
return FALSE;         
\} else \{  
EmitTo(\$this."base:environment", "You have eaten the last leaf of " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");    
Slay(\$this);         
return TRUE;  
\}         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1528323564, "jominey", "E", 1528323607, "jominey", "E", 1528323928, "jominey", "E", 1593435055, "jominey", "R", 1593436047, "jominey", "E", 1593476517, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
