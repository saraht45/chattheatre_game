<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:UrFoodContainer)"/>
    <Base:Bulk immobile="false" mass="1" density="0.8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pie"/>
            <Base:SName sname="food"/>
            <Base:SName sname="dessert"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pies"/>
            <Base:PName pname="desserts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="blackberry"/>
          <Base:Adjective adjective="moist"/>
          <Base:Adjective adjective="ripe"/>
          <Base:Adjective adjective="warm"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             lightly sugared blackberry pie
          </Base:Description>
          <Base:Description type="examine">
             A lightly sugared blackberry pie in which the principal filling is comprised of ripe blackberries. Soft, moist pastry has been used on the top and bottom, making it a double-crust pie, with the upper crust intricately lattice woven with strips. There appears to be $(this.trait:quantity) slices of pie left.
          </Base:Description>
          <Base:Description type="look">
             A lightly sugared blackberry pie in which the principal filling is comprised of ripe blackberries. Soft, moist pastry has been used on the top and bottom, making it a double-crust pie, with the upper crust intricately lattice woven with strips.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         3200
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         8
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react-post:cut-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Food:Bakery:Pies:BlackberrySlice\});
EmitIn(\$actor."base:environment", Describe(\$actor)+" removes "+Describe(\$item)+" from "+Describe(\$this, \$actor)+".");
\$item."base:environment" = \$actor;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:cut-dob">
         X[M] \$quantity = \$this."trait:quantity";
if(\$quantity == 0)\{
EmitTo(\$actor, "The pie is gone, alas!");
\$this."trait:empty" = 1;
return FALSE;
\}

\$this."trait:quantity" = \$this."trait:quantity" - 1;
return TRUE;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{         
if(\$this."no:slay" == 1) \{         
return FALSE;         
\} else \{  
EmitTo(\$this."base:environment", "You have eaten the last slice of " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");    
Slay(\$this);         
return TRUE;  
\}         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1263183286, "necate", "E", 1263183403, "necate", "E", 1434778841, "slurpeeslurp", "E", 1479778725, "ezralee", "E", 1479778754, "ezralee", "R", 1493177694, "ezralee", "R", 1524256888, "lidiab", "E", 1586994354, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">8</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
