<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:UrFoodContainer)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="is cut into" verb3="is cut into"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cake"/>
            <Base:SName sname="food"/>
            <Base:SName sname="dessert"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foods"/>
            <Base:PName pname="desserts"/>
            <Base:PName pname="cakes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="elegant"/>
          <Base:Adjective adjective="tiered"/>
          <Base:Adjective adjective="two"/>
          <Base:Adjective adjective="two-tiered"/>
          <Base:Adjective adjective="wedding"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             elegant, two-tiered wedding cake
          </Base:Description>
          <Base:Description type="examine">
             An elegant, two-tiered wedding cake. It is circular in shape and covered with a perfectly smooth layer of $(this.trait:frosting) icing. {? | $(this.trait:flower) | The top edge of each layer has been delicately decorated with a myriad of $(this.trait:decoration:color) $(this.trait:flower). } At the center of the top layer stands a pair of two carved birch figurines: one of a female $(this.trait:femalefigure) and one of a male $(this.trait:malefigure).
          </Base:Description>
          <Base:Description type="look">
             An elegant, two-tiered wedding cake.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="figures" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="figure"/>
            <Base:SName sname="figurines"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="figures"/>
            <Base:PName pname="figurines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="birch"/>
          <Base:Adjective adjective="carved"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the two carved birch figurines atop the cake
          </Base:Description>
          <Base:Description type="look">
             At the center of the top layer stands a pair of two carved birch figurines: one of a female $(this.trait:femalefigure) and one of a male $(this.trait:malefigure).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flower" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="flower"/>
            <Base:SName sname="decoration"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="decorations"/>
            <Base:PName pname="flowers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:color) $(this.trait:flower) decorating the cake
          </Base:Description>
          <Base:Description type="look">
             The top edge of each layer has been delicately decorated with a bundle of mixed $(this.trait:color) $(this.trait:flower).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knife" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knife"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="knives"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cake"/>
          <Base:Adjective adjective="delicate"/>
          <Base:Adjective adjective="silver"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             delicate silver cake knife
          </Base:Description>
          <Base:Description type="look">
             A delicate silver cake knife, wide enough to also serve the cake once cut.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stand" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stand"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stands"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cake"/>
          <Base:Adjective adjective="silver"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             silver cake stand
          </Base:Description>
          <Base:Description type="look">
             The dessert is prominently displayed on a silver cake stand.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:age:fresh">
         2880
      </Core:Property>
      <Core:Property property="export:trait:age:old">
         5760
      </Core:Property>
      <Core:Property property="export:trait:age:slay">
         20160
      </Core:Property>
      <Core:Property property="export:trait:color">
         "purple"
      </Core:Property>
      <Core:Property property="export:trait:decoration">
         "candied leaves"
      </Core:Property>
      <Core:Property property="export:trait:decoration:color">
         "purple and wine"
      </Core:Property>
      <Core:Property property="export:trait:frosting">
         "cream cheese"
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:brief", "moldy wedding cake" \}), (\{ "details:default:adjective:moldy", 1 \}), (\{ "trait:smell", "moldy wedding cake" \}), (\{ "trait:taste", "disgusting, making you gag" \}), (\{ "trait:examine", "A wedding cake which has become old and moldy." \}), (\{ "trait:look", "A wedding cake which has become old and moldy." \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "apple spice and mild cream cheese"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "like a warm blend of spiced apples with an overtone of mild cream cheese flavoring"
      </Core:Property>
      <Core:Property property="export:trait:type">
         "apple spice"
      </Core:Property>
      <Core:Property property="merry:react-post:cut-dob">
         X[M] EmitTo(\$actor, "You cut a slice from "+Describe(\$this)+" and place it on a small plate.");    
EmitIn(\$actor."base:environment", Describe(\$actor)+" cuts a slice from "+Describe(\$this)+" and places it on a small plate.", \$actor);    
    
  \$slice = Spawn(\$\{Allegory:Props:Food:Bakery:Cakes:Wedding:TwoTierSlice\});    
  \$slice."trait:type" = \$this."trait:type";  
  \$slice."trait:frosting" = \$this."trait:frosting";  
  \$slice."trait:decoration" = \$this."trait:decoration";  
  \$slice."trait:decoration:color" = \$this."trait:decoration:color";  
  \$slice."trait:taste" = \$this."trait:taste";  
  \$slice."trait:smell" = \$this."trait:smell";  
  
  Set(\$slice,"base:environment", \$actor);    
  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1571867055, "jominey", "E", 1586994581, "sendnoodlez", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1296362292" state="Open" user="jominey">
           trait:type (i.e. chocolate, strawberry)
trait:frosting (i.e. cream cheese, white, chocolate)
trait:decoration (i.e. candied leaves, candied roses, strawberries)
trait:decoration:color (i.e. white, red)
trait:smell
trait:taste
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
