<object clone="/base/obj/thing" owner="dmwtst">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Plants:Urs:Part:UrCraftingPlantPart)"/>
    <Base:Bulk immobile="false" mass="0.015" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="hanging" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="plant"/>
            <Base:SName sname="mistletoe"/>
            <Base:SName sname="sprig"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sprigs"/>
            <Base:PName pname="plants"/>
            <Base:PName pname="mistletoes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="berried"/>
          <Base:Adjective adjective="leafy"/>
          <Base:Adjective adjective="rotten"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             sprig of leafy mistletoe
          </Base:Description>
          <Base:Description type="examine">
             A sprig of leafy mistletoe with a cluster of waxy, white berries.
          </Base:Description>
          <Base:Description type="look">
             A sprig of leafy mistletoe with white berries.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="berries" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="berry"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="berries"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="mistletoe"/>
          <Base:Adjective adjective="mistletoes"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the white berries on a sprig of leafy mistletoe
          </Base:Description>
          <Base:Description type="look">
             The waxy, white berries on a sprig of leafy mistletoe.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:create:default:alter">
         ([ "cost":(\{ 0, "You do not have enough ORIGINAL_OBJECT" \}), "description":(\{ "You alter ORIGINAL_OBJECT into NEW_OBJECT", "alters ORIGINAL_OBJECT into NEW_OBJECT" \}), "finished":(\{ "You have used the last of ORIGINAL_OBJECT, leaving only REPLACEMENT.", "ACTOR has used the last of ORIGINAL_OBJECT, leaving only REPLACEMENT.", \<IronClaw:Props:Fishing:Tools:Rock\>, (\{ "trait:material" \}) \}), "input-list":(\{ (\{ \<Allegory:Lib:Crafting:Gardening:PlantDB\>, "alteration:knowledge:altering-PLANT-PART" \}) \}), "input-list-actor":(\{ "alteration:knowledge:altering-PLANT-PART" \}), "input-list-actor-remote":(\{ "alteration:knowledge:altering-remote" \}), "newobject-properties":(\{ (\{ "trait:color", "trait:color" \}), (\{ "trait:state", "trait:state" \}), (\{ "trait:quality", "trait:quality" \}), (\{ "trait:smell", "trait:smell" \}), (\{ "trait:taste", "trait:taste" \}), (\{ "trait:flavor", "trait:flavor" \}) \}), "requiredtools":(\{ "a mortar and pestle", (\{ "mortar" \}), (\{ "pestle" \}) \}), "skill":"metalworking" ])
      </Core:Property>
      <Core:Property property="export:trait:decaydelay">
         43200
      </Core:Property>
      <Core:Property property="export:trait:quality">
         4
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] if(sscanf(name(this), "%s]#%s", \$tmp, \$tmp) != 2) \{      
    /* NOT a spawn. Don't decay */      
    return TRUE;      
\}  
 
Call(\$this, "start_decay");  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:start_decay">
         X[M] int decaydelay;  
  
if(\$this."trait:decaydelay") \{  
    decaydelay = \$this."trait:decaydelay";  
\} else \{  
    decaydelay = 172800;  
\}  
  
\$this."decay:id" = In("decay", decaydelay);  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:age">
         X[M] if(this."trait:age" == "fresh") \{  
    if(this."base:urparent"."details:default:description:brief:fresh") \{ 
        this."details:default:description:brief" = this."base:urparent"."details:default:description:brief:fresh"; 
    \} 
    if(this."base:urparent"."details:default:description:look:fresh") \{  
        this."details:default:description:look" = this."base:urparent"."details:default:description:look:fresh";  
    \} 
    if(this."base:urparent"."details:default:description:examine:fresh") \{ 
        this."details:default:description:examine" = this."base:urparent"."details:default:description:examine:fresh";  
    \} 
    if(this."base:urparent"."details:default:description:pbrief:fresh") \{ 
        this."details:default:description:pbrief" = this."base:urparent"."details:default:description:pbrief:fresh";  
    \} 
    this."details:default:adjective:fresh" = TRUE;  
    this."trait:state" = "fresh"; 
\}  
  
if(this."trait:age" == "") \{  
    if(this."base:urparent"."details:default:description:brief") \{ 
        this."details:default:description:brief" = this."base:urparent"."details:default:description:brief";  
    \} 
    if(this."base:urparent"."details:default:description:look") \{ 
        this."details:default:description:look" = this."base:urparent"."details:default:description:look";  
    \} 
    if(this."base:urparent"."details:default:description:examine") \{ 
        this."details:default:description:examine" = this."base:urparent"."details:default:description:examine";  
    \} 
    if(this."base:urparent"."details:default:description:pbrief") \{ 
        this."details:default:description:pbrief" = this."base:urparent"."details:default:description:pbrief";  
    \} 
    this."details:default:adjective:fresh" = FALSE;  
    this."trait:state" = ""; 
\}  
  
if(this."trait:age" == "old") \{  
    if(this."base:urparent"."details:default:description:brief:old") \{ 
        this."details:default:description:brief" = this."base:urparent"."details:default:description:brief:old";  
    \} 
    if(this."base:urparent"."details:default:description:look:old") \{ 
        this."details:default:description:look" = this."base:urparent"."details:default:description:look:old";  
    \} 
    if(this."base:urparent"."details:default:description:examine:old") \{ 
        this."details:default:description:examine" = this."base:urparent"."details:default:description:examine:old";  
    \} 
    if(this."base:urparent"."details:default:description:pbrief:fresh") \{ 
        this."details:default:description:pbrief" = this."base:urparent"."details:default:description:pbrief:fresh";  
    \} 
    this."details:default:adjective:rotten" = TRUE;  
    this."trait:state" = "rotten"; 
\}  
      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quality">
         X[M] /* set the description for the flower, based on quality */      
      
switch(Int(this."trait:quality")) \{      
  case 12:      
    this."trait:age" = "fresh";      
    break;      
  case 11:      
    this."trait:age" = "fresh";      
    break;      
  case 10:      
    this."trait:age" = "fresh";      
    break;      
  case 9:      
    this."trait:age" = "fresh";      
    break;      
  case 8:      
    this."trait:age" = "";      
    break;      
  case 7:      
    this."trait:age" = "";      
    break;      
  case 6:      
    this."trait:age" = "";      
    break;      
  case 5:      
    this."trait:age" = "";      
    break;     
  case 4:      
    this."trait:age" = "";      
    break;  
  case 3:      
    this."trait:age" = "";      
    break;   
  case 2:      
    this."trait:age" = "old";      
    break;      
  case 1:      
    this."trait:age" = "old";      
    break;      
  case 0:      
    this."trait:age" = "old";      
    break;      
  case -1:  
    this."trait:age" = "old";  
  default:      
    this."trait:age" = "fresh";      
    break;      
\}  
      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:timer:decay">
         X[M] if(\$this."decay:id") \{  
    Stop(\$this."decay:id");  
    \$this."decay:id" = nil;  
\}  
  
\$this."trait:quality" = Int(\$this."trait:quality") - 1;  
  
if(Int(\$this."trait:quality") \<= 0) \{  
    /* send destruction message */      
    if(this."base:environment")      
    EmitIn(this."base:environment", Describe(\$this)+" disintegrates.");      
    if(this."base:environment"."base:environment") \{      
        EmitTo(this."base:environment", Describe(\$this, nil, this."base:environment")+" disintegrates.");      
        EmitIn(this."base:environment"."base:environment", Describe(\$this)+" disintegrates.", this."base:environment");      
    \}      
    Slay(this);  
\} else \{  
    Call(\$this, "start_decay");  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1418703119, "jominey", "E", 1418703534, "jominey", "E", 1418703736, "jominey", "E", 1418703764, "jominey", "E", 1418703844, "jominey", "E", 1418703993, "jominey", "E", 1418704032, "jominey", "E", 1418704115, "jominey", "E", 1418704198, "jominey", "E", 1418704432, "jominey", "E", 1418707790, "jominey", "E", 1418707987, "jominey", "X", 1418708194, "jominey", "E", 1418711873, "jominey", "E", 1418712347, "jominey", "E", 1418713019, "jominey", "E", 1418713132, "jominey", "E", 1418872672, "jominey", "E", 1419209070, "jominey", "E", 1431318211, "jominey", "E", 1432248794, "dmwtst", "K", 1432250536, "dmwtst", "K", 1432259861, "rorschakovacs", "E", 1432261499, "rorschakovacs", "X", 1432424789, "dmwtst", "K", 1432424831, "dmwtst", "K", 1497308602, "jominey", "E", 1497308606, "jominey", "E", 1497308612, "jominey", "E", 1497308618, "jominey", "E", 1497308621, "jominey", "E", 1497308634, "jominey", "E", 1497308638, "jominey", "E", 1497308639, "jominey", "E", 1497308642, "jominey", "E", 1497308648, "jominey", "E", 1576001198, "sendnoodlez", "R", 1576001205, "sendnoodlez", "R", 1635137222, "ezralee", "E", 1635137270, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:age">"old"</Core:Property>
      <Core:Property property="trait:quality">0</Core:Property>
      <Core:Property property="trait:state">"rotten"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
