<object clone="/base/obj/thing" owner="balkaar">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Plants:Urs:Part:UrFruit)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pomegranate"/>
            <Base:SName sname="fruit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pomegranates"/>
            <Base:PName pname="fruits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             pomegranate
          </Base:Description>
          <Base:Description type="brief:fresh">
             fresh pomegranate
          </Base:Description>
          <Base:Description type="brief:old">
             dry pomegranate
          </Base:Description>
          <Base:Description type="examine">
             A fresh pomegranate. Round and colorful. You can peel it back to see what's inside.
          </Base:Description>
          <Base:Description type="examine:old">
             An old and dry pomegranate. What a waste.
          </Base:Description>
          <Base:Description type="look">
             A fresh pomegranate; tasty.
          </Base:Description>
          <Base:Description type="look:old">
             An old pomegranate. Yikes.
          </Base:Description>
          <Base:Description type="pbrief">
             pomegranates
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             fresh pomegranates
          </Base:Description>
          <Base:Description type="pbrief:old">
             dry pomegranates
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:name">
         "pomegranate"
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "a sweet, tart scent"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "tart and juicy"
      </Core:Property>
      <Core:Property property="export:trait:type">
         "pomegranate"
      </Core:Property>
      <Core:Property property="merry:react-pre:peel-dob">
         X[M] object peel, pomegranate;
string adj;

adj = oneof("red");

EmitTo(\$actor, "You peel the skin away from the pomegranate revealing the "+adj+" seeds within.");
EmitIn(\$actor."base.environment", Describe(\$actor)+" peels the skin from "+Describe(\$this)+", revealing the seeds within.", \$actor);

  pomegranate = Spawn(\$\{Allegory:Props:Plants:P:Pomegranate:PomegranateFruitPeeled\});
  Set(pomegranate,"base:environment", \$actor);
  Slay(\$this);
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1418710750, "jominey", "E", 1418710761, "jominey", "E", 1418710815, "jominey", "X", 1418710823, "jominey", "E", 1418710825, "jominey", "E", 1418796293, "jominey", "R", 1568330574, "sendnoodlez", "R", 1568330698, "sendnoodlez", "E", 1593442350, "jominey", "R", 1593444084, "jominey", "E", 1593460446, "jominey", "R", 1602047570, "jominey", "E", 1602047592, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
