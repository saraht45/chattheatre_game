<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Plants:Urs:Part:UrFruit)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pomegranate"/>
            <Base:SName sname="fruit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pomegranates"/>
            <Base:PName pname="fruits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="peeled"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             peeled pomegranate
          </Base:Description>
          <Base:Description type="brief:fresh">
             fresh, peeled pomegranate
          </Base:Description>
          <Base:Description type="brief:old">
             dry, peeled pomegranate
          </Base:Description>
          <Base:Description type="examine">
             A fresh, peeled pomegranate. Round and colorful. A myriad of tiny sacs filled with collectible seeds are now exposed. This fruit has $[if($this."trait:quantity" == 0) { return "no seeds"; } else if ($this."trait:quantity" == 1) { return "one seed"; } else { return desc_cardinal($this."trait:quantity")+ " seeds"; }] ready to be picked.
          </Base:Description>
          <Base:Description type="examine:old">
             An old and dry peeled pomegranate. What a waste.
          </Base:Description>
          <Base:Description type="look">
             A fresh, peeled pomegranate.
          </Base:Description>
          <Base:Description type="look:old">
             An old peeled pomegranate. Yikes, it's starting to look nasty!
          </Base:Description>
          <Base:Description type="pbrief">
             peeled pomegranates
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             fresh, peeled pomegranates
          </Base:Description>
          <Base:Description type="pbrief:old">
             dry, peeled pomegranates
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:name">
         "pomegranate"
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "a sweet, tart scent"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "tart and juicy"
      </Core:Property>
      <Core:Property property="merry:react:pick-what">
         X[M] /* check there are seeds available */ 
if(\$this."trait:quantity" \< 1) \{ 
  EmitTo(\$actor, "There are no available seeds on "+Describe(\$this)+"."); 
  return FALSE; 
\} 
 
/* reduce the number of seeds on the fruit */ 
\$this."trait:quantity" -= 1; 
 
/* create the seed object and give it to the player */ 
\$object = Spawn(\$\{Allegory:Props:Plants:P:Pomegranate:PomegranateSeed\}); \$object."base:environment" = \$actor; 
 
/* emit message to player and room */ 
EmitTo(\$actor, "You pick "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+"."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" picks "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] /* stop when we hit 10 seeds in the fruit */  
if(\$this."trait:quantity" \>= 10) return TRUE;  
  
/* wait a while, then add a seed */  
\$delay((2*24*60), TRUE, "9d85");  
if(\$this."trait:quantity" \< 10)  
  \$this."trait:quantity" += 1;  
  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1418710720, "jominey", "E", 1418710724, "jominey", "E", 1418710766, "jominey", "E", 1418710807, "jominey", "X", 1418710832, "jominey", "E", 1418710835, "jominey", "E", 1418796303, "jominey", "R", 1568330582, "sendnoodlez", "R", 1568330669, "sendnoodlez", "E", 1568330690, "sendnoodlez", "K", 1593442342, "jominey", "R", 1593444096, "jominey", "E", 1593460456, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
