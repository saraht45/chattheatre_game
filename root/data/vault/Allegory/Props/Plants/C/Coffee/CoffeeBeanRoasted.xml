<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="true"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="coffee"/>
            <Base:SName sname="bean"/>
            <Base:SName sname="vegetable"/>
            <Base:SName sname="food"/>
            <Base:SName sname="herb"/>
            <Base:SName sname="spice"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="coffees"/>
            <Base:PName pname="beans"/>
            <Base:PName pname="vegetables"/>
            <Base:PName pname="foods"/>
            <Base:PName pname="herbs"/>
            <Base:PName pname="spices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brown"/>
          <Base:Adjective adjective="coffee"/>
          <Base:Adjective adjective="dark"/>
          <Base:Adjective adjective="dried"/>
          <Base:Adjective adjective="fresh"/>
          <Base:Adjective adjective="pleated"/>
          <Base:Adjective adjective="pliable"/>
          <Base:Adjective adjective="slender"/>
          <Base:Adjective adjective="tough"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             freshly roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean
          </Base:Description>
          <Base:Description type="brief:fresh">
             fresh {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean
          </Base:Description>
          <Base:Description type="brief:old">
             roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean
          </Base:Description>
          <Base:Description type="look">
             The freshly roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean is a very small, dark brown seed with a shallow groove down the center.
          </Base:Description>
          <Base:Description type="look:fresh">
             The freshly roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean is a very small, dark brown seed with a shallow groove down the center.
          </Base:Description>
          <Base:Description type="look:old">
             The roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee bean is a very small, dark brown seed with a shallow groove down the center.
          </Base:Description>
          <Base:Description type="pbrief">
             freshly roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee beans
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             freshly roasted {? | $(this.trait:flavor) |$(this.trait:flavor) |} coffee beans
          </Base:Description>
          <Base:Description type="pbrief:old">
             roasted coffee beans
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:herb">1</Core:Property>
      <Core:Property property="export:trait:name">
         "coffee"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "fruit"
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "a strong, earthy aroma that's both rich, and bitter at once"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "of rich, yet bitter burned beans"
      </Core:Property>
      <Core:Property property="merry:react-pre:add-iob">
         X[M] /*
** \$iob = leaf
** \$dob = paste
*/

if(!\$iob) return TRUE;
if(!sizeof(\$iob)) return TRUE;
if(sizeof(\$iob) \> 1) \{
    EmitTo(\$actor, "You can only do that to one thing at a time.");
    return FALSE;
\}

\$leaf = NRefOb(\$iob[0]);

if(!\$dob) return TRUE;
if(!sizeof(\$dob)) return TRUE;
if(sizeof(\$dob) \> 1) \{
    EmitTo(\$actor, "You can only do that to one thing at a time.");
    return FALSE;
\}

\$paste = NRefOb(\$dob[0]);

if(\$paste."base:urparent" != \$\{Ironclaw:Props:Herbalism:Pastes:UrPaste\}) return TRUE;
if(NRefOb(\$leaf)."trait:flavor") \{
    EmitTo(\$actor, "There's no point flavoring "+Describe(\$leaf, nil, \$actor)+", as it is already "+\$paste."trait:type"+" flavored.");
    return FALSE;
\}

\$leaf = NRefOb(\$iob[0]);
\$paste = NRefOb(\$dob[0]);

  EmitTo(\$actor, "You flavor "+Describe(\$leaf, nil, \$actor)+" with "+ replace_strings(Describe(\$paste, nil, \$actor), " bean", "") + ".");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" flavors "+Describe(\$leaf, \$actor)+" with " + replace_strings(Describe(\$paste, nil, \$actor), " bean", "") + ".", \$actor);

  \$leaf."trait:flavor" = replace_strings(Str(\$paste."trait:type"), " bean", "");
  \$leaf."trait:taste" = Str(\$leaf."trait:taste") + " and " + \$paste."trait:taste";
  \$leaf."trait:smell" = Str(\$leaf."trait:smell") + " and " + \$paste."trait:smell";
  Set(\$leaf, "details:default:adjective:" + Str(\$paste."trait:type"),  TRUE);
  Set(\$leaf, "details:default:adjective:" + Str(\$paste."trait:type") + "-flavored",  TRUE);

  Slay(\$paste);
  return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1180671026, "necate", "E", 1180988115, "rastalabor", "E", 1180988421, "rastalabor", "E", 1180989360, "rastalabor", "E", 1180989478, "rastalabor", "E", 1201550395, "jsfox", "X", 1248799993, "rorschakovacs", "E", 1248800055, "rorschakovacs", "E", 1248800085, "rorschakovacs", "E", 1248800215, "rorschakovacs", "E", 1315423197, "morwenlorelie", "R", 1327969893, "jominey", "R", 1347222703, "jominey", "R", 1347233859, "jominey", "R", 1401102998, "lidiab", "E", 1401124144, "jominey", "K", 1401124784, "jominey", "K", 1401125175, "jominey", "K", 1401125486, "jominey", "E", 1401125514, "jominey", "E", 1401125758, "jominey", "E", 1401125775, "jominey", "E", 1401125788, "jominey", "E", 1401125886, "jominey", "K", 1401125896, "jominey", "E", 1401125978, "jominey", "K", 1401126616, "jominey", "E", 1401126692, "jominey", "K", 1401127010, "jominey", "E", 1459020046, "slurpeeslurp", "R", 1459021222, "slurpeeslurp", "R", 1459699321, "slurpeeslurp", "K", 1525913680, "jominey", "E", 1525913718, "jominey", "E", 1525913729, "jominey", "E", 1525913851, "jominey", "E", 1525914258, "jominey", "E", 1568329280, "sendnoodlez", "R", 1593440976, "jominey", "R", 1593443755, "jominey", "E", 1593459938, "jominey", "E", 1593460124, "jominey", "R", 1595709014, "sendnoodlez", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
