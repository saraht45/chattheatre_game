<object clone="/usr/SkotOS/obj/verb" owner="tunk_bodin">
  <Socials:Verb imp="@readall" evoke="forbidden" audible="false" private="true" secret="false" obscured="false" target-abstracts="false" disabled="false" ooc="false" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="dob" direct="true" single="false" raw="false" requirement="forbidden" distance="far">
        <Socials:SocObPreps/>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="html:iframeright">
         X[S] \<html\>
  \<body leftMargin="40" topMargin="10"\>
  \<style type="text/css"\>
    BODY \\\{ background-position: center; background-repeat: no-repeat; background-attachment: fixed; background-color: #ffffff \\\}
  \</style\>
  \<iframe style="margin: auto; padding: 20px; border: 2px solid black;" width="90%" height="90%" scrolling="auto" frameborder="no" ALLOWTRANSPARENCY="true" marginwidth="30" marginheight="5" src="/SAM/Prop/Allegory:Neoct:Verbs:R:@readall/readright?actor=\$(actor)\\\&obj=\$[url_encode(\$obj)]\\\&this=\$(this)"/\>
  \<zform\>
    \<input type="hidden" name="obj" value="\$(obj)"/\>
    \<input type="hidden" name="actor" value="\$(actor)"/\>
    \<input type="hidden" name="this" value="\$(this)"/\>
    \\\&nbsp;\\\&nbsp;\\\&nbsp;\\\&nbsp;\\\&nbsp;\\\&nbsp;\\\&nbsp;\<input type="submit" name="Erase?" value="erase"/\>
    \<action\>
      \$[::erasescroll(\$obj: \$obj);]
      \<base target="read:right"/\>
      \<redirect propob="Allegory:Neoct:Verbs:R:@readall" prop="html:iframeright" actor="\$(actor)" obj="\$(obj)" this="\$(this)"/\>
    \</action\>
    \</zform\>
  \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="html:iframeright-book">
         X[S] \<html\>
  \<body leftMargin="30" topMargin="20"\>
  \<style type="text/css"\>
    BODY \\\{ background-position: center; background-repeat: no-repeat; background-attachment: fixed; background-color: #ffffff \\\}
  \</style\>
  \<iframe style="margin: auto; padding: 20px; border: 2px solid black;" width="90%" height="90%" scrolling="auto" frameborder="no" ALLOWTRANSPARENCY="true" marginwidth="30" src="/SAM/Prop/Allegory:Neoct:Verbs:R:@readall/readright-book?actor=\$(actor)\\\&obj=\$[url_encode(\$obj)]\\\&this=\$(this)\\\&page=\$(page)"/\>
  \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="html:popup">
         X[S] \<html\>
  \<head\>
    \<title\>SkyReader - Scrolls\</title\>
  \</head\>
  \$[Obj(\$this).timesused++]
  \<frameset cols="120,*" frameborder="0" framespacing="0" border="0"\>
    \<frame name="read:left" noresize="1" src="/SAM/Prop/Allegory:Neoct:Verbs:R:@readall/html:readleft?actor=\$(actor)\\\&this=\$(this)"/\>
    \<frame name="read:right" noresize="1" scrolling="no" src="/SAM/Prop/Allegory:Neoct:Verbs:R:@readall/\$[((\$r1 = sizeof(Obj(\$actor)."skyreader:listscrolls")) \< 1 ? "html:iframeright-book" : "html:iframeright")]?actor=\$(actor)\\\&this=\$(this)\\\&obj=\$[url_encode(Get(Obj(\$actor), (\$r1 \< 1 ? "skyreader:listbooks" : "skyreader:listscrolls"))[0]."base:objectname")]"/\>
  \</frameset\>
\</html\>
      </Core:Property>
      <Core:Property property="html:readleft">
         X[S] \<html\>
  \<head\>
  \\\<!-- \\\$(Allegory:Neoct:Verbs:R:@readall.html:collapsablemenu) --\\\>
  \</head\>
  \<body bgcolor="#000000" text="#F9EBBF"\>
  \<style type="text/css"\>
    A:link \\\{ color: #F9EBBF \\\}
    A:visited \\\{ color: #A36A19 \\\}
    A:hover \\\{ color: #DEBD7A \\\}
  \</style\>
  \<base target="read:right"/\>
  \$[Call(\$\{Allegory:Neoct:Verbs:R:@readall\}, "createlinks", \$actor: \$actor); return ParseXML(\$links);]
  \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="html:readright">
         X[S] \<html\>
  \<body STYLE="background-color:transparent"\>
    \<font color="red" size="4"\>\$[(Obj(\$obj)."base:environment" != Obj(\$actor) ? "You cannot read from " + Describe(Obj(\$obj)) + " if it is not in your possession!" : "")]\</font\>
    \<p\>
      \<font face="Verdana" size="4"\>\<i\>\$[(Obj(\$obj)."base:environment" != Obj(\$actor) ? "" : ((\$r1 = replace_html(Str(Obj(\$obj)."details:objskin:description:delivery-to"))) \&\& strlen(\$r1) \> 0 ? "It is addressed to " + proper(\$r1) + "." : "The scroll is not addressed to anyone."))]\</i\>\</font\>
    \</p\>
    \$[string writing, writing2;       
     string lang, langstr;      
     mixed level, legibility, skill;       
       
     writing = UnSAM(Obj(\$obj)."details:objskin:description:writing");       
     writing2 = UnSAM(Obj(\$obj)."details:objskin:description:writing");       
       
     if (writing[0] == '\\"') \{       
         writing = writing[1 ..];       
     \}       
     if (writing[strlen(writing)-1] == '\\"') \{       
         writing = writing[.. strlen(writing)-2];       
     \}       
       
     if(sscanf(writing, "\\000%s\|%d\\001%s\\002", lang, legibility, writing) == 3) \{       
         sscanf(writing, "\\000%s\|%d\\001%s\\002", lang, legibility, writing);       
       
         lang = lang[1..];       
      
         langstr = "It says in " + capitalize(lang) + ":";      
       
         skill = Get(Obj(\$actor), "skill:lang:" + lang);       
       
         \$langoutput = Call(\$\{Allegory:Lib:Languages:Actions:encounter-language\}, "garble-reading", \$text: writing, \$language: lang, \$actor: Obj(\$actor), \$legibility: legibility);       
     \} else \{       
         langstr = "It says:";      
         \$langoutput = writing;       
     \}       
     \$langoutput = replace_strings(\$langoutput, "\\n", "\<br/\>");     
       
     if(Obj(\$obj)."base:environment" != Obj(\$actor)) \{       
         return "";       
     \} else \{       
         if(\$r1 = replace_html(\$langoutput)) \{     
             return "\<p\>\<font face=\\"Verdana\\" size=\\"4\\"\>" + langstr + "\</font\>\</p\>\<p\>" + \$langoutput + "\</p\>";       
         \} else \{       
             return "";       
         \}       
     \}]
    \<p\>
    \$[(Obj(\$obj)."base:environment" != Obj(\$actor) ? "" : (!(\$r1 = replace_html(Str(Obj(\$obj)."details:objskin:description:delivery-from"))) \|\| \$r1 == "" ? "It is unsigned." :  (!(\$r2 = replace_html(Str(Obj(\$obj)."details:objskin:description:delivery-end"))) \|\| strlen(\$r2) \< 1 ?  "It is signed by " + proper(\$r1) + "." : "It is signed, \\"" + replace_html(\$r2) + "\\", by " + proper(\$r1) + ".")))]
    \</p\>
  \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="html:readright-book">
         X[S] \<html\>
  \<body STYLE="background-color:transparent"\>
    \<font color="red" size="4"\>\$[(Obj(\$obj)."base:environment" != Obj(\$actor) ? "You cannot read from " + Describe(Obj(\$obj)) + " if it is not in your possession!" : "")]\</font\>
    \<p\>
      \$[/* (Obj(\$obj)."base:environment" != Obj(\$actor) ? "" : ((\$r1 = Get(Obj(\$obj), "trait:" + \$page)) != nil ? replace_strings(\$r1, "\\n", "\<br/\>") : "" )) */      
      
string writing, writing2;      
     string lang, langstr;      
     mixed level, legibility, skill;      
       
     writing = UnSAM(Get(Obj(\$obj), "trait:" + \$page));      
       
     if (writing[0] == '\\"') \{      
         writing = writing[1 ..];      
     \}      
     if (writing[strlen(writing)-1] == '\\"') \{      
         writing = writing[.. strlen(writing)-2];      
     \}      
       
     if(sscanf(writing, "\\000%s\|%d\\001%s\\002", lang, legibility, writing) == 3) \{      
         sscanf(writing, "\\000%s\|%d\\001%s\\002", lang, legibility, writing);      
       
         lang = lang[1..];      
     
         langstr = "It says in " + capitalize(lang) + ":";     
       
         skill = Get(Obj(\$actor), "skill:lang:" + lang);      
       
         \$langoutput = Call(\$\{Allegory:Lib:Languages:Actions:encounter-language\}, "garble-reading", \$text: writing, \$language: lang, \$actor: Obj(\$actor), \$legibility: legibility);      
     \} else \{      
         langstr = "It says:";     
         \$langoutput = writing;      
     \}      
     \$langoutput = replace_strings(\$langoutput, "\\n", "\<br/\>");      
       
     if(Obj(\$obj)."base:environment" != Obj(\$actor)) \{      
         return "";      
     \} else \{      
         if(\$r1 = replace_html(\$langoutput)) \{      
             return "\<p\>\<font face=\\"Verdana\\" size=\\"4\\"\>" + langstr + "\</font\>\</p\>\<p\>" + replace_strings(\$langoutput, "\&lt;br/\&gt;", "\<br/\>") + "\</p\>";      
         \} else \{      
             return "";      
         \}      
     \}]
    \</p\>
  \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="merry:global:command">
         X[M] \{     
  Call(\$this, "listscrolls");     
  if (sizeof(\$list) \< 1 \&\& sizeof(\$book) \< 1) \{EmitTo(\$actor, "You don't seem to be holding any scrolls or any books at the moment."); return FALSE; \}       

  if(\$actor.mobimode)\{
    /* EmitTo(\$actor, "POPUPURL::http://game.allegoryofempires.com/SAM/Prop/" + replace_strings(name(\$this)+"/popup?actor="+Str(\$actor)+"\&this="+Str(\$this), ":", "%3A", "#", "%23"));  */
  \} else \{
    Popup(\$actor, \$this, "popup", \$zid: -1, \$actor: name(\$actor), \$this: name(\$this));     
    EmitTo(\$actor, "Creating the SkyReader popup window!");   
  \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:createlinks">
         X[M] \{     
     
  \$links = "";     
  \$list = (\{ \});     
  \$list += Obj(\$actor)."skyreader:listscrolls";     
  if (sizeof(\$list) \> 0) \{      
    \$links = "Scrolls\<sbr/\>";     
    for (\$i = 0; \$i \< sizeof(\$list); \$i++) \{     
      \$links += "\&nbsp;\&nbsp;\<zlink base=\\"iframeright\\" actor=" + Str(\$actor) + " obj=\\"" + Str(Obj(\$list[\$i])."base:objectname") + "\\"\>Scroll #" + Str(\$i + 1) + "\</zlink\>\<sbr/\>";     
    \}     
  \$links += "\<sbr/\>";     
  \}     
     
  \$booklist = (\{ \});     
  \$booklist += Obj(\$actor)."skyreader:listbooks";     
     
  if (sizeof(\$booklist) \> 0) \{     
    for (\$i = 0; \$i \< sizeof(\$booklist); \$i++) \{     
      \$links += "\<a title=\\"" + Describe(\$booklist[\$i], nil, nil, STYLE_NONPOSS) + "\\"\>Book #" + (\$i + 1) + "\</a\>\<sbr/\>";     
      for (\$j = 0; \$j \<= Int(\$booklist[\$i]."trait:pagecnt"); \$j++) \{     
      \$page = "trait:page" + (\$j \< 10 ? "0" + Str(\$j) : \$j);     
        if (Get(\$booklist[\$i], \$page)) \{      
         \$links += "\&nbsp;\&nbsp;\<zlink base=\\"iframeright-book\\" actor=" + Str(\$actor) + " obj=\\"" + Str(Obj(\$booklist[\$i])."base:objectname") + "\\" page=\\"page" + (\$j \< 10 ? "0" + Str(\$j) : Str(\$j)) + "\\"\>" + (\$j == 0 ? "Cover" : "Page #" + \$j) + "\</zlink\>\<sbr/\>";     
        \}     
      \}     
        \$links += "\<sbr/\>";     
    \}     
  \}     
  return \$links;     
\}
      </Core:Property>
      <Core:Property property="merry:lib:erasescroll">
         X[M] /* Erases a scroll */      
Obj(\$obj)."details:objskin:description:delivery-end:local" = nil;     
Obj(\$obj)."details:objskin:description:delivery-from:local" = nil;     
Obj(\$obj)."details:objskin:description:delivery-to:local" = nil;     
Obj(\$obj)."details:objskin:description:writing:local" = nil;     
Obj(\$obj)."brain:delivery-to" = nil;     
Obj(\$obj).lastwriter = nil;
      </Core:Property>
      <Core:Property property="merry:lib:listscrolls">
         X[M] \{     
  \$inv = \$actor."base:inventory";     
  \$list = (\{ \});     
  \$book = (\{ \});     
  for (\$i = 0; \$i \< sizeof(\$inv); \$i++) \{     
    if (Str(\$inv[\$i]."details:objskin:prime") == "1") \{     
      if( \$inv[\$i].sealed != "true" ) \{     
        \$list += (\{ \$inv[\$i] \});     
        continue;     
       \}     
    \}     
    if (\$inv[\$i]."trait:superbrief" == "book" \|\| \$inv[\$i]."trait:superbrief" == "tome" \|\| \$inv[\$i]."trait:superbrief" == "spellbook" \|\| \$inv[\$i]."trait:superbrief" == "journal" ) \{     
      \$book += (\{ \$inv[\$i] \});     
    \}     
  \}     
  \$actor."skyreader:listscrolls" = \$list;     
  \$actor."skyreader:listbooks" = \$book;     
  return \$list, \$book;     
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1064337402, "kargh", "X", 1064337425, "kargh", "E", 1064337474, "kargh", "E", 1064337575, "kargh", "E", 1064337604, "kargh", "E", 1064337657, "kargh", "E", 1064337751, "kargh", "E", 1064337789, "kargh", "E", 1064337845, "kargh", "E", 1064337999, "kargh", "E", 1064338170, "kargh", "E", 1064338308, "kargh", "E", 1064338531, "kargh", "E", 1064338652, "kargh", "E", 1064338792, "kargh", "E", 1064338872, "kargh", "E", 1064338918, "kargh", "E", 1064338958, "kargh", "E", 1064339028, "kargh", "E", 1064339107, "kargh", "E", 1064339155, "kargh", "E", 1064339264, "kargh", "E", 1064339346, "kargh", "E", 1064339924, "kargh", "E", 1064340037, "kargh", "E", 1064340446, "kargh", "E", 1064340598, "kargh", "E", 1064340984, "kargh", "E", 1064342120, "kargh", "E", 1064342219, "kargh", "E", 1064342238, "kargh", "E", 1064343162, "kargh", "E", 1064343193, "kargh", "E", 1064347895, "kargh", "E", 1064347991, "kargh", "E", 1064348232, "kargh", "E", 1064348314, "kargh", "E", 1064349054, "kargh", "E", 1064349189, "kargh", "E", 1064349320, "kargh", "E", 1064349388, "kargh", "E", 1064349640, "kargh", "E", 1064349688, "kargh", "E", 1064349824, "kargh", "E", 1064350221, "kargh", "E", 1064350522, "kargh", "E", 1064350693, "kargh", "E", 1064350853, "kargh", "E", 1064351015, "kargh", "E", 1064351055, "kargh", "E", 1064351136, "kargh", "E", 1064351504, "kargh", "E", 1064351921, "kargh", "E", 1064351976, "kargh", "E", 1064352032, "kargh", "E", 1064352088, "kargh", "E", 1064352164, "kargh", "E", 1064352214, "kargh", "E", 1064352292, "kargh", "E", 1064352438, "kargh", "E", 1064352530, "kargh", "E", 1064352719, "kargh", "E", 1064352881, "kargh", "E", 1064352907, "kargh", "E", 1064352931, "kargh", "E", 1064354449, "kargh", "E", 1064354475, "kargh", "E", 1064354753, "kargh", "E", 1064354787, "kargh", "E", 1064355038, "kargh", "E", 1064355164, "kargh", "E", 1064355531, "kargh", "E", 1064355680, "kargh", "E", 1064355753, "kargh", "E", 1064356091, "kargh", "E", 1064356144, "kargh", "E", 1064523165, "kargh", "E", 1064523260, "kargh", "E", 1064541384, "kargh", "E", 1067812275, "kargh", "P", 1067812307, "kargh", "P", 1067812430, "kargh", "P", 1069064438, "kargh", "P", 1072144257, "kargh", "P", 1072144292, "kargh", "P", 1072144337, "kargh", "P", 1081001844, "kargh", "E", 1081095721, "kargh", "E", 1084214666, "nino", "P", 1089180761, "tangerine", "E", 1089631629, "tangerine", "E", 1099265372, "kylass", "E", 1136916344, "kargh", "P", 1136916401, "kargh", "P", 1136916464, "kargh", "P", 1137877822, "tunk_bodin", "X", 1137878504, "tunk_bodin", "X", 1163019534, "tunk_bodin", "X", 1163019723, "tunk_bodin", "X", 1172584715, "librarysage", "R", 1172982314, "tonyd", "E", 1352530370, "jominey", "E", 1352530639, "jominey", "E", 1352530756, "jominey", "E", 1352530944, "jominey", "E", 1352531028, "jominey", "E", 1352531165, "jominey", "E", 1352531185, "jominey", "E", 1493748310, "jominey", "E", 1493748463, "jominey", "E", 1495393943, "jominey", "E", 1495393996, "jominey", "E", 1495394055, "jominey", "E", 1495394091, "jominey", "E", 1495394117, "jominey", "E", 1495394167, "jominey", "E", 1569978036, "jominey", "E", 1569978069, "jominey", "E", 1569978139, "jominey", "E", 1569978235, "jominey", "E", 1569978380, "jominey", "X", 1569978401, "jominey", "E", 1569978421, "jominey", "E", 1569978443, "jominey", "E", 1569978582, "jominey", "E", 1569978617, "jominey", "E", 1569978757, "jominey", "E", 1569978877, "jominey", "E", 1569978927, "jominey", "E", 1569978958, "jominey", "E", 1569979186, "jominey", "E", 1569979218, "jominey", "E", 1569979365, "jominey", "E", 1569979517, "jominey", "E", 1569979588, "jominey", "E", 1569979677, "jominey", "E", 1569979809, "jominey", "E", 1569979841, "jominey", "E", 1569979911, "jominey", "E", 1569979976, "jominey", "E", 1569980002, "jominey", "E", 1569980046, "jominey", "E", 1569980110, "jominey", "E", 1569980134, "jominey", "E", 1569980172, "jominey", "E", 1569980389, "jominey", "E", 1569980484, "jominey", "E", 1569980581, "jominey", "E", 1569980635, "jominey", "E", 1569980653, "jominey", "E", 1569980718, "jominey", "E", 1569980774, "jominey", "E", 1569980849, "jominey", "E", 1569980937, "jominey", "E", 1569980992, "jominey", "E", 1569981105, "jominey", "E", 1569981269, "jominey", "E", 1569981375, "jominey", "E", 1569981404, "jominey", "E", 1569981473, "jominey", "E", 1569981558, "jominey", "E", 1569981629, "jominey", "E", 1569981666, "jominey", "E", 1569981698, "jominey", "E", 1569981732, "jominey", "E", 1569981768, "jominey", "E", 1569981799, "jominey", "E", 1569981857, "jominey", "E", 1569981893, "jominey", "E", 1569981942, "jominey", "E", 1569981968, "jominey", "E", 1569982023, "jominey", "E", 1569982069, "jominey", "E", 1569982128, "jominey", "E", 1569982147, "jominey", "E", 1569982181, "jominey", "E", 1569982211, "jominey", "E", 1569982241, "jominey", "E", 1569982306, "jominey", "E", 1569982334, "jominey", "E", 1569982375, "jominey", "E", 1569982396, "jominey", "E", 1569982434, "jominey", "E", 1569982491, "jominey", "E", 1569982568, "jominey", "E", 1569982601, "jominey", "E", 1569982621, "jominey", "E", 1569982715, "jominey", "E", 1569982842, "jominey", "E", 1569982860, "jominey", "E", 1569982968, "jominey", "E", 1569983024, "jominey", "E", 1569983202, "jominey", "E", 1569983243, "jominey", "E", 1569983342, "jominey", "E", 1569983378, "jominey", "E", 1569983473, "jominey", "E", 1569983501, "jominey", "E", 1569983521, "jominey", "E", 1569983574, "jominey", "E", 1569983854, "jominey", "E", 1569983907, "jominey", "E", 1569983924, "jominey", "E", 1569983948, "jominey", "E", 1569984007, "jominey", "E", 1569984065, "jominey", "E", 1569984103, "jominey", "E", 1569984200, "jominey", "E", 1569984344, "jominey", "E", 1569984752, "jominey", "E", 1569984961, "jominey", "E", 1569985047, "jominey", "E", 1569985101, "jominey", "E", 1569985141, "jominey", "E", 1569985394, "jominey", "E", 1569985434, "jominey", "E", 1569985459, "jominey", "E", 1569985559, "jominey", "E", 1569986477, "jominey", "E", 1569986539, "jominey", "E", 1569986729, "jominey", "E", 1569987046, "jominey", "E", 1570071163, "jominey", "E", 1570284037, "jominey", "E", 1570284136, "jominey", "E", 1570284157, "jominey", "E", 1570285848, "jominey", "R", 1570323149, "jominey", "E", 1570323163, "jominey", "E", 1570323170, "jominey", "E", 1570323343, "jominey", "E", 1572061346, "jominey", "E", 1572061403, "jominey", "E", 1573688696, "jominey", "E", 1573688734, "jominey", "E", 1573688925, "jominey", "E", 1573688981, "jominey", "E", 1573689010, "jominey", "E", 1573689045, "jominey", "E", 1573689068, "jominey", "E", 1573689098, "jominey", "E", 1573689149, "jominey", "E", 1573689166, "jominey", "E", 1573689217, "jominey", "E", 1573689228, "jominey", "E", 1573689278, "jominey", "E", 1573689382, "jominey", "E", 1573689421, "jominey", "E", 1573689459, "jominey", "E", 1573689492, "jominey", "E", 1573689523, "jominey", "E", 1573689563, "jominey", "E", 1573689610, "jominey", "E", 1573689632, "jominey", "E", 1601839225, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="theatre:id">"IC"</Core:Property>
      <Core:Property property="timesused">30613</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
