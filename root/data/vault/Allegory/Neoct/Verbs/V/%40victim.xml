<object clone="/usr/SkotOS/obj/verb" owner="SkotOS">
  <Socials:Verb imp="@victim" evoke="optional" audible="false" private="false" secret="false" obscured="false" target-abstracts="false" disabled="false" ooc="true" raw_verb="true">
    <Ur:UrObject/>
    <Socials:SocialObjects/>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="merry:global:command">
         X[M] if(\$line \&\& \$actor."udat:host") \{
    if(replace_strings(\$line, "\\"", "", ".", "") == "all") \{
        \$people = Call(\$\{TextIF:Info\}, "bodies");
 
        for(\$i = 0; \$i \< sizeof(\$people); \$i++) \{
            \$victim = \$people[\$i];
            if(\$victim."trait:victim") \{
                EmitTo(\$actor, "Victim status for " + capitalize(Str(\$victim."skotos:charname")) + " is toggled ON.");
            \} else \{
                EmitTo(\$actor, "Victim status for " + capitalize(Str(\$victim."skotos:charname")) + " is toggled OFF.");
            \}
        \}
        return FALSE;
    \}

    if(\$victim = common::lookup(\$name: replace_strings(\$line, "\\"", ""))) \{
        if(\$victim."trait:victim") \{
            EmitTo(\$actor, "Victim status for " + capitalize(Str(\$victim."skotos:charname")) + " is toggled ON.");
        \} else \{
            EmitTo(\$actor, "Victim status for " + capitalize(Str(\$victim."skotos:charname")) + " is toggled OFF.");
        \}
        return FALSE;
    \}

    EmitTo(\$actor, "Cannot locate anyone named " + Str(\$line) + ".");
    return FALSE;
\}

if(\$actor."trait:victim") \{
    EmitTo(\$actor, TAG("Your victim status is currently toggled ON.", "imp"));
    interaction::question(\$actor: \$actor, \$question: "Do you want to toggle off your victim status?", \$yes_ob: \$this, \$yes_fun: "consent", \$no: "Your victim status remains ON.", \$expire: "Your victim status remains ON.", \$expires: 30, \$par: ([ "victim": \$actor ]));
    return FALSE;
\}

EmitTo(\$actor, TAG("By flagging yourself as a victim, you are giving consent to be a victim for current and future plots. As a victim, your character could be subject to acts of violence or bad luck. Consenting as a victim is not the same as consenting for death. Death can only occur with explicit consent given at the time of death.", "imp"));

interaction::question(\$actor: \$actor, \$question: "Do you want to toggle on your victim status?", \$yes_ob: \$this, \$yes_fun: "consent", \$no: "Your victim status remains OFF.", \$expire: "Your victim status remains OFF.", \$expires: 30, \$par: ([ "victim": \$actor ]));

return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:consent">
         X[M] \$victim = \$par["victim"];


if(\$victim."trait:victim") \{
    \$victim."trait:victim" = nil;
    EmitTo(\$victim, TAG("You toggle your victim status OFF.", "imp"));
\} else \{
    \$victim."trait:victim" = 1;
    EmitTo(\$victim, TAG("You toggle your victim status ON.", "imp"));
\}

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052091, "-", "SYNC", 1221752477, "???", "R", 1574136520, "jominey", "E", 1574136575, "jominey", "E", 1574137213, "jominey", "E", 1574137283, "jominey", "E", 1574137326, "jominey", "E", 1574137562, "jominey", "E", 1574137904, "jominey", "E", 1574138166, "jominey", "E", 1574138344, "jominey", "E", 1574138427, "jominey", "E", 1574138503, "jominey", "E", 1574138565, "jominey", "E", 1574138597, "jominey", "E", 1574138762, "jominey", "E", 1574138903, "jominey", "E", 1574138950, "jominey", "E", 1574139172, "jominey", "E", 1574139213, "jominey", "E", 1574139269, "jominey", "E", 1574810897, "jominey", "E", 1574810972, "jominey", "E", 1574810989, "jominey", "E" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
