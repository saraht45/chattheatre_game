<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:browshape">
         "broad"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "obese"
      </Core:Property>
      <Core:Property property="export:appearance:cheekshape">
         "jowly"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "straight"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "brown"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "heavy lidded"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "dark grey"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "close-cropped"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "bristly"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "short"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "full"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "plump"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "bulbous"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "ruddy"
      </Core:Property>
      <Core:Property property="export:banker">1</Core:Property>
      <Core:Property property="export:chargen:age">
         "45"
      </Core:Property>
      <Core:Property property="export:trading:lists">
         (\{ \<Allegory:NPCs:NIPs:TradingLists:General:Banker\> \})
      </Core:Property>
      <Core:Property property="export:trait:age">
         "45"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "short obese man"
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:inherit:react:ask-dob%trading">
         \<Allegory:Lib:Economy:TradingLib\>
      </Core:Property>
      <Core:Property property="merry:witness-post:enter-from">
         X[M] if(\$this.alreadyemoting) \{  
    return TRUE;  
\}   
  
\$this.alreadyemoting = 1;  
  
\$delay(1, TRUE, "2cc2");  
  
switch(random(4)) \{  
  case 0:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " squints through his pair of thin bronze spectacles, \\"Welcome! Let me know if you need anything.\\" ", "social:third"));  
    break;  
  \}  
  case 1:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles jovially, \\"Aha! Welcome to The Endrizzi Exchange.\\" ", "social:third"));  
    break;  
  \}  
  case 2:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " adjusts his pair of thin bronze spectacles, \\"Welcome to The Endrizzi Exchange. If there's anything I can do for you, just say so!\\" ", "social:third"));  
    break;  
  \}  
  default:  
  \{  
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " steps behind a nondescript counter, \\"Good to see you! How can I help you today?\\" ", "social:third"));    break;  
  \}  
\}  
  
\$delay(5, TRUE, "21fb");  
  
\$this.alreadyemoting = nil;  
  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1573100058, "sendnoodlez", "X", 1573100425, "sendnoodlez", "R", 1586902106, "sendnoodlez", "R", 1588045274, "sendnoodlez", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
