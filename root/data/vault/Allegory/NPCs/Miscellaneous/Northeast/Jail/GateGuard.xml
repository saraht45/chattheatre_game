<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:NPCs:Miscellaneous:General:UrGuardConsulate)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:allowed:guilds">
         (\{ \<Allegory:Guilds:cityguard\> \})
      </Core:Property>
      <Core:Property property="export:appearance:browshape">
         "low"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "broad-shouldered"
      </Core:Property>
      <Core:Property property="export:appearance:cheekshape">
         "razor-sharp"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "overhanging"
      </Core:Property>
      <Core:Property property="export:appearance:eyecolor">
         "grey"
      </Core:Property>
      <Core:Property property="export:appearance:eyeshape">
         "baggy"
      </Core:Property>
      <Core:Property property="export:appearance:haircolor">
         "dusky black"
      </Core:Property>
      <Core:Property property="export:appearance:hairlength">
         "close-cropped"
      </Core:Property>
      <Core:Property property="export:appearance:hairtype">
         "shaggy"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "towering"
      </Core:Property>
      <Core:Property property="export:appearance:lipshape">
         "thick"
      </Core:Property>
      <Core:Property property="export:appearance:mouthshape">
         "large"
      </Core:Property>
      <Core:Property property="export:appearance:nailapp">
         "trim"
      </Core:Property>
      <Core:Property property="export:appearance:noseshape">
         "aquiline"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "creamy"
      </Core:Property>
      <Core:Property property="export:chargen:age">
         "45"
      </Core:Property>
      <Core:Property property="export:gatedetail">
         "exit-northeast"
      </Core:Property>
      <Core:Property property="export:guild">
         \<Allegory:Guilds:cityguard\>
      </Core:Property>
      <Core:Property property="export:trait:age">
         "45"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "towering broad-shouldered man"
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="merry:lib:respond">
         X[M] \$str = replace_strings(\$evoke, "\\"", "", ".", "");     
     
if(\$this."allowed:people") \$guestlist = \$this."allowed:people" - (\{ nil \});     
     
if(\$actor.guild == \$this.guild \&\& (\$actor."guild:guild_seneschal" \|\| \$actor."guild:rank" == 1)) \{     
    if(contains(lower_case(\$str), "guest list")) \{     
        if(!\$guestlist \|\| !sizeof(\$guestlist)) \{     
            \$response = "Currently, there is no one on the guest list.";     
        \} else \{     
            \$response = "The following people are on the guest list: ";     
     
            for(\$i = 0; \$i \< sizeof(\$guestlist); \$i++) \{     
                \$response += capitalize(Str(\$guestlist[\$i]."skotos:charname"));     
                if(\$i \< sizeof(\$guestlist)-1) \$response += ", ";     
            \}     
        \}     
    \} else \{     
        \$temp = explode(\$str, " ");     
     
        if(sizeof(\$temp) \&\& sizeof(\$temp) == 2) \{     
            \$name = \$temp[1];     
            \$body = common::lookup(\$name: \$name);     
     
            if(lower_case(\$temp[0]) == "allow") \{     
                if(!\$body) \{     
                    \$response = "I'm sorry but I don't know who you're talking about.";     
                \} else \{     
                    if(member(\$body, \$guestlist)) \{     
                        \$response = Str(\$body."skotos:playercapname") + " is already on the guest list.";     
                    \} else \{     
                        \$guestlist += (\{ \$body \});     
                        \$response = "Done.";     
                    \}     
                \}     
            \} else if(lower_case(\$temp[0]) == "deny") \{     
                if(!\$body) \{     
                    \$response = "I'm sorry but I don't know who you're talking about.";     
                \} else \{     
                    if(!member(\$body, \$guestlist)) \{     
                        \$response = Str(\$body."skotos:playercapname") + " is not on the guest list.";     
                    \} else \{     
                        \$guestlist -= (\{ \$body \});     
                        \$response = "Done.";     
                    \}     
                \}     
            \}     
        \}     
    \}     
     
    \$hint = "OOC Guard Syntax\\n";     
    \$hint += "To allow Bob: say to guard 'allow Bob'" + "\\n";     
    \$hint += "To deny Bob: say to guard 'deny Bob'" + "\\n";     
    \$hint += "To see the current guest list: say to guard 'Can I see the guest list?'" + "\\n";     
\}     
     
if(!\$response) \{      
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " remains silent.", "social:first"));     
    if(\$hint) \{     
        EmitTo(\$actor, \$hint);     
    \}     
\} else \{     
    EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " responds dutifully, \\"" + \$response + "\\"", "social:first"));     
\}     
     
\$this."allowed:people" = \$guestlist;     
     
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1572794891, "sendnoodlez", "X", 1572794904, "sendnoodlez", "E", 1574893928, "sendnoodlez", "E", 1574900862, "sendnoodlez", "E", 1574900882, "sendnoodlez", "E", 1574900903, "sendnoodlez", "E", 1691726088, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="stage">"complete"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
