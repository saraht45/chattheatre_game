<object clone="/obj/properties" owner="jominey">
  <Core:PropertyContainer>
    <Ur:UrObject urobject="OBJ(Allegory:Theatre:CharGen:ChoicesAppearance)"/>
    <Core:PCProperties>
      <Core:Property property="export:autoendpage">
         "end"
      </Core:Property>
      <Core:Property property="export:characterslots">
         3
      </Core:Property>
      <Core:Property property="export:html:choices">
         X[S] \<p\>
[height] in height and [build] in build, you are a \$(body.trait:sex) of [skin] complexion with a head of [hairlength] [hairtype] [haircolor] hair that is worn [hairstyle].
\</p\>
\<p\>
Your [eyeshape] [eyecolor] eyes are accentuated by [eyebrowshape] eyebrows beneath a [browshape] forehead. A [noseshape] nose, [mouthshape] mouth with [lipshape] lips, [earshape] ears, and [jawshape] jaw \{? equal \| \$(body.base:gender) \| 1 \| covered in a [faciallength] [facialhair] \} complete the appearance.
\</p\>
\<sbr/\>\<sbr/\>
[submit]
      </Core:Property>
      <Core:Property property="export:html:intro">
         X[S] \<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
\</style\>
\<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$[/* run some initial code */                 
   ::initialize();                 
   ::figureState();]
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>\$(title)\</title\>
    \<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"\>\</script\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
    \$(Allegory:Theatre:CharGen:CreateCharacter.xtra:javascript)
    \$(Allegory:Theatre:CharGen:CreateCharacter.xtra:stylesheet)
\</head\>
\<div class="main-wrapper"\>
    \<div class="header"\>
          \<img class="logo" src="https://allegoryofempires.com/wp-content/uploads/Website/logo2.png"/\>
          \<img alt="Character Generation" class="chargen" src="https://allegoryofempires.com/wp-content/uploads/Website/character-generation.png"/\>
    \</div\>
    \<div class="main"\>
          \<div class="content"\>\<br/\>
              \<img alt="Introduction" class="heading" id="intro" src="https://allegoryofempires.com/wp-content/uploads/Website/introduction.png"/\>\<br/\>
\<div id="textarea"\>Welcome to the world of Allegory of the Empires. A world full of intrigue and opportunity, danger and excitement, thrill and travail. Prepare yourself to dive into the story, bringing this new character to life and weave their story into the stories of others as you join the adventure, finding love, loss, mystery and success. The story is already being told. How will your presence affect it?\<br/\>It begins now. Are you ready?\</div\>
          \</div\>
    \</div\>
\</div\>
\<div class="footer"\>
    \<div id="restart_btn"\>\<img alt="Return to character selection" class="button" src="https://allegoryofempires.com/wp-content/uploads/Website/startover.png"/\>\</div\>
    \<a href="http://game.allegoryofempires.com/SAM/Prop/Allegory%3ATheatre%3ACharGen%3ACreateCharacter/Index"\>\<div id="cont_btn"\>\<img alt="Continue" class="button" src="https://allegoryofempires.com/wp-content/uploads/Website/continue.png"/\>\</div\>\</a\>
\</div\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="export:premium_bonus_characterslots">
         2
      </Core:Property>
      <Core:Property property="export:startpage">
         "appearance"
      </Core:Property>
      <Core:Property property="export:title">
         "Allegory of Empires: Character Generator"
      </Core:Property>
      <Core:Property property="export:xtra:javascript">
         X[S] \<script language="javascript"\>
  function wrapper_onload() \\\{
      if (this.body_onload) \\\{
          body_onload();
      \\\}
  \\\}
  function toggle_note(note) \\\{
      content = document.getElementById(note + "_content");
      if (!this["NoteStatus"])
          this["NoteStatus"] = new Object();
      if (!this["NoteStatus"][note])
          this["NoteStatus"][note] = "off";
      if (this["NoteStatus"][note] == "on") \\\{
          this["NoteStatus"][note] = "off";
          content.innerHTML = '';
      \\\} else \\\{
          this["NoteStatus"][note] = "on";
          content.innerHTML = document.getElementById(note).innerHTML;
      \\\}
  \\\}
  function update_span(id) \\\{
    var span, optval;
    if(document.getElementById("span_" + id))
    \\\{
      span = document.getElementById("span_" + id);
      optval = document.getElementById("select_" + id);
      optval = optval.options[optval.selectedIndex].value.substring(0, 1);
      if (optval == 'a' \\\|\\\| optval == 'e' \\\|\\\| optval == 'i' \\\|\\\| optval == 'o' \\\|\\\|
        optval == 'u') \\\{
        span.innerHTML = 'an';
      \\\} else \\\{
        span.innerHTML = 'a';
      \\\}
    \\\}
  \\\}
  function reset_span(id, tosave) \\\{
      // Hack to work around FireFox blanking potentially hidden selects under
      // certain conditions.
      var span = document.getElementById("span_" + id);
      var list = tosave.split("\\\|");
      for (var i = 0; i \\\< list.length; i++) \\\{
          var optvals, optval;
          optvals = document.getElementsByName("input_" + list[i]);
          optval = optvals[optvals.length - 1];
          // alert("Saving select value for '" + list[i] + "': " + optval.options[optval.selectedIndex].value);
          this["SelectStatus"][list[i]] =
              optval.options[optval.selectedIndex].value;
      \\\}
      // Refresh contents.
      span.innerHTML = document.getElementById(id).innerHTML;
      for (var i = 0; i \\\< list.length; i++) \\\{
          var selval = this["SelectStatus"][list[i]];
          var optvals, optval;
          optvals = document.getElementsByName("input_" + list[i]);
          optval = optvals[optvals.length - 1];
          // alert("Restoring select value: " + selval);
          for (var j = 0; j \\\< optval.options.length; j++) \\\{
              if (optval.options[j].value == selval) \\\{
                  optval.selectedIndex = j;
                  // alert("SelectedIndex is now set to: " + j);
                  optval.options[j].selected = true;
              \\\}
          \\\}
      \\\}
  \\\}
  function hide_span(id, id_select, id_value, tosave, tosave_text) \\\{
      // This script uses the last instance of each select it finds to rescue/restore
      // the tosave values, to work around the misfeature that getElementById
      // only returns one object even when there is more than one and it might be the
      // placeholder select instead of the actual one, meaning it has the wrong value.
      var span, optval;
      span = document.getElementById("span_" + id);
      optval = document.getElementById("select_" + id_select);
      optval = optval.options[optval.selectedIndex].value;
      if (!this["SelectStatus"]) \\\{
          this["SelectStatus"] = new Object();
      \\\}
      if (!this["SavedSpans"]) \\\{
          this["SavedSpans"] = new Object();
      \\\}
      if (optval == id_value) \\\{
         if (span.innerHTML != '') \\\{
            if (tosave.length \\\> 0) \\\{
                var list = tosave.split("\\\|");
                for (var i = 0; i \\\< list.length; i++) \\\{
                    var optvals, optval;
                    optvals = document.getElementsByName("input_" + list[i]);
                    optval = optvals[optvals.length - 1];
                    // alert("Saving select value for '" + list[i] + "': " + optval.options[optval.selectedIndex].value);
                    this["SelectStatus"][list[i]] =
                        optval.options[optval.selectedIndex].value;
                \\\}
            \\\}
            this["SavedSpans"][id] = span.innerHTML;
            span.innerHTML = '';
         \\\}
      \\\} else \\\{
        if (span.innerHTML == '') \\\{
            span.innerHTML = this["SavedSpans"][id];
            if (tosave.length \\\> 0) \\\{
                var list = tosave.split("\\\|");
                for (var i = 0; i \\\< list.length; i++) \\\{
                    var selval = this["SelectStatus"][list[i]];
                    var optvals, optval;
                    optvals = document.getElementsByName("input_" + list[i]);
                    optval = optvals[optvals.length - 1];
                    // alert("Restoring select value: " + selval);
                    for (var j = 0; j \\\< optval.options.length; j++) \\\{
                        if (optval.options[j].value == selval) \\\{
                            optval.selectedIndex = j;
                            // alert("SelectedIndex is now set to: " + j);
                            optval.options[j].selected = true;
                        \\\}
                    \\\}
                \\\}
            \\\}
        \\\}
      \\\}
  \\\}
  function barewin(url, title) \\\{
      open(url, title, 'width=800,height=600,hotkeys=no');
  \\\}
  function popupwin(url, title) \\\{
      open(url, title, 'width=800,height=600,hotkeys=no,resizable=yes');
  \\\}
  function showDesc(el) \\\{
      var id = el.id;
      var classDesc = document.getElementById("classes-description");
      var fighterDesc = document.getElementById("fighter-description");
      var rangerDesc = document.getElementById('ranger-description');
      var rogueDesc = document.getElementById('rogue-description');
      var academicDesc = document.getElementById('academic-description');
      var tradesmanDesc = document.getElementById('tradesman-description');
      var fighterImg = document.getElementById("fighter-image");
      var rangerImg = document.getElementById('ranger-image');
      var rogueImg = document.getElementById('rogue-image');
      var academicImg = document.getElementById('academic-image');
      var tradesmanImg = document.getElementById('tradesman-image');
     if((id === "fighter" \\\&\\\& fighterDesc.style.display === "block") \\\|\\\| (id === "ranger" \\\&\\\& rangerDesc.style.display === "block") \\\|\\\| (id === "rogue" \\\&\\\& rogueDesc.style.display === "block") \\\|\\\| (id === "academic" \\\&\\\& academicDesc.style.display === "block") \\\|\\\| (id === "tradesman" \\\&\\\& tradesmanDesc.style.display === "block")) \\\{
          classDesc.style.display = "block";
          fighterDesc.style.display = "none";
          fighterImg.style.backgroundImage = null;
          rangerDesc.style.display = "none";
          rangerImg.style.backgroundImage = null;
          rogueDesc.style.display = "none";
          rogueImg.style.backgroundImage = null;
          academicDesc.style.display = "none";
          academicImg.style.backgroundImage = null;
          tradesmanDesc.style.display = "none";
          tradesmanImg.style.backgroundImage = null;
     \\\} else \\\{
      if(id === "fighter") \\\{
          classDesc.style.display = "none";
          fighterDesc.style.display = "block";
          fighterImg.style.backgroundImage = "url('https://allegoryofempires.com/wp-content/uploads/Website/badge-fighter-color.png')";
          rangerDesc.style.display = "none";
          rangerImg.style.backgroundImage = null;
          rogueDesc.style.display = "none";
          rogueImg.style.backgroundImage = null;
          academicDesc.style.display = "none";
          academicImg.style.backgroundImage = null;
          tradesmanDesc.style.display = "none";
          tradesmanImg.style.backgroundImage = null;
      \\\}
      if(id === "ranger") \\\{
          classDesc.style.display = "none";
          fighterDesc.style.display = "none";
          fighterImg.style.backgroundImage = null;
          rangerDesc.style.display = "block";
          rangerImg.style.backgroundImage = "url('https://allegoryofempires.com/wp-content/uploads/Website/badge-ranger-color.png')";
          rogueDesc.style.display = "none";
          rogueImg.style.backgroundImage = null;
          academicDesc.style.display = "none";
          academicImg.style.backgroundImage = null;
          tradesmanDesc.style.display = "none";
          tradesmanImg.style.backgroundImage = null;
      \\\}
      if(id === "rogue") \\\{
          classDesc.style.display = "none";
          fighterDesc.style.display = "none";
          fighterImg.style.backgroundImage = null;
          rangerDesc.style.display = "none";
          rangerImg.style.backgroundImage = null;
          rogueDesc.style.display = "block";
          rogueImg.style.backgroundImage = "url('https://allegoryofempires.com/wp-content/uploads/Website/badge-rogue-color.png')";
          academicDesc.style.display = "none";
          academicImg.style.backgroundImage = null;
          tradesmanDesc.style.display = "none";
          tradesmanImg.style.backgroundImage = null;
      \\\}
      if(id === "academic") \\\{
          classDesc.style.display = "none";
          fighterDesc.style.display = "none";
          fighterImg.style.backgroundImage = null;
          rangerDesc.style.display = "none";
          rangerImg.style.backgroundImage = null;
          rogueDesc.style.display = "none";
          rogueImg.style.backgroundImage = null;
          academicDesc.style.display = "block";
          academicImg.style.backgroundImage = "url('https://allegoryofempires.com/wp-content/uploads/Website/badge-academic-color.png')";
          tradesmanDesc.style.display = "none";
          tradesmanImg.style.backgroundImage = null;
      \\\}
      if(id === "tradesman") \\\{
          classDesc.style.display = "none";
          fighterDesc.style.display = "none";
          fighterImg.style.backgroundImage = null;
          rangerDesc.style.display = "none";
          rangerImg.style.backgroundImage = null;
          rogueDesc.style.display = "none";
          rogueImg.style.backgroundImage = null;
          academicDesc.style.display = "none";
          academicImg.style.backgroundImage = null;
          tradesmanDesc.style.display = "block";
          tradesmanImg.style.backgroundImage = "url('https://allegoryofempires.com/wp-content/uploads/Website/badge-tradesman-color.png')";
      \\\}
    \\\}
  \\\}
  function chooseClass(el) \\\{
      var id = el.id;
      var i, temp, btn;
      var divs = [ "one-handed-fighter-class", "two-handed-fighter-class", "dual-wielding-fighter-class", "unarmed-fighter-class", "ranger-class", "assassin-class", "spy-class", "thief-class", "body-servant-class", "healer-class", "socialite-class", "blacksmith-class", "bookbinder-class", "carpenter-class", "dyer-class", "jeweler-class", "miner-class", "seamstress-class", "stonemason-class", "weaver-class", "woodcutter-class", "dyer-class", "body-servant-class" ];
      for(i = 0; i \\\< divs.length; i++) \\\{
          temp = document.getElementById(divs[i]);
          if(divs[i] != id) \\\{
              temp.checked = false;
          \\\}
      \\\}
      btn = "0";
      for(i = 0; i \\\< divs.length; i++) \\\{
          temp = document.getElementById(divs[i]);
          if(temp.checked) \\\{
              this["CharClass"] = divs[i];
              btn = "1";
          \\\}
      \\\}
      if(btn === "1") \\\{
          document.getElementById("cont_btn").style.visibility = "visible";
      \\\} else \\\{
          document.getElementById("cont_btn").style.visibility = "hidden";
      \\\}
  \\\}
  function forceClick() \\\{
      document.getElementById("hidden-btn").click();
  \\\}
\</script\>
      </Core:Property>
      <Core:Property property="export:xtra:state:appearance">
         X[S] \<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
    #back_btn \\\{
        visibility: hidden;
    \\\}
\</style\>
\\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!-- find which autopage the player is at. get the choices for this page, as well as the page description --\\\>
\$[\$autoNumber = 1;        
  \$autoChoices = Get(this, "html:choices");        
  \$body = Obj(\$characterref);       
  if(!\$body) \$body = Obj(\$characterref);]
\<br/\>
\<p id="textarea" style="text-align: justify"\>
Time passes as your mind continues to wander, not paying attention all too much to the changing surroundings. You happen to catch a glimpse of yourself in a nearby \{ mirror \| stranger's shield \| metallic surface \} noting the familiar reflection that greets your meandering eye:\<sbr/\>\<sbr/\>
\<span id="choices"\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$autoChoices);]
  \<zform style="display:inline" actbody="\$(body)" actchoices="\$(choices)" actnumber="\$(autoNumber)"\>
  \<p style="text-align:justify" class="appearance"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \|
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$gender: \$body."base:genderstring");]
        \<select style="display:linline" ID="select_counter\$[Str(\$counter)]" NAME="counter\$[Str(\$counter)]" SIZE="1" onChange="update_span('counter\$[Str(\$counter)]');"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1" value="\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option value="ordinary"\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option value="\$(thisvar)"\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
      \|\}
    \</for\>
    You are wearing
    \<select id="clothing" name="clothing" style="display:inline"\>
        \<option value="feminine_attire"\>simple feminine travel attire\</option\>
        \<option value="masculine_attire"\>simple masculine travel attire\</option\>
        \<option value="primitive_attire"\>primitive travel attire\</option\>
        \<option value="religious_attire"\>religious vestments\</option\>
        \<option value="martial_uniform"\>a martial uniform\</option\>
        \<option value="work_clothes"\>work clothes\</option\>
    \</select\>.
  \</p\>
    \<action\>
      \$[\$list = (\{ \});        
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)        
\{        
  if(sizeof(\$actchoices[\$i])\>=2)        
  \{        
    \$list += (\{ \$actchoices[\$i][1] \});        
  \}        
\}        
                  
for(\$i = 0; \$i \< sizeof(\$list); \$i++) \{        
    Set(\$actbody, "appearance:" + \$list[\$i], lower_case(GetVar("counter" + Str(\$i+1))));        
\}        
    Set(\$actbody, "export:trait:examine", nil);        
    Set(\$actbody, "trait:examine", nil);        
    Set(\$actbody, "export:trait:look", nil);        
    Set(\$actbody, "trait:look", nil);        
    Set(\$actbody, "chargen:humanized", "1");     
    \$actbody."chargen:clothing" = \$clothing;  
    Set(\$actbody, "chargen:state", "attributes");]
      \<redirect propob="\$(this)" characterref="\$(actbody)" dat="\$(dat)" body="\$(body)"/\>
    \</action\>
\<script language="javascript"\>
    function body_onload() \\\{
        update_span('counter1');
        update_span('counter2');
        update_span('counter3');
        update_span('counter4');
        update_span('counter5');
        update_span('counter6');
        update_span('counter7');
        update_span('counter8');
        update_span('counter9');
        update_span('counter10');
        update_span('counter11');
        update_span('counter12');
        update_span('counter13');
        update_span('counter14');
        update_span('counter15');
        update_span('counter16');
        update_span('counter17');
        update_span('counter18');
        update_span('counter19');
        update_span('counter20');
    \\\}
\</script\>
  \</zform\>
\</span\>
\</p\>
      </Core:Property>
      <Core:Property property="export:xtra:state:appearance:goback">
         X[S] \$[\$actbody."chargen:state" = nil;]
\<redirect propob="\$(this)" characterref="\$(characterref)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:attributes">
         X[S] \<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
\</style\>
\{? \| \$(error) \|
    \$[if(\$error == "no_selection") \$str = "You cannot leave an attribute selection blank.";        
          if(\$error == "duplicate_selection") \$str = "You cannot select an attribute twice.";        
          return ParseXML(\$str);]
\}
\$[if(\$body."temp:attr1") \$attr1_v = \$body."temp:attr1";        
    if(\$body."temp:attr2") \$attr2_v = \$body."temp:attr2";        
    if(\$body."temp:attr3") \$attr3_v = \$body."temp:attr3";        
    if(\$body."temp:attr4") \$attr4_v = \$body."temp:attr4";]
\<br/\>\<br/\>
\<div id="textarea"\>
\<zform actname="\$(name)" actbody="\$(body)" actdat="\$(dat)"\>
    \<p style="text-align:justify"\>
        The swaying of the ship becomes a monotonous motion as you daydream about the opportunities and unknowns that lie before you. A particularly large wave jolts your from your thoughts as a \{ young \| elderly \| middle-aged \} \{ man \| woman \} halts your fall with a laugh. After you recover your composure, a comfortable conversation fills the void.\<br/\>
"Good thing I'm fast enough to catch you!" your companion laughs. "How about you? What's your bragging rights?"\<br/\>\<br/\>"Me? Oh, I've been told I'm best known for my
         \$[\$str = "\<select id='attr1' name='attr1' style='display:inline' onchange='updatelist1();'\>";        
            \$str += "\<option value='' selected='1'\>--\</option\>";        
        
            \$str += "\<option value='strength'";        
            if(\$attr1_v == "strength") \$str += "selected='1'";        
            \$str += "\>strength\</option\>";        
        
            \$str += "\<option value='speed'";        
            if(\$attr1_v == "speed") \$str += "selected='1'";        
            \$str += "\>speed\</option\>";        
        
            \$str += "\<option value='resilience'";        
            if(\$attr1_v == "resilience") \$str += "selected='1'";        
            \$str += "\>resilience\</option\>";        
        
            \$str += "\<option value='perception'";        
            if(\$attr1_v == "perception") \$str += "selected='1'";        
            \$str += "\>perception\</option\>";        
        
            \$str += "\<option value='intelligence'";        
            if(\$attr1_v == "intelligence") \$str += "selected='1'";        
            \$str += "\>intelligence\</option\>";        
        
            \$str += "\<option value='charisma'";        
            if(\$attr1_v == "charisma") \$str += "selected='1'";        
            \$str += "\>charisma\</option\>";        
        
            \$str += "\</select\>";        
            return ParseXML(\$str);] and
        \$[\$str = "\<select id='attr2' name='attr2' style='display:inline' onchange='updatelist2();'\>";        
            \$str += "\<option value='' selected='1'\>--\</option\>";        
        
            \$str += "\<option value='strength'";        
            if(\$attr2_v == "strength") \$str += "selected='1'";        
            if(\$attr1_v == "strength") \$str += "disabled";        
            \$str += "\>strength\</option\>";        
        
            \$str += "\<option value='speed'";        
            if(\$attr2_v == "speed") \$str += "selected='1'";        
            if(\$attr1_v == "speed") \$str += "disabled";        
            \$str += "\>speed\</option\>";        
        
            \$str += "\<option value='resilience'";        
            if(\$attr2_v == "resilience") \$str += "selected='1'";        
            if(\$attr1_v == "resilience") \$str += "disabled";        
            \$str += "\>resilience\</option\>";        
        
            \$str += "\<option value='perception'";        
            if(\$attr2_v == "perception") \$str += "selected='1'";        
            if(\$attr1_v == "perception") \$str += "disabled";        
            \$str += "\>perception\</option\>";        
        
            \$str += "\<option value='intelligence'";        
            if(\$attr2_v == "intelligence") \$str += "selected='1'";        
            if(\$attr1_v == "intelligence") \$str += "disabled";        
            \$str += "\>intelligence\</option\>";        
        
            \$str += "\<option value='charisma'";        
            if(\$attr2_v == "charisma") \$str += "selected='1'";        
            if(\$attr1_v == "charisma") \$str += "disabled";        
            \$str += "\>charisma\</option\>";        
        
            \$str += "\</select\>";        
            return ParseXML(\$str);]." You right yourself in your seat and double-check your belongings, "I'm absolutely horrid when it comes to
        \$[\$str = "\<select id='attr3' name='attr3' style='display:inline' onchange='updatelist3();'\>";        
            \$str += "\<option value='' selected='1'\>--\</option\>";        
        
            \$str += "\<option value='strength'";        
            if(\$attr3_v == "strength") \$str += "selected='1'";        
            if(\$attr1_v == "strength" \|\| \$attr2_v == "strength") \$str += "disabled";        
            \$str += "\>strength\</option\>";        
        
            \$str += "\<option value='speed'";        
            if(\$attr3_v == "speed") \$str += "selected='1'";        
            if(\$attr1_v == "speed" \|\| \$attr2_v == "speed") \$str += "disabled";        
            \$str += "\>speed\</option\>";        
        
            \$str += "\<option value='resilience'";        
            if(\$attr3_v == "resilience") \$str += "selected='1'";        
            if(\$attr1_v == "resilience" \|\| \$attr2_v == "resilience") \$str += "disabled";        
            \$str += "\>resilience\</option\>";        
        
            \$str += "\<option value='perception'";        
            if(\$attr3_v == "perception") \$str += "selected='1'";        
            if(\$attr1_v == "perception" \|\| \$attr2_v == "perception") \$str += "disabled";        
            \$str += "\>perception\</option\>";        
        
            \$str += "\<option value='intelligence'";        
            if(\$attr3_v == "intelligence") \$str += "selected='1'";        
            if(\$attr1_v == "intelligence" \|\| \$attr2_v == "intelligence") \$str += "disabled";        
            \$str += "\>intelligence\</option\>";        
        
            \$str += "\<option value='charisma'";        
            if(\$attr3_v == "charisma") \$str += "selected='1'";        
            if(\$attr1_v == "charisma" \|\| \$attr2_v == "charisma") \$str += "disabled";        
            \$str += "\>charisma\</option\>";        
        
            \$str += "\</select\>";        
            return ParseXML(\$str);] and
        \$[\$str = "\<select id='attr4' name='attr4' style='display:inline'\>";        
            \$str += "\<option value='' selected='1'\>--\</option\>";        
        
            \$str += "\<option value='strength'";        
            if(\$attr4_v == "strength") \$str += "selected='1'";        
            if(\$attr1_v == "strength" \|\| \$attr2_v == "strength" \|\| \$attr3_v == "strength") \$str += "disabled";        
            \$str += "\>strength\</option\>";        
        
            \$str += "\<option value='speed'";        
            if(\$attr4_v == "speed") \$str += "selected='1'";        
            if(\$attr1_v == "speed" \|\| \$attr2_v == "speed" \|\| \$attr3_v == "speed") \$str += "disabled";        
            \$str += "\>speed\</option\>";        
        
            \$str += "\<option value='resilience'";        
            if(\$attr4_v == "resilience") \$str += "selected='1'";        
            if(\$attr1_v == "resilience" \|\| \$attr2_v == "resilience" \|\| \$attr3_v == "resilience") \$str += "disabled";        
            \$str += "\>resilience\</option\>";        
        
            \$str += "\<option value='perception'";        
            if(\$attr4_v == "perception") \$str += "selected='1'";        
            if(\$attr1_v == "perception" \|\| \$attr2_v == "perception" \|\| \$attr3_v == "perception") \$str += "disabled";        
            \$str += "\>perception\</option\>";        
        
            \$str += "\<option value='intelligence'";        
            if(\$attr4_v == "intelligence") \$str += "selected='1'";        
            if(\$attr1_v == "intelligence" \|\| \$attr2_v == "intelligence" \|\| \$attr3_v == "intelligence") \$str += "disabled";        
            \$str += "\>intelligence\</option\>";        
        
            \$str += "\<option value='charisma'";        
            if(\$attr4_v == "charisma") \$str += "selected='1'";        
            if(\$attr1_v == "charisma" \|\| \$attr2_v == "charisma" \|\| \$attr3_v == "charisma") \$str += "disabled";        
            \$str += "\>charisma\</option\>";        
        
            \$str += "\</select\>";        
            return ParseXML(\$str);]. Eventually the comfortable conversation turns into silence once more as the hours seem to drag on.
    \</p\> \<sbr/\>\<sbr/\>
    \<p style="text-align:justify"\>\<input style="float:right" type="submit" id="hidden-btn" value="Continue" class="submit-button"/\>\</p\>
    \<action\>
      \$[if(\$attr1 == "" \|\| \$attr2 == "" \|\| \$attr3 == "" \|\| \$attr4 == "") \{        
            \$no_selection = 1;        
            return 0;        
        \}        
                
        if(\$attr1 == \$attr2 \|\| \$attr1 == \$attr3 \|\| \$attr1 == \$attr4 \|\|        
           \$attr2 == \$attr3 \|\| \$attr2 == \$attr4 \|\|        
           \$attr3 == \$attr4) \{        
            \$duplicate_selection = 1;        
            return 0;        
        \}        
        
        \$actbody."temp:attr1" = \$attr1;        
        \$actbody."temp:attr2" = \$attr2;        
        \$actbody."temp:attr3" = \$attr3;        
        \$actbody."temp:attr4" = \$attr4;        
    
        if(\$actbody."chargen:converting") \{    
            \$actbody."chargen:state" = "second-class";    
        \} else \{    
            \$actbody."chargen:state" = "runscripts";    
        \}]
        \{? \| \$(no_selection) \| \<redirect propob="\$(this)" characterref="\$(actbody)" error="no_selection"/\> \|
          \{? \| \$(duplicate_selection) \| \<redirect propob="\$(this)" characterref="\$(actbody)" error="duplicate_selection"/\> \|
               \<redirect propob="\$(this)" characterref="\$(actbody)"/\> \}\}
    \</action\>
\<script\>
    function updatelist1() \\\{
        var e1 = document.getElementById("attr1");
        var i1 = e1.selectedIndex;
        var e2 = document.getElementById("attr2");
        var i2 = e2.selectedIndex;
        var e3 = document.getElementById("attr3");
        var i3 = e3.selectedIndex;
        var e4 = document.getElementById("attr4");
        var i4 = e4.selectedIndex;
        if(i1 == i2) e2.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e2.options[i].disabled = false;
        \\\}
        if(i1 == i3) e3.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e3.options[i].disabled = false;
        \\\}
        if(i1 == i4) e4.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e4.options[i].disabled = false;
        \\\}
        e2.options[i1].disabled = true;
        e2.options[i3].disabled = true;
        e2.options[i4].disabled = true;
        e3.options[i1].disabled = true;
        e3.options[i2].disabled = true;
        e3.options[i4].disabled = true;
        e4.options[i1].disabled = true;
        e4.options[i2].disabled = true;
        e4.options[i3].disabled = true;
    \\\}
    function updatelist2() \\\{
        var e1 = document.getElementById("attr1");
        var i1 = e1.selectedIndex;
        var e2 = document.getElementById("attr2");
        var i2 = e2.selectedIndex;
        var e3 = document.getElementById("attr3");
        var i3 = e3.selectedIndex;
        var e4 = document.getElementById("attr4");
        var i4 = e4.selectedIndex;
        if(i2 == i1) e1.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e1.options[i].disabled = false;
        \\\}
        if(i2 == i3) e3.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e3.options[i].disabled = false;
        \\\}
        if(i2 == i4) e4.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e4.options[i].disabled = false;
        \\\}
        e3.options[i1].disabled = true;
        e3.options[i2].disabled = true;
        e3.options[i4].disabled = true;
        e4.options[i1].disabled = true;
        e4.options[i2].disabled = true;
        e4.options[i3].disabled = true;
    \\\}
    function updatelist3() \\\{
        var e1 = document.getElementById("attr1");
        var i1 = e1.selectedIndex;
        var e2 = document.getElementById("attr2");
        var i2 = e2.selectedIndex;
        var e3 = document.getElementById("attr3");
        var i3 = e3.selectedIndex;
        var e4 = document.getElementById("attr4");
        var i4 = e4.selectedIndex;
        if(i3 == i1) e1.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e1.options[i].disabled = false;
        \\\}
        if(i3 == i2) e2.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e2.options[i].disabled = false;
        \\\}
        if(i3 == i4) e4.value = "";
        for(var i = 0; i \\\< 7; i++) \\\{
            e4.options[i].disabled = false;
        \\\}
        e4.options[i1].disabled = true;
        e4.options[i2].disabled = true;
        e4.options[i3].disabled = true;
    \\\}
\</script\>
\</zform\>\</div\>\<br/\>\<br/\>\<br/\>\<br/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:attributes:goback">
         X[S] \$[\$actbody."chargen:state" = nil;]
\<redirect propob="\$(this)" characterref="\$(actbody)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:auto">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!-- find which autopage the player is at. get the choices for this page, as well as the page description --\\\>
\$[\$autoNumber = 1;            
  \$autoChoices = Get(this, "auto:" + Str(\$autoNumber) + ":choices");]
\<h4\>Create Character: Appearance\</h4\>\<sbr/\>
(\<a href="http://game.allegoryofempires.com/SAM/Prop/Allegory:Theatre:CharGen:CreateCharacter/helppopup#3" target="_blank"\>help\</a\>)
\<p style="text-align: justify"\>
Time passes as your mind continues to wander, not paying attention all too much to the changing surroundings. You happen to catch a glimpse of yourself in a nearby \{ mirror \| stranger's shield \| metallic surface \} noting the familiar reflection that greets your meandering eye:\<sbr/\>\<sbr/\>
\<span id="choices"\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$autoChoices);]
  \<zform style="display:inline" actbody="\$(body)" actchoices="\$(choices)" actnumber="\$(autoNumber)"\>
  \<p style="text-align:justify"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \|
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$gender: \$body."base:genderstring", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select style="display:linline" ID="select_counter\$[Str(\$counter)]" NAME="counter\$[Str(\$counter)]" SIZE="1" onChange="update_span('counter\$[Str(\$counter)]');"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1" value="\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option value="ordinary"\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option value="\$(thisvar)"\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
      \|\}
    \</for\>
  \</p\>
    \<action\>
      \$[\$list = (\{ \});            
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)            
\{            
  if(sizeof(\$actchoices[\$i])\>=2)            
  \{            
    \$list += (\{ \$actchoices[\$i][1] \});            
  \}            
\}          
      
for(\$i = 0; \$i \< sizeof(\$list); \$i++) \{      
    Set(\$actbody, "appearance:" + \$list[\$i], GetVar("counter" + Str(\$i+1)));      
\}         
         
    Set(\$actbody, "chargen:state", "attributes");]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
\<script language="javascript"\>
    function body_onload() \\\{
        update_span('counter1');
        update_span('counter2');
        update_span('counter3');
        update_span('counter4');
        update_span('counter5');
        update_span('counter6');
        update_span('counter7');
        update_span('counter8');
        update_span('counter9');
        update_span('counter10');
        update_span('counter11');
        update_span('counter12');
        update_span('counter13');
        update_span('counter14');
        update_span('counter15');
        update_span('counter16');
        update_span('counter17');
        update_span('counter18');
        update_span('counter19');
        update_span('counter20');
    \\\}
\</script\>
  \</zform\>
\</span\>
\<h4\>\</h4\>
\<zact actbody="\$(body)"\>
\<p style="text-align:justify"\>\<font size="3"\>Wait, I don't want to be a \$(body.trait:animal)\</font\>\</p\>
  \<action\>
    \$[\$actbody."chargen:state" = nil;]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<zact actbody="\$(body)"\>
\<p style="text-align:justify"\>\<font size="3"\>I want to start over.\</font\>\</p\>
  \<action\>
    \$[Slay(\$actbody);]
    \<redirect propob="\$(this)"/\>
  \</action\>
\</zact\>
\{? \| \$(autoDescl) \|
\<span id="bottombox"\>
\$(autoDescl)
\</span\>
\}
\</p\>
      </Core:Property>
      <Core:Property property="export:xtra:state:char-bio">
         X[S] \<script\>
  function toggleRanks(nation) \\\{
    var selected = nation.value;
    var nations = [ [ "France", "france_rank_div" ], [ "Germany", "germany_rank_div" ], [ "Italy", "italy_rank_div" ], [ "Spain", "spain_rank_div" ], [ "England", "england_rank_div" ], [ "Scotland", "scotland_rank_div" ] ];
    var i, tempNation, tempDiv;
    for(i = 0; i \\\< nations.length; i++) \\\{
        tempNation = nations[i][0];
        tempDiv = nations[i][1];
        if(selected === tempNation) \\\{
            document.getElementById(tempDiv).style.display = 'block';
        \\\} else \\\{
            document.getElementById(tempDiv).style.display = 'none';
        \\\}
    \\\}
  \\\}
\</script\>
\<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
\</style\>
\\\<!-- confirm user is cast; offer chance to cancel --\\\>
\<div id="textarea"\>
\\\<!-- Check if the player has remaining character slots --\\\>
\<p\>
\$[/* Check how many characters we have already */                     
\$bodies = Udat::query_bodies_in_roster(\$user: \$name);                     
for(\$i = 0; \$i \< sizeof(\$bodies);)                     
\{                     
  if((\$bodies[\$i]."theatre:id" != Get(\$this, "theatre_id")) \|\| \$bodies[\$i].nocharcost)                     
  \{                     
    \$bodies -= (\{ \$bodies[\$i] \});                     
  \} else \{                     
    \$i++;                     
  \}                     
\}                     
                                                
if (!\$bodies) \{                     
  \$number = 0;                     
\} else \{                     
  \$number = sizeof(\$bodies);                     
\}                     
                                                
/* Check if we are allowed to add more */                     
\$allowed = Get(\$this, "characterslots");                     
/* If we are premium players */                     
if(\$dat."skotos:flags:premium") \{                     
  \$allowed += Get(\$this, "premium_bonus_characterslots");                     
\}                     
/* If we have our own extra slots */                     
if(Get(\$dat, "roster:extra")) \{                     
  \$allowed += Get(\$dat, "roster:extra");                     
\}                     
                                      
if(\$number \>= \$allowed) \{                     
  \$message = "You have "+Str(\$number)+" characters, and are allowed "+Str(\$allowed)+".";                     
  \$full_roster = TRUE;                     
\}                     
\$message = "You have "+Str(\$number)+" characters, and are allowed "+Str(\$allowed)+".";                     
return nil;]
\\\<!-- Check that we are allowed to create new characters --\\\>
\{? \| \$(full_roster) \| I'm sorry, you have already used up all your character slots. You will need to remove one of your current characters before creating a new one.\<sbr/\>
\| \<div style="color: red; font-weight: bold"\>
\$[\$str = "";                     
   if(\$firstname_error) \{                     
       if(contains(\$firstname_error, "taken_name")) \$str += "I'm sorry, but that name has already been used. Please choose another one.\<sbr/\>";                     
       if(contains(\$firstname_error, "single_name")) \$str += "I'm sorry, you may only use single-word names.\<sbr/\>";                     
       if(contains(\$firstname_error, "special_char")) \$str += "I'm sorry, but your name cannot contain any special characters.\<sbr/\>";                     
       if(contains(\$firstname_error, "long_name")) \$str += "I'm sorry, but your name cannot be longer than 12 characters.\<sbr/\>";                     
       if(contains(\$firstname_error, "no_name")) \$str += "You must enter a first name.\<sbr/\>";                     
   \}                     
                                      
   if(\$lastname_error) \{                     
       if(contains(\$lastname_error, "special_char")) \$str += "I'm sorry, but your name cannot contain any special characters.\<sbr/\>";                     
       if(contains(\$lastname_error, "long_name")) \$str += "I'm sorry, but your name cannot be longer than 15 characters.\<sbr/\>";                     
   \}                     
                                       
 return ParseXML(\$str);]
\{? \| \$(age_error) \| I'm sorry, please choose an age between 18 and 80. \}
\{? \| \$(rank_error) \| I'm sorry, that rank is no longer available to you. \} \</div\>
\<zform body="\$(body)" charclass="\$(charclass)" weapon="\$(weapon)" actname="\$(name)" actdat="\$(dat)"\>
\$["";          
  if(\$body) \{          
    \$body = Obj(\$body);           
    \$firstname = proper(\$body."skotos:charname");          
        
    if(Int(\$body."rank:rank") \> 6) \{          
        \$rank = Str(\$body."rank:rank");          
        if(strlen(\$rank) == 1) \$rank = "0" + \$rank;          
        \$purchasedRanks = ([ "Rank " + Str(\$rank):1 ]);          
    \} else \{  
        if(Int(\$body."rank:rank") \> 3) \{
            \$rank = "0" + Str(\$body."rank:rank");
            \$purchasedRanks = ([ "Rank " + Str(\$rank):1 ]);
        \} else \{
            \$rank = "03";    
        \}
    \}    
    EmitTo(\$\{Chatters:AE:ro:roo\}, dump_value(\$rank));
  \}]
\<table style="margin:auto;" width="90%"\>
  \<tr\>
    \<td\>
      \<p style="text-align: justify"\>
        The sun cresting the horizon casts a cool golden hue on your surroundings as you wait your turn in the slow-moving line. Travel papers in hand, you take one last look to ensure everything is in order.\</p\>
    \</td\>
  \</tr\>
\</table\>
\<br/\>
\<div style="margin:auto; background-image: url('https://allegoryofempires.com/wp-content/uploads/Website/scroll.png'); background-size: 100%; background-repeat: no-repeat; width:550px; height:382px"\>
\<center\>\<table style="font-family:papyrus; font-size:15px; font-weight:700;" border="0"\>
  \<tr\>\<td\>\<br/\>\</td\>\</tr\>
  \<tr\>\<td colspan="2"\>\<font size="5"\>\<center\>\<b\>Laissez Passer\</b\>\</center\>\</font\>\<br/\>\</td\>\</tr\>
  \<tr\>
    \<td\>Name:\</td\>
    \<td\>
         \<select style="text-align:left" name="gender" class="form"\>\<option value="female" selected="1"\>Miss\</option\>\<option value="male"\>Mister\</option\>\</select\>
         \{? \| \$(firstname) \|
           \$(firstname)
           \<input type="hidden" name="firstname" value="\$(firstname)"/\>
           \|\<input type="text" name="firstname" onfocus="this.value=''" value="First Name" class="form" size="10"/\> \}
         \<input type="text" name="lastname" onfocus="this.value=''" value="Last Name (optional)" class="form" size="20"/\>
    \</td\>
  \</tr\>
  \<tr\>
    \<td\>Age:\</td\>
    \<td\>\<input style="width:40px" type="number" name="age" min="18" max="80" value="20" class="form"/\>\</td\>
  \</tr\>
  \<tr\>
    \<td\>Birthplace:\</td\>
    \<td\>
        \<input type="text" onfocus="this.value=''" value="Village (optional)" style="width:100px" name="village" class="form"/\>
        \<select style="text-align:left" name="nation" id="nation" class="form" onchange="toggleRanks(this);"\>
          \<option value="France" selected="1"\>France\</option\>
          \<option value="Italy"\>Italy\</option\>
          \<option value="Scotland"\>Scotland\</option\>
          \<option value="Germany"\>Germany\</option\>
          \<option value="Spain"\>Spain\</option\>
          \<option value="England"\>England\</option\>
          \$[if(\$actdat."skotos:extra:regions") \{                     
                \$accountType = general::getAccountType(\$udat: \$dat);                     
                if(\$dat."testing:account-type") \$accountType = \$dat."testing:account-type";                     
                \$regions = \$actdat."skotos:extra:regions";                     
                if(sizeof(\$regions) \&\& member("africa", \$regions) \&\& \$accountType != "free") \{                     
                    return ParseXML("\<option value='africa'\>Africa\</option\>");                     
                \}                     
           \}]
        \</select\>
    \</td\>
  \</tr\>
  \<tr\>
    \<td valign="top"\>Rank:\</td\>
    \<td\>\<div id="france_rank_div" style="display:block"\> \$[\$str = "\<select style='text-align:left' id='france_rank' name='france_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";                     
                                      
          \$accountType = general::getAccountType(\$udat: \$dat);                     
          if(\$dat."testing:account-type") \$accountType = \$dat."testing:account-type";                                               
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}          
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                   
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                  
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "constabulary" \});                    
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                 
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "council", "Council", "church:social", "Church Social", "church:military", "Church Military", "social", "France Social", "military", "France Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                  
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                  
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";          
       
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}           
       
                 
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="scotland_rank_div" style="display:none"\> \$[\$str = "\<select style='text-align:left' name='scotland_rank' id='scotland_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";              
                 
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}          
             
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "constabulary" \});                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "England Social", "military", "England Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="germany_rank_div" style="display:none"\> \$[\$str = "\<select style='text-align:left' name='germany_rank' id='germany_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";             
                  
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}                 
          
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                      
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "constabulary" \});                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "Germany Social", "military", "Germany Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="italy_rank_div" style="display:none;"\> \$[\$str = "\<select style='text-align:left' name='italy_rank' id='italy_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";             
                  
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}          
                  
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap);                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "Italy Social", "military", "Italy Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary", "council", "Guild Council") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
                                                
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="spain_rank_div" style="display:none"\> \$[\$str = "\<select style='text-align:left' name='spain_rank' id='spain_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";           
                    
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}                 
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "constabulary" \});                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "Spain Social", "military", "Spain Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="england_rank_div" style="display:none"\> \$[\$str = "\<select style='text-align:left' name='england_rank' id='england_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";                     
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}             
          \}                   
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "constabulary" \});                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "England Social", "military", "England Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
          \<div id="akoma_rank_div" style="display:none;"\> \$[\$str = "\<select style='text-align:left' name='akoma_rank' id='akoma_rank' class='form'\>" +                     
          "\<optgroup label='Commoner'\>\<option value='none::Rank 03' selected\>Freedman\</option\>\</optgroup\>";                     
          if(!\$purchasedRanks) \{          
              \$purchasedRanks = ([ ]);                     
              if(Get(\$actdat, "roster:noble-slots") \&\& \$accountType != "free") \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
              \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
              for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                  if(\$roster[\$i]."chargen:rank") \{                     
                      \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                  \}                     
              \}              
          \}               
          if(!map_sizeof(\$purchasedRanks)) return ParseXML(\$str + "\</select\>");                     
          \$options = map_indices(\$purchasedRanks);                     
          \$rankMap = Get(\$this, "choices:rank");                     
          \$loyalties = map_indices(\$rankMap) - (\{ "council", "church:social", "church:military", "constabulary", "social", "military" \});                     
          for(\$i = 0; \$i \< sizeof(\$loyalties); \$i++) \{                     
              \$str += "\<optgroup label='" + replace_strings(\$loyalties[\$i], "church:social", "Church Social", "church:military", "Church Military", "social", "Italy Social", "military", "Italy Military", "underworld", "Undisclosed (Underworld)", "constabulary", "Constabulary") + "'\>";                     
              for(\$j = 0; \$j \< sizeof(\$options); \$j++) \{                     
                  \$str += "\<option value='" + \$loyalties[\$i] + "::" + \$options[\$j] + "'";                     
    if(Int(\$purchasedRanks[\$options[\$j]]) \<= 0) \$str += "disabled";                     
                  \$str += "\>" + \$rankMap[\$loyalties[\$i]][\$options[\$j]] + "\</option\>";                     
              \}                     
              \$str += "\</optgroup\>";                     
          \}                     
                                                
          \$str += "\</select\>";                     
          return ParseXML(\$str);] \</div\>
    \</td\>
  \</tr\>
  \<tr\>\<td\>\<br/\>\<br/\>\</td\>\</tr\>
\</table\>\</center\>
\</div\>
\<table style="margin:auto;" width="90%"\>
\<tr\>\<td\>\<p style="text-align: justify"\> At long last, you step forward and present your papers to the outstretched hand before you. The elderly man squints at the parchment in the dim light of the cool dawn, muttering softly under his breath. "Yes, everything seems to be in order here... very good. Move along now."\</p\>
\</td\>\</tr\>
\</table\>\<sbr/\>
  \<p\>\<input style="float:right" id="hidden-btn" type="submit" value="Proceed through the line." class="submit-button"/\>\</p\>
  \<action\>
 \$[/* Check how many characters we have already */                 
            
  \$bodies = Udat::query_bodies_in_roster(\$user: \$actname);                     
  for(\$i = 0; \$i \< sizeof(\$bodies);) \{                     
     if((\$bodies[\$i]."theatre:id" != Get(\$this, "theatre_id")) \|\| \$bodies[\$i].nocharcost) \{                     
        \$bodies -= (\{ \$bodies[\$i] \});                     
     \} else \{                     
        \$i++;                     
     \}                     
  \}                     
                                          
  if (!\$bodies) \{                     
     \$number = 0;                     
  \} else \{                     
     \$number = sizeof(\$bodies);                     
  \}                     
                                      
  /* Check if we are allowed to add more */                      
  \$allowed = Get(\$this, "characterslots");                     
                                          
  /* If we are premium players */                     
  if(\$actdat."skotos:flags:premium") \{                     
     \$allowed += Get(\$this, "premium_bonus_characterslots");                     
  \}                     
                                            
  /* If we have our own extra slots */                     
  if(Get(\$actdat, "roster:extra")) \{                     
     \$allowed += Get(\$actdat, "roster:extra");                     
  \}                   
                                      
  if(\$number \>= \$allowed) \{                     
     \$full_roster = "true";                     
     return 0;                     
  \}                     
                                  
  if(\$firstname) \{                     
   \$firstname_error = "";                     
   if(strlen(\$firstname) \> 12) \$firstname_error += "long_name ";       
  
   \$sz = strlen(\$firstname);  
   \$chars = (\{ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" \});  
   for(\$i = 0; \$i \< \$sz; \$i++) \{  
       if(!member(char_to_string(\$firstname[\$i]), \$chars)) \$firstname_error += "special_char";  
   \}  
                
   if(contains(\$firstname, " ") \|\| contains(\$firstname, "'")) \$firstname_error += "single_name ";                     
                 if(contains(\$firstname, "-") \|\| contains(\$firstname, "1") \|\| contains(\$firstname, "2") \|\| contains(\$firstname, "3") \|\| contains(\$firstname, "4") \|\| contains(\$firstname, "5") \|\| contains(\$firstname, "6") \|\| contains(\$firstname, "7") \|\| contains(\$firstname, "8") \|\| contains(\$firstname, "9") \|\| contains(\$firstname, "0") \|\| contains(\$firstname, "_") \|\| contains(\$firstname, "`") \|\| contains(\$firstname, "~") \|\| contains(\$firstname, "!") \|\| contains(\$firstname, "@") \|\| contains(\$firstname, "#") \|\| contains(\$firstname, "\\\$") \|\| contains(\$firstname, "^") \|\| contains(\$firstname, "\&") \|\| contains(\$firstname, "*")\|\| contains(\$firstname, "(") \|\| contains(\$firstname, ")") \|\| contains(\$firstname, "+") \|\| contains(\$firstname, "\\=") \|\| contains(\$firstname, "\\\{") \|\| contains(\$firstname, "[") \|\| contains(\$firstname, "]") \|\| contains(\$firstname, "\\\}") \|\| contains(\$firstname, "\\\\") \|\| contains(\$firstname, "\|") \|\| contains(\$firstname, ":") \|\| contains(\$firstname, ";") \|\| contains(\$firstname, "\\\<") \|\| contains(\$firstname, "\\\>") \|\| contains(\$firstname, ",") \|\| contains(\$firstname, "//") \|\| contains(\$firstname, "?")) \$firstname_error += "special_char ";                     
  \} else \{                     
   \$firstname_error = "no_name";                     
  \}                     
  if(\$firstname_error != "") \{                     
   return 0;                     
  \} else \{                     
   \$firstname_error = nil;                     
  \}             
                 
  \$firstname = lower_case(\$firstname);
  if(Get(\$\{UserAPI:UDatD\}, "bodies:" + \$firstname)) \{
      if(!Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname) \&\& !Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname)) \{
          \$firstname_error = "taken_name";
          return 0;
      \}
  \}
  
  if((!\$body \&\& Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname) \&\& Get(\$\{UserAPI:UDatD\}, "bodies:" + \$firstname)) \|\|          
     (!\$body \&\& Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname) \&\& Get(\$\{UserAPI:UDatD\}, "bodies:" + \$firstname))) \{                
      if((Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname) \&\&      
         (Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname) == Get(\$\{UserAPI:UDatD\}, "bodies:" + \$firstname)) \&\&
         \$actname == Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname)."skotos:creator" \&\&           
         !Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname)."chargen:finished" \&\& !\$body) \|\|          
         (Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname) \&\&  
         \$actname == Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname)."skotos.creator" \&\&          
         !Obj("Chatters:AE:" + \$firstname[0..1] + ":" + \$firstname)."chargen:finished" \&\& !\$body)) \{               
             \$continue_chargen = "true";                     
             return 0;                     
         \} else \{                    
             \$firstname_error = "taken_name";                     
             return 0;                     
         \}                     
      \}                                     
      
  if(\$lastname \&\& \$lastname != "" \&\& \$lastname != "Last Name (optional)") \{                     
                                      
   \$lastname_error = "";           
  
   \$sz = strlen(\$lastname);  
   \$chars = (\{ "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", " ", "'", "-" \});  
   for(\$i = 0; \$i \< \$sz; \$i++) \{  
       if(!member(char_to_string(\$lastname[\$i]), \$chars)) \$lastname_error += "special_char";  
   \}  
            
   if(strlen(\$lastname) \> 15) \$lastname_error += "long_name ";                     
                 if(contains(\$lastname, "-") \|\| contains(\$lastname, "1") \|\| contains(\$lastname, "2") \|\| contains(\$lastname, "3") \|\| contains(\$lastname, "4") \|\| contains(\$lastname, "5") \|\| contains(\$lastname, "6") \|\| contains(\$lastname, "7") \|\| contains(\$lastname, "8") \|\| contains(\$lastname, "9") \|\| contains(\$lastname, "0") \|\| contains(\$lastname, "_") \|\| contains(\$lastname, "`") \|\| contains(\$lastname, "~") \|\| contains(\$lastname, "!") \|\| contains(\$lastname, "@") \|\| contains(\$lastname, "#") \|\| contains(\$lastname, "\\\$") \|\| contains(\$lastname, "^") \|\| contains(\$lastname, "\&") \|\| contains(\$lastname, "*")\|\| contains(\$lastname, "(") \|\| contains(\$lastname, ")") \|\| contains(\$lastname, "+") \|\| contains(\$lastname, "\\=") \|\| contains(\$lastname, "\\\{") \|\| contains(\$lastname, "[") \|\| contains(\$lastname, "]") \|\| contains(\$lastname, "\\\}") \|\| contains(\$lastname, "\\\\") \|\| contains(\$lastname, "\|") \|\| contains(\$lastname, ":") \|\| contains(\$lastname, ";") \|\| contains(\$lastname, "\\\<") \|\| contains(\$lastname, "\\\>") \|\| contains(\$lastname, "//") \|\| contains(\$lastname, "?")) \$lastname_error += "special_char ";                     
  \} else \{                      
    /* \$lastname_error = "no_name"; */                     
    \$lastname = nil;                     
  \}                     
               
  if(\$lastname_error \&\& \$lastname_error != "") \{                     
   return 0;                     
  \} else \{                     
                        \$lastname_error = nil;                     
                \}                     
                                                                                
  if(Int(\$age) \< 18 \|\| Int(\$age) \> 80) \{                     
   \$age_error = "true";                     
   return 0;                     
  \}                     
                          
    if(\$nation == "France") \{                     
         if(!\$france_rank) \$france_rank = "none::Rank 03";                     
         \$loyalty = explode(\$france_rank, "::")[0];                     
        \$rank = explode(\$france_rank, "::")[1];                     
         switch(\$loyalty) \{                     
             case "social":                     
     \$group = "france";                     
     \$lang = "french";                     
     break;                     
      case "military":                     
     \$group = "france_mil";                     
     \$lang = "french";                     
     break;                     
      case "church:social":                     
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;                     
      case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;                     
                                      
     case "none":                     
         \$lang = "french";                     
         break;                     
                                      
     default:                     
     \$lang = "french";                     
     break;                     
                \}                     
           \}                     
                                      
     if(\$nation == "Scotland") \{                     
         if(!\$england_rank) \$england_rank = "none::Rank 03";                     
         \$loyalty = explode(\$england_rank, "::")[0];                     
         \$rank = explode(\$england_rank, "::")[1];                     
         switch(\$loyalty) \{                     
            case "social":                     
     \$group = "scotland";                     
     \$lang = "gaelic";                     
     break;                     
      case "military":                     
     \$group = "scotland_mil";                     
     \$lang = "gaelic";                     
     break;                     
      case "church:social":                     
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;                     
     case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;                     
                                      
     case "none":                     
         \$lang = "gaelic";                     
         break;                     
                    default:                     
     \$lang = "gaelic";                     
     break;                     
                \}                     
           \}                     
                                      
           if(\$nation == "Germany") \{                     
         if(!\$germany_rank) \$germany_rank = "none::Rank 03";                     
         \$loyalty = explode(\$germany_rank, "::")[0];                     
         \$rank = explode(\$germany_rank, "::")[1];                     
         switch(\$loyalty) \{                     
             case "social":                     
     \$group = "germany";                     
     \$lang = "german";                     
     break;                     
      case "military":                     
     \$group = "germany_mil";                     
     \$lang = "german";                     
     break;
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;  
      case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;                     
                                      
     case "none":                     
         \$lang = "german";                     
         break;                     
                                      
     default:                     
     \$lang = "german";                     
     break;                     
                \}                     
           \}                     
                                      
           if(\$nation == "Italy") \{                     
         if(!\$italy_rank) \$italy_rank = "none::Rank 03";                     
         \$loyalty = explode(\$italy_rank, "::")[0];                     
         \$rank = explode(\$italy_rank, "::")[1];                     
         switch(\$loyalty) \{                     
             case "social":                      
     \$group = "italy";                     
     \$lang = "italian";                     
     break;                     
      case "military":                      
     \$group = "italy_mil";                     
     \$lang = "italian";                     
     break;                     
      case "church:social":                     
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;                     
      case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;  
                   
     case "constabulary":
     \$group = "constables";
     \$lang = "italian";
     break;
                    
     case "none":                     
         \$lang = "italian";                     
         break;                     
                    default:                     
     \$lang = "italian";                     
     break;                     
                \}       
    \}     
   
     if(\$nation == "Spain") \{                     
         if(!\$spain_rank) \$spain_rank = "none::Rank 03";                     
         \$loyalty = explode(\$spain_rank, "::")[0];                     
         \$rank = explode(\$spain_rank, "::")[1];                     
         switch(\$loyalty) \{                     
             case "social":                     
     \$group = "spain";                     
     \$lang = "spanish";                     
     break;                     
      case "military":                     
     \$group = "spain_mil";                     
     \$lang = "spanish";                     
     break;                     
      case "church:social":                     
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;                     
      case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;                     
                    
     case "none":                     
         \$lang = "spanish";                     
         break;                     
                    default:                     
     \$lang = "spanish";                     
     break;                     
                \}       
    \}     
   
      if(\$nation == "England") \{                     
         if(!\$england_rank) \$england_rank = "none::Rank 03";                     
         \$loyalty = explode(\$england_rank, "::")[0];                     
         \$rank = explode(\$england_rank, "::")[1];                     
         switch(\$loyalty) \{                     
             case "social":                     
     \$group = "england";                     
     \$lang = "gaelic";                     
     break;                     
      case "military":                     
     \$group = "england_mil";                     
     \$lang = "gaelic";                     
     break;                     
      case "church:social":                     
     \$group = "church";                     
     \$lang = "latin";                     
     break;                     
      case "church:military":                     
     \$group = "church_mil";                     
     \$lang = "latin";                     
     break;                     
      case "underworld":                     
     \$group = "underworld";                     
     \$lang = "dusky";                     
     break;                     
                    
     case "none":                     
         \$lang = "gaelic";                     
         break;                     
                    default:                     
     \$lang = "gaelic";                     
     break;                     
                \}           
           \}                         
                                      
  if(!\$body \&\& \$rank != "Rank 03") \{                     
   \$purchasedRanks = ([ ]);                     
            if(Get(\$actdat, "roster:noble-slots")) \$purchasedRanks = copy(Get(\$actdat, "roster:noble-slots"));                     
     \$roster = udat::query_bodies_in_roster(\$user: \$actname);                     
            for(\$i = 0; \$i \< sizeof(\$roster); \$i++) \{                     
                 if(\$roster[\$i]."chargen:rank") \{                     
                    \$purchasedRanks[\$roster[\$i]."chargen:rank"] = Int(\$purchasedRanks[\$roster[\$i]."chargen:rank"]) - 1;                     
                 \}                     
            \}                                               
   if(\$purchasedRanks[\$rank] \<= 0) \{                     
    \$rank_error = "true";                     
    return 0;                     
   \}                      
  \}                     
                                      
  return 1;]
 \{? \| \$(full_roster) \| \<redirect propob="\$(this)" full_roster="true"/\> \|
  \{? \| \$(firstname_error) \| \<redirect propob="\$(this)" characterref="\$(body)" charclass="\$(charclass)" weapon="\$(weapon)" firstname_error="\$(firstname_error)"/\> \|
   \{? \| \$(continue_chargen) \| \<redirect propob="\$(this)" charclass="\$(charclass)" weapon="\$(weapon)" characterref="\$[Obj("Chatters:" + this.theatre_id + ":" + \$firstname[0..1] + ":" + \$firstname)]"/\> \|
    \{? \| \$(lastname_error) \| \<redirect propob="\$(this)" lastnme_error="\$(lastname_error)"/\> \|
     \{? \| \$(rank_error) \| \<redirect propob="\$(this)" rank_error="true"/\> \|
         \{? \| \$(body) \| \$[""; if(!\$body."chargen:newchar") \$body."chargen:converting" = 1;] \| \<create-chatter gender="\$(gender)" char="\$(firstname)"/\> \$[\$chatter = Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname); \$chatter."chargen:newchar" = 1;] \}
       \$[\$chatter = Obj("Chatters:IC:" + \$firstname[0..1] + ":" + \$firstname);                  
         \$chatter."base:urparent" = \$\{Allegory:Bodies:Mainbody\};                  
         \$chatter."core:urparent" = \$\{Allegory:Bodies:Mainbody\};                  
         \$chatter."core:ur:parent" = \$\{Allegory:Bodies:Mainbody\};                  
               
         \$newname = replace_strings(\$chatter."base:objectname", ":IC:", ":AE:");               
               
         \$chatter."base:objectname" = \$newname;               
         \$chatter."core:objectname" = \$newname;               
                    
         \$chatter."chargen:age" = Int(\$age);                     
         \$chatter."trait:age" = Int(\$age);                     
         \$chatter."chargen:village" = Str(\$village);                     
         \$chatter."chargen:region" = Str(\$nation);                     
                                     
         if(\$lang) Set(\$chatter, "chargen:lang", \$lang);                     
         if(\$lang2) Set(\$chatter, "chargen:lang2", \$lang2); else Set(\$chatter, "chargen:lang2", nil);                     
         if(\$lastname \&\& \$lastname != "" \&\& \$lastname != "Last Name (optional)") \{                     
            \$chatter."chargen:lastname" = \$lastname;                     
            \$chatter."trait:lastname" = \$lastname;                    
            \$temp = explode(\$lastname, " ");                     
            for(\$i = 0; \$i \< sizeof(\$temp); \$i++) \{                     
                if(\$i \< (sizeof(\$temp) - 1)) \{                     
                    Set(\$chatter, "details:default:adjective:" + \$temp[\$i], TRUE);                     
                \} else \{                     
                    Set(\$chatter, "details:default:sname:" + \$temp[\$i], TRUE);                     
                \}                     
            \}                    
         \}                     
             
         \$chatter."chargen:class" = \$charclass;             
         \$chatter."chargen:weapon" = \$weapon;             
                
         if(\$rank != "Rank 03") \{                     
             Set(\$chatter, "chargen:rank", \$rank);                     
             \$rank = Int(replace_strings(\$rank, "Rank 0", "", "Rank ", ""));                     
                                              
                                      
             if(\$loyalty == "social") \{                     
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_noble", \$char: \$chatter, \$groupname: \$nation, \$level: \$rank);                     
             \} else if(\$loyalty == "military") \{                     
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_military", \$char: \$chatter, \$groupname: \$nation, \$level: \$rank);                     
             \} else if(\$loyalty == "constabulary") \{                      
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_constables", \$char: \$chatter, \$groupname: "constables", \$level: \$rank);                     
             \} else if(\$loyalty == "church:social") \{                     
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_church", \$char: \$chatter, \$groupname: "church", \$level: \$rank);                     
             \} else if(\$loyalty == "church:military") \{                     
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_church_mil", \$char: \$chatter, \$groupname: "church", \$level: \$rank);                     
             \} else if(\$loyalty == "underworld") \{                     
                 \$tmp = Call(\$\{Allegory:Lib:Characters:Rank\}, "get_rank_names_underworld", \$char: \$chatter, \$groupname: "underworld", \$level: \$rank);                     
             \} 

             if(\$group == "constables" \|\| \$group == "underworld") \{                    
                 \$rankname = capitalize(\$tmp["rankname"]);      
             \} else \{ 
                 \$rankname = capitalize(replace_strings(\$group, "_mil", "", "france", "french", "scotland", "scottish", "germany", "german", "italy", "italian", "england", "english", "spain", "spanish")) + " " + capitalize(\$tmp["rankname"]);  
             \} 
             
             \$title = \$tmp["title"];                     
             \$path = "status:" + \$group; 
             \$loyaltyname = replace_strings(\$group, "_mil", "");
             
             if(\$chatter."loyalty:group" \&\& \$chatter."loyalty:group" != \$loyaltyname) \{
                 \$old = \$chatter."loyalty:group";
                 Set(\$chatter, "rak:status:", nil);
                 Set(\$chatter, "rank:status:" + \$loyaltyname, \$rank);
                 Set(\$chatter, "rankname:status:" + \$old, nil); 
                 \$chatter."loyalty:group" = \$loyaltyname;
                 if(Obj("Allegory:Guilds:" + \$loyaltyname)) Set(\$chatter, "loyalty:guild", Obj("Allegory:Guilds:" + \$loyaltyname));
                 \$chatter."loyalty:name" = reverse_mapping(Get(\$\{Allegory:Lib:Characters:Rank\}, "data:loyalty"))[\$loyaltyname];
             \} else \{
                 Set(\$chatter, "rank:status:" + \$loyaltyname, \$rank);
                 \$chatter."loyalty:group" = \$loyaltyname;
                 if(Obj("Allegory:Guilds:" + \$loyaltyname)) Set(\$chatter, "loyalty:guild", Obj("Allegory:Guilds:" + \$loyaltyname));
                 \$chatter."loyalty:name" = reverse_mapping(Get(\$\{Allegory:Lib:Characters:Rank\}, "data:loyalty"))[\$loyaltyname];
             \}
             
             Call(\$\{Allegory:Lib:Characters:Rank\}, "set_rank", \$path: \$path, \$char: \$chatter, \$rank: \$rank, \$rankname: \$rankname);               
         \}]
       \<redirect propob="\$(this)" characterref="\$[Obj("Chatters:" + this.theatre_id + ":" + \$firstname[0..1] + ":" + \$firstname)]"/\>
      \}
     \}
    \}
   \}
 \}
  \</action\>
\</zform\>\<br/\>
\}
\</p\>
\</div\>
      </Core:Property>
      <Core:Property property="export:xtra:state:char-bio:goback">
         X[S] \<redirect propob="\$(this)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:end">
         X[S] \<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
    #back_btn \\\{
        visibility: hidden;
    \\\}
    #restart_btn \\\{
        visibility: hidden;
    \\\}
\</style\>\\\<!-- This is the final page of the character generator --\\\>
\<div class="confirm_wrapper"\>
    \<img class="confirm-heading" src="https://allegoryofempires.com/wp-content/uploads/Website/confirm-character.png"/\>
    \<div\>\<i\>[Below is your character stat sheet. Please review it thoroughly before entering the game world.]\</i\>\</div\>\<br/\>
    \<div style="background-image: url('https://allegoryofempires.com/wp-content/uploads/Website/badge-\$[Call(\$\{Allegory:Data:SkillsDB\}, "get-class", \$subclass: \$body."chargen:class")]-color.png');" class="statsheet"\>
      \<p\>\<zform actbody="\$(body)" actfeatures="\$(careerarray)"\>
        \<b\>Name:\</b\>
            \$[capitalize(\$body."skotos:charname")] \$(body.chargen:lastname) \<br/\>
        \<b\>Gender:\</b\>
            \$(body.base:genderstring) \<br/\>
        \<b\>Age:\</b\>
            \$(body.trait:age) \<br/\>
        \<b\>Birthplace:\</b\>
            \$(body.chargen:village) in \$(body.chargen:region) territory \<br/\>
        \<b\>Rank:\</b\>
            \$["";
              if(\$body."loyalty:group") \{
                  \$loyalty = \$body."loyalty:group";
                  if(Get(\$body, "rankname:status:" + \$loyalty)) \{
                      \$rank = Get(\$body, "rankname:status:" + \$loyalty);
                      return Str(\$rank);
                  \} else \{
                      return "Freedman";
                  \}
              \} else \{
                  return "Freedman";
              \}]
        \<b\>Primary Class:\</b\>
            \$[capitalize(replace_strings(Str(Obj(\$body)."chargen:class"), "-", " "))]\<br/\>
        \{? \| \$(body.chargen:class2) \| \<b\>Secondary Class: \</b\> \$[capitalize(replace_strings(Str(Obj(\$body)."chargen:class2"), "-", ""))]\}
    \<div class="skattr"\>
      \<div class="skill-list"\>
        \<b\>Starting Skills:\</b\>
            \$["";    
              \$rstr = "";    
              \$general = "";   
              \$generalSkills = map_indices(Get(\$\{Allegory:Data:SkillsDB\}, "class:general")["starting_skills"]);   
              \$skillsMap = \$body."chargen:skills";    
              \$skills = map_indices(\$skillsMap);    
    
              for(\$i = 0; \$i \< sizeof(\$skills); \$i++) \{    
                  if(Int(\$skillsMap[\$skills[\$i]]) \> 0) \{   
                      if(!member(\$skills[\$i], \$generalSkills)) \{   
                          if(\$skills[\$i] == "WEAPON") \{ 
                              \$rstr += "\<div\>\<span class='label'\>\<b\>\<i\>" + "combat:" + Str(\$body."chargen:weapon") + "\</i\>\</b\>\</span\>\<span\>" + \$skillsMap[\$skills[\$i]] + "\</span\>\</div\>";    
                          \} else \{ 
                              \$rstr += "\<div\>\<span class='label'\>\<b\>\<i\>" + \$skills[\$i] + "\</i\>\</b\>\</span\>\<span\>" + \$skillsMap[\$skills[\$i]] + "\</span\>\</div\>";    
                          \} 
                      \} else \{   
                          \$general += "\<div\>\<span class='label'\>\<b\>\<i\>" + \$skills[\$i] + "\</i\>\</b\>\</span\>\<span\>" + \$skillsMap[\$skills[\$i]] + "\</span\>\</div\>";    
                      \}   
                  \}   
              \}    
    
              return \$rstr;]\<br/\>
        \<b\>General Skills:\</b\>
             \{? \| \$(general) \| \$(general) \| \<div style="padding-left: 25px"\>\<i\>You selected no general skills.\</i\>\</div\> \}\<br/\>
      \</div\>
      \<div class="attr-list"\>
        \<b\>Attributes:\</b\>
            \<div\>\<span class="label"\>\<b\>\<i\>Strength:\</i\>\</b\>\</span\>\<span\>\$(body.trait:strength)\</span\>\</div\>
            \<div\>\<span class="label"\>\<b\>\<i\>Speed:\</i\>\</b\>\</span\>\<span\>\$(body.trait:speed)\</span\>\</div\>
            \<div\>\<span class="label"\>\<b\>\<i\>Resilience:\</i\>\</b\>\</span\>\<span\>\$(body.trait:resilience)\</span\>\</div\>
            \<div\>\<span class="label"\>\<b\>\<i\>Perception:\</i\>\</b\>\</span\>\<span\>\$(body.trait:perception)\</span\>\</div\>
            \<div\>\<span class="label"\>\<b\>\<i\>Intelligence:\</i\>\</b\>\</span\>\<span\>\$(body.trait:intelligence)\</span\>\</div\>
            \<div\>\<span class="label"\>\<b\>\<i\>Charisma:\</i\>\</b\>\</span\>\<span\>\$(body.trait:charisma)\<br/\>\</span\>\</div\>
      \</div\>\<br/\>
    \</div\>
        \$[\$body."base:environment" = \$body."virtualhome:home";]
        \<div style="text-align: justify;"\>\<describe-view actor="\$(body)" view="\$(body)" type="examine"/\>\</div\>
        \$[\$body."base:environment" = nil;]
      \</zform\>\</p\>
    \</div\>\<br/\>\<br/\>
\</div\>
\<p style="text-align:justify"\>\$(body.trait:examine)\</p\>\<br/\>
\<form action="http://game.allegoryofempires.com" method="post"\>
    \<input type="submit" id="hidden-btn" value="Create Character" class="submit-button"/\>
\</form\>
      </Core:Property>
      <Core:Property property="export:xtra:state:no-body">
         X[S] \$[""; 
    if(\$characterref) \{ 
        if(\$bodies = Udat::query_bodies_in_roster(\$user: \$name)) \{ 
            if(!member(Obj(\$characterref), \$bodies)) error("Character " + Str(\$characterref) + " not in roster"); 
        \} 
    \}]
\<div class="error"\>
    \{? \| \$(error_class) \| You must select a class. \|
        \{? \| \$(error_weapon) \| You must select a weapon specialization. \}
    \}
    \{? \| \$(error_class_invalid) \| You must select a valid class. \}
    \{? \| \$(error_weapon_invalid) \| You must select a valid weapon. \}
\</div\>
\<div class="heading"\>
    \<img id="class" alt="Choose Your Class" src="https://allegoryofempires.com/wp-content/uploads/Website/class.png"/\>\<br/\>
\</div\>
\<div class="classes"\>
    \<div class="single-class" id="fighter" onclick="showDesc(this)"\>
        \<div class="class-image" id="fighter-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Fighter Class" src="https://allegoryofempires.com/wp-content/uploads/Website/fighter.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="ranger" onclick="showDesc(this)"\>
        \<div class="class-image" id="ranger-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Ranger Class" src="https://allegoryofempires.com/wp-content/uploads/Website/ranger.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="rogue" onclick="showDesc(this)"\>
        \<div class="class-image" id="rogue-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Rogue Class" src="https://allegoryofempires.com/wp-content/uploads/Website/rogue.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="academic" onclick="showDesc(this)"\>
        \<div class="class-image" id="academic-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Academic Class" src="https://allegoryofempires.com/wp-content/uploads/Website/academic.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="tradesman" onclick="showDesc(this)"\>
        \<div class="class-image" id="tradesman-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Tradesman Class" src="https://allegoryofempires.com/wp-content/uploads/Website/tradesman.png"/\>
        \</div\>
    \</div\>
\</div\>
\<div id="classes-description" class="description"\>
Before embarking in the world of Allegory of Empires, choose the class that best describes the type of person your character is. Choose carefully, as this decision, like all others, will determine the path you take within this world.\<br/\>
\</div\>
\<zform characterref="\$(characterref)" body="\$(body)"\>
    \<div id="fighter-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -8px;" alt="The Fighter Class" src="https://allegoryofempires.com/wp-content/uploads/Website/thefighterclass.png"/\>
        The clash of steel; sparks fly as the blades meet. Fighters are at home in the heat of battle, testing their mettle against foes both worthy and not. Do you yearn for the feel of a weapon in your hands or to fight for your cause?
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="one-handed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>One-handed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    With artistry and grace, you are the master of your chosen weapons while defending against your foe with a shield in hand.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dagger, dodge, parry, fencing, precision, shield, sword, whip\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="one-handed-fighter-weapon" name="one-handed-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="sword"\>sword\</option\>
                            \<option value="fencing"\>fencing\</option\>
                            \<option value="whip"\>whip\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="one-handed-fighter-class" name="one-handed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="two-handed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Two-handed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    Brawn is your specialty and the weapons you wield are just as mighty. You are the master of the most imposing of weapons.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dodge, endurance, parry, polearm, sword\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="two-handed-fighter-weapon" name="two-handed-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="polearm"\>polearm\</option\>
                            \<option value="sword"\>sword\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="two-handed-fighter-class" name="two-handed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="dual-wielding-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Dual-wielding Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    If you can kill two birds with one stone, imagine what you could do with two. You strike at your foe with double the bite, wielding two weapons instead of one.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dagger, dodge, fencing, parry, precision, sword\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="dual-wielding-fighter-weapon" name="dual-wielding-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="fencing"\>fencing\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="sword"\>sword\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="dual-wielding-fighter-class" name="dual-wielding-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="unarmed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Unarmed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    Who needs a weapon when yours are part of your very essence. Unarmed fighters can fell any foe with nothing more than their body and skill.\<br/\>
                    \<b\>Available Skills:\</b\> dodge, endurance, parry, precision, unarmed\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>unarmed\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="unarmed-fighter-class" name="unarmed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="ranger-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -8px;" alt="The Ranger Class" src="https://allegoryofempires.com/wp-content/uploads/Website/therangerclass.png"/\>
        A hush fills your mind, your senses keenly aware of your surroundings. With practiced grace, your prey falls and the sounds of the wilderness around you come alive once more. The wilds are your comfort and this setting fits like a glove.
        \<br/\>
        \<div class="subclasses"\>
            \<div id="ranger" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Ranger\</div\>\</div\>
                \<div class="subclass-content"\>
                    With cat-like grace and a keen eye, you're most at home where your prey roams wild. With your well-honed skills, the game of predator and prey thrills like no other.\<br/\>
                    \<b\>Available Skills:\</b\> archery, dagger, dodge, gun, polearm, skinning, trapping\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="ranger-weapon" name="ranger-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="archery"\>archery\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="gun"\>gun\</option\>
                            \<option value="polearm"\>polearm\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>skinning\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>trapping\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="ranger-class" name="ranger-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="rogue-description" class="description"\>
        \<img style="position: relative; left: -15px;" class="class-title-two" alt="The Rogue Class" src="https://allegoryofempires.com/wp-content/uploads/Website/therogueclass.png"/\>
        Right and wrong is neither black nor white, but shades of grey as dark as the shadows that cloak your intentions. Perhaps the ends justify the means, but only you will ever really know the reasons for your choices. It is not only those who are free of sin that cast the first stone, so be sure to master your dark arts.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="assassin" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Assassin\</div\>\</div\>
                \<div class="subclass-content"\>
                    With the target in your sights, you move like the whispers that brought you here. The deed is done and you slip away into the cloak of darkness with death as your wake.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, endurance, parry, herbalism, precision, sneak\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>herbalism\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="assassin-class" name="assassin-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="spy" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Spy\</div\>\</div\>
                \<div class="subclass-content"\>
                    A tangled web you weave when you practice to deceive. Whispers are your currency and knowledge is your goal. How you trade them is up to you.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, eavesdrop, endurance, lipread, parry, precision, sneak\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>lipread\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="spy-class" name="spy-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="thief" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Thief\</div\>\</div\>
                \<div class="subclass-content"\>
                    One will always find a way to survive, whether those methods are noble is another thing entirely. And those with the will can do more than survive; they can thrive.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, endurance, parry, pickpocket, precision, sneak, steal\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>pickpocket\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="thief-class" name="thief-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="academic-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -7px;" alt="The Academic Class" src="https://allegoryofempires.com/wp-content/uploads/Website/theacademicclass.png"/\>
        Perhaps the most mysterious gift is that of the mind, and those who can wield it will find a wealth of resources to navigate this tricky world. How you choose to use it is up to you. Regardless of the goal, the power of knowledge is a wondrous one that can move mountains no sword will ever dent.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="body-servant" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Body Servant\</div\>\</div\>
                \<div class="subclass-content"\>
                    Handmaid, valet, etc.\<br/\>
                    \<b\>Available Skills:\</b\> hairstyling, eavesdrop, lipread\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>hairstyling\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="body-servant-class" name="body-servant-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="healer" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Healer\</div\>\</div\>
                \<div class="subclass-content"\>
                    With tenderness and care, your hands can make miracles of someone's darkest day. Use your knowledge to bring hope to those who need such care.\<br/\>
                    \<b\>Available Skills:\</b\> healing, herbalism\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>healing\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="healer-class" name="healer-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="socialite" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Socialite\</div\>\</div\>
                \<div class="subclass-content"\>
                    In the twisted web of politics and promises, quick wit and a quicker tongue can pave the way faster than any blade. How will you wield this articulate weapon?\<br/\>
                    \<b\>Available Skills:\</b\> art, eavesdrop, lipread, music\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>art\</td\>\<td\>[5]\</td\>\</tr\>
                          \<tr\>\<td\>music\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="socialite-class" name="socialite-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="tradesman-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -5px;" alt="The Tradesman Class" src="https://allegoryofempires.com/wp-content/uploads/Website/thetradesmanclass.png"/\>
        The reward of a hard day's work is the most fulfilling feeling in the world, and to see something crafted by your own hands is a joy unlike any other. Careful stitches, painstaking engravings or the heat of the forge are your lifeblood and the end results are treasures worth more than their weight in gold.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="blacksmith" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Blacksmith\</div\>\</div\>
                \<div class="subclass-content"\>
                    The heft of the hammer, the sizzle of hot metal releasing steam into the air. Sweat beads on the brow as you force the unyielding metal to your whim and craft masterpieces with might.\<br/\>
                    \<b\>Available Skills:\</b\> metalworking, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>metalworking\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="blacksmith-class" name="blacksmith-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="bookbinder" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Bookbinder\</div\>\</div\>
                \<div class="subclass-content"\>
                    The pen is mightier than the sword, they say. And there is no better place to hold those precious words and powerful words than a book crafted under your careful guidance.\<br/\>
                    \<b\>Available Skills:\</b\> bookbinding, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>bookbinding\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="bookbinder-class" name="bookbinder-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="carpenter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Carpenter\</div\>\</div\>
                \<div class="subclass-content"\>
                    The smell of fresh lumber, the resistance of the grain as your chisel slowly pries something from nothing. With hammer and nails and creative spirit, you've created a treasure.\<br/\>
                    \<b\>Available Skills:\</b\> woodworking, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>woodworking\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="carpenter-class" name="carpenter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="dyer" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Dyer\</div\>\</div\>
                \<div class="subclass-content"\>
                    Dyer\<br/\>
                    \<b\>Available Skills:\</b\> dyeing, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dyeing\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="dyer-class" name="dyer-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="jeweler" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Jeweler\</div\>\</div\>
                \<div class="subclass-content"\>
                    Precious metals and treasured gems are your canvas. With careful and precise skill, you create the priceless pieces that mark the moments more priceless than the gems themselves.\<br/\>
                    \<b\>Available Skills:\</b\> jewelcrafting, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>jewelcrafting\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="jeweler-class" name="jeweler-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="miner" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Miner\</div\>\</div\>
                \<div class="subclass-content"\>
                    With brute force and tireless might, your skills in coaxing hidden materials from the earth keeps the cogs of business churning.\<br/\>
                    \<b\>Available Skills:\</b\> mining, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>mining\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="miner-class" name="miner-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="seamstress" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Seamstress\</div\>\</div\>
                \<div class="subclass-content"\>
                    The monotonous push and pull of needle and thread punctuates countless moments of the day, but your keen eye and creative soul breathes life into swaths of colored fabric.\<br/\>
                    \<b\>Available Skills:\</b\> tailoring, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>tailoring\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="seamstress-class" name="seamstress-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="stonemason" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Stonemason\</div\>\</div\>
                \<div class="subclass-content"\>
                    Only the most gifted of minds can see the life hidden in a block of stone, and yours can coax that breath into even the coldest monoliths of earth.\<br/\>
                    \<b\>Available Skills:\</b\> stonemasonry, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>stonemasonry\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="stonemason-class" name="stonemason-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="weaver" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Weaver\</div\>\</div\>
                \<div class="subclass-content"\>
                    Deft fingertips and patience beyond compare give you the power to turn even the roughest fibers into supple swaths of fabric.\<br/\>
                    \<b\>Available Skills:\</b\> weaving, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>weaving\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="weaver-class" name="weaver-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="woodcutter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Woodcutter\</div\>\</div\>
                \<div class="subclass-content"\>
                    With a masterful eye, you can see the forest through the trees. Your sights find the perfect specimen and with a hearty heft of the axe, the prize is yours.\<br/\>
                    \<b\>Available Skills:\</b\> woodcutting, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>woodcutting\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="woodcutter-class" name="woodcutter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<input type="submit" id="hidden-btn"/\>
    \<action\>
        \$["";           
          if(GetVar("one-handed-fighter-class") == "on") \$charclass = "one-handed-fighter";                
          if(GetVar("two-handed-fighter-class") == "on") \$charclass = "two-handed-fighter";                
          if(GetVar("dual-wielding-fighter-class") == "on") \$charclass = "dual-wielding-fighter";                
          if(GetVar("unarmed-fighter-class") == "on") \$charclass = "unarmed-fighter";                
          if(GetVar("ranger-class") == "on") \$charclass = "ranger";                
          if(GetVar("assassin-class") == "on") \$charclass = "assassin";                
          if(GetVar("spy-class") == "on") \$charclass = "spy";                
          if(GetVar("thief-class") == "on") \$charclass = "thief";       
          if(GetVar("body-servant-class") == "on") \$charclass = "body-servant";             
          if(GetVar("healer-class") == "on") \$charclass = "healer";                
          if(GetVar("socialite-class") == "on") \$charclass = "socialite";                
          if(GetVar("blacksmith-class") == "on") \$charclass = "blacksmith";                
          if(GetVar("bookbinder-class") == "on") \$charclass = "bookbinder";                
          if(GetVar("carpenter-class") == "on") \$charclass = "carpenter";         
          if(GetVar("dyer-class") == "on") \$charclass = "dyer";             
          if(GetVar("jeweler-class") == "on") \$charclass = "jeweler";                
          if(GetVar("miner-class") == "on") \$charclass = "miner";                
          if(GetVar("seamstress-class") == "on") \$charclass = "seamstress";                
          if(GetVar("stonemason-class") == "on") \$charclass = "stonemason";                
          if(GetVar("weaver-class") == "on") \$charclass = "weaver";                
          if(GetVar("woodcutter-class") == "on") \$charclass = "woodcutter";          
          if(!\$charclass) \{          
              \$error_class = 1;          
          \} else \{          
              if(member(\$charclass, (\{ "one-handed-fighter", "two-handed-fighter", "dual-wielding-fighter", "unarmed-fighter", "ranger" \}))) \{        
                  if(GetVar(\$charclass + "-weapon") == "") \{          
                      \$error_weapon = 1;          
                  \} else \{          
                      \$weapon = GetVar(\$charclass + "-weapon");          
                  \}          
              \}        
          \}]
        \{? \| \$[\$error_class \|\| \$error_weapon] \|
            \<redirect propob="\$(this)" error_class="\$(error_class)" error_weapon="\$(error_weapon)" characterref="\$(characterref)"/\>
        \|
            \<redirect propob="\$(this)" charclass="\$(charclass)" weapon="\$(weapon)" characterref="\$(characterref)"/\>
        \}
    \</action\>
\</zform\>
      </Core:Property>
      <Core:Property property="export:xtra:state:no-body:continue">
         X[S] \<redirect propob="\$(this)" class="\$(class)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:no-body:goback">
         X[S] \<redirect propob="\$(this)" prop="intro"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:runscripts">
         X[S] \\\<!-- This is where any merry scripts we need to run are run --\\\>
\$[\$body."chargen:state" = "end";         
       
EmitTo(\$\{Chatters:AE:to:topsy\}, "Starting scripts on " + Str(\$body) + "...");                                                                 
                          
/* If the player is trying to cheat */                                                                 
if(\$body."chargen:finished") \{                                                                 
  return FALSE;                                                                 
\}                                                                 
                                                                 
\$body."chargen:finished" = 1;       
                                                          
Set(\$body, "details:default:sname:pc", TRUE); 
Set(\$body, "details:default:pname:pcs", TRUE); 
                                                                 
/* Update the character description */                                                                 
Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc");                   
       
       
if(!\$body."chargen:converting") \{               
  /* Set the character starting room */          
       
  EmitTo(\$\{Chatters:AE:ro:roo\}, "Choosing starting location.");        
                                                                        
  switch(random(1)) \{                       
    case 0:                       
    \{                       
        \$virtual_room = Spawn(\$\{Allegory:Setting:Rinascita:Buildings:Southeast:Tavern:SecondFloor:Room01\});                       
        \$body."virtualhome:copperclaw:room01" = \$virtual_room;                       
        break;                       
    \}                       
               
    case 1:                       
    \{                       
        \$virtual_room = Spawn(\$\{Allegory:Setting:Rinascita:Buildings:Southeast:Tavern:SecondFloor:Room02\});                       
        \$body."virtualhome:copperclaw:room02" = \$virtual_room;                        
        break;                       
    \}        
          
    default:                       
    \{                       
        \$virtual_room = Spawn(\$\{Allegory:Setting:Rinascita:Buildings:Southeast:Tavern:SecondFloor:Room01\});                       
        \$body."virtualhome:copperclaw:room01" = \$virtual_room;                       
        break;                       
    \}                       
  \}                       
                       
  \$virtual_room.homeowner = \$body;                       
  \$body."virtualhome:home" = \$virtual_room;                       
  \$body."base:environment" = \$virtual_room;                       
  \$body."base:environment" = nil;         
\} else \{       
  if(\$body."virtualhome:home") \{
      \$body."base:environment" = \$body."virtualhome:home";
      Act(\$body, "disconnect"); 
  \} else \{
      EmitTo(\$\{Chatters:AE:ro:roo\}, "Virtual home doesn't exist!"); 
      \$body."base:environment" = \$\{Allegory:Setting:Rinascita:Roads:ViaDacqua:08\};
      Act(\$body, "disconnect"); 
  \}
  EmitTo(\$\{Chatters:AE:ro:roo\}, "Existing character. Don't set starting location.");        
\}       
                       
EmitTo(\$\{Chatters:AE:ro:roo\}, "Setting languages.");        
/* Set starting language */                       
if(\$body."chargen:lang") Set(\$body, "skill:lang:" + Str(\$body."chargen:lang"), 24);                       
if(\$body."chargen:lang2") Set(\$body, "skill:lang:" + Str(\$body."chargen:lang2"), 24);                       
                       
EmitTo(\$\{Chatters:AE:ro:roo\}, "Setting attributes");      
     
/* Set the character attributes */                       
/* \$strength1 = 4 + random(3);           
\$strength2 = 4 + random(3);           
if(\$strength1 \> \$strength2) \{            
    \$strength = \$strength1;           
\} else \{           
    \$strength = \$strength2;           
\}    */   
   
\$strength = 8;   
        
Set(\$body, "trait:strength", \$strength);   
           
/* \$speed1 = 4 + random(3);           
\$speed2 = 4 + random(3);           
if(\$speed1 \> \$speed2) \{           
    \$speed = \$speed1;           
\} else \{           
    \$speed = \$speed2;           
\}        */   
   
\$speed = 8;   
    
Set(\$body, "trait:speed", \$speed);   
       
/*       
\$resilience1 = 4 + random(3);           
\$resilience2 = 4 + random(3);           
if(\$resilience1 \> \$resilience2) \{           
    \$resilience = \$resilience1;           
\} else \{           
    \$resilience = \$resilience2;           
\}    */       
   
\$resilience = 8;   
     
Set(\$body, "trait:resilience", \$resilience);    
        
/*      
\$perception1 = 4 + random(3);           
\$perception2 = 4 + random(3);           
if(\$perception1 \> \$perception2) \{           
    \$perception = \$perception1;           
\} else \{           
    \$perception = \$perception2;           
\}        */   
   
\$perception = 8;   
Set(\$body, "trait:perception", \$perception);   
           
/* \$charisma1 = 4 + random(3);           
\$charisma2 = 4 + random(3);           
if(\$charisma1 \> \$charisma2) \{           
    \$charisma = \$charisma1;           
\} else \{           
    \$charisma = \$charisma2;           
\}        */   
    
\$charisma = 8;   
Set(\$body, "trait:charisma", \$charisma);   
           
/*   
\$intelligence1 = 4 + random(3);           
\$intelligence2 = 4 + random(3);           
if(\$intelligence1 \> \$intelligence2) \{           
    \$intelligence = \$intelligence1;           
\} else \{           
    \$intelligence = \$intelligence2;           
\}        */   
   
\$intelligence = 8;   
Set(\$body, "trait:intelligence", \$intelligence);   
           
/* Highest attribute 10-12 */      
/*                                   
\$temp_attr1_bonus1 = GetVar(\$body."temp:attr1") + 4 + random(3);           
\$temp_attr1_bonus2 = GetVar(\$body."temp:attr1") + 4 + random(3);           
if(\$temp_attr1_bonus1 \> \$temp_attr1_bonus2) \{           
    Set(\$body, "trait:" + \$body."temp:attr1", \$temp_attr1_bonus1);           
\} else \{           
    Set(\$body, "trait:" + \$body."temp:attr1", \$temp_attr1_bonus2);           
\}       */    
    
\$temp_attr1_bonus = GetVar(\$body."temp:attr1") + 4;    
Set(\$body, "trait:" + \$body."temp:attr1", \$temp_attr1_bonus);    
                              
/* 2nd highest attribute 8-10 */      
/*                                     
\$temp_attr2_bonus1 = GetVar(\$body."temp:attr2") + 2 + random(3);           
\$temp_attr2_bonus2 = GetVar(\$body."temp:attr2") + 2 + random(3);           
if(\$temp_attr2_bonus1 \> \$temp_attr2_bonus2) \{           
    Set(\$body, "trait:" + \$body."temp:attr2", \$temp_attr2_bonus1);           
\} else \{           
    Set(\$body, "trait:" + \$body."temp:attr2", \$temp_attr2_bonus2);           
\}       */     
    
\$temp_attr2_bonus = GetVar(\$body."temp:attr2") + 2;    
Set(\$body, "trait:" + \$body."temp:attr2", \$temp_attr2_bonus);    
           
/* 2nd lowest attribute 3-5 */      
/*         
\$temp_attr3_bonus1 = GetVar(\$body."temp:attr3") - random(2);           
\$temp_attr3_bonus2 = GetVar(\$body."temp:attr3") - random(2);           
if(\$temp_attr2_bonus1 \> \$temp_attr2_bonus2) \{           
    Set(\$body, "trait:" + \$body."temp:attr3", \$temp_attr3_bonus1);           
\} else \{           
    Set(\$body, "trait:" + \$body."temp:attr3", \$temp_attr3_bonus2);           
\}       */    
    
\$temp_attr3_bonus = GetVar(\$body."temp:attr3") - 2;    
Set(\$body, "trait:" + \$body."temp:attr3", \$temp_attr3_bonus);    
           
/* Lowest attribute 3-5 */          
/*     
\$temp_attr4_bonus1 = GetVar(\$body."temp:attr4") - random(2);           
\$temp_attr4_bonus2 = GetVar(\$body."temp:attr4") - random(2);           
if(\$temp_attr2_bonus1 \> \$temp_attr2_bonus2) \{           
    Set(\$body, "trait:" + \$body."temp:attr4", \$temp_attr4_bonus1);           
\} else \{           
    Set(\$body, "trait:" + \$body."temp:attr4", \$temp_attr4_bonus2);           
\}       */    
    
\$temp_attr4_bonus = GetVar(\$body."temp:attr4") - 4;    
Set(\$body, "trait:" + \$body."temp:attr4", \$temp_attr4_bonus);    
                  
EmitTo(\$\{Chatters:AE:ro:roo\}, "Setting classes");        
/* Set character class and skills */                       
\$body."trait:class1" = \$body."chargen:class";        
\$body."trait:class2" = \$body."chargen:class2";        
       
if(\$body."chargen:converting") \{        
    EmitTo(\$\{Chatters:AE:ro:roo\}, "Setting skills for existing PC.");       
       
    /* Back up old skills */        
    \$oldMap = structure_propmap(copy(\$body."*"))["skill"];        
    \$oldMap["fatigue"] = nil;        
    if(!\$body."backup:oldskills") \$body."backup:oldskills" = \$oldMap;        
        
    /* Unset old skills */        
    \$cats = map_indices(\$oldMap);        
    for(\$i = 0; \$i \< sizeof(\$cats); \$i++) \{       
        \$skillMap = \$oldMap[\$cats[\$i]];       
        \$skills = map_indices(\$skillMap);       
        for(\$j = 0; \$j \< sizeof(\$skills); \$j++) \{       
            Set(\$body, "skill:" + \$cats[\$i] + ":" + \$skills[\$j], nil);        
        \}       
    \}        
    
    /* Convert languages (or refund LPs) */
    if(\$oldMap["lang"]) \{
        \$langsMap = \$oldMap["lang"];
        \$langs = map_indices(\$langsMap);
        \$oldLangsMap = ([ "northern":"german", "eastern":"french", "southern":"italian", "western":"gaelic", "old":"latin", "al-akomiiyah":"arabic", "dusky":"dusky" ]);
        \$oldLangs = map_indices(\$oldLangsMap);
        \$newLangs = (\{ "french", "italian", "gaelic", "english", "latin", "german", "spanish" \});
        for(\$i = 0; \$i \< sizeof(\$langs); \$i++) \{
            if(member(\$langs[\$i], \$newLangs)) \{
                /* If it's a new language, set it back in chatter */
                Set(\$body, "skill:lang:" + \$langs[\$i], \$langsMap[\$langs[\$i]]);
            \} else if(member(\$langs[\$i], \$oldLangs)) \{
                /* If it's an old language, convert it to new language */
                \$value = \$langsMap[\$langs[\$i]] * 3;
                Set(\$body, "skill:lang:" + \$oldLangsMap[\$langs[\$i]], \$value);
            \} else \{
                /* All other languages, refund LPs */
                \$value = Int(\$langsMap[\$langs[\$i]]);
                \$lps = 0;
                for(\$j = 0; \$j \< \$value; \$j++) \{
                    \$lps += \$j *3;
                \}
                \$body."student:learningpoints" += Int(\$lps);
            \}
        \}
    \}
        
    /* Set new skills */        
    \$skillsMap = \$body."chargen:skills";        
    \$skills = map_indices(\$skillsMap);   
        
    for(\$i = 0; \$i \< sizeof(\$skills); \$i++) \{       
        if(Int(\$skillsMap[\$skills[\$i]]) \> 0) \{       
            Set(\$body, "skill:" + \$skills[\$i], Int(\$skillsMap[\$skills[\$i]]));        
        \}       
    \}        
       
    \$body."student:learningpoints" += Int(\$body."chargen:lps");       
\} else \{        
    EmitTo(\$\{Chatters:AE:to:topsy\}, "Setting skills for new PC.");      
      
    \$subclass = \$body."chargen:class";      
    \$class = Call(\$\{Allegory:Data:SkillsDB\}, "get-class", \$subclass: \$subclass);
     
         EmitTo(\$\{Chatters:AE:to:topsy\}, dump_value(Get(\$\{Allegory:Data:SkillsDB\}, "class:" + \$class + ":" + \$subclass)));
      
    \$skillsMap = Get(\$\{Allegory:Data:SkillsDB\}, "class:" + \$class + ":" + \$subclass)["starting_skills"]; 
         
    EmitTo(\$\{Chatters:AE:to:topsy\}, dump_value(\$skillsMap));
      
    \$skills = map_indices(\$skillsMap);       
    for(\$i = 0; \$i \< sizeof(\$skills); \$i++) \{      
        if(\$skills[\$i] == "WEAPON") \{     
            Set(\$body, "skill:combat:" + \$body."chargen:weapon", \$skillsMap[\$skills[\$i]]);     
        \} else \{     
            Set(\$body, "skill:" + \$skills[\$i], \$skillsMap[\$skills[\$i]]);      
        \}     
    \}      
     
    /* Everyone gets some general skills */      
    \$generalMap = Get(\$\{Allegory:Data:SkillsDB\}, "class:general")["starting_skills"];      
    \$general = map_indices(\$generalMap);     
    for(\$i = 0; \$i \< sizeof(\$general); \$i++) \{      
        Set(\$body, "skill:" + \$general[\$i], 1);      
              
    \}      
     
    \$skillsMap += \$generalMap;      
    \$body."chargen:skills" = \$skillsMap;       
\}                  
       
EmitTo(\$\{Chatters:AE:ro:roo\}, "Spawning starting props.");        
/* Give the player any career props */                       
\$itemsarrayMap = Call(this, "grabchoices", \$choice: "startitems", \$gender: \$body."base:genderstring", \$animaltype: \$body."chargen:class");            
                   
if(\$body."chargen:weapon") \{           
    \$itemsarray = \$itemsarrayMap[\$body."chargen:weapon"];  
    if(\$body."chargen:weapon" == "archery") \{
        \$arrows = Spawn(\$\{Ironclaw:Props:Weapons:Accessories:Arrows\});
        \$arrows."base:environment" = \$body;
    \}
    
    if(\$body."chargen:weapon" == "gun") \{
        for(\$i = 0; \$i \< 5; \$i++) \{
            \$cartouche = Spawn(\$\{Allegory:Props:Weapons:Guns:Accessories:Bullet\});
            \$cartouche."base:environment" = \$body;
        \}
    \}
\} else \{           
    \$itemsarray = \$itemsarrayMap["all"];           
\}           
         
/* remove nil items from the array */                       
if(\$itemsarray \&\& sizeof(\$itemsarray)) \$itemsarray -= (\{ nil \});                       
                        
if(sizeof(\$itemsarray)) \{                       
    \$index = random(sizeof(\$itemsarray));                        
    \$item = Spawn(\$itemsarray[\$index][0]);                       
    /* Set item properties */                       
    if(sizeof(\$itemsarray[\$index]) \> 1) \{                       
        for(\$i=1;\$i\<sizeof(\$itemsarray[\$index]);\$i++)\{                       
            if(sizeof(\$itemsarray[\$index][\$i]) \> 1) \{                       
                Set(\$item, \$itemsarray[\$index][\$i][0], \$itemsarray[\$index][\$i][random(sizeof(\$itemsarray[\$index][\$i])-1)+1]);                       
            \}                       
        \}                       
    \}          
    
    \$item."base:environment" = \$body;                       
    \$item."chargen:owner" = Str(\$body."skotos:charname");                       
    \$item."chargen:owner:account" = Str(\$body."skotos:creator");    
\}                         
       
EmitTo(\$\{Chatters:AE:ro:roo\}, "Spawning starting clothes.");            
/* Give player starting garments */                       
\$itemsarrayMap = Call(this, "grabchoices", \$choice: "startclothes", \$gender: \$body."base:genderstring", \$animaltype: \$body."chargen:clothing");                  
\$itemsarray = \$itemsarrayMap["only"];         
     
if(!\$itemsarray) \{     
    \$itemsarray = \$itemsarrayMap[\$body."base:genderstring"];     
\}      
     
/* remove nil items from the array */                       
\$itemsarray -= (\{ nil \});                       
                        
if(sizeof(\$itemsarray)) \{                       
    for(\$i = 0; \$i \< sizeof(\$itemsarray); \$i++) \{                       
        \$item = Spawn(\$itemsarray[\$i][0]);                       
                    
        /* Set item properties */                       
        if(sizeof(\$itemsarray[\$i]) \> 1) \{                       
            for(\$j = 1; \$j \< sizeof(\$itemsarray[\$i]); \$j++)\{                       
                if(sizeof(\$itemsarray[\$i][\$j]) \> 1) \{                       
                    Set(\$item, \$itemsarray[\$i][\$j][0], \$itemsarray[\$i][\$j][random(sizeof(\$itemsarray[\$i][\$j]) - 1) + 1]);                       
                \}                       
            \}                       
        \}                       
        \$item."base:environment" = \$body;                        
        \$item."base:worn-by" = \$body;                    
        Act(\$body, "wear", \$articles: \$item);                          
        \$item."chargen:owner" = Str(\$body."skotos:charname");                        
        \$item."chargen:owner:account" = Str(\$body."skotos:creator");                    
    \}                    
\}       
 
EmitTo(\$\{Chatters:AE:to:topsy\}, "Character generation for " + Str(\$body) + " is complete!");]
\<redirect propob="\$(this)" characterref="\$(body)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:second-class">
         X[S] \<div class="error"\>
    \{? \| \$(error_class) \| You must select a class. \|
        \{? \| \$(error_weapon) \| You must select a weapon specialization. \}
    \}
    \{? \| \$(error_class_invalid) \| You must select a valid class. \}
    \{? \| \$(error_weapon_invalid) \| You must select a valid weapon. \}
\</div\>
\<div class="heading"\>
    \<h1\>Choose a secondary class\</h1\>\<br/\>
\</div\>
\<div class="classes"\>
    \<div class="single-class" id="fighter" onclick="showDesc(this)"\>
        \<div class="class-image" id="fighter-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Fighter Class" src="https://allegoryofempires.com/wp-content/uploads/Website/fighter.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="ranger" onclick="showDesc(this)"\>
        \<div class="class-image" id="ranger-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Ranger Class" src="https://allegoryofempires.com/wp-content/uploads/Website/ranger.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="rogue" onclick="showDesc(this)"\>
        \<div class="class-image" id="rogue-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Rogue Class" src="https://allegoryofempires.com/wp-content/uploads/Website/rogue.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="academic" onclick="showDesc(this)"\>
        \<div class="class-image" id="academic-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Academic Class" src="https://allegoryofempires.com/wp-content/uploads/Website/academic.png"/\>
        \</div\>
    \</div\>
    \<div class="single-class" id="tradesman" onclick="showDesc(this)"\>
        \<div class="class-image" id="tradesman-image"\>\</div\>
        \<div class="class-title"\>
            \<img class="title-img" alt="Tradesman Class" src="https://allegoryofempires.com/wp-content/uploads/Website/tradesman.png"/\>
        \</div\>
    \</div\>
\</div\>
\<div id="classes-description" class="description"\>
In Allegory of Empires, you may choose a secondary class in addition to your primary class. You do not have to choose now as there will be opportunities to learn a new class in-game. Your primary class is: \<b\>\$[\$primary = Obj(\$body)."chargen:class"; return replace_strings(\$primary, "-", " ");]\</b\>\<br/\>
\</div\>
\<zform characterref="\$(characterref)" actbody="\$(body)" body="\$(body)"\>
    \<div id="fighter-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -8px;" alt="The Fighter Class" src="https://allegoryofempires.com/wp-content/uploads/Website/thefighterclass.png"/\>
        The clash of steel; sparks fly as the blades meet. Fighters are at home in the heat of battle, testing their mettle against foes both worthy and not. Do you yearn for the feel of a weapon in your hands or to fight for your cause?
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="one-handed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>One-handed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    With artistry and grace, you are the master of your chosen weapons while defending against your foe with a shield in hand.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dagger, dodge, parry, precision, shield, fencing, sword, whip\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="one-handed-fighter-weapon" name="one-handed-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="sword"\>sword\</option\>
                            \<option value="fencing"\>fencing\</option\>
                            \<option value="whip"\>whip\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="one-handed-fighter-class" name="one-handed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="two-handed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Two-handed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    Brawn is your specialty and the weapons you wield are just as mighty. You are the master of the most imposing of weapons.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dodge, endurance, parry, polearm, sword\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="two-handed-fighter-weapon" name="two-handed-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="polearm"\>polearm\</option\>
                            \<option value="sword"\>sword\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="two-handed-fighter-class" name="two-handed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="dual-wielding-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Dual-wielding Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    If you can kill two birds with one stone, imagine what you could do with two. You strike at your foe with double the bite, wielding two weapons instead of one.\<br/\>
                    \<b\>Available Skills:\</b\> axe, club, dagger, dodge, parry, precision, sword, fencing\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="dual-wielding-fighter-weapon" name="dual-wielding-fighter-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="axe"\>axe\</option\>
                            \<option value="club"\>club\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="fencing"\>fencing\</option\>
                            \<option value="sword"\>sword\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="dual-wielding-fighter-class" name="dual-wielding-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="unarmed-fighter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Unarmed Fighter\</div\>\</div\>
                \<div class="subclass-content"\>
                    Who needs a weapon when yours are part of your very essence. Unarmed fighters can fell any foe with nothing more than their body and skill.\<br/\>
                    \<b\>Available Skills:\</b\> dodge, endurance, parry, precision, unarmed\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dodge\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>parry\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>unarmed\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="unarmed-fighter-class" name="unarmed-fighter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="ranger-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -8px;" alt="The Ranger Class" src="https://allegoryofempires.com/wp-content/uploads/Website/therangerclass.png"/\>
        A hush fills your mind, your senses keenly aware of your surroundings. With practiced grace, your prey falls and the sounds of the wilderness around you come alive once more. The wilds are your comfort and this setting fits like a glove.
        \<br/\>
        \<div class="subclasses"\>
            \<div id="ranger" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Ranger\</div\>\</div\>
                \<div class="subclass-content"\>
                    With cat-like grace and a keen eye, you're most at home where your prey roams wild. With your well-honed skills, the game of predator and prey thrills like no other.\<br/\>
                    \<b\>Available Skills:\</b\> archery, dagger, dodge, gun, polearm, skinning, tracking, trapping\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td class="skill-cell"\>\<select id="ranger-weapon" name="ranger-weapon"\>
                            \<option value=""\>WEAPON\</option\>
                            \<option value="archery"\>archery\</option\>
                            \<option value="dagger"\>dagger\</option\>
                            \<option value="gun"\>gun\</option\>
                            \<option value="polearm"\>polearm\</option\>
                          \</select\>\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>skinning\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>trapping\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="ranger-class" name="ranger-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="rogue-description" class="description"\>
        \<img style="position: relative; left: -15px;" class="class-title-two" alt="The Rogue Class" src="https://allegoryofempires.com/wp-content/uploads/Website/therogueclass.png"/\>
        Right and wrong is neither black nor white, but shades of grey as dark as the shadows that cloak your intentions. Perhaps the ends justify the means, but only you will ever really know the reasons for your choices. It is not only those who are free of sin that cast the first stone, so be sure to master your dark arts.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="assassin" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Assassin\</div\>\</div\>
                \<div class="subclass-content"\>
                    With the target in your sights, you move like the whispers that brought you here. The deed is done and you slip away into the cloak of darkness with death as your wake.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, endurance, parry, herbalism, precision, sneak\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>herbalism\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="assassin-class" name="assassin-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="spy" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Spy\</div\>\</div\>
                \<div class="subclass-content"\>
                    A tangled web you weave when you practice to deceive. Whispers are your currency and knowledge is your goal. How you trade them is up to you.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, eavesdrop, endurance, lipread, parry, precision, sneak\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>lipread\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="spy-class" name="spy-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="thief" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Thief\</div\>\</div\>
                \<div class="subclass-content"\>
                    One will always find a way to survive, whether those methods are noble is another thing entirely. And those with the will can do more than survive; they can thrive.\<br/\>
                    \<b\>Available Skills:\</b\> dagger, dodge, endurance, parry, pickpocket, precision, sneak, steal\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dagger\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>pickpocket\</td\>\<td\>[3]\</td\>\</tr\>
                          \<tr\>\<td\>sneak\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="thief-class" name="thief-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="academic-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -7px;" alt="The Academic Class" src="https://allegoryofempires.com/wp-content/uploads/Website/theacademicclass.png"/\>
        Perhaps the most mysterious gift is that of the mind, and those who can wield it will find a wealth of resources to navigate this tricky world. How you choose to use it is up to you. Regardless of the goal, the power of knowledge is a wondrous one that can move mountains no sword will ever dent.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="body-servant" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Body Servant\</div\>\</div\>
                \<div class="subclass-content"\>
                    Handmaid, valet, etc.\<br/\>
                    \<b\>Available Skills:\</b\> hairstyling, eavesdrop, lipread\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>hairstyling\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="body-servant-class" name="body-servant-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="healer" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Healer\</div\>\</div\>
                \<div class="subclass-content"\>
                    With tenderness and care, your hands can make miracles of someone's darkest day. Use your knowledge to bring hope to those who need such care.\<br/\>
                    \<b\>Available Skills:\</b\> healing, herbalism\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>healing\</td\>\<td\>[3]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="healer-class" name="healer-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="socialite" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Socialite\</div\>\</div\>
                \<div class="subclass-content"\>
                    In the twisted web of politics and promises, quick wit and a quicker tongue can pave the way faster than any blade. How will you wield this articulate weapon?\<br/\>
                    \<b\>Available Skills:\</b\> art, eavesdrop, lipread, music\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>art\</td\>\<td\>[5]\</td\>\</tr\>
                          \<tr\>\<td\>music\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="socialite-class" name="socialite-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<div id="tradesman-description" class="description"\>
        \<img class="class-title-two" style="position: relative; left: -5px;" alt="The Tradesman Class" src="https://allegoryofempires.com/wp-content/uploads/Website/thetradesmanclass.png"/\>
        The reward of a hard day's work is the most fulfilling feeling in the world, and to see something crafted by your own hands is a joy unlike any other. Careful stitches, painstaking engravings or the heat of the forge are your lifeblood and the end results are treasures worth more than their weight in gold.
        \<br/\>
        \<img class="subclass-title" alt="Subclasses" src="https://allegoryofempires.com/wp-content/uploads/Website/subclasses.png"/\>
        \<div class="subclasses"\>
            \<div id="blacksmith" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Blacksmith\</div\>\</div\>
                \<div class="subclass-content"\>
                    The heft of the hammer, the sizzle of hot metal releasing steam into the air. Sweat beads on the brow as you force the unyielding metal to your whim and craft masterpieces with might.\<br/\>
                    \<b\>Available Skills:\</b\> metalworking, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>metalworking\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="blacksmith-class" name="blacksmith-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="bookbinder" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Bookbinder\</div\>\</div\>
                \<div class="subclass-content"\>
                    The pen is mightier than the sword, they say. And there is no better place to hold those precious words and powerful words than a book crafted under your careful guidance.\<br/\>
                    \<b\>Available Skills:\</b\> bookbinding, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>bookbinding\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="bookbinder-class" name="bookbinder-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="carpenter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Carpenter\</div\>\</div\>
                \<div class="subclass-content"\>
                    The smell of fresh lumber, the resistance of the grain as your chisel slowly pries something from nothing. With hammer and nails and creative spirit, you've created a treasure.\<br/\>
                    \<b\>Available Skills:\</b\> woodworking, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>woodworking\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="carpenter-class" name="carpenter-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="dyer" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Dyer\</div\>\</div\>
                \<div class="subclass-content"\>
                    Dyer\<br/\>
                    \<b\>Available Skills:\</b\> dyeing, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>dyeing\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="dyer-class" name="dyer-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="jeweler" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Jeweler\</div\>\</div\>
                \<div class="subclass-content"\>
                    Precious metals and treasured gems are your canvas. With careful and precise skill, you create the priceless pieces that mark the moments more priceless than the gems themselves.\<br/\>
                    \<b\>Available Skills:\</b\> jewelcrafting, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>jewelcrafting\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="jeweler-class" name="jeweler-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="miner" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Miner\</div\>\</div\>
                \<div class="subclass-content"\>
                    With brute force and tireless might, your skills in coaxing hidden materials from the earth keeps the cogs of business churning.\<br/\>
                    \<b\>Available Skills:\</b\> mining, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>mining\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="miner-class" name="miner-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="seamstress" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Seamstress\</div\>\</div\>
                \<div class="subclass-content"\>
                    The monotonous push and pull of needle and thread punctuates countless moments of the day, but your keen eye and creative soul breathes life into swaths of colored fabric.\<br/\>
                    \<b\>Available Skills:\</b\> tailoring, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>tailoring\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="seamstress-class" name="seamstress-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="stonemason" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Stonemason\</div\>\</div\>
                \<div class="subclass-content"\>
                    Only the most gifted of minds can see the life hidden in a block of stone, and yours can coax that breath into even the coldest monoliths of earth.\<br/\>
                    \<b\>Available Skills:\</b\> stonemasonry, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>stonemasonry\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="stonemason-class" name="stonemason-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="weaver" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Weaver\</div\>\</div\>
                \<div class="subclass-content"\>
                    Deft fingertips and patience beyond compare give you the power to turn even the roughest fibers into supple swaths of fabric.\<br/\>
                    \<b\>Available Skills:\</b\> weaving, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>weaving\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="weaver-class" name="weaver-class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
            \<div id="woodcutter" class="single-subclass"\>
                \<div class="subclass-header"\>\<div class="subclass-heading"\>Woodcutter\</div\>\</div\>
                \<div class="subclass-content"\>
                    With a masterful eye, you can see the forest through the trees. Your sights find the perfect specimen and with a hearty heft of the axe, the prize is yours.\<br/\>
                    \<b\>Available Skills:\</b\> woodcutting, appraise, trading\<br/\>
                    \<b\>Starting Skills:\</b\>
                        \<table class="skill-table"\>
                          \<tr\>\<td\>woodcutting\</td\>\<td\>[5]\</td\>\</tr\>
                        \</table\>
                \</div\>
                \<div class="checkbox-container"\>
                    \<label class="checkbox-label"\>
                        \<input type="checkbox" class="radio" id="woodcutter-class" name="class" onClick="chooseClass(this)"/\>
                        \<span class="checkbox-custom circular"\>\</span\>\<span class="input-title"\>\</span\>
                    \</label\>
                \</div\>
            \</div\>
        \</div\>
    \</div\>
    \<input type="submit" id="hidden-btn"/\>
    \<action\>
        \$["";            
          if(GetVar("one-handed-fighter-class") == "on") \$charclass = "one-handed-fighter";                 
          if(GetVar("two-handed-fighter-class") == "on") \$charclass = "two-handed-fighter";                 
          if(GetVar("dual-wielding-fighter-class") == "on") \$charclass = "dual-wielding-fighter";                 
          if(GetVar("unarmed-fighter-class") == "on") \$charclass = "unarmed-fighter";                 
          if(GetVar("ranger-class") == "on") \$charclass = "ranger";                 
          if(GetVar("assassin-class") == "on") \$charclass = "assassin";                 
          if(GetVar("spy-class") == "on") \$charclass = "spy";                 
          if(GetVar("thief-class") == "on") \$charclass = "thief";        
          if(GetVar("body-servant-class") == "on") \$charclass = "body-servant";              
          if(GetVar("healer-class") == "on") \$charclass = "healer";                 
          if(GetVar("socialite-class") == "on") \$charclass = "socialite";                 
          if(GetVar("blacksmith-class") == "on") \$charclass = "blacksmith";                 
          if(GetVar("bookbinder-class") == "on") \$charclass = "bookbinder";                 
          if(GetVar("carpenter-class") == "on") \$charclass = "carpenter";          
          if(GetVar("dyer-class") == "on") \$charclass = "dyer";              
          if(GetVar("jeweler-class") == "on") \$charclass = "jeweler";                 
          if(GetVar("miner-class") == "on") \$charclass = "miner";                 
          if(GetVar("seamstress-class") == "on") \$charclass = "seamstress";                 
          if(GetVar("stonemason-class") == "on") \$charclass = "stonemason";                 
          if(GetVar("weaver-class") == "on") \$charclass = "weaver";                 
          if(GetVar("woodcutter-class") == "on") \$charclass = "woodcutter";           
          if(!\$charclass) \{           
              \$actbody."chargen:class2" = nil;        
              \$actbody."chargen:state" = "set-skills";      
          \} else \{           
              if(member(\$charclass, (\{ "one-handed-fighter", "two-handed-fighter", "dual-wielding-fighter", "unarmed-fighter", "ranger" \}))) \{         
                  if(GetVar(\$charclass + "-weapon") == "") \{           
                      \$error_weapon = 1;           
                  \} else \{           
                      \$weapon = GetVar(\$charclass + "-weapon");      
                      \$actbody."chargen:class2" = \$charclass;    
                      \$actbody."chargen:weapon2" = \$weapon;        
                      \$actbody."chargen:state" = "set-skills";     
                  \}           
              \} else \{   
                  \$actbody."chargen:state" = "set-skills";     
                  \$actbody."chargen:class2" = \$charclass;    
              \}    
          \}]
        \{? \| \$(error_weapon) \|
            \<redirect propob="\$(this)" error_class="\$(error_class)" error_weapon="\$(error_weapon)" characterref="\$(characterref)"/\>
        \|
            \<redirect propob="\$(this)" charclass="\$(charclass)" weapon="\$(weapon)" characterref="\$(characterref)"/\>
        \}
    \</action\>
\</zform\>
      </Core:Property>
      <Core:Property property="export:xtra:state:second-class:goback">
         X[S] \$[\$actbody."chargen:state" = "attributes";]
\<redirect propob="\$(this)" characterref="\$(actbody)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:set-skills">
         X[S] \<style\>
    #cont_btn \\\{
        visibility: visible;
    \\\}
\</style\>
\{? \| \$(error) \| There was a problem with your skill assignment. Please try again. \}
\<br/\>\<br/\>
\<div id="textarea"\>
\<zform actname="\$(name)" actbody="\$(body)" actdat="\$(dat)"\>
    \<p style="text-align:justify"\>
  \$["";         
         
   \$rstr = "";         
         
   /*Calculate LPs*/          
   \$lps = Call(\$\{Allegory:Data:SkillsDB\}, "calculate-lps", \$actbody: \$actbody);         
         
   \$rstr += "You have \<input readonly name='learningpoints' value='" +Str(\$lps) + "' id='lps'/\> learning points to spend. Left over learning points will be added to your existing pool of " + \$actbody."student:learningpoints" + " learning points to use in-game.\<br/\>";         
         
   \$rstr += "\<center\>\<h3\>Class-specific Skills:\</h3\>\</center\>";     
   \$skillMap = nil;     
   if(Obj(\$actbody)."chargen:class") \{      
       \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: Obj(\$actbody)."chargen:class");      
   \}     
     
   if(Obj(\$actbody)."chargen:class2") \{      
       \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: Obj(\$actbody)."chargen:class2", \$skillMap: \$skillMap);      
   \}     
 
   \$skills = map_indices(\$skillMap);        
   for(\$i = 0; \$i \< sizeof(\$skills); \$i++) \{   
     if(\$skills[\$i] != "starting_skills") \{ 
        \$rstr += "\<div class='skill-group'\>";          
        \$rstr += "\<div class='skill'\>" + capitalize(\$skills[\$i]) + " [Max " + Str(\$skillMap[\$skills[\$i]]) + "]:\</div\>";         
        \$rstr += "\<div class='subtract' onclick=\\"subtract('" + \$skills[\$i] + "', '" + \$skillMap[\$skills[\$i]] + "')\\" id='subtract-" + \$skills[\$i] + "'\>-\</div\>";         
        \$rstr += "\<input value='0' readonly type='text' name='sv-" + \$skills[\$i] + "' class='level' id='" + \$skills[\$i] + "'\>\</input\>";         
        \$rstr += "\<div class='add' onclick=\\"add('" + \$skills[\$i] + "', '" + \$skillMap[\$skills[\$i]] + "')\\" id='add-" + \$skills[\$i] + "'\>+\</div\>";       
        \$rstr += "\<div class='skillcost'\>(Cost: \<div class='skillcostvalue' id='skillcostvalue-" + \$skills[\$i] + "'\>6\</div\>)\</div\>";
        \$rstr += "\</div\>";     
     \}     
   \}     
 
   \$rstr += "\<center\>\<h3\>General Skills:\</h3\>\</center\>";     
   \$skillMap = nil;     
   \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: "general");     
   \$skills = map_indices(\$skillMap);         
   for(\$i = 0; \$i \< sizeof(\$skills); \$i++) \{    
     if(\$skills[\$i] != "starting_skills") \{      
        \$rstr += "\<div class='skill-group'\>";          
        \$rstr += "\<div class='skill'\>" + capitalize(\$skills[\$i]) + " [Max " + Str(\$skillMap[\$skills[\$i]]) + "]:\</div\>";         
        \$rstr += "\<div class='subtract' onclick=\\"subtract('" + \$skills[\$i] + "', '" + \$skillMap[\$skills[\$i]] + "')\\" id='subtract-" + \$skills[\$i] + "'\>-\</div\>";         
        \$rstr += "\<input value='0' readonly type='text' name='sv-" + \$skills[\$i] + "' class='level' id='" + \$skills[\$i] + "'\>\</input\>";         
        \$rstr += "\<div class='add' onclick=\\"add('" + \$skills[\$i] + "', '" + \$skillMap[\$skills[\$i]] + "')\\" id='add-" + \$skills[\$i] + "'\>+\</div\>";   
        \$rstr += "\<span class='skillcost'\>(Cost: \<span class='skillcostvalue' id='skillcostvalue-" + \$skills[\$i] + "'\>6\</span\>)\</span\>";
        \$rstr += "\</div\>";   
     \}       
   \}     
   
   \$rstr += "\<br/\>\<br/\>[Warning: Once you hit continue, you will not be able to go back to change your character so make sure you are satisfied with your choices.]";
         
   return ParseXML(\$rstr);]
    \</p\> \<sbr/\>\<sbr/\>
    \<p style="text-align:justify"\>\<input style="float:right" type="submit" id="hidden-btn" value="Continue" class="submit-button"/\>\</p\>
    \<action\>
      \$["";          
        \$lps = Call(\$\{Allegory:Data:SkillsDB\}, "calculate-lps", \$actbody: \$actbody);         
        \$leftover = \$learningpoints;         
        \$varMap = args;         
        \$vars = map_indices(\$varMap);         
    
        if(\$actbody."chargen:class") \{    
            \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: \$actbody."chargen:class");         
        \}    
    
        if(\$actbody."chargen:class2") \{    
            \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: \$actbody."chargen:class2", \$skillMap: \$skillMap);    
        \}    
    
        \$skillMap = Call(\$\{Allegory:Data:SkillsDB\}, "get-skillmap", \$actbody: \$actbody, \$subclass: "general", \$skillMap: \$skillMap);    
    
        \$skills = map_indices(\$skillMap);         
        \$chargenSkills = ([ ]);        
        
        \$checksum = 0;         
        
        for(\$i = 0; \$i \< sizeof(\$vars); \$i++) \{         
            if(contains(\$vars[\$i], "sv-")) \{         
                \$temp = Int(GetVar(\$vars[\$i]));        
                for(\$j = 1; \$j \<= \$temp; \$j++) \{         
                    if(\$j \< 10) \{         
                        \$checksum += Int(Flt(\$j) * 5.0 * 1.1);         
                    \} else \{         
                        \$checksum += 55;         
                    \}         
EmitTo(\$\{Chatters:AE:ro:roo\}, Str(\$vars[\$i]) + " LVL " + Str(\$j) + "CHECKSUM NOW IS: " + Str(\$checksum));    
                \}         
   
                \$skillname = replace_strings(\$vars[\$i], "sv-", "");         
                if(!member(\$skillname, \$skills)) \{        
                    \$invalid_skill_error = 1;         
                \} else \{        
                    if(\$j \> \$skillMap[\$skillname]) \$invalid_skill_level_error = 1;         
                \}        
        
                \$chargenSkills[\$skillname] = Int(\$temp);        
            \}         
        \}         
         
        EmitTo(\$\{Chatters:AE:ro:roo\}, Str(\$checksum) + " : " + Str(\$leftover));    
   
        \$total = Int(\$checksum) + Int(\$leftover);        
       
        EmitTo(\$\{Chatters:AE:ro:roo\}, Str(\$total) + " : " + Str(\$lps));    
        if(\$total != Int(\$lps)) \{         
            \$checksum_error = 1;         
        \} else \{         
             \$actbody."chargen:skills" = \$chargenSkills;        
             \$actbody."chargen:lps" = Int(\$leftover);        
             \$actbody."chargen:state" = "runscripts";        
        \}]
        \{? \| \$(checksum_error) \| \<redirect propob="\$(this)" characterref="\$(actbody)" error="checksum_error"/\> \|
          \{? \| \$(invalid_skill_error) \| \<redirect propob="\$(this)" characterref="\$(actbody)" error="invalid_skill"/\> \|
              \{? \| \$(invalid_skill_level_error) \| \<redirect propob="\$(this)" characterref="\$(actbody)" error="invalid_skill_level"/\> \|
               \<redirect propob="\$(this)" characterref="\$(actbody)"/\> \}\}\}
    \</action\>
\<script\>
    function add(skill, max) \\\{
        var e1 = document.getElementById(skill);
        var content = parseInt(e1.value);
        var e2 = document.getElementById("lps");
        var value = parseInt(e2.value);
        var cost = 0;
        var nextcost = 0;
        if(content \\\< max) \\\{
            content++;
            if(content \\\> 10) \\\{
                cost = 55;
            \\\} else \\\{
                cost = Math.round(5.0 * parseFloat(content) * 1.1);
            \\\}
            if((content+1) \\\> 0) \\\{
                if((content+1) \\\> 10) \\\{
                    nextcost = 55;
                \\\} else \\\{
                    nextcost = Math.round(5.0 * parseFloat(content+1) * 1.1);
                \\\}
            \\\}
            if(value - cost \\\< 0) \\\{
                alert("You do not have enough learning points to spend.");
            \\\} else \\\{
                e2.value = value-cost;
                e1.value = content;
            \\\}
        \\\} else \\\{
            nextcost = "MAXED";
        \\\}
        var skillcost = document.getElementById('skillcostvalue-' + skill);
        skillcost.innerHTML = nextcost;
    \\\}
    function subtract(skill, max) \\\{
        var e1 = document.getElementById(skill);
        var content = parseInt(e1.value);
        var e2 = document.getElementById("lps");
        var value = parseInt(e2.value);
        var cost = 0;
        var nextcost = 0;
        if(content \\\> 0) \\\{
            if(content \\\> 10) \\\{
                cost = 55;
            \\\} else \\\{
                cost = Math.round(5.0 * parseFloat(content) * 1.1);
            \\\}
            e2.value = value+cost;
            content--;
            e1.value = content;
        \\\}
        if((content+1) \\\> 0) \\\{
            if((content+1) \\\> 10) \\\{
                nextcost = 55;
            \\\} else \\\{
                nextcost = Math.round(5.0 * parseFloat(content+1) * 1.1);
            \\\}
        \\\}
        var skillcost = document.getElementById('skillcostvalue-' + skill);
        skillcost.innerHTML = nextcost;
    \\\}
\</script\>
\</zform\>\</div\>\<br/\>\<br/\>\<br/\>\<br/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:set-skills:goback">
         X[S] \$[\$actbody."chargen:state" = "second-class";]
\<redirect propob="\$(this)" characterref="\$(actbody)"/\>
      </Core:Property>
      <Core:Property property="export:xtra:state:start_location">
         X[S]
      </Core:Property>
      <Core:Property property="export:xtra:stylesheet">
         X[S] \<style\>
.skattr \\\{
    display: flex;
    flex-flow: row;
    width: 75%;
    justify-content: space-between;
\\\}
.attr-list \\\{
\\\}
.examine \\\{
\\\}
.statsheet \\\{
    position: relative;
    display: block;
    width: 50%;
    margin: auto;
    background-repeat: no-repeat;
    background-size: 200px;
    background-position: top right;
\\\}
.label \\\{
    position: relative;
    width: 145px;
    padding-left: 25px;
    float: left;
\\\}
.confirm-heading \\\{
    width: 30%;
    display: block;
    position: relative;
\\\}
.confirm-name \\\{
    position: relative;
    display: block;
    width: 100%;
    margin: auto;
    background-repeat: no-repeat;
    background-size: 400px;
    background-position: top center;
\\\}
.confirm_wrapper \\\{
    display: block;
    position: relative;
    width: 80%;
    margin: auto;
\\\}
html \\\{
    height: 100%;
    min-height: 100%;
    padding: 0;
    margin: 0;
    background-image: url("https://allegoryofempires.com/wp-content/uploads/Website/brown-background.png");
    background-size: 100% 100%;
    background-position: center center;
    background-attachment: fixed;
\\\}
body \\\{
    padding: 0;
    margin: 0;
    min-height: 100%;
\\\}
p \\\{
    font-size: 14pt;
    text-align: justify;
\\\}
.form \\\{
    border: 0;
    outline: 0;
    background: transparent;
    border-bottom: 1px solid black;
    text-align: center;
\\\}
.heading \\\{
    display: block;
    position: relative;
    margin: auto;
    width: 100%;
\\\}
#intro \\\{
    width: 200px;
\\\}
#class \\\{
    position: relative;
    display: block;
    width: 400px;
    margin: auto;
\\\}
.logo \\\{
    position: absolute;
    width: 300px;
    display: inline-block;
    margin: auto;
    left: 0;
    right: 0;
    z-index: 1000;
\\\}
.chargen \\\{
    position: relative;
    width: 250px;
    margin: auto;
    display: inline-block;
    padding-left: 5px;
\\\}
.chargenhelp \\\{
    position: relative;
    width: 150px;
    float: right;
    padding-right: 5px;
\\\}
.main-wrapper \\\{
    display: flex;
    flex-direction: column;
    flex: 1;
    justify-content: space-between;
    position: absolute;
    top: 0;
    bottom: 0;
    height: 100%;
    min-height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    background-size: 100% 100%;
    background-position: center center;
    background-attachment: fixed;
\\\}
.main \\\{
    min-height: 100%;
    width: 100%;
    padding-top: 120px;
    padding-bottom: 120px;
    padding: 0;
    margin: 0;
\\\}
.content \\\{
    position: relative;
    min-height: 100%;
    padding: 0;
    padding-top: 120px;
    margin: 0;
    background-color: white;
    opacity: 0.75;
    background-size: 100% 100%;
    background-position: center center;
    background-attachment: fixed;
    width: 100%;
\\\}
.header \\\{
    display: block;
    position: fixed;
    width: 100%;
    margin: auto;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/bgtexture.png");
    background-size: contain;
    background-position: center center;
    box-shadow: 10px 10px 20px black;
    z-index: 999;
    border-bottom: 5px solid black;
\\\}
.footer \\\{
    position: fixed;
    display: flex;
    justify-content: space-between;
    bottom: 0;
    height: 50px;
    width: 100%;
    margin: auto;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/bgtexture.png");
    background-size: contain;
    background-position: center center;
    box-shadow: -10px -10px 20px black;
    z-index: 999;
    border-top: 5px solid black;
\\\}
.button \\\{
    display: inline-block;
    width: 100px;
    border: 2px solid black;
    margin: 5px;
    padding: 5px;
    padding-left: 20px;
    padding-right: 20px;
\\\}
.button:hover \\\{
    border: 2px solid red;
\\\}
#restart_btn \\\{
    float: left;
\\\}
#back_btn \\\{
    margin: auto;
    cursor: pointer;
\\\}
#cont_btn \\\{
    visibility: visible;
    float: right;
    cursor: pointer;
\\\}
.classes \\\{
    display: flex;
    flex-flow: row;
    justify-content: center;
    position: relative;
    margin: auto;
    width: 100%;
\\\}
.single-class \\\{
    position: relative;
    display: inline-block;
    margin-left: 20px;
    margin-right: 20px;
    cursor: pointer;
\\\}
#fighter-image \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-fighter-bw.png");
    background-position: center center;
    background-size: 100%;
\\\}
#fighter-image:hover \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-fighter-color.png");
    background-position: center center;
    background-size: 100%;
\\\}
#ranger-image \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-ranger-bw.png");
    background-position: center center;
    background-size: 100%;
\\\}
#ranger-image:hover \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-ranger-color.png");
    background-position: center center;
    background-size: 100%;
\\\}
#rogue-image \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-rogue-bw.png");
    background-position: center center;
    background-size: 100%;
\\\}
#rogue-image:hover \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-rogue-color.png");
    background-position: center center;
    background-size: 100%;
\\\}
#academic-image \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-academic-bw.png");
    background-position: center center;
    background-size: 100%;
\\\}
#academic-image:hover \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-academic-color.png");
    background-position: center center;
    background-size: 100%;
\\\}
#tradesman-image \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-tradesman-bw.png");
    background-position: center center;
    background-size: 100%;
\\\}
#tradesman-image:hover \\\{
    position: relative;
    display: inline-block;
    width: 120px;
    height: 120px;
    background: url("https://allegoryofempires.com/wp-content/uploads/Website/badge-tradesman-color.png");
    background-position: center center;
    background-size: 100%;
\\\}
#fighter-description \\\{
    display: none;
\\\}
#ranger-description \\\{
    display: none;
\\\}
#rogue-description \\\{
    display: none;
\\\}
#academic-description \\\{
    display: none;
\\\}
#tradesman-description \\\{
    display: none;
\\\}
#textarea \\\{
    width: 60%;
    margin: auto;
\\\}
.appearance \\\{
    width: 60%;
    margin: auto;
    padding-top: 20px;
    padding-bottom: 20px;
\\\}
.description \\\{
    width: 60%;
    margin: auto;
    min-height: 300px;
    border-top: 1px solid #c8c8c8;
    margin-top: 20px;
    margin-bottom: 40px;
    padding: 20px;
\\\}
.class-title \\\{
    width: 100%;
\\\}
.class-title-two \\\{
    display: block;
    height: 50px;
\\\}
.subclass-title \\\{
    display: block;
    width: 130px;
\\\}
.title-img \\\{
    display: block;
    width: 120px;
    margin: auto;
\\\}
.subclasses \\\{
    display: flex;
    flex-flow: row;
    flex-wrap: wrap;
    justify-content: space-around;
    position: relative;
    margin: auto;
    width: 100%;
\\\}
.single-subclass \\\{
    position: relative;
    display: inline-block;
    margin: 10px;
    width: 350px;
    height: 350px;
    border: 1px solid #5e5e5e;
    background: #e0e0e0;
\\\}
.subclass-header \\\{
    position: relative;
    display: block;
    width: 100%;
    background: #5e5e5e;
    font-weight: bolder;
    color: white;
\\\}
.subclass-heading \\\{
    font-size: 20px;
    width: 100%;
    padding: 5px;
\\\}
.subclass-content \\\{
    position: relative;
    display: inline-block;
    width: 100%;
    padding: 5px;
\\\}
/* Styling Checkbox Starts */
.checkbox-container \\\{
    position: absolute;
    bottom: 0px;
    margin: auto;
    background: #5e5e5e;
    font-color: white;
    width: 100%;
    padding-top: 10px;
    padding-bottom: 10px;
\\\}
.checkbox-label \\\{
    display: block;
    position: relative;
    margin: auto;
    cursor: pointer;
    font-size: 22px;
    line-height: 24px;
    height: 24px;
    width: 24px;
    clear: both;
\\\}
.checkbox-label input \\\{
    position: absolute;
    bottom: 0;
    left: 0;
    opacity: 0;
    cursor: pointer;
\\\}
.checkbox-label .checkbox-custom \\\{
    position: absolute;
    bottom: 0px;
    left: 0px;
    height: 24px;
    width: 24px;
    background-color: white;
    border-radius: 5px;
    transition: all 0.3s ease-out;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    -ms-transition: all 0.3s ease-out;
    -o-transition: all 0.3s ease-out;
    border: 2px solid black;
\\\}
.checkbox-label input:checked ~ .checkbox-custom \\\{
    background-color: #FFFFFF;
    border-radius: 5px;
    -webkit-transform: rotate(0deg) scale(1);
    -ms-transform: rotate(0deg) scale(1);
    transform: rotate(0deg) scale(1);
    opacity:1;
    border: 2px solid black;
\\\}
.checkbox-label .checkbox-custom::after \\\{
    position: absolute;
    content: "";
    left: 12px;
    bottom: 12px;
    height: 0px;
    width: 0px;
    border-radius: 5px;
    border: solid black;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(0deg) scale(0);
    -ms-transform: rotate(0deg) scale(0);
    transform: rotate(0deg) scale(0);
    opacity:1;
    transition: all 0.3s ease-out;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    -ms-transition: all 0.3s ease-out;
    -o-transition: all 0.3s ease-out;
\\\}
.checkbox-label input:checked ~ .checkbox-custom::after \\\{
  -webkit-transform: rotate(45deg) scale(1);
  -ms-transform: rotate(45deg) scale(1);
  transform: rotate(45deg) scale(1);
  opacity:1;
  left: 8px;
  top: 3px;
  width: 6px;
  height: 12px;
  border: solid #009BFF;
  border-width: 0 2px 2px 0;
  background-color: white;
  border-radius: 0;
\\\}
/* For Ripple Effect */
.checkbox-label .checkbox-custom::before \\\{
    position: absolute;
    content: "";
    left: 10px;
    top: 10px;
    width: 0px;
    height: 0px;
    border-radius: 5px;
    border: 2px solid black;
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
    z-index: 999;
\\\}
.checkbox-label input:checked ~ .checkbox-custom::before \\\{
    left: -3px;
    top: -3px;
    width: 24px;
    height: 24px;
    border-radius: 5px;
    -webkit-transform: scale(3);
    -ms-transform: scale(3);
    transform: scale(3);
    opacity:0;
    z-index: 999;
    transition: all 0.3s ease-out;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    -ms-transition: all 0.3s ease-out;
    -o-transition: all 0.3s ease-out;
\\\}
/* Style for Circular Checkbox */
.checkbox-label .checkbox-custom.circular \\\{
    border-radius: 50%;
    border: 2px solid black;
\\\}
.checkbox-label input:checked ~ .checkbox-custom.circular \\\{
    background-color: white;
    border-radius: 50%;
    border: 2px solid black;
\\\}
.checkbox-label input:checked ~ .checkbox-custom.circular::after \\\{
    border: solid #00a651;
    border-width: 0 2px 2px 0;
\\\}
.checkbox-label .checkbox-custom.circular::after \\\{
    border-radius: 50%;
\\\}
.checkbox-label .checkbox-custom.circular::before \\\{
    border-radius: 50%;
    border: 2px solid black;
\\\}
.checkbox-label input:checked ~ .checkbox-custom.circular::before \\\{
    border-radius: 50%;
\\\}
.input-title \\\{
    display: inline-block;
    position: relative;
    font-size: 16px;
    width: 100%;
    margin: auto;
    right: -30px;
    top: 0px;
\\\}
#hidden-btn \\\{
    visibility: hidden;
\\\}
.group \\\{
    width: 100%;
    display: flex;
    justify-content: center;
\\\}
.skill-cell \\\{
    width: 150px;
\\\}
.skill-table \\\{
    width: 200px;
    margin: auto;
\\\}
.skill-group \\\{
    width: 426px;
    margin: auto;
    display: flex;
    flex-flow: row;
    position: relative;
\\\}
.skillcost \\\{
    display: inline-block;
    font-size: 12px;
    padding-left: 3px;
    padding-top: 5px;
\\\}
.skillcostvalue \\\{
    display: inline-block;
\\\}
.skill \\\{
    width: 250px;
    text-align: right;
    padding: 3px;
\\\}
.subtract \\\{
    padding: 3px;
    width: 20px;
    height: 20px;
    border: 1px solid;
    text-align: center;
    cursor: pointer;
    background: red;
    opacity: 0.5;
\\\}
.subtract:hover \\\{
    opacity: 0.7;
\\\}
.level \\\{
    padding: 3px;
    width: 20px;
    background: white;
    text-align: center;
\\\}
.add \\\{
    padding: 3px;
    width: 20px;
    height: 20px;
    border: 1px solid;
    text-align: center;
    cursor: pointer;
    background: green;
    opacity: 0.5;
\\\}
.add:hover \\\{
    opacity: 0.7;
\\\}
\</style\>
      </Core:Property>
      <Core:Property property="merry:lib:figurestate">
         X[M] /*    
  ** Now a bunch of code to figure out which state we're in; further    
  ** down the SAM will act on this information to include the right    
  ** sub-page.    
  */    

    
if(!\$body) return nil;    

if(\$body."base:urparent" != \$\{Allegory:Bodies:Mainbody\}) return nil;
    
  /* did we fail to show up in any previous stage on this server? */    
  if (\$dat."stage:no-show") \{    
     \$state = "noshow";    
     \$title = "You have been marked as a 'no-show' in some previous stage.";    
     return nil;    
  \}    
    
/* check that this is the first time we're setting the variables for the character */    
if(!Get(\$body, "CharGen:State"))    
\{    
  Set(\$body, "CharGen:State", Get(\$this, "startpage"));    
\}    
    
/* find which page we're at in the character creator */    
\$title = Get(\$this, "title");    
    
\$state = Get(\$body, "CharGen:State");    
    
return nil;
      </Core:Property>
      <Core:Property property="merry:lib:grabchoices">
         X[M] /*
Returns an array of start story choices, after being given a choice type, and possibly gender, animal type and animal breed
*/

if (!\$choice) return (\{\});

\$choicearray = (\{\});

\$accountType = general::getAccountType(\$udat: \$dat);
if(\$dat."testing:account-type") \$accountType = \$dat."testing:account-type";

if(\$animaltype) \{
    if(Get(\$this, "choices:" + \$choice + ":" + \$animaltype)) \{
        return Get(\$this, "choices:" + \$choice + ":" + \$animaltype);
    \}
\}

\$choice = "features:" + \$choice;
if(Get(\$this, "choices:" + \$choice)) \{
    \$free = (\{ \});
    \$standard = (\{ \});
    \$premium = (\{ \});

    if(Get(\$this, "choices:" + \$choice)["free"]) \$free = Get(\$this, "choices:" + \$choice)["free"];
    if(Get(\$this, "choices:" + \$choice)["standard"]) \$standard = Get(\$this, "choices:" + \$choice)["standard"];
    if(Get(\$this, "choices:" + \$choice)["premium"]) \$premium = Get(\$this, "choices:" + \$choice)["premium"];

    \$choicearray = \$free;

    if(\$accountType == "standard") \{
        \$choicearray \|= \$standard;
    \}

    if(\$accountType == "premium") \{
        \$choicearray \|= \$standard;
        \$choicearray \|= \$premium;
    \}

    if(Get(\$this, "choices:" + \$choice)["only"]) \{
        \$choicearray \|= Get(\$this, "choices:" + \$choice)["only"];
    \}

    if(Get(\$this, "choices:" + \$choice)["all"]) \{
        \$choicearray \|= Get(\$this, "choices:" + \$choice)["all"];
    \}

    if(Get(\$this, "choices:" + \$choice)[\$body."base:genderstring"]) \{
        \$choicearray \|= Get(\$this, "choices:" + \$choice)[\$body."base:genderstring"];
    \}
\}

\$choicearray = map_indices( arr_to_set( \$choicearray ));

return \$choicearray;
      </Core:Property>
      <Core:Property property="merry:lib:initialize">
         X[M] /* first basic sanity checks -- these should never happen */

if (\$dat == nil) error("page reached without a udat");
if (\$name == nil) error("page reached without a name");

if(\$body == nil \&\& \$characterref) \{
    \$body= Obj( \$characterref );
\}

if(\$body == nil \&\& \$thischaracter != nil) \{
    \$body = Obj( \$thischaracter[4..strlen(\$thischaracter)-2] );
\}

if(\$body \&\& \$body."base:urparent" != \$\{Allegory:Bodies:Mainbody\}) \{
    \$body."chargen:state" = nil;
    \$body."chargen:finished" = nil;
\}

if(!\$body \|\| (\$body \&\& \$body."base:urparent" != \$\{Allegory:Bodies:Mainbody\})) \{

    \$classes = (\{ "one-handed-fighter", "two-handed-fighter", "dual-wielding-fighter", "unarmed-fighter", "ranger", "assassin", "spy", "thief", "healer", "socialite", "blacksmith", "bookbinder", "carpenter", "jeweler", "miner", "seamstress", "stonemason", "weaver", "woodcutter", "dyer", "body-servant" \});
     \$weapons = ([ "one-handed-fighter":(\{ "axe", "club", "dagger", "sword", "whip", "fencing" \}), "two-handed-fighter":(\{ "axe", "club", "polearm", "sword" \}), "dual-wielding-fighter":(\{ "axe", "club", "dagger", "sword", "fencing" \}), "ranger":(\{ "archery", "dagger", "gun", "polearm" \}) ]);

    if(\$charclass) \{
        if(!member(\$charclass, \$classes)) \{
            \$error_class_invalid = 1;
            \$state = "no-body";
        \} else \{
            if(\$weapons[\$charclass]) \{
                if(!\$weapon \|\| !member(Str(\$weapon), \$weapons[\$charclass])) \{
                    \$error_weapon_invalid = 1;
                    \$state = "no-body";
                \} else \{
                    \$state = "char-bio";
                \}
            \} else \{
                \$state = "char-bio";
            \}
        \}
    \} else \{
        \$state = "no-body";
    \}
    \$title = "Allegory of Empires: Character Creator";
\} else \{
    /* Check the player isn't trying to access someone elses body */
    /* Check if the players roster of characters */

    \$bodies = Udat::query_bodies_in_roster(\$user: \$name);

    for(\$i = 0; \$i \< sizeof(\$bodies);) \{
        if(\$bodies[\$i]."theatre:id" != "IC") \{
            \$bodies -= (\{ \$bodies[\$i] \});
        \} else \{
            \$i++;
        \}
    \}

    \$bodies \&= (\{ \$body \});

    if(sizeof(\$bodies) \< 1) \{
        /* Body could be deleted but still owned by this player */
        if(\$body.deleted) \{
            \$count = 0;
            while(Obj("Chatters:Backup"+\$body."core:objectname"[8..]+Str(\$count))) \$count++;
            \$body."core:objectname" = "Chatters:Backup"+\$body."core:objectname"[8..]+Str(\$count);
            error("Something went wrong, but we're fixing it up now! Please refresh this page, and try creating this character again.");
        \}
        error("Body not found in character roster");
    \}

    /* ICO Body. Start AE Chargen. */

    if(\$body."base:urparent" != \$\{Allegory:Bodies:Mainbody\}) \{
        \$body."chargen:state" = nil;
        \$body."chargen:finished" = nil;
    \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:list-choices">
         X[M] /*    
This function will generate an array which has elements that contain a string, then the property for a character creation choice.    
an input of:    
You have a [noseshape] nose, and [haircolor] hair.    
would be returned as:    
(\{ (\{ "You have a", "noseshape" \}), (\{ "nose, and ", haircolor \}), (\{ "hair." \}) \})    
*/    
/*variables for this function*/    
string Head;    
string Tail;    
string Property;    
string *Properties_arr;    
    
Properties_arr = (\{\});    
if(!\$choices) return Properties_arr;    
\$choices = Str(UnSAM(\$choices));    
    
while(sscanf(\$choices, "%s[submit]%s", Head, Tail) == 2)    
\{    
  \$choices = Head+"\<input id=\\"hidden-btn\\" type=\\"submit\\" value=\\"SUBMIT\\" style='float:right' class=\\"submit-button\\"/\>"+Tail;    
\}    
    
    
while(sscanf(\$choices, "%s[%s]%s", Head, Property, Tail) == 3)    
\{    
  Head = "" + replace_strings(Head, "\\n", "\<sbr/\>");   
  Properties_arr += (\{ (\{ ParseXML(Head), Property \}) \});    
  \$choices = Tail;    
\}    
   
Tail = replace_strings(Tail, "\\n", "\<sbr/\>") + "";   
Properties_arr += (\{ (\{ ParseXML(Tail) \}) \});    
    
return Properties_arr;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1565397569, "jominey", "E", 1565402004, "jominey", "E", 1565404816, "jominey", "E", 1565404911, "jominey", "P", 1565405424, "jominey", "E", 1565405602, "jominey", "E", 1565405637, "jominey", "E", 1565405888, "jominey", "E", 1565406230, "jominey", "E", 1565406467, "jominey", "E", 1565406554, "jominey", "E", 1565406648, "jominey", "E", 1565406797, "jominey", "E", 1565406959, "jominey", "E", 1565407036, "jominey", "E", 1565407115, "jominey", "E", 1565407165, "jominey", "E", 1565407315, "jominey", "E", 1565407543, "jominey", "E", 1565407692, "jominey", "E", 1565407707, "jominey", "E", 1565407976, "jominey", "E", 1565446612, "jominey", "E", 1565446658, "jominey", "E", 1565446734, "jominey", "E", 1566079466, "jominey", "E", 1566079521, "jominey", "E", 1566079957, "jominey", "E", 1566080074, "jominey", "E", 1566080140, "jominey", "E", 1566080181, "jominey", "E", 1566080225, "jominey", "E", 1566080248, "jominey", "E", 1566082495, "jominey", "E", 1566082637, "jominey", "E", 1566082699, "jominey", "E", 1566082953, "jominey", "E", 1566083070, "jominey", "E", 1566083190, "jominey", "E", 1566083226, "jominey", "E", 1566083292, "jominey", "E", 1566083406, "jominey", "E", 1566083463, "jominey", "E", 1566083503, "jominey", "E", 1566083532, "jominey", "E", 1566084356, "jominey", "E", 1566084554, "jominey", "E", 1566084633, "jominey", "E", 1566084731, "jominey", "E", 1566084771, "jominey", "E", 1566084821, "jominey", "E", 1566084879, "jominey", "E", 1566084963, "jominey", "E", 1566084998, "jominey", "E", 1566085843, "jominey", "E", 1566086513, "jominey", "E", 1566086709, "jominey", "E", 1566086852, "jominey", "E", 1566086907, "jominey", "E", 1566087009, "jominey", "E", 1566087102, "jominey", "E", 1566087152, "jominey", "E", 1566087227, "jominey", "E", 1566087320, "jominey", "E", 1566087506, "jominey", "E", 1566087673, "jominey", "E", 1566087726, "jominey", "E", 1566087799, "jominey", "E", 1566087856, "jominey", "E", 1566087973, "jominey", "E", 1566088044, "jominey", "E", 1566088159, "jominey", "E", 1566088314, "jominey", "E", 1566088682, "jominey", "E", 1566088753, "jominey", "E", 1566089126, "jominey", "E", 1566089191, "jominey", "E", 1566089453, "jominey", "E", 1566089809, "jominey", "E", 1566089976, "jominey", "E", 1566091673, "jominey", "E", 1566091742, "jominey", "E", 1566091891, "jominey", "E", 1566091928, "jominey", "E", 1566091966, "jominey", "E", 1566092034, "jominey", "E", 1566092066, "jominey", "E", 1566092089, "jominey", "E", 1566092136, "jominey", "E", 1566092180, "jominey", "E", 1566092243, "jominey", "E", 1566092357, "jominey", "E", 1566092409, "jominey", "E", 1566092463, "jominey", "E", 1566092496, "jominey", "E", 1566092526, "jominey", "E", 1566092576, "jominey", "E", 1566092632, "jominey", "E", 1566092686, "jominey", "E", 1566092779, "jominey", "E", 1566092866, "jominey", "E", 1566092945, "jominey", "E", 1566093733, "jominey", "E", 1566093779, "jominey", "E", 1566093807, "jominey", "E", 1566093888, "jominey", "E", 1566094240, "jominey", "E", 1566094479, "jominey", "E", 1566094543, "jominey", "E", 1566094560, "jominey", "E", 1566094793, "jominey", "E", 1566094864, "jominey", "E", 1566094913, "jominey", "E", 1566094958, "jominey", "E", 1566094993, "jominey", "E", 1566095170, "jominey", "E", 1566095211, "jominey", "E", 1566095246, "jominey", "E", 1566095372, "jominey", "E", 1566095427, "jominey", "E", 1566095509, "jominey", "E", 1566095628, "jominey", "E", 1566095695, "jominey", "E", 1566095793, "jominey", "E", 1566096342, "jominey", "E", 1566096387, "jominey", "E", 1566096587, "jominey", "E", 1566096653, "jominey", "E", 1566096691, "jominey", "E", 1566096929, "jominey", "E", 1566096982, "jominey", "E", 1566097047, "jominey", "E", 1566097089, "jominey", "E", 1566097314, "jominey", "E", 1566097359, "jominey", "E", 1566097498, "jominey", "E", 1566097679, "jominey", "E", 1566097894, "jominey", "E", 1566098078, "jominey", "E", 1566098288, "jominey", "E", 1566098344, "jominey", "E", 1566098433, "jominey", "E", 1566098697, "jominey", "E", 1566099164, "jominey", "E", 1566099257, "jominey", "E", 1566099421, "jominey", "E", 1566099443, "jominey", "E", 1566099595, "jominey", "E", 1566099702, "jominey", "E", 1566100019, "jominey", "E", 1566100278, "jominey", "E", 1566100414, "jominey", "E", 1566100566, "jominey", "E", 1566100640, "jominey", "E", 1566100698, "jominey", "E", 1566100750, "jominey", "E", 1566100789, "jominey", "E", 1566100837, "jominey", "E", 1566100892, "jominey", "E", 1566100938, "jominey", "E", 1566100984, "jominey", "E", 1566101023, "jominey", "E", 1566101094, "jominey", "E", 1566101212, "jominey", "E", 1566101368, "jominey", "E", 1566101458, "jominey", "E", 1566101513, "jominey", "E", 1566101571, "jominey", "E", 1566101643, "jominey", "E", 1566101716, "jominey", "E", 1566101831, "jominey", "E", 1566102009, "jominey", "E", 1566102285, "jominey", "E", 1566102460, "jominey", "E", 1566102506, "jominey", "E", 1566102657, "jominey", "E", 1566102687, "jominey", "E", 1566102715, "jominey", "E", 1566102893, "jominey", "E", 1566102972, "jominey", "E", 1566103377, "jominey", "E", 1566103475, "jominey", "E", 1566103521, "jominey", "E", 1566103606, "jominey", "E", 1566103691, "jominey", "E", 1566103737, "jominey", "E", 1566103946, "jominey", "E", 1566104055, "jominey", "E", 1566104194, "jominey", "E", 1566104334, "jominey", "E", 1566104400, "jominey", "E", 1566104448, "jominey", "E", 1566104556, "jominey", "E", 1566104880, "jominey", "E", 1566105109, "jominey", "E", 1566105138, "jominey", "E", 1566105383, "jominey", "E", 1566105628, "jominey", "E", 1566106544, "jominey", "E", 1566106624, "jominey", "E", 1566140180, "jominey", "E", 1566140302, "jominey", "E", 1566140642, "jominey", "E", 1566140819, "jominey", "E", 1566140850, "jominey", "E", 1566140877, "jominey", "E", 1566140954, "jominey", "E", 1566140976, "jominey", "E", 1566140985, "jominey", "E", 1566141157, "jominey", "E", 1566141359, "jominey", "E", 1566141751, "jominey", "E", 1566141775, "jominey", "E", 1566141865, "jominey", "E", 1566142029, "jominey", "E", 1566142065, "jominey", "E", 1566142141, "jominey", "E", 1566142251, "jominey", "E", 1566142333, "jominey", "E", 1566142361, "jominey", "E", 1566142561, "jominey", "E", 1566142701, "jominey", "E", 1566142739, "jominey", "E", 1566142751, "jominey", "E", 1566143848, "jominey", "E", 1566144215, "jominey", "E", 1566144436, "jominey", "E", 1566144719, "jominey", "E", 1566144807, "jominey", "E", 1566145223, "jominey", "E", 1566145572, "jominey", "E", 1566145719, "jominey", "E", 1566145762, "jominey", "E", 1566145866, "jominey", "E", 1566146018, "jominey", "E", 1566159036, "jominey", "E", 1566159247, "jominey", "E", 1566159516, "jominey", "E", 1566160036, "jominey", "E", 1566160127, "jominey", "E", 1566160155, "jominey", "E", 1566160294, "jominey", "E", 1566160381, "jominey", "E", 1566160507, "jominey", "E", 1566160547, "jominey", "E", 1566160659, "jominey", "E", 1566162941, "jominey", "E", 1566162987, "jominey", "E", 1566163039, "jominey", "E", 1566163315, "jominey", "E", 1566163403, "jominey", "E", 1566163495, "jominey", "E", 1566163542, "jominey", "E", 1566163560, "jominey", "E", 1566163597, "jominey", "E", 1566163712, "jominey", "E", 1566163770, "jominey", "E", 1566164105, "jominey", "E", 1566164346, "jominey", "E", 1566164383, "jominey", "E", 1566164625, "jominey", "E", 1566164647, "jominey", "E", 1566165245, "jominey", "E", 1566165310, "jominey", "E", 1566165358, "jominey", "E", 1566165446, "jominey", "E", 1566165484, "jominey", "E", 1566165606, "jominey", "E", 1566165628, "jominey", "E", 1566165711, "jominey", "E", 1566165793, "jominey", "E", 1566165857, "jominey", "E", 1566165882, "jominey", "E", 1566165899, "jominey", "E", 1566165937, "jominey", "E", 1566166095, "jominey", "E", 1566166109, "jominey", "E", 1566166185, "jominey", "E", 1566166232, "jominey", "E", 1566166266, "jominey", "E", 1566166288, "jominey", "E", 1566166317, "jominey", "E", 1566166375, "jominey", "E", 1566166389, "jominey", "E", 1566166451, "jominey", "E", 1566166488, "jominey", "E", 1566166550, "jominey", "E", 1566166609, "jominey", "E", 1566166636, "jominey", "E", 1566166657, "jominey", "E", 1566166885, "jominey", "E", 1566166924, "jominey", "E", 1566166937, "jominey", "E", 1566167030, "jominey", "E", 1566167102, "jominey", "E", 1566167132, "jominey", "E", 1566167143, "jominey", "E", 1566167176, "jominey", "E", 1566167247, "jominey", "E", 1566167297, "jominey", "E", 1566167341, "jominey", "E", 1566167411, "jominey", "E", 1566167449, "jominey", "E", 1566167639, "jominey", "E", 1566167668, "jominey", "E", 1566167713, "jominey", "E", 1566167838, "jominey", "E", 1566167883, "jominey", "E", 1566167961, "jominey", "E", 1566167983, "jominey", "E", 1566168018, "jominey", "E", 1566168042, "jominey", "E", 1566168076, "jominey", "E", 1566168233, "jominey", "E", 1566168280, "jominey", "E", 1566168306, "jominey", "E", 1566168342, "jominey", "E", 1566168423, "jominey", "E", 1566168465, "jominey", "E", 1566168501, "jominey", "E", 1566168538, "jominey", "E", 1566168757, "jominey", "E", 1566168808, "jominey", "E", 1566168952, "jominey", "E", 1566169079, "jominey", "E", 1566169102, "jominey", "E", 1566169163, "jominey", "E", 1566169183, "jominey", "E", 1566169212, "jominey", "E", 1566169346, "jominey", "E", 1566169375, "jominey", "E", 1566169418, "jominey", "E", 1566169467, "jominey", "E", 1566169492, "jominey", "E", 1566169505, "jominey", "E", 1566169696, "jominey", "E", 1566169747, "jominey", "E", 1566169764, "jominey", "E", 1566169786, "jominey", "E", 1566169814, "jominey", "E", 1566169868, "jominey", "E", 1566169916, "jominey", "E", 1566169949, "jominey", "E", 1566171551, "jominey", "E", 1566171643, "jominey", "E", 1566171684, "jominey", "E", 1566171903, "jominey", "E", 1566172156, "jominey", "E", 1566172337, "jominey", "E", 1566172373, "jominey", "E", 1566172415, "jominey", "E", 1566172457, "jominey", "E", 1566172502, "jominey", "E", 1566172839, "jominey", "E", 1566172858, "jominey", "E", 1566172945, "jominey", "E", 1566173001, "jominey", "E", 1566173410, "jominey", "E", 1566173707, "jominey", "E", 1566174127, "jominey", "E", 1566174257, "jominey", "E", 1566174334, "jominey", "E", 1566174749, "jominey", "E", 1566175317, "jominey", "E", 1566175400, "jominey", "E", 1566175440, "jominey", "E", 1566175497, "jominey", "E", 1566175637, "jominey", "E", 1566175710, "jominey", "E", 1566175840, "jominey", "E", 1566175901, "jominey", "E", 1566175939, "jominey", "E", 1566177912, "jominey", "E", 1566581603, "jominey", "E", 1567474382, "jominey", "E", 1567474898, "jominey", "E", 1567475022, "jominey", "E", 1571099591, "jominey", "E", 1571100067, "jominey", "E", 1571101470, "jominey", "E", 1571101736, "jominey", "E", 1571368976, "jominey", "E", 1571372828, "jominey", "E", 1571373128, "jominey", "E", 1571373597, "jominey", "P", 1571411133, "jominey", "E", 1571414010, "jominey", "E", 1571414543, "jominey", "E", 1571414893, "jominey", "E", 1571415014, "jominey", "E", 1571415062, "jominey", "E", 1571415142, "jominey", "E", 1571415376, "jominey", "E", 1571419773, "jominey", "E", 1571419923, "jominey", "E", 1571850716, "jominey", "E", 1571850840, "jominey", "E", 1571850875, "jominey", "E", 1571850965, "jominey", "E", 1571869591, "jominey", "E", 1571869696, "jominey", "E", 1571875650, "jominey", "E", 1571877101, "jominey", "E", 1571880752, "jominey", "E", 1571880945, "jominey", "E", 1571882730, "jominey", "E", 1571885288, "jominey", "P", 1571885327, "jominey", "P", 1571927649, "jominey", "P", 1571927879, "jominey", "P", 1571927989, "jominey", "P", 1571928201, "jominey", "P", 1571929959, "jominey", "P", 1571930430, "jominey", "P", 1571931225, "jominey", "P", 1571931282, "jominey", "P", 1571931323, "jominey", "P", 1571931463, "jominey", "P", 1571932067, "jominey", "P", 1571932157, "jominey", "P", 1571932210, "jominey", "P", 1571941814, "jominey", "P", 1571941949, "jominey", "P", 1571954244, "jominey", "P", 1571954279, "jominey", "P", 1571968218, "jominey", "P", 1572057820, "jominey", "P", 1572058124, "jominey", "P", 1572058652, "jominey", "P", 1572233292, "jominey", "P", 1572234807, "jominey", "P", 1572830663, "jominey", "P", 1572834016, "jominey", "P", 1572834048, "jominey", "P", 1572834152, "jominey", "P", 1572895408, "jominey", "P", 1572895643, "jominey", "P", 1572895938, "jominey", "P", 1572896038, "jominey", "P", 1572896045, "jominey", "P", 1572896086, "jominey", "P", 1572896107, "jominey", "P", 1572896184, "jominey", "P", 1572896213, "jominey", "P", 1572896256, "jominey", "P", 1572896284, "jominey", "P", 1572896330, "jominey", "P", 1572896355, "jominey", "P", 1572896449, "jominey", "P", 1572896469, "jominey", "P", 1572896481, "jominey", "P", 1572896520, "jominey", "P", 1572896989, "jominey", "P", 1572897034, "jominey", "P", 1572897116, "jominey", "P", 1572897186, "jominey", "P", 1572897243, "jominey", "P", 1572897313, "jominey", "P", 1572898893, "jominey", "P", 1572899502, "jominey", "P", 1572899534, "jominey", "P", 1572899709, "jominey", "P", 1572901765, "jominey", "P", 1572974771, "jominey", "P", 1573682028, "jominey", "P", 1573682193, "jominey", "P", 1573682217, "jominey", "P", 1573682238, "jominey", "P", 1573682262, "jominey", "P", 1573682314, "jominey", "P", 1573682331, "jominey", "P", 1574563004, "jominey", "P", 1575175032, "jominey", "P", 1575175058, "jominey", "P", 1577487964, "jominey", "P", 1577488121, "jominey", "P", 1577488488, "jominey", "P", 1577488851, "jominey", "P", 1578765105, "jominey", "P", 1578765250, "jominey", "P", 1578765319, "jominey", "P", 1578765353, "jominey", "P", 1578770653, "jominey", "P", 1592067014, "jominey", "P", 1592096073, "jominey", "P", 1592096231, "jominey", "P", 1592096410, "jominey", "P", 1592096778, "jominey", "P", 1592097373, "jominey", "P", 1593263780, "jominey", "P", 1593263839, "jominey", "P", 1597087703, "jominey", "P", 1597088065, "jominey", "P", 1597088246, "jominey", "P", 1597088692, "jominey", "P", 1597088738, "jominey", "P", 1597089252, "jominey", "P", 1599272180, "jominey", "P", 1599272299, "jominey", "P", 1599272409, "jominey", "P", 1599272495, "jominey", "P", 1599272604, "jominey", "P", 1599272689, "jominey", "P", 1599272760, "jominey", "P", 1599272953, "jominey", "P", 1695182422, "ezralee", "P", 1695186606, "ezralee", "P", 1695187725, "ezralee", "P" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
