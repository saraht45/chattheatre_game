<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Bodies:Rightside)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="200" maxweight="500" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="true"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="person"/>
            <Base:SName sname="being"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="people"/>
            <Base:PName pname="persons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.death:dead) |the corpse of }{? | $(this.combat:state) | the unconscious body of}{? equal | $(this.trait:hiding) | 1 | {? equal | $(this.trait:title) | none ||$(this.trait:title) } {? | $(this.trait:superbrief) | $(this.trait:superbrief) | $(this.trait:brief) } | }
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.trait:override:examine) | $(this.trait:override:examine) |{? | $(this.trait:examine) | $(this.trait:examine) |$[capitalize($this."appearance:height")] in height and $(this.appearance:build) in build, {? | $(this.trait:superbrief) | <describe what="$(this)" cap="1"/> | this $(this.trait:brief)} $(this.trait:lastname) is <age/> $(this.trait:sex) {? equal | $(this.appearance:skin) | ordinary || of $(this.appearance:skin) complexion} with a {? equal | $(this.appearance:hashair) | yes | head of $(this.appearance:hairlength) $(this.appearance:hairtype) $(this.appearance:haircolor) hair$(this.appearance:hairstyle_string)| bald head}}. $[Call(${Ironclaw:Lib:Characters:Descriptions}, "describe_features")] } <exa_extra eyeshape="$(this.appearance:eyeshape)" eyecolor="$(this.appearance:eyecolor)" eyebrowshape="$(this.appearance:eyebrowshape)" browshape="$(this.appearance:browshape)" noseshape="$(this.appearance:noseshape)" lipshape="$(this.appearance:lipshape)" mouthshape="$(this.appearance:mouthshape)" jawshape="$(this.appearance:jawshape)" cheekshape="$(this.appearance:cheekshape)" earshape="$(this.appearance:earshape)" facialhair="$(this.appearance:facialhair)"/>{? | $(this.appearance:additional:examine) | $(this.appearance:additional:examine)|} $[if(Call(${Ironclaw:Lib:Combat:Cards:Injuries}, "show_all_injuries", $character: $this, $no_uninjured_msg: TRUE)) return Describe($this)+" appears to be injured.";] $(this.trait:comment)
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.trait:override:look) | $(this.trait:override:look) |{? | $(this.trait:look) | $(this.trait:look) |$[capitalize($this."appearance:height")] in height and $(this.appearance:build) in build, {? | $(this.trait:superbrief) | <describe what="$(this)" cap="1"/> | this $(this.trait:brief)} $(this.trait:lastname) is <age/> $(this.trait:sex) {? equal | $(this.appearance:skin) | ordinary || of $(this.appearance:skin) complexion} with a {? equal | $(this.appearance:hashair) | yes | head of $(this.appearance:hairlength) $(this.appearance:hairtype) $(this.appearance:haircolor) hair$(this.appearance:hairstyle_string)| bald head}}{? equal | $(this.appearance:facialhair) | none ||, and {? equal | $(this.appearance:facialhair) | sideburns | a $(this.appearance:faciallength) set of $(this.appearance:facialhair)| <a_or_an>$(this.appearance:facialhair)</a_or_an> which $(this.appearance:facialprep) $(this.appearance:faciallength)}}. $[Call(${Ironclaw:Lib:Characters:Descriptions}, "describe_features")] } $[if(Call(${Ironclaw:Lib:Combat:Cards:Injuries}, "show_all_injuries", $character: $this, $no_uninjured_msg: TRUE)) return Describe($this)+" appears to be injured.";] $(this.trait:comment)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="NEW" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             NEW detail
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="abdomen" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="abdomen"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="abdomens"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:abdomen:adjectives) $(this.appearance:symbol:abdomen:adjective) $(this.appearance:abdomen) abdomen
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:abdomen) abdomen. $(this.appearance:symbol:abdomen) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="abs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="abs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:abs:adjectives) $(this.appearance:symbol:abs:adjective) $(this.appearance:abs) abs
          </Base:Description>
          <Base:Description type="examine">
             A set of $(this.appearance:abs) abs. $(this.appearance:symbol:abs) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A set of $(this.appearance:abs) abs. $(this.appearance:symbol:abs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="actions" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="action"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="actions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:actions) actions
          </Base:Description>
          <Base:Description type="look">
             A person's actions.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="adams-apple" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="larynx"/>
            <Base:SName sname="adamsapple"/>
            <Base:SName sname="adams-apple"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="adamsapples"/>
            <Base:PName pname="adams-apples"/>
            <Base:PName pname="larynxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:adams-apple:adjectives) $(this.appearance:symbol:adams-apple:adjective) $(this.appearance:adams-apple) adams apple
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:adams-apple) adams apple. $(this.appearance:symbol:adams-apple) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:adams-apple) adams apple. $(this.appearance:symbol:adams-apple) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ankles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ankles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:ankles:adjectives) $(this.appearance:symbol:ankles:adjective) $(this.appearance:ankles) ankles
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:ankles) pair of ankles. $(this.appearance:symbol:ankles) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:ankles) pair of ankles. $(this.appearance:symbol:ankles) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="appearance" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="appearance"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="appearances"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:appearance) appearance
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:appearance) appearance. The overall appearance of the person, generally including their height, built, notable features as well as the way they dress and accessorize themselves.
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:appearance) appearance. The overall appearance of the person, generally including their height, built, notable features as well as the way they dress and accessorize themselves.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="armpits" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armpits"/>
            <Base:SName sname="pits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:armpits:adjectives) $(this.appearance:symbol:armpits:adjective) $(this.appearance:armpits) armpits
          </Base:Description>
          <Base:Description type="examine">
             A pair of $(this.appearance:armpits) armpits. $(this.appearance:symbol:armpits) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:armpits) armpits. $(this.appearance:symbol:armpits) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:arms:adjectives) $(this.appearance:symbol:arms:adjective) $(this.appearance:arms) arms
          </Base:Description>
          <Base:Description type="examine">
             A pair of $(this.appearance:arms) arms. $(this.appearance:symbol:arms) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:arms) arms. $(this.appearance:symbol:arms) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="asscheeks" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="asscheeks"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="asscheeks"/>
            <Base:PName pname="buttcheeks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:asscheeks) $(this.appearance:symbol:asscheeks:adjective) asscheeks
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:asscheeks) asscheeks. $(this.appearance:symbol:asscheeks)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="asshole" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="asshole"/>
            <Base:SName sname="hole"/>
            <Base:SName sname="butthole"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:asshole) asshole
          </Base:Description>
          <Base:Description type="look">
             An $(this.appearance:asshole) asshole.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="attention" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="attention"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="attentions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:attention) attention
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:attention) attention.
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:attention) attention.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="attitude" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="attitude"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="attitudes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:attitude) attitude
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="back" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="false" on="true" inside="false" near="false" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="back"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:back:adjectives) $(this.appearance:symbol:back:adjective) $(this.appearance:back) back
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:back) $(this.appearance:symbol:back:adjective) back. $[injuries::show_injuries()] $(this.appearance:symbol:back)
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:back) $(this.appearance:symbol:back:adjective) back. $[injuries::show_injuries()] $(this.appearance:symbol:back)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="biceps" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="biceps"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:biceps:adjectives) $(this.appearance:symbol:biceps:adjective) $(this.appearance:biceps) biceps
          </Base:Description>
          <Base:Description type="examine">
             A pair of $(this.appearance:biceps) biceps. $(this.appearance:symbol:biceps) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:biceps) biceps. $(this.appearance:symbol:biceps) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="blood" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="blood"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bloods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">blood</Base:Description>
          <Base:Description type="look">
             The liquid of life. It is often red but can change color with infection or other factors.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="human"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:height) $(this.appearance:build) body
          </Base:Description>
          <Base:Description type="examine">
             A {? equal | $(this.appearance:height) | average | | $(this.appearance:height) } $(this.appearance:build) body. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A {? equal | $(this.appearance:height) | average | | $(this.appearance:height) }$(this.appearance:build) body. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bones" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:bones) bones
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="breastbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="breastbone"/>
            <Base:SName sname="sternum"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sternums"/>
            <Base:PName pname="breastbones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:breastbone:adjectives) $(this.appearance:symbol:breastbone:adjective) $(this.appearance:breastbone) breastbone
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:breastbone) $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:breastbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="breasts" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="breasts"/>
            <Base:SName sname="boobs"/>
            <Base:SName sname="bosoms"/>
            <Base:SName sname="bossoms"/>
            <Base:SName sname="mammaries"/>
            <Base:SName sname="poitrine"/>
            <Base:SName sname="bust"/>
            <Base:SName sname="tits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:breasts:adjectives) $(this.appearance:symbol:breasts:adjective) $(this.appearance:breasts) breasts
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:height) $(this.appearance:build) body, either considered as the complete person, or the person without their limbs. $(this.appearance:symbol:body) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="breath" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="breath"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:breath) breath
          </Base:Description>
          <Base:Description type="examine">
             Some $(this.appearance:breath) breath. What is exhaled from the body after an inhalation.
          </Base:Description>
          <Base:Description type="look">
             Some $(this.appearance:breath) breath. What is exhaled from the body after an inhalation.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="brow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="brow"/>
            <Base:SName sname="forehead"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foreheads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:brow:adjectives) $(this.appearance:symbol:brow:adjective) {? | $(this.appearance:ashes) | $(this.appearance:ashes)-marked }{? equal | $(this.appearance:browshape) | ordinary || $(this.appearance:browshape) } forehead
          </Base:Description>
          <Base:Description type="examine">
             A $(this.combat:injury:brow:adjectives) $(this.appearance:symbol:brow:adjective) {? | $(this.appearance:ashes) | $(this.appearance:ashes)-marked } {? equal | $(this.appearance:browshape) | ordinary || $(this.appearance:browshape) } forehead. This is the frontal top portion of the face. $(this.appearance:symbol:brow) {? | $(this.appearance:ashes) | A cross-shaped smudge has been marked on the brow in ash. } $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.combat:injury:brow:adjectives) $(this.appearance:symbol:brow:adjective) {? | $(this.appearance:ashes) | $(this.appearance:ashes)-marked } {? equal | $(this.appearance:browshape) | ordinary || $(this.appearance:browshape) } forehead. This is the frontal top portion of the face. $(this.appearance:symbol:brow) {? | $(this.appearance:ashes) | A cross-shaped smudge has been marked on the brow in ash. } $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="calves" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="calves"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:calves:adjectives) $(this.appearance:symbol:calves:adjective) $(this.appearance:calves) calves
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:calves) pair of calves. $(this.appearance:symbol:calves) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:calves) pair of calves. $(this.appearance:symbol:calves) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cheekbones" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="cheekbones"/>
            <Base:PName pname="bones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cheek"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:symbol:cheekbones:adjective) $(this.appearance:cheekbones) cheekbones
          </Base:Description>
          <Base:Description type="look">
             The bone across the cheeks just under the eye sockets. $(this.appearance:symbol:cheekbones) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cheeks" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheeks"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:cheeks:adjectives) $(this.appearance:symbol:cheeks:adjective) $(this.appearance:cheeks) {? equal | $(this.appearance:cheekshape) | ordinary ||$(this.appearance:cheekshape) } cheeks
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:cheekshape) | ordinary |A pair of $(this.appearance:cheeks) cheeks.|A pair of $(this.appearance:cheeks:adjective) $(this.appearance:cheekshape) $(this.appearance:cheeks) cheeks.} $(this.appearance:symbol:cheeks)  $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chest" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chest"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chests"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:chest:adjectives) $(this.appearance:symbol:chest:adjective) $(this.appearance:chest) chest
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:chest) chest. $(this.appearance:symbol:chest) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:chin:adjectives) $(this.appearance:symbol:chin:adjective) {? | $(this.appearance:chin) | {? equal | $(this.appearance:chin) | ordinary | | $(this.appearance:chin) chin} | {? equal | $(this.appearance:jawshape) | ordinary |chin|$(this.appearance:jawshape) chin}}
          </Base:Description>
          <Base:Description type="look">
             A {? | $(this.appearance:chin) | {? equal | $(this.appearance:chin) | ordinary | | $(this.appearance:chin) chin.} | {? equal | $(this.appearance:jawshape) | ordinary |chin|$(this.appearance:jawshape) chin.}} $(this.appearance:symbol:chin) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="choices" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="choice"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="choices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:choices) choices
          </Base:Description>
          <Base:Description type="look">
             A series of options one must make a decision based upon.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cleavage" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cleavage"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cleavages"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:cleavage:adjectives) $(this.appearance:symbol:cleavage:adjective) $(this.appearance:cleavage) cleavage
          </Base:Description>
          <Base:Description type="look">
             Some $(this.appearance:cleavage) cleavage. $(this.appearance:symbol:cleavage) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="collarbones" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="bones"/>
            <Base:PName pname="clavicles"/>
            <Base:PName pname="collarbones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="collar"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:collarbones:adjectives) $(this.appearance:symbol:collarbones:adjective) $(this.appearance:collarbones) collarbones
          </Base:Description>
          <Base:Description type="look">
             The bone across the upper front of the body, connecting the breastbone to the shoulders. $(this.appearance:symbol:collarbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="composure" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="composure"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="composures"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:composure) composure
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="decision" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="decision"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="decisions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:decision) decision
          </Base:Description>
          <Base:Description type="look">
             The result of choosing from multiple choices.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="decolletage" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="decolletage"/>
            <Base:SName sname="dec"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="decolletages"/>
            <Base:PName pname="decs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:decolletage:adjectives) $(this.appearance:symbol:decolletage:adjective) $(this.appearance:decolletage) decolletage
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:decolletage) decolletage. $(this.appearance:symbol:decolletage) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="demeanor" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="demeanor"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="demeanors"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:demeanor) demeanor
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="digits" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pname: digits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:digits:adjectives)  $(this.appearance:digits) ten digits
          </Base:Description>
          <Base:Description type="look">
             A set of ten digits not counting the toes. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="earlobes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="earlobes"/>
            <Base:SName sname="lobes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:earlobes:adjectives) $(this.appearance:symbol:earlobes:adjectives) $(this.appearance:earlobes) {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }earlobes
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:earshape) | ordinary |A pair of $(this.appearance:earlobes) ears.|A pair of $(this.appearance:earlobes:adjective) $(this.appearance:earshape) earlobes.} $(this.appearance:symbol:earlobes) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ears" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ears"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:ears:adjectives) $(this.appearance:symbol:ears:adjective) $(this.appearance:ears) {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }ears
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:earshape) | ordinary |A pair of $(this.appearance:ears) ears.|A pair of $(this.appearance:ears:adjective) $(this.appearance:earshape) ears.} $(this.appearance:symbol:ears) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ego" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ego"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="egos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:ego) ego
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="elbows" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="elbows"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:elbows:adjectives) $(this.appearance:symbol:elbows:adjective) $(this.appearance:elbows) elbows
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:elbows) elbows. $(this.appearance:symbol:elbows) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="embrace" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="embrace"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:embrace) embrace
          </Base:Description>
          <Base:Description type="look">
             A person's arms wrapped around another is described as their embrace.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="emotions" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="emotion"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="emotions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:emotions) emotions
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="expression" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="expression"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="expressions"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:expression) expression
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyebrows" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyebrows"/>
            <Base:SName sname="brows"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:eyebrowshape) | ordinary |eyebrows|$(this.appearance:eyebrowshape) eyebrows}
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:eyebrowshape) | ordinary |A pair of eyebrows.|A pair of $(this.appearance:eyebrowshape) eyebrows.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyelashes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyelashes"/>
            <Base:SName sname="lashes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:eyelashes:adjectives) $(this.appearance:symbol:eyelashes:adjective) $(this.appearance:eyelashes) eyelashes
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:eyelashes) pair of eyelashes. $(this.appearance:symbol:eyelashes) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyelids" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyelids"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:eyelids:adjectives) {? | $(this.appearance:eyeshadow) | $(this.appearance:symbol:eyelids:adjective) $(this.appearance:eyelids) $(this.appearance:eyeshadow) | $(this.appearance:symbol:eyelids:adjective) $(this.appearance:eyelids) }eyelids
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:eyelids) $(this.appearance:eyeshadow) pair of eyelids. $(this.appearance:symbol:eyelids)  $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyes"/>
            <Base:SName sname="peepers"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:eyes:adjectives) {? | $(this.appearance:eyeshadow) | $(this.appearance:eyeshadow)-shadowed $(this.appearance:eyes) } {? | $(this.appearance:kohl) | $(this.appearance:kohl)-lined $(this.appearance:eyes)} {? equal | $(this.appearance:eyeshape) | ordinary ||$(this.appearance:eyeshape)} $(this.appearance:eyecolor) eyes
          </Base:Description>
          <Base:Description type="look">
             A pair of {? | $(this.appearance:eyeshadow) | $(this.appearance:eyeshadow)-shadowed }  {? | $(this.appearance:kohl) | $(this.appearance:kohl)-lined } $(this.appearance:eyes) {? equal | $(this.appearance:eyeshape) | ordinary || $(this.appearance:eyeshape) } $(this.appearance:eyecolor) eyes. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="face" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="face"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="faces"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:face:adjectives) $(this.appearance:symbol:face:adjective) $(this.appearance:face)  face
          </Base:Description>
          <Base:Description type="look">
             {? | $[$this."appearance:facialhair" == "none" || $this."appearance:facialhair" == "no facial hair"] |A $(this.appearance:face) face consisting of $(this.appearance:cheekshape) cheeks, a $(this.appearance:noseshape) nose over a $(this.appearance:mouthshape) mouth with $(this.appearance:lipshape) lips covering $(this.appearance:teeth) teeth that conceal a $(this.appearance:tongue) tongue behind them. The face is framed by $(this.appearance:earshape) ears and holds $(this.appearance:eyeshape:adjective) $(this.appearance:eyecolor) eyes.|A $(this.appearance:face) face consisting of $(this.appearance:cheekshape) cheeks, a $(this.appearance:noseshape) nose over a $(this.appearance:mouthshape) mouth with $(this.appearance:lipshape) lips covering $(this.appearance:teeth) teeth that permit a $(this.appearance:tongue) tongue to peek out on occasion. The face is framed by $(this.appearance:earshape) ears and holds $(this.appearance:eyeshape:adjective) $(this.appearance:eyecolor) eyes. The $(this.appearance:face) face also bears $(this.appearance:facialhair) which {? | $(this.appearance:facialprep) | $(this.appearance:facialprep) | is } $(this.appearance:faciallength).} $(this.appearance:symbol:face) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="facialhair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="facialhair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:facialprep) | is |{? equal | $(this.appearance:facialhair) | mustache and goatee |{? equal | $(this.appearance:facialhair) | mustache and whiskers |}}}{? | $(this.appearance:faciallength) | $(this.appearance:faciallength) $(this.appearance:haircolor) $(this.appearance:facialhair) | lack of facialhair}
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:facialhair) | sideburns | A set of sideburns which are $(this.appearance:faciallength). |   A {? equal | $(this.appearance:facialprep) | is |{? | $(this.appearance:facialhair) | $(this.appearance:haircolor) $(this.appearance:facialhair) which {? | $(this.appearance:facialprep) | $(this.appearance:facialprep) | is } $(this.appearance:faciallength)| <capitalize what="$(this.base:possessive)"/> lack of facial hair}.|{? equal | $(this.appearance:facialhair) | mustache and goatee | A {? | $(this.appearance:facialhair) | $(this.appearance:facialhair) which {? | $(this.appearance:facialprep) | $(this.appearance:facialprep) | is } $(this.appearance:faciallength)| <capitalize what="$(this.base:possessive)"/> lack of facial hair}.|{? equal | $(this.appearance:facialhair) | mustache and whiskers | A {? | $(this.appearance:facialhair) | $(this.appearance:facialhair) which {? | $(this.appearance:facialprep) | $(this.appearance:facialprep) | is } $(this.appearance:faciallength)| <capitalize what="$(this.base:possessive)"/> lack of facial hair}.|{? | $(this.appearance:facialhair) | <capitalize what="$(this.appearance:facialhair)"/> which {? | $(this.appearance:facialprep) | $(this.appearance:facialprep) | is } $(this.appearance:faciallength)| <capitalize what="$(this.base:possessive)"/> lack of facial hair}.}}}}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="features" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="feature"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="features"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:features:adjectives) $(this.appearance:symbol:features:adjective) $(this.appearance:features) features
          </Base:Description>
          <Base:Description type="look">
             The features of the face, generally referring to the most notable or remarkable details of the individual.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="feelings" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="feelings"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:feelings) feelings
          </Base:Description>
          <Base:Description type="look">
             This isn't something I can describe for you in a few short sentences.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="feet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="feet"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:feet:adjectives) $(this.appearance:symbol:feet:adjective) $(this.appearance:feet) $(this.appearance:feettype:p)
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:feet) $(this.appearance:feettype:p). $(this.appearance:symbol:feet) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingernails" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingernails"/>
            <Base:SName sname="nails"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="finger"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:fingernails:adjectives) $(this.appearance:naillength) $(this.appearance:nailcolor) $(this.appearance:nailapp) fingernails
          </Base:Description>
          <Base:Description type="look">
             Ten $(this.appearance:naillength) $(this.appearance:nailcolor) $(this.appearance:nailapp) fingernails, at the ends of the fingers. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingers" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingers"/>
            <Base:SName sname="digits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:fingers:adjectives) $(this.appearance:symbol:fingers:adjective) $(this.appearance:fingers) fingers
          </Base:Description>
          <Base:Description type="look">
             A complete set of $(this.appearance:fingers) fingers. $(this.appearance:symbol:fingers) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingertips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingertips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:fingertips:adjectives) $(this.appearance:symbol:fingertips:adjective) $(this.appearance:fingertips) fingertips
          </Base:Description>
          <Base:Description type="look">
             Two $(this.appearance:fingertips) sets of fingertips. $(this.appearance:symbol:fingertips) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fists" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fists"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:fists:adjectives) $(this.appearance:symbol:fists:adjective) $(this.appearance:fists) fists
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:fists) fists. $(this.appearance:symbol:fists) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flesh" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="flesh"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fleshes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:appearance:flesh) flesh
          </Base:Description>
          <Base:Description type="look">
             The soft substance consisting of muscle and fat that is found between the skin and bones.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="footsteps" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="footstep"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="footsteps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:footsteps) footsteps
          </Base:Description>
          <Base:Description type="look">
             The path one takes from one place to another by foot.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forearms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="forearms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:forearms:adjectives) $(this.appearance:symbol:forearms:adjective) $(this.appearance:forearms) forearms
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:forearms) forearms. $(this.appearance:symbol:forearms) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="frame" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="frame"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="frames"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:frame) frame
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:frame) frame. A term used to refer to the overall build and height of someone's body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="frown" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="frown"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:frown) frown
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:frown) frown.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gaze" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gaze"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="gazes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:gaze) gaze
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="grin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="grin"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:grin) grin
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:grin) grin.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="grip" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="grip"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="grips"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:grip) grip
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="groin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="groin"/>
            <Base:SName sname="crotch"/>
            <Base:SName sname="private"/>
            <Base:SName sname="genitals"/>
            <Base:SName sname="cock"/>
            <Base:SName sname="pussy"/>
            <Base:SName sname="penis"/>
            <Base:SName sname="vagina"/>
            <Base:SName sname="dick"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cocks"/>
            <Base:PName pname="pussies"/>
            <Base:PName pname="penises"/>
            <Base:PName pname="dicks"/>
            <Base:PName pname="crotches"/>
            <Base:PName pname="genitalia"/>
            <Base:PName pname="groins"/>
            <Base:PName pname="privates"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:groin:adjectives) $(this.appearance:groin) {? | $(this.appearance:groin:name) | $(this.appearance:groin:name) | groin}
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:groin) {? | $(this.appearance:groin:name) | $(this.appearance:groin:name)| groin}. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gut" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gut"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="guts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:gut:adjectives) $(this.appearance:symbol:gut:adjective) $(this.appearance:gut) gut
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:gut) gut. $(this.appearance:symbol:gut) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:hashair) | yes |{? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength) }{? equal | $(this.appearance:hairtype) | ordinary ||$(this.appearance:hairtype) }{? equal | $(this.appearance:haircolor) | ordinary ||{? equal | $(this.appearance:haircoloradj) | ordinary ||$(this.appearance:haircoloradj)}$(this.appearance:haircolor) }hair|lack of hair}
          </Base:Description>
          <Base:Description type="examine">
             {? equal | $(this.appearance:hashair) | yes |A head of {? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength) }{? equal | $(this.appearance:hairtype) | ordinary ||$(this.appearance:hairtype) }{? equal | $(this.appearance:haircolor) | ordinary ||{? equal | $(this.appearance:haircoloradj) | ordinary ||$(this.appearance:haircoloradj)}$(this.appearance:haircolor) }hair{? | $(this.appearance:hairstyle_examine) |. <capitalize what="$(this.base:possessive)"/> hair $(this.appearance:hairstyle_examine)|$(this.appearance:hairstyle_string)}| <capitalize what="$(this.trait:nominative)"/> lacks hair}. $(this.appearance:hairstyle_examinedescription)
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:hashair) | yes |A head of {? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength) }{? equal | $(this.appearance:hairtype) | ordinary ||$(this.appearance:hairtype) }{? equal | $(this.appearance:haircolor) | ordinary ||{? equal | $(this.appearance:haircoloradj) | ordinary ||$(this.appearance:haircoloradj)}$(this.appearance:haircolor) }hair{? | $(this.appearance:hairstyle_examine) |. <capitalize what="$(this.base:possessive)"/> hair $(this.appearance:hairstyle_examine)|$(this.appearance:hairstyle_string)}| <capitalize what="$(this.trait:nominative)"/> lacks hair}. $(this.appearance:hairstyle_lookdescription)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hands" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hands"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:hands:adjectives) $(this.appearance:symbol:hands) {? equal | $(this.appearance:hands) | ordinary ||$(this.appearance:hands) }hands
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:hands) | ordinary |A pair of hands.|A pair of $(this.appearance:hands) hands.} $(this.appearance:symbol:hands)  $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:head:adjectives) $(this.appearance:symbol:head:adjective) $(this.appearance:head) head
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:head) head. $(this.appearance:symbol:head) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="heart" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heart"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:heart) heart
          </Base:Description>
          <Base:Description type="examine">
             The heart of a person, usually hidden behind skin, muscles and bones and beating.
          </Base:Description>
          <Base:Description type="glance">
             loving heart
          </Base:Description>
          <Base:Description type="look">
             A person's heart.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="heartbeat" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heartbeat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heartbeats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             heartbeat
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:heartbeat) heartbeat. $(this.appearance:symbol:heartbeat) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="heels" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heels"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:heels:adjectives) $(this.appearance:symbol:heels:adjective) $(this.appearance:heels) heels
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:heels) heels. $(this.appearance:symbol:heels) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hipbones" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hipbones"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:hipbones:adjectives) $(this.appearance:symbol:hipbones:adjective) $(this.appearance:hipbones) hipbones
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:hipbones) hipbones. $(this.appearance:symbol:hipbones) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:hips:adjectives) $(this.appearance:symbol:hips:adjective) $(this.appearance:hips) hips
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:hips) hips. $(this.appearance:symbol:hips) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="imagination" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="imagination"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:imagination) imagination
          </Base:Description>
          <Base:Description type="look">
             The creative collection of one's thoughts.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="jaw" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="jaw"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="jaws"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:jawshape:adjectives) $(this.appearance:symbol:jawshape:adjective) {? equal | $(this.appearance:jawshape) | ordinary | |$(this.appearance:jawshape)} jaw
          </Base:Description>
          <Base:Description type="look">
             A {? equal | $(this.appearance:jawshape) | ordinary | |$(this.appearance:jawshape)} jaw. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="joints" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="joint"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="joints"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:joints) joints
          </Base:Description>
          <Base:Description type="examine">
             Some $(this.appearance:joints) joints. Structures in the body at which two parts of the skeleton are fitted together.
          </Base:Description>
          <Base:Description type="look">
             Some $(this.appearance:joints) joints. Structures in the body at which two parts of the skeleton are fitted together.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="jugular" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vein"/>
            <Base:SName sname="jugular"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="jugulars"/>
            <Base:PName pname="veins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="jugular"/>
          <Base:Adjective adjective="neck"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:jugular:adjectives) $(this.appearance:symbol:jugular:adjective) $(this.appearance:jugular) jugular vein
          </Base:Description>
          <Base:Description type="look">
             The $(this.appearance:jugular) jugular veins, running along the neck. $(this.appearance:symbol:jugular) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="kiss" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="kiss"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:kiss) kiss
          </Base:Description>
          <Base:Description type="look">
             A kiss is a show of affection classified by the touch of one's lips upon another, either platonically or romantically.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knees" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knees"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:knees:adjectives) $(this.appearance:symbol:knees:adjective) $(this.appearance:knees) knees
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:knees) knees. $(this.appearance:symbol:knees) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knuckles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knuckles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:knuckles:adjectives) $(this.appearance:symbol:knuckles:adjective) $(this.appearance:knuckles) knuckles
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:knuckles) set of knuckles. $(this.appearance:symbol:knuckles) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lap" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lap"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="laps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:lap) lap
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:lap) lap.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="laugh" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="laugh"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:laugh) laugh
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:laugh) laugh.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="left-asscheek" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="asscheek"/>
            <Base:SName sname="buttcheek"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:left-asscheek) $(this.appearance:symbol:left-asscheek:adjective) left asscheek
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:left-asscheek) left asscheek. $(this.appearance:symbol:left-asscheek)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="left-cheekbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheekbone"/>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cheek"/>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:left-cheekbone:adjectives) $(this.appearance:symbol:left-cheekbone:adjective) $(this.appearance:left-cheekbone) $(this.appearance:cheekbones) left cheekbone
          </Base:Description>
          <Base:Description type="look">
             The bone across the cheeks just under the eye sockets. $(this.appearance:symbol:left-cheekbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="left-collarbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="collarbone"/>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="collar"/>
          <Base:Adjective adjective="first"/>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:left-collarbone:adjectives) $(this.appearance:symbol:left-collarbone:adjective) $(this.appearance:left-collarbone) left collarbone
          </Base:Description>
          <Base:Description type="look">
             The bone across the upper front of the body, connecting the breastbone to the shoulders. $(this.appearance:symbol:left-collarbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="false" on="true" inside="false" near="false" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="legs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:legs:adjectives) $(this.appearance:symbol:legs:adjective) $(this.appearance:legs) legs
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:legs) legs. $(this.appearance:symbol:legs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="limbs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="limb"/>
            <Base:SName sname="member"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="limbs"/>
            <Base:PName pname="members"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="lower"/>
          <Base:Adjective adjective="nether"/>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">limbs</Base:Description>
          <Base:Description type="look">
             The arms and legs, together with their hands, feet, elbows, knees, etc...
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lip-lower" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bottom"/>
          <Base:Adjective adjective="lower"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:lip-lower:adjectives) $(this.appearance:symbol:lip-lower:adjective) $(this.appearance:lip-lower) {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} $(this.appearance:lips) lower lip
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:lip-lower) {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} $(this.appearance:lips) lower lip. $(this.appearance:symbol:lip-lower) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lip-upper" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="top"/>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:lip-upper:adjectives) $(this.appearance:symbol:lip-upper:adjective) $(this.appearance:lip-upper) $(this.appearance:lips) {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} upper lip
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:lip-upper) {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} $(this.appearance:lips) upper lip. $(this.appearance:symbol:lip-upper) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:lips:adjectives) $(this.appearance:symbol:lips:adjective) {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} $(this.appearance:lips) lips
          </Base:Description>
          <Base:Description type="look">
             A pair of {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape)} $(this.appearance:lips) lips. $(this.appearance:symbol:lips) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lower-back" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="false" on="true" inside="false" near="false" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="back"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="lower"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:lower-back:adjectives) $(this.appearance:symbol:lower-back:adjective) $(this.appearance:lower-back) lower back
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:lower-back) lower back. $(this.appearance:symbol:lower-back) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lungs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lungs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:lungs) lungs
          </Base:Description>
          <Base:Description type="examine">
             A pair of $(this.appearance:lungs) lungs.
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:lungs) lungs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="memories" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="memory"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="memories"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:memories) memories
          </Base:Description>
          <Base:Description type="look">
             Thoughts and recollections from days gone by.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mind" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mind"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="minds"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:mind) mind
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:mouth:adjectives) $(this.appearance:symbol:mouth:adjective) $(this.appearance:mouth) {? equal | $(this.appearance:mouthshape) | ordinary ||$(this.appearance:mouthshape) }mouth
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:mouthshape) | ordinary |A $(this.appearance:mouth) mouth.|A $(this.appearance:mouth:adjective) $(this.appearance:mouthshape) mouth.} $(this.appearance:symbol:mouth) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="movement" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="movement"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="movements"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:movement) movements
          </Base:Description>
          <Base:Description type="look">
             The way in which a person moves or travels.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="muscles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="muscle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="muscles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:muscles) muscles
          </Base:Description>
          <Base:Description type="look">
             The contractile tissue which produces movement in an animate body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nape" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nape"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:nape:adjectives) $(this.appearance:symbol:nape:adjective) $(this.appearance:nape) nape
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:nape) nape, otherwise known as the back of the neck. $(this.appearance:symbol:nape) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="navel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="navel"/>
            <Base:SName sname="bellybutton"/>
            <Base:SName sname="omphalos"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bellybuttons"/>
            <Base:PName pname="navels"/>
            <Base:PName pname="omphalae"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:navel:adjectives) $(this.appearance:symbol:navel:adjective) $(this.appearance:navel) navel
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:navel) navel. $(this.appearance:symbol:navel) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="neck" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="neck"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="necks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:neck:adjectives) $(this.appearance:symbol:neck:adjective) $(this.appearance:neck) neck
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:neck) neck. $(this.appearance:symbol:neck) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nerves" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="nerves"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">nerves</Base:Description>
          <Base:Description type="examine">
             This is an internal part of the body, sometimes referenced with emotion.
          </Base:Description>
          <Base:Description type="look">
             This is an internal part of the body, sometimes referenced with emotion.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="new" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             NEW detail
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nipples" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nipples"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:nipples:adjectives) $(this.appearance:symbol:nipples:adjective) $(this.appearance:nipples) nipples
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:nipples) nipples. $(this.appearance:symbol:nipples) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nose" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="true" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nose"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="noses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:nose:adjectives) $(this.appearance:symbol:nose:adjective) $(this.appearance:nose) {? equal | $(this.appearance:noseshape) | ordinary ||$(this.appearance:noseshape) }nose
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:noseshape) | ordinary |A $(this.appearance:nose) nose.|A $(this.appearance:nose:adjective) $(this.appearance:noseshape) nose.} $(this.appearance:symbol:nose) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nostrils" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nostrils"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:nostrils:adjectives) $(this.appearance:symbol:nostrils:adjective) $(this.appearance:nostrils) nostrils
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:nostrils) nostrils. $(this.appearance:symbol:nostrils) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="palms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="palms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:palms:adjectives) $(this.appearance:symbol:palms:adjective) $(this.appearance:palms) palms
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:palms) palms. $(this.appearance:symbol:palms) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pecs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pecs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:pecs:adjectives) $(this.appearance:symbol:pecs:adjective) $(this.appearance:pecs) $(this.trait:brief:muscle) pecs
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:pecs) $(this.trait:brief:muscle) pecs. $(this.appearance:symbol:pecs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pelvis" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pelvic"/>
            <Base:SName sname="pelvis"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:pelvis:adjectives) $(this.appearance:symbol:pelvis:adjective) $(this.appearance:pelvis) pelvis
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:pelvis) pelvis, the region between the abdomen and the thighs, including the hips. $(this.appearance:symbol:pelvis) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="personality" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="personality"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="personalities"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:personality) personality
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:personality) personality. It generally describes the overall qualities and character of an individual.
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:personality) personality. It generally describes the overall qualities and character of an individual.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pinkies" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pinkies"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="little"/>
          <Base:Adjective adjective="pinky"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:pinkies) pinkies
          </Base:Description>
          <Base:Description type="look">
             The little fingers of the hands, with nails at the ends.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="presence" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="presence"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="presences"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:presence) presence
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pulse" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pulse"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:pulse) pulse
          </Base:Description>
          <Base:Description type="look">
             The heartbeat as it is felt in the larger arteries of the body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pupils" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pupils"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:pupils) pupils
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:pupils) pupils.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="reach" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="reach"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="reaches"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">reach</Base:Description>
          <Base:Description type="examine">
             The length of which someone can extend themselves. This generally refers to the reach of ones arms.
          </Base:Description>
          <Base:Description type="look">
             The length of which someone can extend themselves.
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ribs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ribcage"/>
            <Base:SName sname="rib"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ribcages"/>
            <Base:PName pname="ribs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:ribs:adjectives) $(this.appearance:symbol:ribs:adjective) $(this.appearance:ribs) ribs
          </Base:Description>
          <Base:Description type="look">
             A set of $(this.appearance:ribs) ribs. $(this.appearance:symbol:ribs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="right-asscheek" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="asscheek"/>
            <Base:SName sname="buttcheek"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:right-asscheek) $(this.appearance:symbol:right-asscheek:adjective) right asscheek
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:right-asscheek) right asscheek. $(this.appearance:symbol:right-asscheek)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="right-cheekbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheekbone"/>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cheek"/>
          <Base:Adjective adjective="right"/>
          <Base:Adjective adjective="second"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:right-cheekbone:adjectives) $(this.appearance:symbol:right-cheekbone:adjective) $(this.appearance:right-cheekbone) $(this.appearance:cheekbones) right cheekbone
          </Base:Description>
          <Base:Description type="look">
             The bone across the cheeks just under the eye sockets. $(this.appearance:symbol:right-cheekbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="right-collarbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="collarbone"/>
            <Base:SName sname="bone"/>
            <Base:SName sname="clavicle"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="collar"/>
          <Base:Adjective adjective="right"/>
          <Base:Adjective adjective="second"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:right-collarbone:adjectives) $(this.appearance:symbol:right-collarbone:adjective) $(this.appearance:right-collarbone) right collarbone
          </Base:Description>
          <Base:Description type="look">
             The bone across the upper front of the body, connecting the breastbone to the shoulders. $(this.appearance:symbol:right-collarbone) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rump" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rump"/>
            <Base:SName sname="butt"/>
            <Base:SName sname="ass"/>
            <Base:SName sname="rear"/>
            <Base:SName sname="bum"/>
            <Base:SName sname="derriere"/>
            <Base:SName sname="buttock"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="asses"/>
            <Base:PName pname="buttocks"/>
            <Base:PName pname="butts"/>
            <Base:PName pname="bums"/>
            <Base:PName pname="derrieres"/>
            <Base:PName pname="rears"/>
            <Base:PName pname="rumps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:rump:adjectives) $(this.appearance:symbol:rump:adjective) $(this.appearance:rump:adjective) $(this.appearance:butt) ass
          </Base:Description>
          <Base:Description type="look">
             An $(this.appearance:butt) ass. $(this.appearance:symbol:rump) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scalp" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scalp"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scalps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:scalp:adjectives) $(this.appearance:symbol:scalp:adjective) $(this.appearance:scalp) scalp
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:scalp) scalp. $(this.appearance:symbol:scalp) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scar" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="duelling"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:scarname) scar
          </Base:Description>
          <Base:Description type="examine">
             A scar of $(this.trait:scarname) prominence.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:scarname) scar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scent" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scent"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scents"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:scent) scent
          </Base:Description>
          <Base:Description type="look">
             This person's scent smells of $(this.trait:smell).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shadow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shadow"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="shadows"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:shadow) shadow
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:shadow) shadow. A reflected image cast on a surface by a body intercepting light.
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:shadow) shadow. A reflected image cast on a surface by a body intercepting light.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shins" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shins"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:shins:adjectives) $(this.appearance:symbol:shins:adjective) $(this.appearance:shins) shins
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:shins) shins. $(this.appearance:symbol:shins) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shoulderblades" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulderblades"/>
            <Base:SName sname="scapulas"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:shoulderblades:adjectives) $(this.appearance:symbol:shoulderblades:adjective) $(this.appearance:shoulderblades) shoulderblades
          </Base:Description>
          <Base:Description type="look">
             The triangular bones across the upper back of the body, connected to the collarbone. $(this.appearance:symbol:shoulderblades) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shoulders" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulders"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:shoulders:adjectives) $(this.appearance:symbol:shoulders:adjective) $(this.appearance:shoulders) shoulders
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:shoulders) shoulders. $(this.appearance:symbol:shoulders) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="sides" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sides"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:sides:adjectives) $(this.appearance:symbol:sides:adjective) $(this.appearance:sides) sides
          </Base:Description>
          <Base:Description type="look">
             The sides, between the ribs and the waist. $(this.appearance:symbol:sides) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="skin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="skin"/>
            <Base:SName sname="complexion"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="complexions"/>
            <Base:PName pname="skins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:skin) | ordinary || $(this.appearance:skin) } skin
          </Base:Description>
          <Base:Description type="look">
             Skin of $(this.appearance:skin) complexion.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="smile" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="smile"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:smile) smile
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:smile) smile.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="soles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="soles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:soles:adjectives) $(this.appearance:symbol:soles:adjective) $(this.appearance:soles) soles
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:soles) soles. $(this.appearance:symbol:soles) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="soul" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="soul"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="souls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:soul) soul
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="space" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="space"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:space) space
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:space) space.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="spine" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="spine"/>
            <Base:SName sname="chord"/>
            <Base:SName sname="vertebra"/>
            <Base:SName sname="bone"/>
            <Base:SName sname="backbone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backbones"/>
            <Base:PName pname="bones"/>
            <Base:PName pname="chords"/>
            <Base:PName pname="spines"/>
            <Base:PName pname="vertebrae"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="back"/>
          <Base:Adjective adjective="spinal"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:spine:adjectives) $(this.appearance:symbol:spine:adjective) $(this.appearance:spine) backbone
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:spine) backbone. $(this.appearance:symbol:spine) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stomach" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stomach"/>
            <Base:SName sname="belly"/>
            <Base:SName sname="tummy"/>
            <Base:SName sname="core"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cores"/>
            <Base:PName pname="bellies"/>
            <Base:PName pname="tummys"/>
            <Base:PName pname="stomachs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:stomach:adjectives) $(this.appearance:symbol:stomach:adjective) $(this.appearance:stomach) stomach
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:stomach) stomach. $(this.appearance:symbol:stomach) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tears" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tear"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tears"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">tears</Base:Description>
          <Base:Description type="look">
             A sign of heightened emotions, be it fear, sadness, joy, or anger.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="teeth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tooth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="teeth"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:teeth) teeth
          </Base:Description>
          <Base:Description type="look">
             A set of $(this.appearance:teeth) teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="temper" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="temper"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tempers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:temper) temper
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:temper) temper. This refers to one's disposition or state of mind.
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:temper) temper. This refers to one's disposition or state of mind.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="temples" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="temples"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:temples:adjectives) $(this.appearance:symbol:temples:adjective) $(this.appearance:temples) temples
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:temples) temples, on either side of the forehead. $(this.appearance:symbol:temples) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thighs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thighs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:thighs:adjectives) $(this.appearance:symbol:thighs:adjective) $(this.appearance:thighs) thighs
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:thighs) pair of thighs. $(this.appearance:symbol:thighs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thoughts" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thoughts"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="thoughts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:thought) thoughts
          </Base:Description>
          <Base:Description type="look">
             You cannot look at this.
          </Base:Description>
          <Base:Description type="pbrief">
             $(this.appearance:thought) thoughts
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="throat" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="throat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="throats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:throat:adjectives) $(this.appearance:symbol:throat:adjective) $(this.appearance:throat) throat
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:throat) throat. $(this.appearance:symbol:throat) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thumbs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thumbs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:thumbs:adjectives) $(this.appearance:symbol:thumbs:adjective) $(this.appearance:thumbs) thumbs
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:thumbs) thumbs. $(this.appearance:symbol:thumbs) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toenail" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toenail"/>
            <Base:SName sname="nail"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toe"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:toenail:adjectives)  $(this.appearance:toenail) toenail
          </Base:Description>
          <Base:Description type="look">
             A toenail, at the end of a toe. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toenails" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toenails"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="nails"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toe"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:toenails:adjectives) $(this.trait:color) $(this.appearance:toenails) toenails
          </Base:Description>
          <Base:Description type="look">
             Ten $(this.trait:color) $(this.appearance:toenails) toenails, at the ends of the toes. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:toes:adjectives) $(this.appearance:symbol:toes:adjective) $(this.appearance:toes) toes
          </Base:Description>
          <Base:Description type="look">
             A set of $(this.appearance:toes) toes. $(this.appearance:symbol:toes) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tongue" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tongue"/>
            <Base:SName sname="tounge"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tongues"/>
            <Base:PName pname="tounges"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:tongue:adjectives)  $(this.appearance:tongue) tongue
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:tongue) tongue. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="torso" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="torso"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="torsos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:torso:adjectives)  $(this.appearance:torso) torso
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:torso) torso. $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="touch" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="touch"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="touches"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:touch) touch
          </Base:Description>
          <Base:Description type="examine">
             How one connects physically to someone or something.
          </Base:Description>
          <Base:Description type="look">
             How one connects physically to someone or something.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="triceps" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="triceps"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:triceps:adjectives) $(this.appearance:symbol:triceps:adjective) $(this.appearance:triceps:adjective) $(this.appearance:muscle) triceps
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:triceps:adjective) $(this.appearance:muscle) triceps. $(this.appearance:symbol:triceps) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="upper-body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="body"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:upper-body:adjectives) $(this.appearance:symbol:upper-body:adjective) $(this.appearance:upper-body) upper body
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:upper-body) upper body, the region between the abdomen and the neck, including the shoulders. $(this.appearance:symbol:upper-body) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="veins" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vein"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="veins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:veins) veins
          </Base:Description>
          <Base:Description type="examine">
             Some $(this.appearance:veins) veins. Tubes forming part of the blood circulation system in the body.
          </Base:Description>
          <Base:Description type="look">
             Some $(this.appearance:veins) veins. Tubes forming part of the blood circulation system in the body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="voice" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="voice"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="voices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:voice) voice
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="waist" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="waist"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="waists"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:waist:adjectives) $(this.appearance:symbol:waist:adjective) $(this.appearance:waist) waist
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:waist) waist. $(this.appearance:symbol:waist) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="weight" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="weight"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:weight) weight
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="windpipe" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="windpipe"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:windpipe:adjectives) $(this.appearance:symbol:windpipe:adjective) $(this.appearance:windpipe) windpipe
          </Base:Description>
          <Base:Description type="examine">
             A $(this.appearance:windpipe) windpipe. $(this.appearance:symbol:windpipe) $[injuries::show_injuries()]
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:windpipe) windpipe. $(this.appearance:symbol:windpipe) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wings" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wings"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:wings:adjectives) $(this.appearance:symbol:wings:adjective) $(this.appearance:wings) wings
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.appearance:wings) wings. $(this.appearance:symbol:wings) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="words" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="words"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:words) words
          </Base:Description>
          <Base:Description type="look">
             That is not a real thing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wounds" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wound"/>
            <Base:SName sname="injury"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wounds"/>
            <Base:PName pname="injuries"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">injuries</Base:Description>
          <Base:Description type="look">
             $[injuries::show_all_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wrists" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wrists"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.combat:injury:wrists:adjectives) $(this.appearance:symbol:wrists:adjective) $(this.appearance:wrists) wrists
          </Base:Description>
          <Base:Description type="look">
             A $(this.appearance:wrists) pair of wrists. $(this.appearance:symbol:wrists) $[injuries::show_injuries()]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="disabled:merry:act-post:command%supereyes">
         X[M] /* Disabled due to lag */   
   
/* record data to give information to viewers on what actions the PC is doing */    
if(!args["imperative"]) \{    
 /* does this only happen when moving between rooms? */    
 /* if so, it's a good chance to clear supereyes info */    
 this.supereyes = nil;    
 return TRUE;    
\}    
/*if(this==\$\{Chatters:IC:az:azrael\})    
 EmitTo(this, dump_value(args));*/    
if(args["privacy"] \|\| args["secrecy"]) return TRUE;    
if(member(args["imperative"], (\{ "look", "examine", "say" \}))) \{    
 if(this.supereyes \&\& this.supereyes["evoke"])    
  this.supereyes["evoke"] = nil;    
 return TRUE;    
\}    
args["timestamp"] = time();    
if(args["obscurity"])    
 args["evoke"] = nil;    
this.supereyes = args;    
return TRUE;
      </Core:Property>
      <Core:Property property="disabled:merry:act-post:login%fixes">
         X[M] mapping map;            
string *array;            
int i;            
          
return TRUE;          
            
/* fixing temporary hack now we don't need it for scabbard descriptions */            
\$actor."base:infravision" = nil;            
            
/* reduce learning points */      
/*         
if(\$actor."student:learningpoints" \> 100)            
  \$actor."student:learningpoints" = 100;      
*/         
            
/* Fix the eyebrows */            
/*            
if(\$actor."appearance:browshape" \&\& !\$actor."appearance:eyebrowshape") \{            
  \$actor."appearance:eyebrowshape" = \$actor."appearance:browshape";            
  \$actor."appearance:browshape" = nil;            
\}            
*/            
            
/* Set player cap name */            
if(!\$actor."skotos:playercapname")            
  \$actor."skotos:playercapname" = capitalize(\$actor."skotos:charname");            
            
/* temporarily just set it (for people broken from masks) */            
\$actor."skotos:playercapname" = capitalize(\$actor."skotos:charname");            
            
/* Remove redundant properties */            
\$actor."alteration:knowledge:tailoring-cloth-remote" = nil;            
\$actor."alteration:knowledge:tailoring-roll-remote" = nil;            
\$actor."alteration:knowledge:forging-metal" = nil;            
\$actor."alteration:knowledge:forging-metal-remote" = nil;            
\$actor."skill:alteration:metalwork" = nil;            
            
if(\$actor."career:combat:mace") \{            
  if(!\$actor."career:combat:club" \|\| (Int(\$actor."career:combat:club") \< Int(\$actor."career:combat:mace"))) \{            
    \$actor."career:combat:club" = Int(\$actor."career:combat:mace");            
  \}            
  \$actor."career:combat:mace" = nil;            
\}            
if(\$actor."skill:combat:mace") \{            
  if(!\$actor."skill:combat:club" \|\| (Int(\$actor."skill:combat:club") \< Int(\$actor."skill:combat:mace"))) \{            
    \$actor."skill:combat:club" = Int(\$actor."skill:combat:mace");            
  \}            
  \$actor."skill:combat:mace" = nil;            
\}            
if(\$actor."skill:career:woodcarver") \{            
  if(!\$actor."skill:career:carpenter" \|\| (Int(\$actor."skill:career:carpenter") \< Int(\$actor."skill:career:woodcarver"))) \{            
    \$actor."skill:career:carpenter" = Int(\$actor."skill:career:woodcarver");            
  \}            
  \$actor."skill:career:woodcarver" = nil;            
\}            
            
            
            
/* Set the actors skills again, in case careers have changed */            
/* Get a mapping of all the actors skills */            
map = Get(\$actor, "*");            
map = prefixed_map(map, "skill:career:");            
            
array = map_indices(map);            
for(i=0;i\<sizeof(array);i++)\{            
  Set(\$actor, array[i], Get(\$actor, array[i]));            
\}            
            
return TRUE;
      </Core:Property>
      <Core:Property property="disabled:merry:act-post:quit%income">
         X[M] mapping map;     
string *array;     
int i;     
    
/* disabled - no more income top-ups */    
return TRUE;    
    
     
/* Set the money based on income */     
/*EmitTo(\$\{Chatters:IC:Az:Azrael\}, "Setting income for "+Describe(\$this)+".");*/     
if(\$this."trait:income" \|\| \$this."trait:extraincome")     
\{     
/* Check if the player gets more money */     
  /* Check if the player has waited a day before getting money */     
  if(!\$this."trait:income_time" \|\| (\$this."trait:income_time" \< time()))     
  \{     
     
    /* Count the players money */     
    \$amount = 0;     
     
    /* check what the player has on them */     
    \$objects = (\{ \$actor \});     
     
    /* and what is in the players rooms */     
    map = Get(\$actor, "*");     
    map = prefixed_map(map, "virtualhome:");     
    if(sizeof(map_indices(map)) != 0)\{     
      for(i = 0; i \< sizeof(map_values(map)); i++)\{     
        if(typeof(map_values(map)[i]) == 4)     
        \$objects \|= map_values(map)[i]."base:inventory";     
      \}     
    \}     
     
    for(i = 0; i \< sizeof(\$objects); i++)\{     
      if(!\$objects[i]."base:volition" \|\| (\$objects[i]==\$this)) \{     
        \$hidden = map_indices(prefixed_map(Get(\$objects[i], "*"), "searching:"));     
        if(sizeof(\$hidden)) \{     
          for(\$j=0;\$j\<sizeof(\$hidden);\$j++) \{     
            if(sscanf(\$hidden[\$j], "searching:%s:searchmapping", \$tmp)) \{     
              \$level = map_indices(Get(\$objects[i], \$hidden[\$j]));     
              for(\$k=0;\$k\<sizeof(\$level);\$k++) \{     
                \$objects += Get(\$objects[i], \$hidden[\$j])[\$level[\$k]];     
              \}     
            \}     
          \}     
        \}     
     
        if(\$objects[i]."cash:balance") \{     
          \$amount += \$objects[i]."cash:balance";     
        \} else if(\$objects[i]."cash:value") \{     
          \$amount += \$objects[i]."cash:value";     
        \}     
        \$objects += \$objects[i]."base:inventory";     
      \}     
    \}     
     
    \$this."trait:pouchmoney" = \$amount;     
     
    /* Check if this player already has more money than his income */     
    \$money = \$this."trait:money" + \$this."trait:pouchmoney" + Int(\$this."trait:incomecosts");     
    /* grant money increase */     
    if(\$money \< Int(\$this."trait:income")+Int(\$this."trait:extraincome"))     
    \{     
      if(\$this.guild) \$this."trait:incomepaid" = Int(\$this."trait:income") + Int(\$this."trait:extraincome") - \$money;     
      \$this."trait:money" = Int(\$this."trait:income") + Int(\$this."trait:extraincome") - \$this."trait:pouchmoney" - Int(\$this."trait:incomecosts");     
      \$this."trait:income_time" = time()+(60*60*16);     
    \}     
  \}     
\}     
     
return TRUE;
      </Core:Property>
      <Core:Property property="disabled:merry:inherit:act-post:enter%supereyes">
         \<Ironclaw:Neoct:Verbs:OOC:S:@supereyes\>
      </Core:Property>
      <Core:Property property="disabled:merry:inherit:act-post:examine%supereyes">
         \<Ironclaw:Neoct:Verbs:OOC:S:@supereyes\>
      </Core:Property>
      <Core:Property property="disabled:merry:inherit:act-post:look%supereyes">
         \<Ironclaw:Neoct:Verbs:OOC:S:@supereyes\>
      </Core:Property>
      <Core:Property property="export:alteration:add:face:hairgrowth">
         ([  ])
      </Core:Property>
      <Core:Property property="export:alteration:add:facialhair:hairgrowth">
         ([  ])
      </Core:Property>
      <Core:Property property="export:alteration:add:fingernails:nailpolish">
         ([ "properties":(\{ (\{ "trait:color", "appearance:nailcolor" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:fur:furdye">
         ([ "properties":(\{ (\{ "trait:color", "appearance:furcolor" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:fur:hairgrowth">
         ([  ])
      </Core:Property>
      <Core:Property property="export:alteration:add:hair:hairdye">
         ([ "properties":(\{ (\{ "trait:color", "appearance:haircolor" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:hair:hairgrowth">
         ([  ])
      </Core:Property>
      <Core:Property property="export:alteration:add:head:hairgrowth">
         ([  ])
      </Core:Property>
      <Core:Property property="export:alteration:add:tattoo:ink">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "appearance:symbolcolor" \}) \}), "stopvalue":(\{ "appearance:symbolcolor", "sketched", "This tattoo has already been inked." \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:toenails:nailpolish">
         ([ "properties":(\{ (\{ "trait:color", "appearance:toenails" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:default:tattoo">
         ([ "description":(\{ "You tattoo MODIFICATION onto ORIGINAL_OBJECT", "tattoos MODIFICATION onto ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<IronClaw:Lib:UrPeople:Tattoos\>, "alteration:knowledge:tattoos" \}) \}), "input-list-actor":(\{ "alteration:knowledge:tattoos" \}), "modification":"a tattoo", "noskillroll":"true", "properties":(\{ (\{ "appearance:symbol" \}) \}), "requiredtools":(\{ "a needle and ink", (\{ "needle" \}), (\{ "ink" \}) \}), "stopvalue":(\{ "appearance:symbol", "nothing", "Your victim already has a tattoo." \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:facialhair:cut">
         ([ "description":(\{ "You cut ORIGINAL_OBJECT", "cut ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:FacialHairDB\>, "alteration:knowledge:cutting-facialhair" \}) \}), "input-list-actor":(\{ "alteration:knowledge:cutting-facialhair" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors and a comb", (\{ "scissors" \}), (\{ "comb" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:facialhair:style">
         ([ "description":(\{ "You style ORIGINAL_OBJECT", "styles ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:FacialHairDB\>, "alteration:knowledge:styling-facialhair" \}) \}), "input-list-actor":(\{ "alteration:knowledge:styling-facialhair" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors and a comb", (\{ "scissors" \}), (\{ "comb" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:fingernails:cut">
         ([ "description":(\{ "You cut ORIGINAL_OBJECT", "files ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:NailDB\>, "alteration:knowledge:cutting-fingernails" \}) \}), "input-list-actor":(\{ "alteration:knowledge:cutting-fingernails" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors", (\{ "scissors" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:fingernails:file">
         ([ "description":(\{ "You file ORIGINAL_OBJECT", "files ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:NailDB\>, "alteration:knowledge:filing-fingernails" \}) \}), "input-list-actor":(\{ "alteration:knowledge:filing-fingernails" \}), "noskillroll":"true", "requiredtools":(\{ "a nail file", (\{ "nailfile" \}) \}), "temporary":604800 ])
      </Core:Property>
      <Core:Property property="export:alteration:create:hair:cut">
         ([ "description":(\{ "You cut ORIGINAL_OBJECT", "cuts ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:HairDB\>, "alteration:knowledge:cutting-hair" \}) \}), "input-list-actor":(\{ "alteration:knowledge:cutting-hair" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors and a comb", (\{ "scissors" \}), (\{ "comb" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:hair:style">
         ([ "description":(\{ "You style ORIGINAL_OBJECT", "styles ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:HairDB\>, "alteration:knowledge:styling-hair" \}) \}), "input-list-actor":(\{ "alteration:knowledge:styling-hair" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors and a comb", (\{ "scissors" \}), (\{ "comb" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:hair:texturize">
         ([ "description":(\{ "You texturize ORIGINAL_OBJECT", "styles ORIGINAL_OBJECT" \}), "fixed":"true", "input-list":(\{ (\{ \<Allegory:Lib:UrPeople:HairDB\>, "alteration:knowledge:texturizing-hair" \}) \}), "input-list-actor":(\{ "alteration:knowledge:texturizing-hair" \}), "noskillroll":"true", "requiredtools":(\{ "a pair of scissors and a comb", (\{ "scissors" \}), (\{ "comb" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:appearance:browshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:build">
         "average"
      </Core:Property>
      <Core:Property property="export:appearance:clawtype">
         "nails"
      </Core:Property>
      <Core:Property property="export:appearance:complexion">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:eyebrowshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:facialhair">
         "none"
      </Core:Property>
      <Core:Property property="export:appearance:faciallength">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:feettype">
         "feet"
      </Core:Property>
      <Core:Property property="export:appearance:feettype:p">
         "feet"
      </Core:Property>
      <Core:Property property="export:appearance:feettype:s">
         "foot"
      </Core:Property>
      <Core:Property property="export:appearance:furtype">
         "fur"
      </Core:Property>
      <Core:Property property="export:appearance:hashair">
         "yes"
      </Core:Property>
      <Core:Property property="export:appearance:height">
         "average"
      </Core:Property>
      <Core:Property property="export:appearance:skin">
         "ordinary"
      </Core:Property>
      <Core:Property property="export:appearance:symbol">
         "nothing"
      </Core:Property>
      <Core:Property property="export:appearance:symbolcolor">
         "sketched"
      </Core:Property>
      <Core:Property property="export:client:theme">
         "ironclaw"
      </Core:Property>
      <Core:Property property="export:rank:name">
         "freedman"
      </Core:Property>
      <Core:Property property="export:rank:rank">3</Core:Property>
      <Core:Property property="export:status:energy">
         100
      </Core:Property>
      <Core:Property property="export:status:energy-max">
         100
      </Core:Property>
      <Core:Property property="export:status:health">
         100
      </Core:Property>
      <Core:Property property="export:status:health-max">
         100
      </Core:Property>
      <Core:Property property="export:status:hunger">
         100
      </Core:Property>
      <Core:Property property="export:status:hunger-max">
         100
      </Core:Property>
      <Core:Property property="export:student:learningpoints">
         30
      </Core:Property>
      <Core:Property property="export:theatre:id">
         "IC"
      </Core:Property>
      <Core:Property property="export:trait:animal">
         "unknown"
      </Core:Property>
      <Core:Property property="export:trait:animaltype">
         "unknown"
      </Core:Property>
      <Core:Property property="export:trait:body">3</Core:Property>
      <Core:Property property="export:trait:brief">
         "someone"
      </Core:Property>
      <Core:Property property="export:trait:butt">
         "rump"
      </Core:Property>
      <Core:Property property="export:trait:chance">
         5
      </Core:Property>
      <Core:Property property="export:trait:dex">3</Core:Property>
      <Core:Property property="export:trait:hiding">
         1
      </Core:Property>
      <Core:Property property="export:trait:income">
         600
      </Core:Property>
      <Core:Property property="export:trait:incomecosts">
         0
      </Core:Property>
      <Core:Property property="export:trait:mind">3</Core:Property>
      <Core:Property property="export:trait:money">0</Core:Property>
      <Core:Property property="export:trait:nominative">
         "he"
      </Core:Property>
      <Core:Property property="export:trait:nottrash">
         1
      </Core:Property>
      <Core:Property property="export:trait:objective">
         "her"
      </Core:Property>
      <Core:Property property="export:trait:possessive">
         "her"
      </Core:Property>
      <Core:Property property="export:trait:pouchmoney">
         0
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "woman"
      </Core:Property>
      <Core:Property property="export:trait:smells">
         ([  ])
      </Core:Property>
      <Core:Property property="export:trait:speed">3</Core:Property>
      <Core:Property property="export:trait:will">3</Core:Property>
      <Core:Property property="merry:act-post:enter">
         X[M] object destRoom;  
string mapURL;  
  
Call(\$\{Allegory:Lib:Client\}, "update");  
  
if(\$actor.mobimode) \{  
    destRoom = NRefOb(\$dest);  
    mapURL = UnSAM((Get(destRoom, "details:default:description:mapurl")));  
    EmitTo(\$actor, "MAPURL::" + mapURL);  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:login%clientfix">
         X[M] Set(\$this, "client:theme", nil);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:login%free_account_check">
         X[M] /* How many characters are we allowed to have? Do we need to disable any? */  
\$slots_allowed = ironclaw::countCharacterSlots(\$account_type: general::getAccountType(\$udat: \$actor."udat:object", \$char: \$actor), \$udat: \$actor."udat:object");  
  
\$bodies = Udat::query_bodies_in_roster(\$user: \$actor."udat:name");  
\$sorted_bodies = ironclaw::mothballAndSortRoster(\$bodies: \$bodies, \$max_active: \$slots_allowed);  
/* mothballAndSortRoster will have mothballed this PC is they had too many active */  
if(\$actor.mothballed) \{  
    /* Oh no! We've been mothballed! Do they have any free character slots so we can unfreeze this PC? */  
    \$can_unmothball = \$slots_allowed - sizeof(\$sorted_bodies["active"]);  
  
    if(!\$can_unmothball) \{  
        \$delay(1.5, FALSE, "c7a3");  
  
        chat::chat(\$chat_staff: TRUE, \$chat_channel: "logs", \$line: nil, \$(raw-evoke): Describe(\$actor)+" is frozen, and has been disconnected.", \$no_channel_warnings: TRUE);  
          
        EmitTo(\$actor, "This character is frozen!");  
        if(\$slots_allowed == 1) \{  
            EmitTo(\$actor, "Unfortunately, free (or expired) accounts are only allowed "+\$slots_allowed+" character.");  
            EmitTo(\$actor, "If you upgrade to a paid account, you will be able to play multiple characters.");  
        \} else \{  
            EmitTo(\$actor, "Unfortunately, your account is only allowed "+\$slots_allowed+" characters, and you have reached this limit.");  
        \}  
        EmitTo(\$actor, "If you want to access your account information please visit: https://www.skotos.net/user/overview.php");  
  
        \$delay(0.1, FALSE, "650c");  
  
        Act(\$actor, "disconnect");  
        return FALSE;  
    \}  
    \$actor.mothballed = nil;  
    chat::chat(\$chat_staff: TRUE, \$chat_channel: "logs", \$line: nil, \$(raw-evoke): Describe(\$actor)+" has been unfrozen.", \$no_channel_warnings: TRUE);  
\}  
if(\$actor.guild) \$actor.guild.mothballed = nil;  

/* 20th Anniversary Log */
 \$data = \$\{Allegory:Lib:AnniversaryLog\};

\$log = (\{ \});
if(\$data.log) \{
    \$log = \$data.log;
\}

\$log \|= (\{ \$actor."skotos:creator" \});

\$data.log = \$log; 
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:login%motd">
         X[M] int i, sz;  
/* display message of the day */  
\$delay(1, TRUE, "915e");  
  
/* display the game message of the day */  
/*  
EmitTo(\$actor, TAG("Welcome to Ironclaw. No news is good news, right?", "imp"));  
EmitTo(\$actor, " ");  
*/  
EmitTo(\$actor, "\\nTip of the day:");  
EmitTo(\$actor, Call(\$\{Ironclaw:Lib:OOC:tips\}, "show_tip")+"\\n\\n");  
  
/* display the guild message of the day */  
if(\$actor.guild \&\& \$actor.guild.motd \&\& \$actor.guild.motd != "")  
  EmitTo(\$actor, TAG(\$actor.guild.motd, "imp"));  
  
/* display the guild voting message */  
if(\$actor.guild \&\& \$actor.guild) \{  
  \$message = Call(\$\{Ironclaw:Lib:Guilds:New\}, "get_guild_vote_message");  
  if(\$message)  
    EmitTo(\$actor, TAG(\$message, "imp"));  
\}  
  
/* are there any other messages to display on login? */  
if(sizeof(Arr(\$actor."login:messages"))) \{  
  sz = sizeof(Arr(\$actor."login:messages"));  
  for(i=0;i\<sz;i++)  
    EmitTo(\$actor, Str(Arr(\$actor."login:messages")[i]));  
  \$actor."login:messages" = (\{ \});  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-pre:evoke">
         X[M] return TRUE;                        
EmitTo(\$actor, "Check evoke");                        
if(!\$actor."SkotOS:CurrentLang" \|\| (\$actor."SkotOS:CurrentLang" == "0")) return TRUE;                        
                        
EmitTo(\$actor, "Act evoke");                        
return TRUE;                        
                        
\$(evoke-actor) = \$evoke;                        
                        
                       
\$(evoke-target) = INLANG("western", 8, \$evoke);                        
\$(evoke-witness) = INLANG("western", 8, \$evoke);                        
\$(verb-extra:pe) = "(in something)";                        
                        
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:pray">
         X[M] if(\$evoke) \{                                                   
    chat::send_msg(\$message: "[" + ctime(time()) + "] " + capitalize(Str(\$actor."skotos:charname")) + ": " + \$evoke, \$line: "pray", \$actor: \$actor);                    
    \$delay(2, TRUE, "9dda");  
    EmitTo( \$actor, "You feel your prayer may have been heard." );                             
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:say">
         X[M] string *speech_pattern;              
mixed social_args;              
int i, ix;              
              
speech_pattern = Arr(this."trait:speech-pattern");              
if (!sizeof(speech_pattern))              
    return TRUE;              
              
/* Produce the social_args. */              
ix          = sizeof(\$roles);              
social_args = (\{ \});              
for (i = 0; i \< ix; i++)              
    social_args += (\{ GetVar(\$roles[i] + ":preposition"), GetVar(\$roles[i]) \});              
              
Social(this, speech_pattern[random(sizeof(speech_pattern))], \$adverb, \$(raw-evoke), social_args...);
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] if(this."skotos:playercapname")\{                       
 this."trait:superbrief" = this."skotos:playercapname";                       
\}                       
                       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:approach%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:command%smell">
         \<Ironclaw:Lib:Characters:Smell\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:enter%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:linkdie%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:logout%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:place%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:quit%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:teleport%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:throw%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:zthrow%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:approach%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:leave%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:take%cheating">
         \<Allegory:Lib:Guide\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:take%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:throw%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:enter%partitions">
         \<Lib:Systems:Partitions\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:chatlib\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:effect:energy:severity">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:effect:health:severity">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:effect:hunger:severity">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:status:energy">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:status:health">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:status:hunger">
         \<Allegory:Lib:Characters:Status\>
      </Core:Property>
      <Core:Property property="merry:react-post:add-iob">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "add", \$addition: \$dob, \$target: \$iob);
      </Core:Property>
      <Core:Property property="merry:react-post:snip-dob">
         X[M] if(\$dob \&\& (sizeof(\$dob) == 1)) \{    
    \$ob = NRefOb(\$dob[0]);    
    \$target = NRefDetail(\$dob[0]);    
        if(\$target == "hair") \{    
            if(\$ob."appearance:hashair" == "yes") \{    
                \$tool = nil;    
                for(\$i = 0; (\$i \< sizeof(\$actor."base:inventory")) \&\& (!\$tool); \$i++) \{    
                    if(\$actor."base:inventory"[\$i]."trait:objecttype" == "scissors") \{    
                        \$tool = 1;    
                    \}    
                \}    
                if(\$tool != 1) \{    
                    EmitTo(\$actor, "You need scissors to snip a lock of hair.");    
                \} else \{    
    
                    \$lock = Spawn( \$\{IronClaw:Props:Barber:LockOfHair\} );    
                    if(\$ob."appearance:haircolor") \{ \$lock."appearance:haircolor" = \$ob."appearance:haircolor"; \}    
                    if(\$ob."appearance:hairtype") \{ \$lock."appearance:hairtype" = \$ob."appearance:hairtype"; \}    
                    if(\$ob."appearance:haircoloradj") \{ \$lock."appearance:haircoloradj" = \$ob."appearance:haircoloradj"; \}    
                    EmitIn(\$actor."base:environment", Describe(\$lock) + " floats gently to the ground as " +Describe(\$actor)+ " snips it from " +Describe(\$ob)+ "'s head.", \$actor, \$ob);    
                    EmitTo(\$actor, Describe(\$lock) + " floats gently to the ground as you snip it from " +Describe(\$ob)+ "'s head.");    
                    EmitTo(\$ob, Describe(\$lock) + " floats gently to the ground as " +Describe(\$actor)+ " snips it from your head.");    
                    \$lock."base:environment" = \$actor."base:environment";    
                    return FALSE;    
    
                \}    
    
            \} else \{    
                EmitTo(\$actor, Describe(\$ob) + " has no hair to " + \$imperative + " off.");    
                return FALSE;    
            \}    
        \}    
    \}    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:add-iob">
         X[M] if(!\$dob) return TRUE;                         
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "valid-check", \$addition: \$dob, \$object: \$iob);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:facialhair">
         X[M] Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replacenames", \$object: \$this, \$detail: "facialhair");            
return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:faciallength">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:haircolor">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatehairdesc", \$action: "haircolor", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:hairlength">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatehairdesc", \$action: "hairlength", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:hairtype">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatehairdesc", \$action: "hairtype", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:appearance:hashair">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatehairdesc", \$action: "hashair", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:skill:career">
         X[M] return Call(\$\{Ironclaw:Lib:Teaching:TeachingLib\}, "updatecareer", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:skotos:charname">
         X[M] \$this."trait:superbrief" = capitalize(\$this."skotos:charname");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:superbrief">
         X[M] return Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc", \$body: \$this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:title">
         X[M] Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: \$this);            
Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc", \$body: \$this);            
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness:enter-from%favor">
         X[M] return TRUE;   
/* gather a list of PCs that enter the room */    
if(!this."favor:rawopinion:all") this."favor:rawopinion:all" = (\{ \});    
if(!this."favor:rawopinion:gathered") this."favor:rawopinion:gathered" = (\{ \});    
    
if(member(\$actor, this."favor:rawopinion:gathered")    
\|\| member(\$actor, this."favor:rawopinion:all"))    
 return TRUE;;    
    
this."favor:rawopinion:gathered" += (\{ \$actor \});    
    
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1566076615, "jominey", "E", 1566076666, "jominey", "E", 1566076706, "jominey", "E", 1566962164, "jominey", "E", 1567130558, "ezralee", "K", 1567186088, "jominey", "E", 1567186099, "jominey", "E", 1567477581, "jominey", "E", 1571283008, "sendnoodlez", "E", 1571412615, "jominey", "K", 1571412821, "jominey", "K", 1571412890, "jominey", "K", 1571412932, "jominey", "K", 1571412971, "jominey", "K", 1571413085, "jominey", "K", 1571421349, "jominey", "K", 1571421462, "jominey", "K", 1571421505, "jominey", "K", 1571421543, "jominey", "K", 1571439246, "sendnoodlez", "E", 1571439603, "sendnoodlez", "E", 1571439780, "sendnoodlez", "E", 1571439943, "sendnoodlez", "E", 1571439977, "sendnoodlez", "E", 1571440028, "sendnoodlez", "E", 1571440083, "sendnoodlez", "E", 1571440192, "sendnoodlez", "E", 1571440231, "sendnoodlez", "E", 1571440341, "sendnoodlez", "E", 1571458776, "sendnoodlez", "E", 1571458855, "sendnoodlez", "E", 1571458879, "sendnoodlez", "E", 1571849865, "jominey", "K", 1571849954, "jominey", "K", 1571968483, "jominey", "K", 1571968517, "jominey", "K", 1572574771, "ezralee", "E", 1572574867, "ezralee", "E", 1572575200, "ezralee", "E", 1572575229, "ezralee", "E", 1572575247, "ezralee", "E", 1572653586, "jominey", "E", 1572653921, "jominey", "E", 1572654077, "jominey", "E", 1572755048, "jominey", "E", 1572837729, "jominey", "E", 1572837779, "jominey", "E", 1572989346, "sendnoodlez", "E", 1573499806, "jominey", "K", 1573500744, "jominey", "K", 1573500788, "jominey", "K", 1573500796, "jominey", "K", 1573687746, "jominey", "K", 1573687780, "jominey", "K", 1573691750, "jominey", "E", 1573691761, "jominey", "E", 1573691779, "jominey", "E", 1573691783, "jominey", "E", 1574524938, "sendnoodlez", "K", 1575518178, "sendnoodlez", "K", 1579793622, "jominey", "E", 1579794103, "jominey", "K", 1579795972, "jominey", "E", 1579795995, "jominey", "E", 1579796139, "jominey", "E", 1579798161, "jominey", "E", 1579799092, "jominey", "E", 1589922534, "jominey", "K", 1589922741, "jominey", "K", 1589922842, "jominey", "K", 1590967954, "sendnoodlez", "E", 1595987760, "jominey", "E", 1595987815, "jominey", "E", 1595987820, "jominey", "E", 1595988050, "jominey", "E", 1595988064, "jominey", "E", 1598109339, "jominey", "E", 1598109881, "jominey", "E", 1599927337, "jominey", "E", 1600397903, "jominey", "E", 1600398033, "jominey", "E", 1600692310, "jominey", "E", 1602121027, "jominey", "K", 1602121060, "jominey", "K", 1603032407, "jominey", "P", 1603032438, "jominey", "P", 1603032485, "jominey", "P", 1603032652, "jominey", "P", 1603032688, "jominey", "P", 1603032767, "jominey", "P", 1603033067, "jominey", "P", 1607373999, "sendnoodlez", "E", 1608162278, "sendnoodlez", "E", 1608162348, "sendnoodlez", "E", 1613527546, "ezralee", "E", 1613527617, "ezralee", "K", 1613528078, "ezralee", "K", 1613528090, "ezralee", "E", 1613806723, "ezralee", "E", 1613806769, "ezralee", "E", 1613806817, "ezralee", "E", 1619652343, "sendnoodlez", "K", 1621988340, "ezralee", "E", 1621988390, "ezralee", "K", 1623960452, "sendnoodlez", "E", 1624398418, "sendnoodlez", "E", 1631236347, "ezralee", "E", 1631236419, "ezralee", "E", 1631236454, "ezralee", "E", 1631236715, "ezralee", "K", 1631236752, "ezralee", "E", 1632445773, "ezralee", "E", 1632446969, "ezralee", "E", 1641454192, "ezralee", "K", 1646269816, "ezralee", "K", 1649218644, "ezralee", "K", 1694497781, "ezralee", "E", 1694500132, "ezralee", "K", 1694500150, "ezralee", "E", 1694664770, "ezralee", "E", 1694664904, "ezralee", "E", 1694668805, "ezralee", "K", 1694761924, "annemairi", "K", 1694762866, "annemairi", "E", 1694763024, "annemairi", "K", 1694763861, "annemairi", "E", 1694764361, "annemairi", "K", 1694764949, "annemairi", "K", 1694764969, "annemairi", "E", 1694827010, "annemairi", "K", 1694910420, "ezralee", "K", 1702503300, "annemairi", "K", 1702510804, "annemairi", "K" \})
      </Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="trait:income">2240</Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
