<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="choices:features:">
         ([ "free":(\{  \}) ])
      </Core:Property>
      <Core:Property property="choices:features:browshape">
         ([ "free":(\{ "broad", "craggy", "furrowed", "high", "lined", "low", "narrow", "ordinary", "smooth", "wrinkled" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:build">
         ([ "free":(\{ "ample", "athletic", "average", "average (none)", "bloated", "blubbery", "bony", "brawny", "broad-shouldered", "bulky", "burly", "buxom", "chiseled", "chubby", "compact", "corpulent", "curvaceous", "delicate", "emaciated", "fat", "feminine", "flabby", "full-figured", "gangling", "gangly", "gaunt", "hourglass", "hulking", "husky", "lanky", "lean", "lissome", "lithe", "masculine", "meager", "medium", "muscular", "obese", "paunchy", "petite", "plump", "portly", "pudgy", "rawboned", "rock-hard", "rugged", "scrawny", "sculpted", "shapely", "sickly", "sinewy", "skinny", "sleek", "slender", "slight", "slim", "spindly", "squat", "stalwart", "statuesque", "stocky", "stout", "strapping", "strong", "svelte", "thickset", "thin", "toned", "voluptuous", "waifish", "willowy", "wiry" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:cheekshape">
         ([ "free":(\{ "apple", "broad", "chiseled", "fine", "gaunt", "high", "hollow", "jowly", "ordinary", "razor-sharp" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:earshape">
         ([ "free":(\{ "dainty", "large", "ordinary", "protruding", "small" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:eyebrowshape">
         ([ "free":(\{ "arched", "beetling", "bushy", "close-set", "continuous", "fine", "heavy", "high", "light", "narrow", "ordinary", "overhanging", "scant", "scraggly", "straight", "thin", "wide" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:eyecolor">
         ([ "free":(\{ "amber", "blue", "blue grey", "brown", "dark brown", "dark grey", "deep blue", "deep green", "green", "grey", "hazel", "honey brown", "pale blue", "pale grey", "pink", "violet" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:eyeshape">
         ([ "free":(\{ "almond", "baggy", "beady", "bloodshot", "bright", "bug", "button", "close-set", "deep-set", "gimlet", "heavy lidded", "hooded", "large", "narrow", "ordinary", "owlish", "round", "sharp", "small", "squinty", "sunken", "watery", "wide", "wide-set" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:facialhair">
         ([ "free":(\{ "beard", "goatee", "mustache", "mustache and goatee", "mustache and whiskers", "none", "sideburns" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:faciallength">
         ([ "free":(\{ "coarse", "dirty", "fuzzy", "long", "matted", "ordinary (none)", "scraggly", "shaggy", "short", "silky", "smooth", "trimmed", "wiry" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:feet">
         ([ "free":(\{ "dainty", "dirty", "gnarled", "jagged", "large", "long", "manicured", "ordinary (none)", "plump", "pudgy", "ragged", "rough", "slender", "smooth", "strong", "stubby", "stubby", "thin", "trim", "worn" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:haircolor">
         ([ "free":(\{ "ash", "ash brown", "auburn", "black", "blonde", "blue black", "brown", "chestnut", "chocolate brown", "coal black", "coffee brown", "copper", "dark brown", "dark gray", "dark red", "dirty blonde", "dishwater blonde", "dusky black", "fawn", "ginger", "golden blonde", "golden brown", "gray", "grey", "honey blonde", "jet black", "light brown", "light gray", "mouse brown", "pale blonde", "platinum blonde", "red", "reddish brown", "sable", "salt-n-pepper", "sandy", "silver", "straw colored", "strawberry blonde", "tawny", "white" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:hairlength">
         ([ "free":(\{ "butchered", "chin-length", "close-cropped", "cut short", "jaw-length", "long", "lopsided", "medium", "shaved", "short", "shoulder-length", "thinning", "trimmed", "waist-length" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:hairstyle">
         ([ "free":(\{ "braids", "bun", "combed", "combed back", "crew cut", "curls", "dreadlocks", "flat top", "loose", "mussed", "pig-tails", "ponytail", "shaved", "tangled", "tousled", "uncombed", "windblown" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:hairtype">
         ([ "free":(\{ "ample", "bristly", "bushy", "coarse", "curly", "delicate", "dirty", "dull", "feral", "flowing", "frizzy", "fuzzy", "greasy", "kinky", "matted", "ordinary", "scraggly", "shaggy", "silky", "smooth", "snarled", "stringy", "thick", "unruly", "wiry" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:hands">
         ([ "free":(\{ "dainty", "dirty", "gnarled", "large", "long", "manicured", "ordinary", "plump", "pudgy", "ragged", "rough", "slender", "smooth", "strong", "stubby", "stubby", "thin", "trim", "worn" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:height">
         ([ "free":(\{ "above-average", "average", "below-average", "diminutive", "medium", "short", "small", "tall", "huge", "large", "little", "miniscule", "towering", "enormous", "gargantuan", "giant", "puny", "tiny" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:jawshape">
         ([ "free":(\{ "blunt jaw", "cleft chin", "double chin", "lantern jaw", "long jaw", "ordinary*", "pointed chin", "receding chin", "rugged jaw", "short jaw", "square jaw" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:lipshape">
         ([ "free":(\{ "big", "curved", "full", "hair-lined", "ordinary", "pert", "pouting", "puckered", "rosebud", "sensual", "thick", "thin", "uneven", "wide" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:mouthshape">
         ([ "free":(\{ "cruel", "dour", "firm", "full", "hare-lipped", "heart-shaped", "large", "ordinary", "plump", "protruding", "puckered", "small", "thin", "tiny", "uneven", "wide" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:noseshape">
         ([ "free":(\{ "angular", "aquiline", "bent", "blunt", "bulbous", "button", "chiseled", "crooked", "fine", "flaring", "flat", "large", "long", "narrow", "ordinary", "pert", "prominent", "protruding", "pug", "sharp", "short", "small", "snub", "straight", "thin", "tiny", "wide" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:skin">
         ([ "free":(\{ "alabaster", "black", "bronze", "brown", "cadaverous", "chalky", "creamy", "dark", "doughy", "dusky", "ebony", "fair", "florid", "freckled", "light", "milk white", "nut-brown", "olive", "pale", "pasty", "pink", "rosy", "ruddy", "sallow", "sickly", "swarthy", "tanned", "waxy", "white", "yellow" \}) ])
      </Core:Property>
      <Core:Property property="choices:features:skintexture">
         ([ "free":(\{ "ordinary", "rough", "smooth", "wrinkled" \}) ])
      </Core:Property>
      <Core:Property property="html:choices">
         X[S] \<p\>
[height] in height and [build] in build, you are a \$(body.trait:sex) of [skin] complexion with a head of [hairlength] [hairtype] [haircolor] hair that is worn [hairstyle].
\</p\>
\<p\>
Your [eyeshape] [eyecolor] eyes are accentuated by [eyebrowshape] eyebrows beneath a [browshape] forehead. A [noseshape] nose, [mouthshape] mouth with [lipshape] lips, [earshape] ears, and [jawshape] \{? equal \| \$(body.base:gender) \| 1 \| covered in a [faciallength] [facialhair] \} complete the appearance.
\</p\>
\<sbr/\>\<sbr/\>
You have [hands] hands and [feet] \$(body.appearance:feettype).
\<sbr/\>\<sbr/\>
\{? equal \| \$(body.base:gender) \| 1 \|
  You also have [facialhair]. It is [faciallength].
\}
\<sbr/\>\<sbr/\>
[submit]
      </Core:Property>
      <Core:Property property="html:index">
         X[S] \\\<!-- This is where the user selects their height, build, and details for their fur or skin --\\\>
\\\<!-- find which autopage the player is at. get the choices for this page, as well as the page description --\\\>
\$[\$autoNumber = 1;       
  \$autoChoices = Get(this, "html:choices");      
  \$body = Obj(\$body);      
  if(!\$body) \$body = Obj(\$characterref);   
  \$dat = \$body."udat:object";]
\<h4\>Create Character: Appearance\</h4\>\<sbr/\>
\<p style="text-align: justify"\>
Time passes as your mind continues to wander, not paying attention all too much to the changing surroundings. You happen to catch a glimpse of yourself in a nearby \{ mirror \| stranger's shield \| metallic surface \} noting the familiar reflection that greets your meandering eye:\<sbr/\>\<sbr/\>
\<span id="choices"\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: \$autoChoices);]
  \<zform style="display:inline" actbody="\$(body)" actchoices="\$(choices)" actnumber="\$(autoNumber)"\>
  \<p style="text-align:justify"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \|
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$gender: \$body."base:genderstring");]
        \<select style="display:linline" ID="select_counter\$[Str(\$counter)]" NAME="counter\$[Str(\$counter)]" SIZE="1" onChange="update_span('counter\$[Str(\$counter)]');"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1" value="\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option value="ordinary"\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option value="\$(thisvar)"\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
      \|\}
    \</for\>
  \</p\>
    \<action\>
      \$[\$list = (\{ \});       
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)       
\{       
  if(sizeof(\$actchoices[\$i])\>=2)       
  \{       
    \$list += (\{ \$actchoices[\$i][1] \});       
  \}       
\}       
          
for(\$i = 0; \$i \< sizeof(\$list); \$i++) \{       
    Set(\$actbody, "appearance:" + \$list[\$i], lower_case(GetVar("counter" + Str(\$i+1))));       
\}       
 
    EmitIn(\$actbody."base:environment", Describe(\$actbody) + " is surrounded in a glowing white light before emerging as a human!"); 
    Set(\$actbody, "export:trait:examine", nil);            
    Set(\$actbody, "trait:examine", nil);   
    Set(\$actbody, "export:trait:look", nil);    
    Set(\$actbody, "trait:look", nil);   
    Set(\$actbody, "base:urparent", \$\{Allegory:Bodies:Mainbody\});    
    Set(\$actbody, "core:urparent", \$\{Allegory:Bodies:Mainbody\});    
    Set(\$actbody, "chargen:humanized", "1");]
      \<redirect propob="\$(this)" characterref="\$(actbody)" dat="\$(dat)" body="\$(body)"/\>
    \</action\>
\<script language="javascript"\>
    function body_onload() \\\{
        update_span('counter1');
        update_span('counter2');
        update_span('counter3');
        update_span('counter4');
        update_span('counter5');
        update_span('counter6');
        update_span('counter7');
        update_span('counter8');
        update_span('counter9');
        update_span('counter10');
        update_span('counter11');
        update_span('counter12');
        update_span('counter13');
        update_span('counter14');
        update_span('counter15');
        update_span('counter16');
        update_span('counter17');
        update_span('counter18');
        update_span('counter19');
        update_span('counter20');
    \\\}
\</script\>
  \</zform\>
\</span\>
\</p\>
      </Core:Property>
      <Core:Property property="merry:lib:grabchoices">
         X[M] /*  
Returns an array of start story choices, after being given a choice type, and possibly gender, animal type and animal breed  
*/  
  
if (!\$choice) return (\{\}); 
  
\$choicearray = (\{\}); 
 
\$accountType = general::getAccountType(\$udat: \$dat); 
if(\$dat."testing:account-type") \$accountType = \$dat."testing:account-type";  

\$choice = "features:" + \$choice;
if(Get(\$this, "choices:" + \$choice)) \{ 
    \$free = (\{ \}); 
    \$standard = (\{ \}); 
    \$premium = (\{ \}); 
 
    if(Get(\$this, "choices:" + \$choice)["free"]) \$free = Get(\$this, "choices:" + \$choice)["free"]; 
    if(Get(\$this, "choices:" + \$choice)["standard"]) \$standard = Get(\$this, "choices:" + \$choice)["standard"]; 
    if(Get(\$this, "choices:" + \$choice)["premium"]) \$premium = Get(\$this, "choices:" + \$choice)["premium"]; 
 
    \$choicearray = \$free; 
 
    if(\$accountType == "standard") \{ 
        \$choicearray \|= \$standard; 
    \} 
 
    if(\$accountType == "premium") \{ 
        \$choicearray \|= \$standard; 
        \$choicearray \|= \$premium; 
    \} 

    if(Get(\$this, "choices:" + \$choice)["only"]) \{
        \$choicearray \|= Get(\$this, "choices:" + \$choice)["only"];
    \}

    if(Get(\$this, "choices:" + \$choice)["all"]) \{
        \$choicearray \|= Get(\$this, "choices:" + \$choice)["all"];
    \}
 
    if(Get(\$this, "choices:" + \$choice)[\$body."base:genderstring"]) \{ 
        \$choicearray \|= Get(\$this, "choices:" + \$choice)[\$body."base:genderstring"]; 
    \} 
\} 
  
\$choicearray = map_indices( arr_to_set( \$choicearray ));  
  
return \$choicearray;
      </Core:Property>
      <Core:Property property="merry:lib:list-choices">
         X[M] /*  
This function will generate an array which has elements that contain a string, then the property for a character creation choice.  
an input of:  
You have a [noseshape] nose, and [haircolor] hair.  
would be returned as:  
(\{ (\{ "You have a", "noseshape" \}), (\{ "nose, and ", haircolor \}), (\{ "hair." \}) \})  
*/  
/*variables for this function*/  
string Head;  
string Tail;  
string Property;  
string *Properties_arr;  

Properties_arr = (\{\});  
if(!\$choices) return Properties_arr;  
\$choices = Str(UnSAM(\$choices));  
  
while(sscanf(\$choices, "%s[submit]%s", Head, Tail) == 2)  
\{  
  \$choices = Head+"\<input type=\\"submit\\" value=\\"SUBMIT\\" style='float:right' class=\\"submit-button\\"/\>"+Tail;  
\}  
  
while(sscanf(\$choices, "%s[%s]%s", Head, Property, Tail) == 3)  
\{  
  Head = "" + replace_strings(Head, "\\n", "\<sbr/\>"); 
  Properties_arr += (\{ (\{ ParseXML(Head), Property \}) \});  
  \$choices = Tail;  
\}  

Tail = replace_strings(Tail, "\\n", "\<sbr/\>") + ""; 
Properties_arr += (\{ (\{ ParseXML(Tail) \}) \});  
return Properties_arr;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1562956127, "jominey", "E", 1562956458, "jominey", "E", 1562958932, "jominey", "E", 1562959171, "jominey", "E", 1562959508, "jominey", "E", 1562959598, "jominey", "E", 1562960322, "jominey", "E", 1562961532, "jominey", "E", 1562961669, "jominey", "E", 1565391970, "jominey", "E", 1565392015, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
