<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:demote">
         X[M] /* grants a social rank increase to a character */
/* note that this in-game requires a promotion token (or other arrangement) */
error("Something triggered the old demote script! Trying to demote "+dump_value(\$char));

if(!\$char)
 return "Unknown character";

\$rank = \$char."rank:rank";
if(!\$rank) \$rank = 3;
if(\$rank \<= 1)
 return Describe(\$char)+" is at lowest PC rank already.";
\$rank--;
return ::set_rank();
      </Core:Property>
      <Core:Property property="merry:lib:get_rank_name">
         X[M] /* returns the rank name (and title) for a given ranking number */  
\$title = (\{ \});  
\$guildtitle = (\{ \});  
  
if(!\$rank) \$rank = 3;  
  
/*Check to see if the character is female or male*/  
if(\$char \&\& \$char."base:gender" == 2)\{  
switch(\$rank) \{  
  case 1:  
    \$rankname = "slave";  
    break;  
  case 2:  
    \$rankname = "serf";  
    break;  
  case 3:  
    \$rankname = "freedman";  
    break;  
  case 4:  
    \$rankname = "yeoman";  
    break;  
  case 5:  
    \$rankname = "burgher";  
    break;  
  case 6:  
    \$rankname = "thane";  
    break;  
  case 7:  
    \$title \|= (\{ "Esquire" \});  
    \$rankname = "gentry";  
    break;  
  case 8:  
    \$title \|= (\{ "Esquire" \});  
    \$rankname = "armigerous gentry";  
    break;  
  case 9:  
    \$title \|= (\{ "Dame" \});  
    \$rankname = "knight";  
    break;  
  case 10:  
    \$title \|= (\{ "Baronetess" \});  
    \$rankname = "baronetess";  
    break;  
  case 11:  
    \$title \|= (\{ "Baroness" \});  
    \$rankname = "baroness";  
    break;  
  case 12:  
    \$title \|= (\{ "Viscountess" \});  
    \$rankname = "viscountess";  
    break;  
  case 13:  
    \$title \|= (\{ "Countess" \});  
    \$rankname = "countess";  
    break;  
  case 14:  
    \$title \|= (\{ "Landgrave" \});  
    \$rankname = "landgrave";  
    break;  
  case 15:  
    \$title \|= (\{ "Margravine" \});  
    \$rankname = "margravine";  
    break;  
  case 16:  
    \$title \|= (\{ "Marchioness" \});  
    \$rankname = "marchioness";  
    break;  
  case 17:  
  default:  
    \$title \|= (\{ "Duchess" \});  
    \$rankname = "duchess";  
    break;  
\}  
if(\$rank \>= 9)  
 \$title \|= (\{ "Lady", "Dame" \});  
\} else \{  
switch(\$rank) \{  
  case 1:  
    \$rankname = "slave";  
    break;  
  case 2:  
    \$rankname = "serf";  
    break;  
  case 3:  
    \$rankname = "freedman";  
    break;  
  case 4:  
    \$rankname = "yeoman";  
    break;  
  case 5:  
    \$rankname = "burgher";  
    break;  
  case 6:  
    \$rankname = "thane";  
    break;  
  case 7:  
    \$title \|= (\{ "Esquire" \});  
    \$rankname = "gentry";  
    break;  
  case 8:  
    \$title \|= (\{ "Esquire" \});  
    \$rankname = "armigerous gentry";  
    break;  
  case 9:  
    \$title \|= (\{ "Sir" \});  
    \$rankname = "knight";  
    break;  
  case 10:  
    \$title \|= (\{ "Baronet" \});  
    \$rankname = "baronet";  
    break;  
  case 11:  
    \$title \|= (\{ "Baron" \});  
    \$rankname = "baron";  
    break;  
  case 12:  
    \$title \|= (\{ "Viscount" \});  
    \$rankname = "viscount";  
    break;  
  case 13:  
    \$title \|= (\{ "Count" \});  
    \$rankname = "count";  
    break;  
  case 14:  
    \$title \|= (\{ "Landgrave" \});  
    \$rankname = "landgrave";  
    break;  
  case 15:  
    \$title \|= (\{ "Margrave" \});  
    \$rankname = "margrave";  
    break;  
  case 16:  
    \$title \|= (\{ "Marquess" \});  
    \$rankname = "marquess";  
    break;  
  case 17:  
  default:  
    \$title \|= (\{ "Duke" \});  
    \$rankname = "duke";  
    break;  
\}  
if(\$rank \>= 9)  
 \$title \|= (\{ "Lord", "Sir" \});  
\}  
  
/* do we grant any guild titles? */  
if(!\$char \|\| !\$char.guild) return (\{ \$rankname, \$title, \$guildtitle \});  
  
\$guild_type = Arr(\$char.guild.type);  
  
if(member("constabulary", \$guild_type)) \{  
switch(\$rank) \{  
  case 3:  
    \$guildtitle \|= (\{ "Deputy" \});  
    break;  
  case 4:  
    \$guildtitle \|= (\{ "Guardsman" \});  
    break;  
  case 5:  
    \$guildtitle \|= (\{ "Sergeant" \});  
    break;  
  case 6:  
    \$guildtitle \|= (\{ "Detective" \});  
    break;  
  case 7:  
    \$guildtitle \|= (\{ "Aedile" \});  
    break;  
  case 8:  
    \$guildtitle \|= (\{ "Sheriff" \});  
    break;  
  case 9:  
    \$guildtitle \|= (\{ "Tribune" \});  
    break;  
  case 10:  
    \$guildtitle \|= (\{ "Sergeant-Major" \});  
    break;  
  case 11:  
    \$guildtitle \|= (\{ "Brigadier" \});  
    break;  
  case 12:  
    \$guildtitle \|= (\{ "Major" \});  
    break;  
  case 13:  
    \$guildtitle \|= (\{ "Marshal" \});  
    break;  
  case 14:  
    \$guildtitle \|= (\{ "Lieutenant General" \});  
    break;  
  case 15:  
    \$guildtitle \|= (\{ "Captain General" \});  
    break;  
  case 16:  
    \$guildtitle \|= (\{ "Field Marshal" \});  
    break;  
  case 17:  
    \$guildtitle \|= (\{ "High Constable" \});  
    break;  
\}  
\} else if(member("military", \$guild_type)) \{  
switch(\$rank) \{  
  case 4:  
    \$guildtitle \|= (\{ "Private" \});  
    break;  
  case 5:  
    \$guildtitle \|= (\{ "Lancepesade" \});  
    break;  
  case 6:  
    \$guildtitle \|= (\{ "Lance Corporal" \});  
    break;  
  case 7:  
    \$guildtitle \|= (\{ "Ensign" \});  
    break;  
  case 8:  
    \$guildtitle \|= (\{ "Lieutenant" \});  
    break;  
  case 9:  
    \$guildtitle \|= (\{ "Captain" \});  
    break;  
  case 10:  
    \$guildtitle \|= (\{ "Sergeant-Major" \});  
    break;  
  case 11:  
    \$guildtitle \|= (\{ "Brigadier" \});  
    break;  
  case 12:  
    \$guildtitle \|= (\{ "Major" \});  
    break;  
  case 13:  
    \$guildtitle \|= (\{ "Marshal" \});  
    break;  
  case 14:  
    \$guildtitle \|= (\{ "Lieutenant General" \});  
    break;  
  case 15:  
    \$guildtitle \|= (\{ "Captain General" \});  
    break;  
  case 16:  
    \$guildtitle \|= (\{ "Field Marshal" \});  
    break;  
  case 17:  
    \$guildtitle \|= (\{ "High Constable" \});  
    break;  
\}  
\}  
if(member("church", \$guild_type)) \{  
switch(\$rank) \{  
  case 4:  
    \$guildtitle \|= (\{ "Acolyte" \});  
    break;  
  case 5:  
    if(\$char."base:gender" == 1)\{  
     \$guildtitle \|= (\{ "Brother" \});  
    \} else \{  
     \$guildtitle \|= (\{ "Sister" \});  
    \}  
    break;  
  case 6:  
    \$guildtitle \|= (\{ "Pastor" \});  
    if(\$char."base:gender" == 1)\{  
     \$guildtitle \|= (\{ "Brother" \});  
    \} else \{  
     \$guildtitle \|= (\{ "Sister" \});  
    \}  
    break;  
  case 7:  
    \$guildtitle \|= (\{ "Deacon" \});  
    if(\$char."base:gender" == 1)\{  
     \$guildtitle \|= (\{ "Father" \});  
    \} else \{  
     \$guildtitle \|= (\{ "Mother" \});  
    \}  
    break;  
  case 8:  
    \$guildtitle \|= (\{ "Presbyter" \});  
    if(\$char."base:gender" == 1)\{  
     \$guildtitle \|= (\{ "Father" \});  
    \} else \{  
     \$guildtitle \|= (\{ "Mother" \});  
    \}  
    break;  
  case 9:  
    \$guildtitle \|= (\{ "Prelate" \});  
    break;  
  case 10:  
    \$guildtitle \|= (\{ "Bishop" \});  
    break;  
  case 11:  
    \$guildtitle \|= (\{ "Exarch" \});  
    break;  
  case 12:  
    \$guildtitle \|= (\{ "Vicar" \});  
    break;  
  case 13:  
    \$guildtitle \|= (\{ "Archbishop" \});  
    break;  
  case 14:  
    \$guildtitle \|= (\{ "Archbishop" \});  
    break;  
  case 15:  
    \$guildtitle \|= (\{ "Primate" \});  
    break;  
  case 16:  
    \$guildtitle \|= (\{ "Cardinal" \});  
    break;  
  case 17:  
    \$guildtitle \|= (\{ "Patriarch" \});  
    break;  
\}  
\}  
  
return (\{ \$rankname, \$title, \$guildtitle \});
      </Core:Property>
      <Core:Property property="merry:lib:promote">
         X[M] /* grants a social rank increase to a character */ 
/* note that this in-game requires a promotion token (or other arrangement) */ 
 
if(!\$char) 
 return "Unknown character"; 
 
\$rank = \$char."rank:rank"; 
if(!\$rank) \$rank = 3; 
if(\$rank \>= 17) 
  return Describe(\$char)+" is at max PC rank already."; 
\$rank++; 
return ::set_rank();
      </Core:Property>
      <Core:Property property="merry:lib:run_promotions">
         X[M] /* Check the favor for all the PCs, and give appropriate PCs a promotion or demotion */ 
object char; 
\$az = \$\{Chatters:AE:az:azrael\}; 
 
EmitTo(\$az, "Running promotions script"); 
 
EmitTo(\$az, "Checking all PCs"); 
 
\$folder = "Chatters:IC"; 
\$folders = Call(\$\{/usr/System/sys/idd\}, "idd:get-folders"); 
for(\$i=0;\$i\<sizeof(\$folders);\$i++) \{ 
  \$delay(0.00001, TRUE, "cf6f"); 
  \$folder = "Chatters:IC:"+\$folders[\$i]; 
  \$characters = Call(\$\{/usr/System/sys/idd\}, "idd:get-objects"); 
  for(\$j=0;\$j\<sizeof(\$characters);\$j++) \{ 
    char = Obj("Chatters:IC:"+\$folders[\$i]+":"+\$characters[\$j]); 
 
    if(char."trait:favor:warning") \{ 
 EmitTo(\$az, Describe(char)+" is in danger of loosing rank, as of "+Str(char."trait:favor:warning")+"."); 
\} 
 
 
    /* How recently were they online? */ 
    if(Int(char."cdat:lastlogin")+60*60*24*31 \> time()) \{ 
      if(!char."rank:rank") char."rank:rank" = 3; 
      if(char."trait:favor" \&\& char."trait:favor" \>= char."rank:rank"+7) \{ 
        /* They should be promoted */ 
        if(char."trait:favor:promotion") \{ 
          /* They are already waiting for a promotion */ 
          /* Remind them to get a sponsor */ 
          if(!char."trait:favor:lastpaged" \|\| char."trait:favor:lastpaged"+60*60*24*6 \> time()) \{ 
            general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: Str(char."skotos:playercapname")+" has friends in high places, that want to promote "+char."base:objective"+", however you need to find a sponsor first. Find someone ranked between "+::get_rank_name(\$rank: char."rank:rank"+1)[0]+" and "+::get_rank_name(\$rank: char."rank:rank"+3)[0]+" (inclusive) to sponsor you. To sponsor, they can type: @sponsor "+Str(char."skotos:playercapname"), \$timestamp: TRUE); 
            char."trait:favor:lastpaged" = time(); 
          \} 
        \} else if(Int(char."trait:favor:lastpromoted")+60*60*24*30*2 \> time()) \{ 
          /* They were promoted too recently to get another promotion so soon */ 
          /* Do nothing */ 
        \} else \{ 
          /* Give them the promotion */ 
          EmitTo(\$az, "Giving promotion to "+Str(char."skotos:playercapname")); 
          char."trait:favor:promotion" = (\{ time(), char."trait:favor" \}); 
          /* And reset their favor */ 
          char."trait:favor" = nil; 
          if(!char."trait:favor:lastpaged" \|\| char."trait:favor:lastpaged"+60*60*24*6 \> time()) \{ 
          EmitTo(\$az, "Sending page to "+Str(char."skotos:playercapname")); 
            general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: Str(char."skotos:playercapname")+" has been drawing positive attention, and if "+char."base:pronoun"+" can find a sponsor, "+char."base:pronoun"+" can be granted lands. Find someone ranked between "+::get_rank_name(\$rank: char."rank:rank"+1)[0]+" and "+::get_rank_name(\$rank: char."rank:rank"+3)[0]+" (inclusive) to sponsor you. To sponsor, they can type: @sponsor "+Str(char."skotos:playercapname"), \$timestamp: TRUE); 
            char."trait:favor:lastpaged" = time(); 
          \} 
        \} 
      \} else if(char."trait:favor" \&\& char."trait:favor" \<= -10 \&\& char."trait:favor:promotion") \{ 
        /* Too much disfavor, they loose their (unclaimed) promotion */ 
        char."trait:favor:promotion" = nil; 
        /* And reset their favor */ 
        char."trait:favor" = nil; 
        general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: "Due to recent events, "+Str(char."skotos:playercapname")+" has lost favor, and is no longer in line to be granted lands or promoted.", \$timestamp: TRUE); 
      \} else if(char."rank:rank" \> 3 \&\& char."trait:favor" \&\& char."trait:favor" \<= -10) \{ 
        /* They should be demoted, or warned about demotion */ 
        /* Have they been warned? */ 
        if(!char."trait:favor:demotionwarning") \{ 
          /* Warn them about possible demotion */ 
          general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: "Due to recent events, "+Str(char."skotos:playercapname")+" is at risk of demotion. "+Str(char."skotos:playercapname")+" has a month to try and turn things around by garnering favor, at which point "+char."base:pronoun"+" will no longer be at risk of demotion. After that month has passed, if "+Str(char."skotos:playercapname")+"'s favor drops too much further, "+char."base:pronoun"+" will be demoted.", \$timestamp: TRUE); 
          char."trait:favor:demotionwarning" = time(); 
        \} else if(char."trait:favor" \<= -20 \&\& char."trait:favor:demotionwarning"+60*60*24*30 \> time()) \{ 
          /* They've got too much disfavor, and the grace period is passed. Demote them */ 
          general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: "Due to an abundance of disfavor, "+Str(char."skotos:playercapname")+" has been demoted to the rank of "+::get_rank_name(\$rank: char."rank:rank"+-1)[0]+".", \$timestamp: TRUE); 
          ::demote(\$char: char); 
          char."trait:favor" = nil; 
          \$msg = "[DEMOTIONS] " +Str(char."skotos:playercapname")+ " has been demoted."; 
          \$data = \$\{Data:DB:assist:AssistGeneralDB\}; 
          assist::dofileassist(\$data: \$data, \$char: Str(char), \$queue: "new", \$assisttext: \$msg, \$log: "[TAS]"); 
        \} 
      \} else if(char."trait:favor" \&\& char."trait:favor" \>= 0 \&\& char."trait:favor:demotionwarning") \{ 
        /* Their demotion warning should be removed */ 
        char."trait:favor:demotionwarning" = nil; 
        general::opage(\$to: char, \$from: \$\{Chatters:IC:sa:sallumer\}, \$message: "Due to positive reports, "+Str(char."skotos:playercapname")+" is no longer be at risk of demotion.", \$timestamp: TRUE); 
      \} 
    \} 
  \} 
\} 
 
 
EmitTo(\$az, "Finished running promotions"); 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:set_rank">
         X[M] /* grants a social rank increase to a character */
/* note that this in-game requires a promotion token (or other arrangement) */

error("Something triggered the old set_rank script! Trying to set "+dump_value(\$char)+" as "+dump_value(\$rank));

if(!\$char)
 return "Unknown character";

if(!\$rank)
 return "Unknown rank";

\$char."rank:rank" = \$rank;

if(\$title) \{
  \$rankname = ::get_rank_name(\$rank: \$rank);
  \$base_titles = \$rankname[1];
  \$guildtitles = \$rankname[2];
  \$rankname = \$title;
  \$base_titles \|= Arr(\$title);
  \$title = \$base_titles;
\} else \{
  \$rankname = ::get_rank_name(\$rank: \$rank);
  \$title = \$rankname[1];
  \$guildtitles = \$rankname[2];
  \$rankname = \$rankname[0];
\}
\$char."rank:name" = \$rankname;

\$char."trait:titles:rank" = \$title;
\$char."trait:titles:guild" = \$guildtitles;

if(\$rankname == "slave") \{
 \$char."trait:slave" = 1;
 \$char."details:default:sname:slave" = 1;
 \$char."details:default:pname:slaves" = 1;
\} else if(\$rankname == "serf")\{
 \$char."trait:slave" = nil;
 \$char."details:default:sname:slave" = nil;
 \$char."details:default:pname:slaves" = nil;
\}

/* set income based on this rank */
switch(\$rank) \{
  case 1:
  case 2:
  case 3:
    \$char."trait:extraincome" = 0;
    break;
  case 4:
    \$char."trait:extraincome" = 400;
    break;
  case 5:
  case 6:
    \$char."trait:extraincome" = 800;
    break;
  case 7:
    \$char."trait:extraincome" = 1200;
    break;
  case 8:
  case 9:
    \$char."trait:extraincome" = 1600;
    break;
  case 10:
    \$char."trait:extraincome" = 2500;
    break;
  case 11:
    \$char."trait:extraincome" = 3500;
    break;
  case 12:
    \$char."trait:extraincome" = 4500;
    break;
  case 13:
    \$char."trait:extraincome" = 6000;
    break;
  case 14:
    \$char."trait:extraincome" = 7000;
    break;
  case 15:
    \$char."trait:extraincome" = 8000;
    break;
  case 16:
    \$char."trait:extraincome" = 9000;
    break;
  case 17:
    \$char."trait:extraincome" = 10000;
    break;
  default:
    \$char."trait:extraincome" = 0;
    break;
\}

return (\{ \$rankname, \$title \});

/*
slave
serf / peasant
yeoman
squire
reeve (sheriff)

gentry
gentry
armigerous gentry (gentry that are granted a coat of arms)

knightly (or low nobles)
(all these knights just count as a "knight" as far as promotions are concerned. Anyone of knightly rank can join an order if they want to become a knight of an order rather than a knight bachelor)
knight/dame banerett
knight bachelor
knight of an order

peers
baronet/baronetess
baron/baroness
viscount/viscountess
earl/count/countess
landgrave
margrave/margravine
marquess/marchioness
duke/duchess
*/
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052088, "-", "SYNC", 1221752477, "???", "R", 1238918501, "tonyd", "E", 1238919643, "tonyd", "E", 1238922374, "tonyd", "E", 1238922423, "tonyd", "E", 1238924347, "tonyd", "E", 1238924402, "tonyd", "E", 1238924480, "tonyd", "E", 1238926277, "tonyd", "E", 1238928163, "tonyd", "E", 1238929318, "tonyd", "E", 1238930574, "tonyd", "E", 1238931899, "tonyd", "E", 1238932061, "tonyd", "E", 1239832095, "tonyd", "P", 1239832114, "tonyd", "P", 1239832300, "tonyd", "P", 1239832322, "tonyd", "P", 1239832345, "tonyd", "P", 1239832427, "tonyd", "P", 1239832490, "tonyd", "P", 1239832655, "tonyd", "P", 1239832682, "tonyd", "P", 1239832836, "tonyd", "P", 1239832845, "tonyd", "P", 1239832858, "tonyd", "P", 1239832868, "tonyd", "P", 1239832888, "tonyd", "P", 1239833298, "tonyd", "P", 1239833414, "tonyd", "P", 1239833484, "tonyd", "P", 1239833544, "tonyd", "P", 1239833737, "tonyd", "P", 1239834100, "tonyd", "P", 1239836254, "tonyd", "P", 1239836262, "tonyd", "P", 1239836333, "tonyd", "P", 1239836600, "tonyd", "P", 1239838028, "tonyd", "P", 1239838143, "tonyd", "P", 1239838186, "tonyd", "P", 1239838261, "tonyd", "P", 1239838340, "tonyd", "P", 1239838449, "tonyd", "P", 1239838480, "tonyd", "P", 1239838521, "tonyd", "P", 1239838547, "tonyd", "P", 1321776415, "tonyd", "P", 1321776449, "tonyd", "P", 1321776938, "tonyd", "P", 1321776962, "tonyd", "P", 1321776989, "tonyd", "P", 1321777016, "tonyd", "P", 1321777106, "tonyd", "P", 1321777132, "tonyd", "P", 1321777146, "tonyd", "P", 1321777246, "tonyd", "P", 1321777248, "tonyd", "P", 1321777273, "tonyd", "P", 1321777368, "tonyd", "P", 1321777451, "tonyd", "P", 1321777800, "tonyd", "P", 1321777843, "tonyd", "P", 1321778226, "tonyd", "P", 1321778239, "tonyd", "P", 1321778252, "tonyd", "P", 1321778447, "tonyd", "P", 1321779650, "tonyd", "P", 1321779680, "tonyd", "P", 1321779694, "tonyd", "P", 1321779864, "tonyd", "P", 1321780305, "tonyd", "P", 1321780355, "tonyd", "P", 1321780408, "tonyd", "P", 1321780585, "tonyd", "P", 1321780757, "tonyd", "P", 1321780778, "tonyd", "P", 1321780812, "tonyd", "P", 1321780877, "tonyd", "P", 1321780924, "tonyd", "P", 1321781004, "tonyd", "P", 1321781034, "tonyd", "P", 1321781040, "tonyd", "P", 1321781150, "tonyd", "P", 1321781219, "tonyd", "P", 1321781293, "tonyd", "P", 1321834241, "tonyd", "P", 1321834343, "tonyd", "P", 1321834563, "tonyd", "P", 1321835463, "tonyd", "P", 1321835537, "tonyd", "P", 1321835546, "tonyd", "P", 1321835622, "tonyd", "P", 1321836428, "tonyd", "P", 1321836869, "tonyd", "P", 1321837133, "tonyd", "P", 1321837152, "tonyd", "P", 1321837192, "tonyd", "P", 1321837222, "tonyd", "P", 1321837512, "tonyd", "P", 1321837676, "tonyd", "P", 1321837755, "tonyd", "P", 1321837776, "tonyd", "P", 1321837912, "tonyd", "P", 1321838065, "tonyd", "P", 1321838223, "tonyd", "P", 1321838277, "tonyd", "P", 1321838318, "tonyd", "P", 1321838704, "tonyd", "P", 1321838714, "tonyd", "P", 1321839053, "tonyd", "P", 1340669635, "rorschakovacs", "X", 1341088729, "rastalabor", "X", 1442990356, "tonyd", "P", 1442990377, "tonyd", "P", 1460190867, "tonyd", "P", 1460190894, "tonyd", "P", 1579713747, "jominey", "R", 1699886834, "annemairi", "E", 1699886932, "annemairi", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
