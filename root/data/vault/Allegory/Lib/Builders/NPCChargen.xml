<object clone="/obj/properties" owner="jominey">
  <Core:PropertyContainer>
    <Ur:UrObject urobject="OBJ(Ironclaw:Lib:Staff:Tools:UrStaffManagementPage)"/>
    <Core:PCProperties>
      <Core:Property property="html:complete">
         X[S] \<zform actor="\$(actor)" udat="\$(udat)" npc="\$(npc)"\>
You have finished creating \<b\>\$(npc)\</b\>. You will still need to dress it and add trading lists. The combat code is not set up so stick to just making merchants and roaming npcs for now.
\</zform\>
      </Core:Property>
      <Core:Property property="html:description">
         X[S] \<zform actor="\$(actor)" udat="\$(udat)" npc="\$(npc)"\>
\<table width="700px"\>
    \<tr\>\<td colspan="2"\>\<i\>Separate options with a comma. One will be chosen at random upon spawning.\<br/\>\</i\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You are a \<b\>[HEIGHT] [BUILD]\</b\> person.\</td\>\</tr\>
    \<tr\>\<td width="140px"\>\<b\>Height:\</b\>\</td\>\<td\>\<input type="text" name="height" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Build:\</b\>\</td\>\<td\>\<input type="text" name="build" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have a \<b\>[COMPLEXION] \</b\> complexion.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Complexion:\</b\>\</td\>\<td\>\<input type="text" name="skin" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[HAIR LENGTH] [HAIR TEXTURE] [HAIR COLOR]\</b\> hair, in \<b\>[HAIR STYLE]\</b\>.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Hair Length:\</b\>\</td\>\<td\>\<input type="text" name="hairlength" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Hair Texture:\</b\>\</td\>\<td\>\<input type="text" name="hairtype" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Hair Color:\</b\>\</td\>\<td\>\<input type="text" name="haircolor" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Hair Style:\</b\>\</td\>\<td\>\<input type="text" name="hairstyle" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[EYE SHAPE] [EYE COLOR]\</b\> eyes, a \<b\>[NOSE SHAPE]\</b\> nose, a \<b\>[MOUTH SHAPE]\</b\> with \<b\>[LIP SHAPE]\</b\> lips, [CHEEK SHAPE] cheeks, and a [JAW]\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Eye Shape:\</b\>\</td\>\<td\>\<input type="text" name="eyeshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Eye Color:\</b\>\</td\>\<td\>\<input type="text" name="eyecolor" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Nose Shape:\</b\>\</td\>\<td\>\<input type="text" name="noseshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Mouth Shape:\</b\>\</td\>\<td\>\<input type="text" name="mouthshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Lip Shape:\</b\>\</td\>\<td\>\<input type="text" name="lipshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Cheek Shape:\</b\>\</td\>\<td\>\<input type="text" name="cheekshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Jaw:\</b\>\</td\>\<td\>\<input type="text" name="jawshape" size="60"/\>(include chin/jaw descriptor)\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[NAIL LENGTH] [NAIL APPEARANCE]\</b\> fingernails at the end of \<b\>[HANDS]\</b\> hands, and \<b\>[FEET]\</b\> feet.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Nail Length:\</b\>\</td\>\<td\>\<input type="text" name="clawlength" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Nail Appearance:\</b\>\</td\>\<td\>\<input type="text" name="nailapp" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Hands:\</b\>\</td\>\<td\>\<input type="text" name="hands" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Feet:\</b\>\</td\>\<td\>\<input type="text" name="feet" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[EAR SHAPE]\</b\> ears.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Ear Shape:\</b\>\</td\>\<td\>\<input type="text" name="earshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[FOREHEAD SHAPE]\</b\> forehead.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Forehead Shape:\</b\>\</td\>\<td\>\<input type="text" name="browshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[EYEBROW SHAPE]\</b\> eyebrows.\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Eyebrow Shape:\</b\>\</td\>\<td\>\<input type="text" name="eyebrowshape" size="60"/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>You have \<b\>[FACIAL HAIR]\</b\>. It is \<b\>[FACIAL HAIR LENGTH]\</b\>.*\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Facial Hair:\</b\>\</td\>\<td\>\<input type="text" name="facialhair" size="60"/\>*\</td\>\</tr\>
    \<tr\>\<td\>\<b\>Facial Hair Length:\</b\>\</td\>\<td\>\<input type="text" name="faciallength" size="60"/\>*\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
    \<tr\>\<td colspan="2"\>\<input style="float:right" type="submit" value="Continue"/\>\</td\>\</tr\>
\</table\>
\<action\>
    \$["";           
      \$appearance = (\{ "height", "build", "skin", "hairlength", "haircolor", "hairtype", "hairstyle", "eyeshape", "eyecolor", "noseshape", "mouthshape", "lipshape", "naillength", "nailapp", "hands", "feet", "earshape", "eyebrowshape", "browshape", "cheekshape", "jawshape", "facialhair", "faciallength" \});           
           
      \$npc = Obj(\$npc);           
            
      for(\$i = 0; \$i \< sizeof(\$appearance); \$i++) \{           
          \$temp = GetVar(\$appearance[\$i]);           
          if(\$temp \&\& \$temp != "") \{           
              \$temp = replace_strings(\$temp, ", ", ",", " , ", ",", " ,", ",");           
              \$temp2 = explode(\$temp, ",");          
              if(sizeof(\$temp2) \> 1) \{        
                  Set(\$npc, "export:randomize:appearance:" + \$appearance[\$i], \$temp2);          
              \} else \{       
                  Set(\$npc, "export:appearance:" + \$appearance[\$i], \$temp2[0]);       
              \}        
          \}           
      \}           
           
      \$npc.stage = "complete";]
    \<redirect propob="\$(this)" npc="\$(npc)" actor="\$(actor)"/\>
\</action\>
\</zform\>
      </Core:Property>
      <Core:Property property="html:index">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)" host="\$(UDat.Host)" actor="\$(actor)"\>
    \$[/* run some initial code */        
        ::popup_initialize();        
        return nil;]
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
  \<title\>AE Staff Portal\</title\>
\</head\>
\<body\>
\<h2\>NPC Creation\</h2\>
\{? \| \$(npc) \| \$[Get(\$this, "html:" + Str(Obj(\$npc).stage))] \| \$(this.html:no_body) \}
\</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="html:no_body">
         X[S] \{? \| \$(name_taken) \| \<font color="red"\>Sorry, that object already exists. Please choose a different name.\</font\>\<br/\> \}
\{? \| \$(name_empty) \| \<font color="red"\>You must enter a name for your npc.\</font\>\<br/\> \}
\{? \| \$(empty_subtype) \| \<font color="red"\>You must select at least one animal subtype.\</font\>\<br/\> \}
\{? \| \$(creature_error) \| \<font color="red"\>Sorry, creature selections are not yet supported.\</font\>\<br/\> \}
\<zform actor="\$(actor)" udat="\$(udat)"\>
\<table\>
\<tr\>\<td colspan="2"\>\<i\>Please only use this tool for creating non-player characters. Use chargen for VPs or other characters that will be possessed by staff.\</i\>\<br/\>\</td\>\</tr\>
\<tr\>\<td\>\<b\>Name:\</b\>\</td\>\<td\>Allegory:NPCs:\<input type="text" name="name"/\>\</td\>\</tr\>
\<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
\<tr\>\<td\>\<b\>Brief:\</b\>\</td\>\<td\>\<input type="text" name="brief"/\> (\<i\>toll guard, a blacksmith, Mary Beth, etc\</i\>)\</td\>\</tr\>
\<tr\>\<td\>\</td\>\<td\>\<input type="checkbox" name="definite" checked="1"\>Definite\</input\> (\<i\>Uncheck this box to add 'a' or 'an' at the front of the brief\</i\>)\</td\>\</tr\>
\<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
\<tr\>\<td\>\<b\>Gender:\</b\>\</td\>\<td\>\<input type="radio" name="gender" value="male" checked="1"\> Male \</input\>\<input type="radio" name="gender" value="female"\> Female\</input\>\<input type="radio" name="gender" value="none"\> None\</input\>\<input type="radio" name="gender" value="random"\> Random\</input\>\</td\>\</tr\>
\<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
\<tr\>\<td valign="top"\>\<b\>Note:\</b\>\</td\>\<td\>\<textarea name="notes" rows="4" cols="50"/\>\</td\>\</tr\>
\<tr\>\<td colspan="2"\>\<br/\>\</td\>\</tr\>
\<tr\>\<td colspan="2"\>\<input style="float:right" type="submit" value="Continue"/\>\</td\>\</tr\>
\</table\>
\<action\>
    \$["";             
        /* Make sure object name is valid */             
        if(!\$name \|\| \$name == "") \{           
            \$error = 1;           
            \$name_empty = 1;           
            return FALSE;           
        \}           
        
        \$obname = "Allegory:NPCs:" + \$name;          
        if(Obj(\$obname)) \{             
            \$error = 1;             
            \$name_taken = 1;             
            return FALSE;             
        \}             
 
        \$npc = Spawn(\$\{Allegory:NPCs:UrNPC\});        
        
        /* Set the objectname */        
        \$npc."base:objectname" = Str(\$obname);             
        \$npc."core:objectname" = Str(\$obname);             
        if(\$definite) \$npc."details:default:definite:local" = TRUE;        
        \$npc."export:trait:brief" = Str(\$brief);            
          
        /* Now lets set the gender */             
        if(\$gender == "none") \$npc."base:gender" = 0;             
        if(\$gender == "male") \$npc."base:gender" = 1;             
        if(\$gender == "female") \$npc."base:gender" = 2;             
        if(\$gender == "random") \$npc."export:randomize:gender" = (\{ "female", "male" \});             
      
        if(\$(addons-fighter)) \{      
            \$npc."export:addon:fighter" = TRUE;    
        \}      
             
        if(\$(addons-trader)) \{             
            \$npc."export:addon:trader" = TRUE;         
        \}             
             
        if(\$(addons-mover)) \{             
            \$npc."export:addon:mover" = TRUE;    
        \}             
             
        if(\$(addons-quest-giver)) \{             
            \$npc."export:addon:quest-giver" = TRUE;         
        \}             
             
        if(\$(addons-courier)) \{             
            \$npc."export:addon:courier" = TRUE;            
        \}        
             
        /* Add the note */             
        if(\$notes) \{             
            \$npc.about = \$notes;        
        \}         
         
        \$npc.stage = "description";]
     \{? \| \$(error) \| \<redirect propob="\$(this)" empty_subtype="\$(empty_subtype)" name_empty="\$(name_empty)" name_taken="\$(name_taken)" creature_error="\$(creature_error)" actor="\$(actor)"/\> \| \<redirect propob="\$(this)" npc="\$(npc)" actor="\$(actor)"/\> \}
\</action\>
\</zform\>
      </Core:Property>
      <Core:Property property="merry:lib:start">
         X[M] if(\$npc."base:urparent" == \$\{Allegory:NPCs:UrNPC\}) return TRUE;

\$npc."export:trait:brief" = \$npc."trait:brief";
Set(\$npc, "details:default:sname:npc", TRUE);
Set(\$npc, "details:default:pname:npcs", TRUE);

\$brief = explode(\$npc."trait:brief", " ");
for(\$i = 0; \$i \< sizeof(\$brief); \$i++) \{
    if(\$i \< (sizeof(\$brief) - 1)) \{
        Set(\$npc, "details:default:adjective:" + \$brief[\$i], TRUE);
    \} else \{
        Set(\$npc, "details:default:sname:" + \$brief[\$i], TRUE);
        Set(\$npc, "details:default:pname:" + \$brief[\$i] + "s", TRUE);
    \}
\}

/* Set all appropriate traits */
\$traits = (\{ "height", "build", "skin", "hairlength", "haircolor", "hairtype", "hairstyle", "eyeshape", "eyecolor", "noseshape", "mouthshape", "lipshape", "naillength", "nailapp", "hands", "feet", "earshape", "eyebrowshape", "browshape", "cheekshape", "jawshape", "facialhair", "faciallength" \});

for(\$i = 0; \$i \< sizeof(\$traits); \$i++) \{
    \$temp = \$traits[\$i];

    if(Get(\$npc, "randomize:appearance:" + \$temp)) \{
        \$options = Get(\$npc, "randomize:appearance:" + \$temp);
        \$num = sizeof(\$options);
        \$trait = \$options[random(\$num)];
        Set(\$npc, "appearance:" + \$temp, \$trait);
    \}
\}

/* Load the addons */

        /* Finally, let's add the selected NIP packages */         
        if(\$npc."addon:mover" \|\| \$npc."addon:courier" \|\| \$npc."addon:quest-giver") \{         
            Call(\$\{MOVED:20080918-114107:Lib:NIP:basefuns\}, "set", \$args: (\{ Str(\$npc) \}));         
            \$npc.add = "resource-control";         
        \}    

        if(\$npc."addon:directimport") \{
            Set(\$npc, "merry:inherit:lib:find_match", \$\{Ironclaw:Lib:NPC:DirectImportMerchant\});
            Set(\$npc, "merry:inherit:react-post:evoke-dob%directimport", \$\{Ironclaw:Lib:NPC:DirectImportMerchant\});
            Set(\$npc, "merry:inherit:react-post:evoke-iob%directimport", \$\{Ironclaw:Lib:NPC:DirectImportMerchant\});
            Set(\$npc, "merry:inherit:react-pre:offer-who%directimport", \$\{Ironclaw:Lib:NPC:DirectImportMerchant\});
            Set(\$npc, "merry:inherit:react-pre:ask-dob%directimport", \$\{Ironclaw:Lib:NPC:DirectImportMerchant\});
        \}     
  
        if(\$npc."addon:fighter") \{  
            \$npc."export.combat:fightable" = 1;  
        \} else \{  
            \$npc."export:combat:fightable" = 0;  
        \}  
         
        if(\$npc."addon:trader") \{         
            \$npc."export:nip:trait:trading:object" = \$\{Ironclaw:Data:Trading:Money\};         
            Set(\$npc, "merry:inherit:react:ask-dob%trading", \$\{Allegory:Lib:Economy:TradingLib\});         
            Set(\$npc, "merry:inherit:react:offer-who%trading", \$\{Allegory:Lib:Economy:TradingLib\});         
        \}         
         
        if(\$npc."addon:mover") \{         
            \$npc.add = "movement";         
            \$npc."export:nip:trait:movement:frequency" = 0; /* Does not move by default */         
        \}         
         
        if(\$npc."addon:quest-giver") \{         
            \$npc.add = "Shared:Systems:Quest:NIP:lib:quest-giver";         
        \}         
         
        if(\$npc."addon:courier") \{         
            \$npc.add = "offers";         
            \$npc.add = "delivery";         
            \$npc."export:nip:trait:delivery:database" = \$\{Data:NIP:couriers:database\};         
        \}    

/* Set the gender */
if(\$npc."randomize:gender") \{
    \$options = \$npc."randomize:gender";
    \$num = sizeof(\$options);
    \$gender = \$options[random(\$num)];

    if(\$gender == "male") \$npc."base:gender" = 1;
    if(\$gender == "female") \$npc."base:gender" = 2;
\}

/* Spawn initial contents */

Set(\$npc, "details:default:adjective:" + \$npc."appearance:height", TRUE);
Set(\$npc, "details:default:adjective:" + \$npc."appearance:build", TRUE);

EmitIn(\$npc."base:environment", TAG(Describe(\$npc) + " arrives.", "imp"));
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1565835829, "jominey", "E", 1565836065, "jominey", "E", 1565836539, "jominey", "E", 1565836881, "jominey", "E", 1565836961, "jominey", "E", 1565837065, "jominey", "E", 1565837075, "jominey", "E", 1565837309, "jominey", "E", 1565837364, "jominey", "E", 1565837537, "jominey", "E", 1565837813, "jominey", "E", 1565837853, "jominey", "E", 1565837937, "jominey", "E", 1565838965, "jominey", "E", 1565838995, "jominey", "E", 1565839500, "jominey", "E", 1565839561, "jominey", "E", 1570132314, "sendnoodlez", "E", 1570132339, "sendnoodlez", "E", 1570132357, "sendnoodlez", "E", 1570132469, "sendnoodlez", "E", 1570132977, "sendnoodlez", "E", 1570133044, "sendnoodlez", "E", 1570133505, "sendnoodlez", "E", 1570133682, "sendnoodlez", "E", 1570133803, "sendnoodlez", "E", 1570133999, "sendnoodlez", "E", 1570134113, "sendnoodlez", "E", 1570134135, "sendnoodlez", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
