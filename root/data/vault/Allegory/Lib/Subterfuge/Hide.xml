<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:act-pre:approach">
         X[M] Call(\$\{Allegory:Lib:Subterfuge:Hide\}, "hide_toggle");

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-pre:enter">
         X[M] Call(\$\{Allegory:Lib:Subterfuge:Hide\}, "hide_toggle");

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:hide_toggle">
         X[M] if(!\$actor."base:integration" \|\| \$actor."base:integration" != "shadow") \{
    \$details = (\{ \});
    \$detailsTemp = \$actor."base:details" \| \$actor."base:details:local";
    for(\$i = 0; \$i \< sizeof(\$detailsTemp); \$i++) \{
        if(Int(Get(\$actor, "details:" + \$detailsTemp[\$i] + ":hidden")) == 0) \{
            \$details \|= (\{ \$detailsTemp[\$i] \});
        \}
    \} 
    \$actor."trait:hidden:details" = \$details;
    \$hidden = TRUE;
    \$lib = \$this;
    \$id = "shadow";
    \$emit = "You are now hiding";
\} else \{
    \$details = \$actor."trait:hidden:details";
    \$hidden = FALSE;
    \$lib = nil;
    \$shadow = nil;
    \$emit = "You are no longer hiding";
\}

Set(\$actor, "base:integration", \$id);
Set(\$actor, "merry:inherit:act-pre:approach", \$lib);
Set(\$actor, "merry:inherit:act-pre:enter", \$lib);

for(\$i = 0; \$i \< sizeof(\$details); \$i++) \{
    Set(\$actor, "details:" + \$details[\$i] + ":hidden", \$hidden);
\}

EmitTo(\$actor, TAG(\$emit, "social:first"));

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1595988572, "jominey", "E", 1595988623, "jominey", "E", 1595988634, "jominey", "E", 1595988673, "jominey", "E", 1595988685, "jominey", "E", 1595988748, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
