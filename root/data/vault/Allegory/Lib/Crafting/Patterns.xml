<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:study">
         X[M] \$study = Describe(\$this, nil, \$actor);
\$study_env = Describe(\$this, \$actor);

\$actor."busy:action" = "studying " + \$study;
\$actor."busy:id" = Str(time());

EmitTo(\$actor, "You begin to study " + \$study + ".");
EmitIn(\$actor."base:environment", Describe(\$actor) + " begins to study " + \$study_env + ".", \$actor);

if(!\$actor."crafting:override") \{
    \$delay(12, FALSE, "a7f1");

    for(\$i = 0; \$i \< 5; \$i++) \{
        if(!\$actor."busy:action") return FALSE;
        if(\$this."base:environment" != \$actor) \{
            EmitTo(\$actor, "You are not longer studying " + \$study + " because it is not in your possession.");
            return FALSE;
        \} else \{
            EmitTo(\$actor, "You continue to study " + \$study + ".");
            EmitIn(\$actor."base:environment", Describe(\$actor) + " continues to study " + \$study_env + ".", \$actor);
        \}

        \$delay(60*6, FALSE, "65c2");
    \}

\$delay(5, FALSE, "80fb");
\}

if(!\$actor."busy:action") return FALSE;

EmitTo(\$actor, "You finish studying " + \$study + ".");

/* Deduct points */
\$cost = \$par["cost"];
\$actor."student:learningpoints" -= \$cost;

/* Learn the pattern */
\$detail = \$par["detail"];
\$pattern = Get(\$this, "pattern:" + \$detail);

\$ob = \$pattern[0];
\$prop = \$pattern[1];
\$item = \$pattern[2];

\$allPatterns = ([ ]);
if(\$actor."crafting:patterns") \{
    \$allPatterns = \$actor."crafting:patterns";
\}

\$category = explode(\$prop, ":")[2];

if(!\$allPatterns[\$category]) \{
    \$allPatterns[\$category] = (\{ \$item \});
\} else \{
    \$allPatterns[\$category] \|= (\{ \$item \});
\}

if(\$this."pattern:extra") \{
    \$extra = \$this."pattern:extra";

    for(\$i = 0; \$i \< sizeof(\$extra); \$i++) \{
        \$ob = \$extra[\$i][0];
        \$prop = \$extra[\$i][1];
        \$item = \$extra[\$i][2];

        \$category = explode(\$prop, ":")[2];

        if(!\$allPatterns[\$category]) \{
            \$allPatterns[\$category] = (\{ \$item \});
        \} else \{ 
            \$allPatterns[\$category] \|= (\{ \$item \});
        \}
    \}
\}

\$actor."crafting:patterns" = \$allPatterns;

\$actor."busy:action" = nil;
\$actor."busy:id" = nil;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:study_pre">
         X[M] mapping cProperties;
/* Holding? */
if(\$this."base:environment" != \$actor) \{
    EmitTo(\$actor, "You need to be holding " + Describe(\$this) + ".");
    return FALSE;
\}

/* Busy? */
if(\$actor."busy:action") \{
    EmitTo(\$actor, "You are too busy " + Str(\$actor."busy:action") + " to study " + Describe(\$this, nil, \$actor) + ".");
    return FALSE;
\}

/* Studyable detail? */
\$detail = NRefDetail(\$target);
if(!Get(\$this, "pattern:" + \$detail)) \{
    EmitTo(\$actor, "You cannot study " + Describe(\$target) + ".");
    return FALSE;
\}

\$info = Get(\$this, "pattern:" + \$detail);
\$career = explode(\$info[1], ":")[3];
\$level = Int(explode(\$info[1], ":")[4]);

cProperties = ([ "blacksmith":"skill:alteration:metalworking", "bookbinder":"skill:alteration:bookbinding", "carpenter":"skill:alteration:woodcarving", "dyer":"skill:alteration:dyeing", "jeweler":"skill:alteration:jewelcrafting", "miner":"skill:alteration:mining", "seamstress":"skill:alteration:tailoring", "stonemason":"skill:alteration:stonemasonry", "weaver":"skill:alteration:weaving", "woodcutter":"skill:alteration:woodcutting", "cooking":"skill:general:cooking" ]);


/* Enough LPs? */
if(\$this."pattern:cost") \{
    \$cost = Int(\$this."pattern:cost");
\} else if(Get(\$this, "pattern:" + \$detail + ":cost")) \{
    \$cost = Int(Get(\$this, "pattern:" + \$detail + ":cost"));
\} else \{
    \$cost = 5*\$level;
    if(\$cost \> 50) \$cost = 50;
\}

/* Skilled enough? */ 
/*if(Int(Get(\$actor, "skill:career:" + \$career)) \< Int(\$level)) \{*/
if(Int(Get(\$actor, cProperties[\$career])) \< Int(\$level)) \{ 
    EmitTo(\$actor, "You are not skilled enough to study " + Describe(\$this, nil, \$actor) + ". You must be a level " + Str(\$level) + " " + Str(\$career) + ".");
    return FALSE;
\}

/* Already know it? */
\$pattern = Get(\$this, "pattern:" + \$detail);

\$ob = \$pattern[0];
\$prop = \$pattern[1];

\$allPatterns = ([ ]);
if(\$actor."crafting:patterns") \{
    \$allPatterns = \$actor."crafting:patterns";
\}

\$category = explode(\$prop, ":")[2];

if(\$allPatterns[\$category]) \{
    if(member(\$pattern[2], \$allPatterns[\$category])) \{
        EmitTo(\$actor, "You already know how to make " + Describe(\$this, nil, nil, STYLE_NONPOSS) + ".");
        return FALSE;
    \}
\}


if(Int(\$actor."student:learningpoints") \< \$cost) \{
    EmitTo(\$actor, "You do not have enough learning points to study " + Describe(\$this, nil, \$actor) + ".");
    return FALSE;
\}

interaction::question(\$actor: \$actor, \$question: "Studying " + Describe(\$target, nil, \$actor) + " will cost you " + Str(\$cost) + " learning points. Do you want to continue?", \$yes_ob: \$this, \$yes_fun: "study", \$no: "You decide to not study " + Describe(\$target, nil, \$actor) + ".", \$expire: "You decide to not study " + Describe(\$target, nil, \$actor) + ".", \$par: ([ "cost":\$cost, "detail":\$detail ]));

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1596931985, "jominey", "E", 1596932275, "jominey", "E", 1597190941, "jominey", "E", 1597191015, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
