<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="crafting:directory">
         "Allegory:Lib:Crafting"
      </Core:Property>
      <Core:Property property="html:additem">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>Add New Item\</title\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
\<style type="text/css"\>
\</style\>
  \<script language="JavaScript"\>
      var ids=new Array();
      ids[0] = "newobject";
      ids[1] = "modobject";
      function switchid(id) \\\{
          hideallids();
          showdiv(id);
      \\\}
      function hideallids() \\\{
          var i, length;
          length = ids.length;
          for(i = 0; i \\\< length; i++) \\\{
              hidediv(ids[i]);
          \\\}
      \\\}
      function hidediv(id) \\\{
          if (document.getElementById) \\\{
              document.getElementById(id).style.display = 'none';
          \\\} else \\\{
              if (document.layers) \\\{
                  document.id.display = 'none';
              \\\} else \\\{
                  document.all.id.style.display = 'none';
              \\\}
         \\\}
     \\\}
     function showdiv(id) \\\{
         if (document.getElementById) \\\{
             document.getElementById(id).style.display = 'block';
         \\\} else \\\{
             if (document.layers) \\\{
                 document.id.display = 'block';
             \\\} else \\\{
                 document.all.id.style.display = 'block';
             \\\}
        \\\}
    \\\}
\</script\>
\</head\>
    \<body\>
        \$(this.xtra:header)
        \<div id="main"\>
            \<div id="textareafull"\>
                \<zform\>
                    \<table\>
                        \<tr\>
                            \<td\>
                                \<b\>Name:\</b\>
                            \</td\>
                            \<td colspan="3"\>
                                \<input type="text" name="name"/\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td\>
                                \<b\>Database:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="database"\>
                                    \<option value="none"\>--------\</option\>
                                    \<option value="IronClaw:Lib:UrPeople:New:FacialHairDB"\>IronClaw:Lib:UrPeople:New:FacialHairDB\</option\>
                                \</select\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td\>
                                \<b\>Skill:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="career"\>
                                    \<option value="none"\>--------\</option\>
                                    \<option value="hairdresser"\>Hairdresser\</option\>
                                \</select\>
                                \<select name="level"\>
                                    \<option value="1"\>1\</option\>
                                    \<option value="2"\>2\</option\>
                                    \<option value="3"\>3\</option\>
                                    \<option value="4"\>4\</option\>
                                    \<option value="5"\>5\</option\>
                                    \<option value="6"\>6\</option\>
                                    \<option value="7"\>7\</option\>
                                    \<option value="8"\>8\</option\>
                                    \<option value="9"\>9\</option\>
                                    \<option value="10"\>10\</option\>
                                    \<option value="11"\>11\</option\>
                                    \<option value="12"\>12\</option\>
                                    \<option value="13"\>13\</option\>
                                    \<option value="14"\>14\</option\>
                                    \<option value="15"\>15\</option\>
                                    \<option value="16"\>16\</option\>
                                    \<option value="17"\>17\</option\>
                                    \<option value="18"\>18\</option\>
                                    \<option value="19"\>19\</option\>
                                    \<option value="20"\>20\</option\>
                                    \<option value="21"\>21\</option\>
                                    \<option value="22"\>22\</option\>
                                    \<option value="23"\>23\</option\>
                                    \<option value="24"\>24\</option\>
                                \</select\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td\>
                                \<b\>Command:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="command"\>
                                    \<option value="none"\>--------\</option\>
                                    \<option value="forging"\>forge\</option\>
                                    \<option value="carving"\>carve\</option\>
                                    \<option value="tailoring"\>tailor\</option\>
                                    \<option value="cutting"\>cut\</option\>
                                    \<option value="shaping"\>shape\</option\>
                                    \<option value="styling"\>style\</option\>
                                    \<option value="texturizing"\>texturizing\</option\>
                                \</select\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td\>
                                \<b\>Resource:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="resource"\>
                                    \<option value="none"\>----\</option\>
                                    \<option value="none"\>--Chatter--\</option\>
                                        \<option value="hair"\>hair\</option\>
                                        \<option value="fur"\>fur\</option\>
                                        \<option value="tail"\>tail\</option\>
                                        \<option value="facialhair"\>facialhair\</option\>
                                    \<option value="none"\>--Cloth--\</option\>
                                        \<option value="cloth"\>cloth\</option\>
                                        \<option value="bolt"\>bolt\</option\>
                                        \<option value="roll"\>roll\</option\>
                                        \<option value="velvet"\>velvet\</option\>
                                        \<option value="suede"\>suede\</option\>
                                        \<option value="mask"\>mask\</option\>
                                        \<option value="doll"\>doll\</option\>
                                        \<option value="shirt"\>shirt\</option\>
                                        \<option value="dress"\>dress\</option\>
                                        \<option value="pants"\>pants\</option\>
                                        \<option value="skirt"\>skirt\</option\>
                                        \<option value="shoes"\>shoes\</option\>
                                        \<option value="boots"\>boots\</option\>
                                        \<option value="gown"\>gown\</option\>
                                        \<option value="hat"\>hat\</option\>
                                    \<option value="none"\>--Metal--\</option\>
                                        \<option value="rod"\>rod\</option\>
                                        \<option value="bar"\>bar\</option\>
                                        \<option value="weaponblade"\>weaponblade\</option\>
                                        \<option value="swordblade"\>swordblade\</option\>
                                        \<option value="daggerblade"\>daggerblade\</option\>
                                        \<option value="hilt"\>hilt\</option\>
                                        \<option value="weaponhead"\>weaponhead\</option\>
                                        \<option value="axehead"\>axehead\</option\>
                                        \<option value="macehead"\>macehead\</option\>
                                        \<option value="spearhead"\>spearhead\</option\>
                                        \<option value="shield"\>shield\</option\>
                                        \<option value="flower"\>flower\</option\>
                                    \<option value="none"\>--Wood--\</option\>
                                        \<option value="lumber"\>lumber\</option\>
                                        \<option value="figurine"\>figurine\</option\>
                                        \<option value="table"\>table\</option\>
                                        \<option value="chair"\>chair\</option\>
                                        \<option value="chest"\>chest\</option\>
                                        \<option value="cabinet"\>cabinet\</option\>
                                \</select\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td\>
                                \<b\>Unit Cost:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="unitcost"\>
                                    \<option value="0"\>--\</option\>
                                    \<option value="5"\>0.5\</option\>
                                    \<option value="10"\>1.0\</option\>
                                    \<option value="15"\>1.5\</option\>
                                    \<option value="20"\>2.0\</option\>
                                    \<option value="25"\>2.5\</option\>
                                    \<option value="30"\>3.0\</option\>
                                    \<option value="35"\>3.5\</option\>
                                    \<option value="40"\>4.0\</option\>
                                    \<option value="45"\>4.5\</option\>
                                    \<option value="50"\>5.0\</option\>
                                    \<option value="55"\>5.5\</option\>
                                    \<option value="60"\>6.0\</option\>
                                    \<option value="65"\>6.5\</option\>
                                    \<option value="70"\>7.0\</option\>
                                    \<option value="75"\>7.5\</option\>
                                    \<option value="80"\>8.0\</option\>
                                    \<option value="85"\>8.5\</option\>
                                    \<option value="90"\>9.0\</option\>
                                    \<option value="95"\>9.5\</option\>
                                    \<option value="100"\>10.0\</option\>
                                \</select\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td valign="top"\>
                                \<b\>Result:\</b\>
                            \</td\>
                            \<td\>
                                \<select name="result" onchange="javascript:switchid(this.value);"\>
                                    \<option value="none"\>--------\</option\>
                                    \<option value="newobject"\>New Object\</option\>
                                    \<option value="modobject"\>Modify Properties\</option\>
                                \</select\>
                                \<div id="newobject" style="display:none"\>
                                \<table\>
                                    \<tr\>
                                        \<td\>
                                            \<b\>WOE Name:\</b\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="woename"/\>
                                        \</td\>
                                    \</tr\>
                                \</table\>
                                \</div\>
                                \<div id="modobject" style="display:none"\>
                                \<table border="1"\>
                                    \<tr\>
                                        \<td\>
                                            \<center\>\<i\>Property Name\</i\>\</center\>
                                        \</td\>
                                        \<td\>
                                            \<center\>\<i\>Value\</i\>\</center\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="newpropname1"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="newpropvalue1"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="newpropname2"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="newpropvalue2"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="newpropname3"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="newpropvalue3"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="newpropname4"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="newpropvalue4"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="newpropname5"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="newpropvalue5"/\>
                                        \</td\>
                                    \</tr\>
                                \</table\>
                                \</div\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td valign="top" width="100px"\>
                                \<b\>Inherited Properties:\</b\>
                            \</td\>
                            \<td\>
                                \<table border="1"\>
                                    \<tr\>
                                        \<td\>
                                            \<center\>\<i\>Old Property Name\</i\>\</center\>
                                        \</td\>
                                        \<td\>
                                            \<center\>\<i\>New Property Name\</i\>\</center\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname1"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue1"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname2"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue2"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname3"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue3"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname4"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue4"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname5"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue5"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname6"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue6"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname7"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue7"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname8"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue8"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname9"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue9"/\>
                                        \</td\>
                                    \</tr\>
                                    \<tr\>
                                        \<td\>
                                            \<input type="text" name="ipropname10"/\>
                                        \</td\>
                                        \<td\>
                                            \<input type="text" name="ipropvalue10"/\>
                                        \</td\>
                                    \</tr\>
                                \</table\>
                            \</td\>
                        \</tr\>
                        \<tr\>
                            \<td colspan="2" align="right"\>
                                \<input type="submit"/\>
                            \</td\>
                        \</tr\>
                    \</table\>
                    \<action\>
                        \$["";   
    
                             /* Name */   
                             if(replace_strings(\$name, " ", "") == "") \{   
                                 \$nameerror = "You must input a name.";   
                             \}   
                             
                             /* Database */   
                             if(\$database == "none") \{   
                                 \$dberror = "You must specify a database to save the data to.";   
                             \} else \{   
                                 if(!Obj(\$database)) \{   
                                     \$dberror = Str(\$database) + " is not a valid object.";   
                                 \} else \{   
                                     \$db = Obj(\$database);   
                                 \}   
                             \}   
   
                             /* Skill */   
                             if(\$career == "none") \{   
                                 \$careererror = Str(\$career) + " is not a valid career name.";   
                             \}   
   
                             /* Level */   
                             if(\$level == "none") \{   
                                 \$levelerror = "You must specify a career level between 1 and 24.";   
                             \}   
   
                             /* Command */   
                             if(\$command == "none") \{   
                                 \$commanderror = Str(\$command) + " is not a valid command.";   
                             \}   
   
                             /* Resource */   
                             if(\$resource == "none") \{   
                                 \$resourceerror = Str(\$resource) + " is not a valid resource.";   
                             \}   
   
                             /* Unit Cost */   
                             \$unitcost = Int(\$unitcost);   
   
                             /* Inherited Properties */   
                             \$iproperties = (\{ \});   
                             if(replace_strings(\$ipropname1, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue1, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname1, \$ipropname2 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname2, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue2, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname2, \$ipropname2 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname3, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue3, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname3, \$ipropname3 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname4, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue4, " ", "") != "") \{   
                                 \$newproperties += (\{ (\{ \$ipropname4, \$ipropname4 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname5, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue5, " ", "") != "") \{   
                                   \$iproperties += (\{ (\{ \$ipropname5, \$ipropname5 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname6, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue6, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname6, \$ipropname6 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname7, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue7, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname7, \$ipropname7 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname8, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue8, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname8, \$ipropname8 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname9, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue9, " ", "") != "") \{   
                                 \$iproperties += (\{ (\{ \$ipropname9, \$ipropname9 \}) \});   
                             \}   
                             if(replace_strings(\$ipropname10, " ", "") != "" \&\&    
                                replace_strings(\$ipropvalue10, " ", "") != "") \{   
                                  \$iproperties += (\{ (\{ \$ipropname10, \$ipropname10 \}) \});   
                             \}   
   
                             /* Result */   
                             if(\$result == "newobject") \{   
                                 if(!Obj(\$woename)) \{   
                                     \$woenameerror = Str(\$woename) + " is not a valid object.";   
                                 \} else \{   
                                     \$newobject = Obj(\$woename);   
                                     \$brief = "a " + \$name;   
                                 \}   
                                  
                                 \$item = ([ \$name:([ "brief":\$brief, "newobject":\$newobject ]) ]);    
                             \} else \{   
                                 \$newproperties = (\{ \});   
                                 if(replace_strings(\$newpropname1, " ", "") != "" \&\&    
                                    replace_strings(\$newpropvalue1, " ", "") != "") \{   
                                     \$newproperties += (\{ (\{ \$newpropname1, \$newpropname2 \}) \});   
                                 \}   
                                 if(replace_strings(\$newpropname2, " ", "") != "" \&\&    
                                    replace_strings(\$newpropvalue2, " ", "") != "") \{   
                                     \$newproperties += (\{ (\{ \$newpropname2, \$newpropname2 \}) \});   
                                 \}   
                                 if(replace_strings(\$newpropname3, " ", "") != "" \&\&    
                                    replace_strings(\$newpropvalue3, " ", "") != "") \{   
                                     \$newproperties += (\{ (\{ \$newpropname3, \$newpropname3 \}) \});   
                                 \}   
                                 if(replace_strings(\$newpropname4, " ", "") != "" \&\&    
                                    replace_strings(\$newpropvalue4, " ", "") != "") \{   
                                     \$newproperties += (\{ (\{ \$newpropname4, \$newpropname4 \}) \});   
                                 \}   
                                 if(replace_strings(\$newpropname5, " ", "") != "" \&\&    
                                    replace_strings(\$newpropvalue5, " ", "") != "") \{   
                                     \$newproperties += (\{ (\{ \$newpropname5, \$newpropname5 \}) \});   
                                 \}   
   
                                 \$item = ([ \$name:([ "properties":\$newproperties ]) ]);   
                             \}   
   
                             if(!\$nameerror \&\&    
                                !\$dberror \&\&    
                                !\$careererror \&\&    
                                !\$levelerror \&\&    
                                !\$commanderror \&\&    
                                !\$resourceerror \&\&    
                                !\$woenameerror) \{   
                                 if(Get(\$db, "alteration:knowledge:" + \$command + "-" + \$resource + ":" + \$career + ":" + \$level)) \{   
                                     \$entry = Get(\$db, "alteration:knowledge:" + \$command + "-" + \$resource + ":" + \$career + ":" + \$level);   
                                     if(\$entry[\$name]) \{   
                                         \$alreadyexists = Str(\$name) + " already exists in " + Str(\$db);   
                                     \} else \{   
                                         \$entry += \$item;   
                                         Set(\$db, "alteration:knowledge:" + \$command + "-" + \$resource + ":" + \$career + ":" + \$level, \$entry);   
                                     \}   
                                 \} else \{   
                                     Set(\$db, "alteration:knowledge:" + \$command + "-" + \$resource + ":" + \$career + ":" + \$level, \$item);   
                                 \}   
                             \}]
                        \<redirect propob="\$(this)" prop="additem" actor="\$(actor)"/\>
                    \</action\>
                \</zform\>
            \</div\>
            \<span id="bottombox"\>
                \<div id="footer"\>\\\&nbsp;\</div\>
            \</span\>
        \</div\>
     \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="html:index">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>@craft Interface\</title\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
\</head\>
   \<body\>
      \$(this.xtra:header)
      \<div id="main"\>
        \<div id="textareafull"\>
\<br/\>\<i\>View craftable items you can make based on your skill levels.\</i\>\<br/\>\<br/\>
\$[int i;                              
string output;                              
mapping cProperties;                    
                     
::popup_initialize();                             
                              
output = "";                              
                              
\$temp = copy(\$character."*");                              
/* \$careers = map_indices(structure_propmap(\$temp)["skill"]["career"]);   */                    
                    
cProperties = ([ "blacksmith":"skill:alteration:metalworking", "bookbinder":"skill:alteration:bookbinding", "carpenter":"skill:alteration:woodcarving", "dyer":"skill:alteration:dyeing", "jeweler":"skill:alteration:jewelcrafting", "miner":"skill:alteration:mining", "seamstress":"skill:alteration:tailoring", "stonemason":"skill:alteration:stonemasonry", "weaver":"skill:alteration:weaving", "woodcutter":"skill:alteration:woodcutting", "gardener":"skill:general:gardening", "body-servant":"skill:social:hairstyling", "healer":"skill:academic:healing", "herbalism":"skill:alteration:herbalism", "cooking":"skill:general:cooking"]);                
                
                           
                    
\$careerMap = ([ ]);                    
if(\$character."trait:class1") \{                   
    if(cProperties[\$character."trait:class1"]) \{                   
        \$careerMap += ([ \$character."trait:class1":Get(\$character, cProperties[\$character."trait:class1"]) ]);                   
    \} else \{                   
        \$careerMap += ([ \$character."trait:class1":0 ]);                   
    \}                   
\}                   
                   
if(\$character."trait:class2") \{                   
    if(cProperties[\$character."trait:class2"]) \{                   
        \$careerMap += ([ \$character."trait:class2":Get(\$character, cProperties[\$character."trait:class2"]) ]);                   
    \} else \{                   
        \$careerMap += ([ \$character."trait:class2":0 ]);                   
    \}                   
\}           
      
if(\$character."trait:class1" == "healer" \|\| \$character."trait:class2" == "healer") \{      
    if(cProperties["herbalism"]) \{                   
        \$careerMap += ([ "herbalism":Get(\$character, cProperties["herbalism"]) ]);                   
    \} else \{                   
        \$careerMap += ([ "herbalism":0 ]);                   
    \}       
\}  
  
\$careerMap += ([ "cooking":Int(Get(\$character, cProperties["cooking"]))]);              
                            
output += "\<zform\>";                              
output += "\<table\>";                              
                              
\$careers = map_indices(\$careerMap);                    
for(i = 0; i \< sizeof(\$careers); i++) \{             
    if(\$actor == \$character \|\| Get(\$character, "craftinginterface:class" + Str(i+1) + ":visible")) \{                           
        output += "\<tr\>\<td\>" + capitalize(\$careers[i]) + "\</td\>\<td\>" + Str(\$careerMap[\$careers[i]]) + "\</td\>\<td\>\<zact\>View\<action\>\<redirect propob='\$(this)' prop='viewcareer' cf='" + \$careers[i] + "' level='" + Str(\$careerMap[\$careers[i]]) + "' character='" + Str(\$character) + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\>";           
         
          
        if(\$actor == \$character) \{          
            if(Get(\$actor, "craftinginterface:class" + Str(i+1) + ":visible")) \{           
                output += "\<i\> (Your crafting list for this class is visible to others. Click \<zact\>here\<action\>\$[\\"\\";Set(Obj(\\"" + Str(\$character) + "\\"), \\"craftinginterface:class" + Str(i+1) + ":visible\\", nil);]\<redirect propob='" + Str(this) + "' character='" + Str(\$character) + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\> to hide it.)\</i\>";           
            \} else \{           
                output += "\<i\> (Your crafting list for this class is not visible to others. Click \<zact\>here\<action\>\$[\\"\\";Set(Obj(\\"" + Str(\$character) + "\\"), \\"craftinginterface:class" + Str(i+1) + ":visible\\", 1);]\<redirect propob='" + Str(\$this) + "' character='" + Str(\$character) + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\> to make it visible.)\</i\>";           
            \}           
        \}          
           
        output += "\</td\>\</tr\>";             
    \}                          
\}                              
                            
output += "\</table\>\</zform\>\<br/\>";     
 
if(\$character."crafting:inventory" \&\& sizeof(\$character."crafting:inventory")) \{ 
    output += "\<b\>Available Inventory\</b\>"; 
    output += "\<zform\>"; 
    output += "\<table\>"; 
 
    \$inventory = \$character."crafting:inventory"; 
 
    for(\$i = 0; \$i \< sizeof(\$inventory); \$i++) \{ 
        output += "    \<tr\>\<td\>"; 
        output += "    \<zact\>" + Describe(\$inventory[\$i], nil, nil, STYLE_NONPOSS) + "\<action\>\<redirect propob='\$(this)' prop='viewinventory' ob='" + Str(\$inventory[\$i]) + "' character='" + Str(\$character) + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\>"; 
        output += "    \</td\>\</tr\>"; 
    \} 
 
    output += "\</table\>"; 
    output += "\</zform\>"; 
\}                          
                              
return ParseXML(output);]
        \</div\>
        \<span id="bottombox"\>
          \<div id="footer"\>\\\&nbsp;\</div\>
        \</span\>
      \</div\>
   \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="html:staffindex">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>+craft Interface\</title\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
\</head\>
   \<body\>
      \$(this.xtra:header)
      \<div id="main"\>
        \<div id="textareafull"\>
\$[ParseXML(::getindex())]
          \<div align="right"\>\<zform\>[
            \<zact\>
              add new item
              \<action\>\<redirect propob="\$(this)" prop="additem" actor="\$(actor)"/\>\</action\>
            \</zact\>]
          \</zform\>\</div\>
        \</div\>
        \<span id="bottombox"\>
          \<div id="footer"\>\\\&nbsp;\</div\>
        \</span\>
      \</div\>
   \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="html:viewcareer">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>@craft Interface\</title\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
\<style type="text/css"\>
\</style\>
\<script type="text/javascript"\>
function switchid(id)\\\{
        ID = document.getElementById(id);
        if(ID.style.display == 'block') \\\{
     hidediv(id);
        \\\} else \\\{
     showdiv(id);
        \\\}
\\\}
function hideallids()\\\{
 for (var i=0;i\\\<ids.length;i++) \\\{
  hidediv(ids[i]);
 \\\}
\\\}
function hidediv(id) \\\{
 if (document.getElementById) \\\{
  document.getElementById(id).style.display = 'none';
 \\\} else \\\{
  if (document.layers) \\\{
   document.id.display = 'none';
  \\\} else \\\{
   document.all.id.style.display = 'none';
  \\\}
 \\\}
\\\}
function showdiv(id) \\\{
 if (document.getElementById) \\\{
  document.getElementById(id).style.display = 'block';
 \\\} else \\\{
  if (document.layers) \\\{
   document.id.display = 'block';
  \\\} else \\\{
   document.all.id.style.display = 'block';
  \\\}
 \\\}
\\\}
\</script\>
\</head\>
   \<body\>
      \$(this.xtra:header)
      \<div id="main"\>
        \<div id="textareafull"\>
\$[::viewcareer()]
        \</div\>
        \<span id="bottombox"\>
          \<div id="footer"\>\\\&nbsp;\</div\>
        \</span\>
      \</div\>
   \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="html:viewdb">
         X[S] \{? \| \$(actor.udat:host) \| \$[ParseXML(::viewdb())] \| \$[error("You do not have permission to view this page.");] \}
      </Core:Property>
      <Core:Property property="html:viewinventory">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
\<head\>
    \<title\>@craft Interface\</title\>
    \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
\<style type="text/css"\>
\</style\>
\<script type="text/javascript"\>
function switchid(id)\\\{
        ID = document.getElementById(id);
        if(ID.style.display == 'block') \\\{
     hidediv(id);
        \\\} else \\\{
     showdiv(id);
        \\\}
\\\}
function hideallids()\\\{
 for (var i=0;i\\\<ids.length;i++) \\\{
  hidediv(ids[i]);
 \\\}
\\\}
function hidediv(id) \\\{
 if (document.getElementById) \\\{
  document.getElementById(id).style.display = 'none';
 \\\} else \\\{
  if (document.layers) \\\{
   document.id.display = 'none';
  \\\} else \\\{
   document.all.id.style.display = 'none';
  \\\}
 \\\}
\\\}
function showdiv(id) \\\{
 if (document.getElementById) \\\{
  document.getElementById(id).style.display = 'block';
 \\\} else \\\{
  if (document.layers) \\\{
   document.id.display = 'block';
  \\\} else \\\{
   document.all.id.style.display = 'block';
  \\\}
 \\\}
\\\}
\</script\>
\</head\>
   \<body\>
      \$(this.xtra:header)
      \<div id="main"\>
        \<div id="textareafull"\>
\$[\$container = Obj(\$ob);     
    \$output = "";     
     
    \$output += "\<h3\>Contents of " + Describe(\$container, nil, nil, STYLE_NONPOSS) + "\</h3\>";     
     
    if(\$container."compression:storing" \&\& sizeof(map_indices(\$container."compression:storing"))) \{     
        \$indices = copy(map_indices(\$container."compression:storing"));    
    \} else \{     
        return ParseXML("It is empty.");     
    \}     
    
    \$qualityMap = ([ 0:"average", 1:"terrible", 2:"bad", 3:"poor", 4:"average", 5:"average", 6:"good", 7:"very good", 8:"superb", 9:"outstanding", 10:"exceptional", 11:"magnificent", 12:"unsurpassed", 13:"unsurpassed", 14:"unsurpassed", 15:"unsurpassed", 16:"unsurpassed", 17:"unsurpassed", 18:"unsurpassed", 19:"unsurpassed", 20:"unsurpassed", 21:"unsurpassed", 22:"unsurpassed", 23:"unsurpassed", 24:"unsurpassed" ]);    
     
    for(\$i=0;\$i\<sizeof(\$indices);\$i++) \{     
        \$size = sizeof(\$container."compression:storing"[\$indices[\$i]]);     
        \$output += "\<b\>" + desc_cardinal(\$size)+" "+\$indices[\$i]+" ";     
        if(\$size != 1) \{     
            \$output += Str(\$container."compression:suffix_plural");     
        \} else \{     
            \$output += Str(\$container."compression:suffix_singular");     
        \}    
        \$output += "\</b\>";    
    
        \$qList = copy(Get(\$container, "compression:storing")[\$indices[\$i]]);    
    
        \$list = (\{ \});    
        for(\$j = 0; \$j \< sizeof(\$qList); \$j++) \{    
            \$quantity = Flt(\$qList[\$j][1]["trait:quantity"]);    
            if(\$quantity == 0.0) \{    
                \$quantity = \$qList[\$j][0]."trait:quantity";    
            \}    
   
            \$quality = \$qualityMap[Int(\$qList[\$j][1]["trait:quality"])];    
    
            if(!\$quality \|\| \$quality == "") \$quality = "average";    
    
            \$list += (\{ Str(Flt(\$quantity)/10.0) + " units of " + Str(\$quality) + " quality"  \});    
        \}    
    
        \$output += "\<ul\>";    
        for(\$j = 0; \$j \< sizeof(\$list); \$j++) \{    
            \$output += "\<li\>" + \$list[\$j] + "\</li\>";    
        \}    
        \$output += "\</ul\>";    
    
        \$output += "\<br/\>";     
    \}     
     
    return ParseXML(\$output);]
        \</div\>
        \<span id="bottombox"\>
          \<div id="footer"\>\\\&nbsp;\</div\>
        \</span\>
      \</div\>
   \</body\>
\</html\>
\</z\>
      </Core:Property>
      <Core:Property property="merry:lib:dyer">
         X[M] int i, j;

\$db = \$\{Allegory:Lib:Colors:ColorDB\};

\$temp = copy(\$db."*");
\$dataMap = structure_propmap(\$temp)["skill"]; 

\$rstr2 = "";
\$rstr2 += "\<tr\> \<td  bgcolor='#300' colspan='5'\>\<a style='color: white' href=\\"javascript:switchid('mix');\\"\>\<b\>\<i\>Mixing\</i\>\</b\>\</a\>\</td\> \</tr\>";
\$rstr2 += "\<tr\> \<td colspan='5'\>\<div id='mix' style='display:block;'\>\<table cellspacing='0' border='1px' width='100%'\>";

\$rstr2 += "\<tr bgcolor='#630'\> \<td width='70px'\>\<font color='white'\>\<b\>\<center\>Level\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='200px'\>\<font color='white'\>\<b\>\<center\>Final Color(s)\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='100px'\>\<font color='white'\>\<b\>\<center\>Command\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='100px'\>\<font color='white'\>\<b\>\<center\>Color1\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='100px'\>\<font color='white'\>\<b\>\<center\>Color2\</center\>\</b\>\</font\>\</td\>\</tr\>";

for(i = 0; i \<= \$level; i++) \{
    if(\$dataMap[Str(i)] \&\& map_sizeof(\$dataMap[Str(i)])) \{
        \$colors1 = map_indices(\$dataMap[Str(i)]);

        \$counter = 0;
        for(\$x = 0; \$x \< sizeof(\$colors1); \$x++) \{
            \$counter += map_sizeof(\$dataMap[Str(i)][\$colors1[\$x]]);
        \}

        \$rstr2 += "\<tr bgcolor='" + \$color + "'\> \<td bgcolor='" + \$color2 + "' valign='top' align='right' rowspan='" + \$counter + "'\>" + Str(i) + "\</td\>";
        for(j = 0; j \< sizeof(\$colors1); j++) \{
            \$dye1 = \$colors1[j];
    
            \$colors2 = map_indices(\$dataMap[Str(i)][\$dye1]);

            for(\$k = 0; \$k \< sizeof(\$colors2); \$k++) \{
                \$dye2 = \$colors2[\$k];

                \$result1 = \$dataMap[Str(i)][\$dye1][\$dye2][0];

                if(\$dataMap[Str(i)][\$dye2] \&\& \$dataMap[Str(i)][\$dye2][\$dye1] \&\& sizeof(\$dataMap[Str(i)][\$dye2][\$dye1])) \{
                    \$result2 = \$dataMap[Str(i)][\$dye2][\$dye1][0];
                \} else \{
                    \$result2 = \$result1;
                \}

            if(\$result1 == \$result2) \{
                \$results = \$result1 + "(2)";
            \} else \{
                \$results = \$result1 + "(1), " + \$result2 + "(1)";
            \}

            if(\$color == "#ffffff") \{
                \$color = "#eeeeee";
            \} else \{
                \$color = "#ffffff";
            \}

            \$rstr2 += " \<td\>" + \$results + "\</td\>\<td align='center'\>mix\</td\> \<td align='center'\>" + Str(\$dye1) + "\</td\> \<td align='center'\>" + Str(\$dye2) + "\</td\>\</tr\>\<tr bgcolor='" + \$color + "'\>";
            \}
        \}

            if(\$color2 == "#ffffff") \{
                \$color2 = "#eeeeee";
            \} else \{
                \$color2 = "#ffffff";
            \}
   
        \$rstr2 += "\</tr\>";
    \}
\}

\$rstr2 += "\</table\>\</div\>\</td\>\</tr\>";

return \$rstr2;
      </Core:Property>
      <Core:Property property="merry:lib:getindex">
         X[M] string directory, output, woename;
mapping structure;
mixed resources, dbs;
int i, j;


directory = Get(\$this, "crafting:directory");

\$folder = directory;
\$folders = Call(\$\{/usr/System/sys/idd\}, "idd:get-folders");
structure = ([ ]);

for(i = 0; i \< sizeof(\$folders); i++) \{
        if(\$folders[i] != "Old" \&\& \$folders[i] != "Common") \{
                \$folder = directory + ":" + \$folders[i];
                structure += ([ \$folders[i]:Call(\$\{/usr/System/sys/idd\}, "idd:get-objects")-(\{ "CrestsLib" \}) ]);
        \}
\}

resources = map_indices(structure);   

output = "";

output += "\<h3\>View by Database\</h3\>";
output += "\<zform\>";

output += "\<table\>\<tr\>";    
for(i = 0; i \< sizeof(resources); i++) \{    
    dbs = structure[resources[i]];   
   
    output += "\<tr\>\<td valign='top' rowspan='" + Str(sizeof(dbs)) + "'\>\<b\>" + capitalize(resources[i]) + "\</b\>\</td\>";   
  
    for(j = 0; j \< sizeof(dbs); j++) \{    
        woename = directory + ":" + resources[i] + ":" + capitalize(dbs[j]);
        output += "\<td\>" + woename + "\</td\>";
        output += "\<td\>";
        output += "\<zact\>View\<action\>\<redirect propob='\$(this)' prop='viewdb' db='" + woename + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\>";
        output += "\</td\>";
 /*       output += "\<td\>";
        output += "\<zact\>Edit\<action\>\<redirect propob='\$(this)' prop='editdb' db='" + woename + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\>";
        output += "\</td\>";
        output += "\<td\>";
        output += "\<zact\>Backup\<action\>\<redirect propob='\$(this)' prop='backupdb' db='" + woename + "' actor='" + Str(\$actor) + "'/\>\</action\>\</zact\>";
        output += "\</td\>";
        output += "\<td\>";
        output += "???";
        output += "\</td\>"; */
        output += "\</tr\>\<tr\>";    
    \}        

    output += "\</tr\>\<tr\>\<td colspan='6'\>\</td\>\</tr\>";      
\}    
    
output += "\</tr\>\</table\>\</zform\>";
output += "\<hr/\>";

/* Get a list of all careers available in game */
\$careerDB = \$\{Ironclaw:Lib:Teaching:newCareersDB\}; 
\$temp = copy(\$careerDB."*"); 
\$careers = map_indices(\$temp) - (\{ "revisions" \}); 

output += "\<h3\>View by Career\</h3\>";
output += "\<zform\>";
output += "\<table\>";

for(i = 0; i \< sizeof(\$careers); i++) \{
    output += "\<tr\>\<td\>" + capitalize(\$careers[i]) + "\</td\>\<td\>\<zact\>View\<action\>\<redirect propob='\$(this)' prop='viewcareer' cf='" + \$careers[i] + "' actor='" + Str(\$actor) + "' staff='1'/\>\</action\>\</zact\>\</td\>\</tr\>";
\}

output += "\</table\>\</zform\>";
    
return output;
      </Core:Property>
      <Core:Property property="merry:lib:hairstyles">
         X[M] int i, j;

\$db = \$\{Allegory:Lib:UrPeople:Hairstyles\};

\$temp = copy(\$db."*");
\$dataMap = structure_propmap(\$temp); 
\$dataMap["alteration"]["knowledge"]["hairlength"] = nil;
\$dataMap["revisions"] = nil;
\$dataMap["full_list"] = nil;
\$dataMap["new property name"] = nil;

\$slevel = \$level;

\$styles = map_indices(\$dataMap);
\$hairstyles = ([ ]);
\$hairtextures = ([ ]);
for(i = 0; i \< sizeof(\$styles); i++) \{
    \$style = \$styles[i];

    if(\$dataMap[\$style]["brief"]) \{
        if(\$dataMap[\$style]["level"]) \{
            \$level = \$dataMap[\$style]["level"];
        \} else \{
            \$level = 0;
        \}

        if(!\$hairstyles[\$level]) \{
            \$hairstyles[\$level] = ([ ]);
        \}

        if(!\$hairstyles[\$level][\$style]) \{
            \$hairstyles[\$level][\$style] = ([ ]);
        \}

        \$hairstyles[\$level][\$style] += \$dataMap[\$style];

    \} else \{
        if(\$dataMap[\$style]["level"]) \{
            \$level = \$dataMap[\$style]["level"];
        \} else \{
            \$level = "0";
        \}

        if(!\$hairtextures[\$level]) \{
            \$hairtextures[\$level] = ([ ]);
        \}

        if(!\$hairtextures[\$level][\$style]) \{
            \$hairtextures[\$level][\$style] = ([ ]);
        \}

        \$hairtextures[\$level][\$style] += \$dataMap[\$style];

    \}
\}

\$rstr2 = "";
\$rstr2 += "\<tr\> \<td  bgcolor='#300' colspan='5'\>\<a style='color: white' href=\\"javascript:switchid('style');\\"\>\<b\>\<i\>Styling\</i\>\</b\>\</a\>\</td\> \</tr\>";
\$rstr2 += "\<tr\> \<td colspan='5'\>\<div id='style' style='display:block;'\>\<table cellspacing='0' border='1px' width='100%'\>";

\$rstr2 += "\<tr bgcolor='#630'\> \<td width='70px'\>\<font color='white'\>\<b\>\<center\>Level\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='100px'\>\<font color='white'\>\<b\>\<center\>Name\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td width='100px'\>\<font color='white'\>\<b\>\<center\>Command\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td\>\<font color='white'\>\<b\>\<center\>Description\</center\>\</b\>\</font\>\</td\>\</tr\>";

for(i = 0; i \<= \$slevel; i++) \{
    if(\$hairstyles[i] \&\& map_sizeof(\$hairstyles[i])) \{
        \$list = map_indices(\$hairstyles[i]);
        \$counter = sizeof(\$list);

        \$rstr2 += "\<tr bgcolor='" + \$color + "'\> \<td bgcolor='" + \$color2 + "' valign='top' align='right' rowspan='" + \$counter + "'\>" + Str(i) + "\</td\>";

        for(j = 0; j \< sizeof(\$list); j++) \{
            \$brief = \$hairstyles[i][\$list[j]]["brief"];
            \$command = "style hair";
            \$description = \$hairstyles[i][\$list[j]]["description"];
           
            if(\$color == "#ffffff") \{
                \$color = "#eeeeee";
            \} else \{
                \$color = "#ffffff";
            \}

            \$rstr2 += " \<td\>" + \$brief + "\</td\>\<td align='center'\>" + \$command + "\</td\> \<td align='center'\>" + Str(\$description) + "\</td\> \</tr\>\<tr bgcolor='" + \$color + "'\>";
        \}

        if(\$color2 == "#ffffff") \{
            \$color2 = "#eeeeee";
        \} else \{
            \$color2 = "#ffffff";
        \}

        \$rstr2 += "\</tr\>";
    \}
\}

\$rstr2 += "\</table\>\</div\>\</td\>\</tr\>";

\$rstr2 += "\<tr\> \<td  bgcolor='#300' colspan='5'\>\<a style='color: white' href=\\"javascript:switchid('alt');\\"\>\<b\>\<i\>Alter\</i\>\</b\>\</a\>\</td\> \</tr\>";
\$rstr2 += "\<tr\> \<td colspan='5'\>\<div id='alt' style='display:block;'\>\<table cellspacing='0' border='1px' width='100%'\>";

\$rstr2 += "\<tr bgcolor='#630'\> \<td width='70px'\>\<font color='white'\>\<b\>\<center\>Level\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td\>\<font color='white'\>\<b\>\<center\>Name\</center\>\</b\>\</font\>\</td\>";
\$rstr2 += "                    \<td\>\<font color='white'\>\<b\>\<center\>Command\</center\>\</b\>\</font\>\</td\>\</tr\>";

for(i = 0; i \<= \$slevel; i++) \{
    if(\$hairtextures[i] \&\& map_sizeof(\$hairtextures[i])) \{
        \$list = map_indices(\$hairtextures[i]);
        \$counter = sizeof(\$list);

        \$rstr2 += "\<tr bgcolor='" + \$color + "'\> \<td bgcolor='" + \$color2 + "' valign='top' align='right' rowspan='" + \$counter + "'\>" + Str(i) + "\</td\>";

        for(j = 0; j \< sizeof(\$list); j++) \{

            \$brief = \$hairtextures[i][\$list[j]]["texture"];
            \$command = "alter hair";
           
            if(\$color == "#ffffff") \{
                \$color = "#eeeeee";
            \} else \{
                \$color = "#ffffff";
            \}

            \$rstr2 += " \<td\>" + Str(\$brief) + "\</td\>\<td align='center'\>" + Str(\$command) + "\</td\> \</tr\>\<tr bgcolor='" + \$color + "'\>";
        \}

        if(\$color2 == "#ffffff") \{
            \$color2 = "#eeeeee";
        \} else \{
            \$color2 = "#ffffff";
        \}

        \$rstr2 += "\</tr\>";
    \}
\}

\$rstr2 += "\</table\>\</div\>\</td\>\</tr\>";

return \$rstr2;
      </Core:Property>
      <Core:Property property="merry:lib:popup_initialize">
         X[M] if(\$dat == nil) \{
    error("page reached without a udat");
\}
if(\$name == nil) \{
    error("page reached without a name");
\}
if(\$actor == nil) \{
    error("page reached without an actor");
\}
if(!Obj(\$actor)) \{
    error("page reached without a valid actor");
\}

\$actor = Obj(\$actor);
\$character = Obj(\$character);

if(\$staff \&\& !\$actor."udat:host") \{
    error("You are not authorized to view this page");
\}

/* Check the player isn't trying to access someone elses body */
/* Check if the players roster of characters */
\$bodies = Udat::query_bodies_in_roster(\$user: \$name);

if(!member(\$actor, \$bodies)) \{
    if(\$character != \$actor \&\& \$name != "jominey") \{
        if(!\$character."craftinginterface:class1:visible" \&\& !\$character."craftinginterface:class2:visible") \{
            /*error(dump_value(\$actor)+" body not found in "+dump_value(\$name)+" character roster");*/
            error(dump_value(\$character) + " does not have any visible crafting lists");
        \}
    \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:viewcareer">
         X[M] mapping cProperties;

::popup_initialize();

cProperties = ([ "blacksmith":"skill:alteration:metalworking", "bookbinder":"skill:alteration:bookbinding", "carpenter":"skill:alteration:woodcarving", "dyer":"skill:alteration:dyeing", "jeweler":"skill:alteration:jewelcrafting", "miner":"skill:alteration:mining", "seamstress":"skill:alteration:tailoring", "stonemason":"skill:alteration:stonemasonry", "weaver":"skill:alteration:weaving", "woodcutter":"skill:alteration:woodcutting", "gardener":"skill:general:gardening", "body-servant":"skill:social:hairstyling", "healer":"skill:academic:healing", "herbalism":"skill:alteration:herbalism", "cooking":"skill:general:cooking" ]);

\$allCareers = map_indices(cProperties);

/* Get a list of all careers available in game */
/*
\$careerDB = \$\{Ironclaw:Lib:Teaching:newCareersDB\};
\$temp = copy(\$careerDB."*");
\$allCareers = map_indices(\$temp) - (\{ "revisions" \}) + (\{ "painter", "musician", "courtesan", "butterfly" \});
*/

if((!\$dbf \|\| \$dbf == "") \&\& (!\$cf \|\| \$cf == "") \&\& (!\$itemf \|\| \$itemf == "")) \{
    return "Output too long. Please select a filter.";
\}

if(\$itemf \&\& strlen(\$itemf) \< 3) \{
    return "The search string needs to be at least three characters long.";
\}

\$dbs = (\{ \});

/* Are we searching specific databases? */
/* If not, search them all. */
if(\$dbf \&\& \$dbf != "") \{
    \$dbFilter = explode(\$dbf, " ");
    for(\$i = 0; \$i \< sizeof(\$dbFilter); \$i++) \{
        if(Obj(\$dbFilter[\$i])) \{
            \$dbs += (\{ Obj(\$dbFilter[\$i]) \});
        \}
    \}
\} else \{
    \$directory = Get(\$this, "crafting:directory");
    \$folder = \$directory;
    \$folders = Call(\$\{/usr/System/sys/idd\}, "idd:get-folders");
    \$structure = (\{ \});
    for(\$i = 0; \$i \< sizeof(\$folders); \$i++) \{
        if(\$folders[\$i] != "Old") \{
            \$folder = \$directory + ":" + \$folders[\$i];
            \$structure = Call(\$\{/usr/System/sys/idd\}, "idd:get-objects")-(\{ "CrestsLib", "CrestsDB", "FittingDB" \});

            for(\$j = 0; \$j \< sizeof(\$structure); \$j++) \{
                \$dbs += (\{ Obj(\$folder + ":" + \$structure[\$j]) \});
            \}
        \}
    \}
\}

\$dbs += (\{ \$\{Allegory:Lib:UrPeople:HairDB\}, \$\{IronClaw:Lib:UrPeople:New:FurDB\}, \$\{Allegory:Lib:UrPeople:FacialHairDB\}, \$\{IronClaw:Lib:UrPeople:New:TailDB\} \});
/* \$dbs += (\{ \$\{IronClaw:Lib:UrPeople:FurStyles\}, \$\{IronClaw:Lib:UrPeople:Tailstyles\}, \$\{IronClaw:Lib:UrPeople:Hairstyles\} \}); */

/* Are we searching specific careers? */
/* If not, search them all. */
if(\$cf) \{
    \$careerFilter = explode(\$cf, " ") + (\{ " noskill", "gardener", "cooking" \});
\} else \{
    \$careerFilter = \$allcareers;
\}

\$data = ([ ]);

/* Start scanning through the databases */
for(\$i = 0; \$i \< sizeof(\$dbs); \$i++) \{
    /* Make a list of all "types" in this database. Types = crafting commands. */
    \$dbProperties = copy(\$dbs[\$i]."*");

    \$dbTypes = (\{ \});
    if(structure_propmap(\$dbProperties)["alteration"] \&\& structure_propmap(\$dbProperties)["alteration"]["knowledge"]) \{
        \$dbtemp = structure_propmap(\$dbProperties)["alteration"]["knowledge"];
        \$dbTypes = map_indices(\$dbtemp);
    \}


    /* Scan through each command */
    for(\$j = 0; sizeof(\$dbTypes) \&\& \$j \< sizeof(\$dbTypes); \$j++) \{
        \$dbtemp2 = \$dbtemp[\$dbTypes[\$j]];

        if(typeof(\$dbtemp2) == 6) \{

            /* Make a list of all careers that use this command */
            \$tempCareers = map_indices(\$dbtemp2);

            for(\$k = 0; \$k \< sizeof(\$tempCareers); \$k++) \{
 
                /* Make sure it's a valid career. This is how we separate the 0 skill required items from the rest. */
                if(member(\$tempCareers[\$k], \$allCareers)) \{
                    if(member(\$tempCareers[\$k], \$careerFilter)) \{
                        if(!\$data[\$tempCareers[\$k]]) \{
                            \$data[\$tempCareers[\$k]] = ([ ]);
                        \}

                        /* No compile a list of items this career can make using the command. Filter based on career level. */
                        /* If no filter provided, set it to 24 */

                        if(!\$staff) \{
                            /* \$levelLimit = Int(Get(\$character, "skill:career:" + \$tempCareers[\$k])); */
                            if(cProperties[\$tempCareers[\$k]]) \{
                                \$levelLimit = Int(Get(\$character, cProperties[\$tempCareers[\$k]]));
                            \} else \{
                                \$levelLimit = 0;
                            \} 
                        \} else \{
                            \$levelLimit = 24;
                        \}

                        for(\$l = 1; \$l \<= \$levelLimit; \$l++) \{
/*     No. Styles give hairstyles, alter does furtexture and tailtexture, cut does furlength, hairlength, and taillength I believe */
                            /* Commands are in the structure COMMAND-RESOURCE (i.e. tailor-cloth). */
                            /* We want to separate command and recource. This info will be used later. */
                            if(contains(\$dbTypes[\$j], "-")) \{
                                \$type = explode(\$dbTypes[\$j], "-")[0];
                                \$resource = explode(\$dbTypes[\$j], "-")[1];
                            \} else \{
                                if(\$dbs[\$i] == \$\{IronClaw:Lib:UrPeople:FurStyles\}) \{
                                    if(\$dbTypes[\$j] == "furtexture") \{
                                        \$type = "alter";
                                        \$resource = "fur (texture)";
                                    \} else \{
                                        \$type = "cut";
                                        \$resource = "fur (length)";
                                    \}
                                \} else if(\$dbs[\$i] == \$\{IronClaw:Lib:UrPeople:Tailstyles\}) \{
                                    if(\$dbTypes[\$j] == "tailtexture") \{
                                        \$type = "alter";
                                        \$resource = "tail (texture)";
                                    \} else \{
                                        \$type = "cut";
                                        \$resource = "tail (length)";
                                    \}
                                \} else if(\$dbs[\$i] == \$\{Allegory:Lib:UrPeople:Hairstyles\}) \{
                                    if(\$dbTypes[\$j] == "hairlength") \{
                                        \$type = "cut";
                                        \$resource = "hair (length)";
                                    \}
                                \}
                            \}

                            /* Does an item (or items) exist for this career using this command at this career level? */
                            if(\$dbtemp2[\$tempcareers[\$k]][Str(\$l)]) \{
                                /* Yes */

                                if(!\$data[\$tempCareers[\$k]][\$type]) \{
                                    \$data[\$tempCareers[\$k]][\$type] = ([ ]);
                                \}

                                if(!\$data[\$tempCareers[\$k]][\$type][Str(\$l)]) \{
                                    \$data[\$tempCareers[\$k]][\$type][Str(\$l)] = ([ ]);
                                \}

                                \$matched = 0; 
                                \$tempitems = map_indices(\$dbtemp2[\$tempCareers[\$k]][Str(\$l)]);

                                for(\$m = 0; \$m \< sizeof(\$tempitems); \$m++) \{

                                    if(\$data[\$tempCareers[\$k]] \&\&
                                       \$data[\$tempCareers[\$k]][\$type] \&\&
                                       \$data[\$tempCareers[\$k]][\$type][Str(\$l)] \&\&
                                       \$data[\$tempCareers[\$k]][\$type][Str(\$l)][\$tempitems[\$m]]) \{

                                       \$data[\$tempCareers[\$k]][\$type][Str(\$l)][\$tempitems[\$m]+" "] = \$data[\$tempCareers[\$k]][\$type][Str(\$l)][\$tempitems[\$m]];
                                    \}

                                    /* Make note of the database this came from. */
                                    \$dbtemp2[\$tempCareers[\$k]][Str(\$l)][\$tempitems[\$m]]["db"] = \$dbs[\$i];

                                    /* Make note of the resource required. */
                                    \$dbtemp2[\$tempCareers[\$k]][Str(\$l)][\$tempitems[\$m]]["resource"] = \$resource;

                                    /* Are we searching specifically for tihs item? */
                                    /* If not, go ahead and flag it as found. */
                                    /* Otherwise, only flag as found if this item matches the search string. */
                                    if(!\$itemf \|\| (\$itemf \&\& !contains(\$tempitems[\$m], \$itemf))) \{
                                        \$matched = 1;
                                    \}
                                \}

                                if(\$matched) \{
                                    /* Add this entry to our data list */
                                    \$data[\$tempCareers[\$k]][\$type][Str(\$l)] += \$dbtemp2[\$tempCareers[\$k]][Str(\$l)];
                                \}
                            \}
                        \}
                    \}
                \} else \{
                    /* The career was not valid. We will assume that this is a 0 level required item. */
                    /* First check if we're including 0 level required items in our search. */
 /*                   if(member(" noskill", \$careerFilter)) \{     */

                        /* Commands are in the structure COMMAND-RESOURCE (i.e. tailor-cloth). */
                        /* We want to separate command and recource. This info will be used later. */

                            if(contains(\$dbTypes[\$j], "-")) \{
                                \$type = explode(\$dbTypes[\$j], "-")[0];
                                \$resource = explode(\$dbTypes[\$j], "-")[1];
                            \} else \{
                                if(\$dbs[\$i] == \$\{IronClaw:Lib:UrPeople:FurStyles\}) \{
                                    if(\$dbTypes[\$j] == "furtexture") \{
                                        \$type = "alter";
                                        \$resource = "fur (texture)";
                                    \} else \{
                                        \$type = "cut";
                                        \$resource = "fur (length)";
                                    \}
                                \} else if(\$dbs[\$i] == \$\{IronClaw:Lib:UrPeople:Tailstyles\}) \{
                                    if(\$dbTypes[\$j] == "tailtexture") \{
                                        \$type = "alter";
                                        \$resource = "tail (texture)";
                                    \} else \{
                                        \$type = "cut";
                                        \$resource = "tail (length)";
                                    \}
                                \} else if(\$dbs[\$i] == \$\{Allegory:Lib:UrPeople:Hairstyles\}) \{
                                    if(\$dbTypes[\$j] == "hairlength") \{
                                        \$type = "cut";
                                        \$resource = "hair (length)";
                                    \}
                                \}
                            \}
     /*
                        if(!\$data[" noskill"]) \{
                            \$data[" noskill"] = ([ ]);
                        \}

                        if(!\$data[" noskill"][\$type]) \{
                            \$data[" noskill"][\$type] = ([ ]);
                        \}
    */

                                if(!\$data[\$cf]) \{
                                    \$data[\$cf] = ([ ]);
                                \}

                                if(!\$data[\$cf][\$type]) \{
                                    \$data[\$cf][\$type] = ([ ]);
                                \}

                                if(!\$data[\$cf][\$type]["0"]) \{
                                    \$data[\$cf][\$type]["0"] = ([ ]);
                                \}

                        \$matched = 0;

                        /* Make note of the database this came from. */
                        \$dbtemp2[\$tempCareers[\$k]]["db"] = \$dbs[\$i];

                        /* Make note of the resource required. */
                        \$dbtemp2[\$tempCareers[\$k]]["resource"] = \$resource;

                        /* Are we searching specifically for tihs item? */
                        /* If not, go ahead and flag it as found. */
                        /* Otherwise, only flag as found if this item matches the search string. */
                        if(!\$itemf \|\| (\$itemf \&\& !contains(\$cf, \$itemf))) \{
                            \$matched = 1;
                        \}

                        if(\$matched) \{
                            /* Add this entry to our data list */

                            if(\$data[\$cf][\$type]["0"][\$tempCareers[\$k]]) \{
                                \$blah = \$tempCareers[\$k] + " ";
                                if(\$data[\$cf][\$type]["0"][\$blah]) \{
                                    \$blah += " ";
                                \}
                                \$data[\$cf][\$type]["0"][\$blah] = \$dbtemp2[\$tempCareers[\$k]];
                            \} else \{
                                \$data[\$cf][\$type]["0"][\$tempCareers[\$k]] = \$dbtemp2[\$tempCareers[\$k]];
                            \}
                        \}

                    \}
                \}
            \}
      /* \}    */
    \}
\}

\$careers = map_indices(\$data);
\$rstr = "";
\$color = "#eeeeee";
\$colorb = "#ffffff";
\$color2 = "#ffffff";
\$colorb2 = "#eeeeee";

/*
if(sizeof(\$careers) == 1) \{
    \$temp = explode(\$cf, " ");
    for(\$i = 0; \$i \< sizeof(\$temp); \$i++) \{
        \$data[\$temp[\$i]] = copy(\$data[" noskill"]);
    \}
\}*/

\$careers = map_indices(\$data);

/* The information will categorized by career. So let's scan through the careers in our data list. */
for(\$i = 0; \$i \< sizeof(\$careers); \$i++) \{
    \$career = \$careers[\$i];
    \$types = map_indices(\$data[\$career]);
    \$types += (\{ "mix", "style" \});

    if(\$career != " noskill") \{
        if(cProperties[\$career]) \{
            \$rstr += "\<center\>\<h2\>" + capitalize(Str(\$career)) + " (" + Str(Int(Get(\$character, cProperties[\$career]))) + ")\</h2\>\</center\>";
        \} else \{
            \$rstr += "\<center\>\<h2\>" + capitalize(Str(\$career)) + "\</h2\>\</center\>";
        \}
    \}

    \$rstr += "\<table border='1' width='96%' align='center'\>";
    /* Now group based on the command required */

    for(\$j = 0; \$j \< sizeof(\$types); \$j++) \{
        \$type = \$types[\$j];

        if(\$type == "style" \&\& \$career != " noskill") \{
            if(\$career == "hairdresser") \{
               \$rstr += ::hairstyles(\$level: Int(\$character."skill:career:hairdresser"));
            \} else \{
               \$rstr += ::hairstyles(\$level: 0);
            \}
        \} else if(\$type == "mix" \&\& \$career != " noskill") \{
            if(\$career == "dyer") \{
               \$rstr += ::dyer(\$level: Int(\$character."skill:alteration:dyeing"));
            \} else \{
               \$rstr += ::dyer(\$level: 0);
            \}
        \} else \{
          if(\$career != " noskill") \{

            \$rstr += "\<tr\>\<td colspan='5' bgcolor='#300'\>\<b\>\<i\>\<font color='white'\>\<a style='color: white' href=\\"javascript:switchid('" + Str(\$types[\$j]) + "');\\"\>" + capitalize(Str(\$types[\$j])) + "\</a\>\</font\>\</i\>\</b\>\</td\>\</tr\>";
            \$rstr += "\<tr\>\<td colspan='5'\>\<div id='" + Str(\$types[\$j]) + "' style='display:block;'\>\<table cellspacing='0' border='1px' width='100%'\>";
            \$rstr += "\<tr bgcolor='#630'\>\<td width='50px'\>\<center\>\<b\>\<font color='white'\>Level\</font\>\</b\>\</center\>\</td\> \<td width='100px'\>\<center\>\<b\>\<font color='white'\>Item\</font\>\</b\>\</center\>\</td\> \<td width='100px'\>\<center\>\<b\>\<font color='white'\>Command\</font\>\</b\>\</center\>\</td\> \<td width='100px'\>\<center\>\<b\>\<font color='white'\>Resource\</font\>\</b\>\</center\>\</td\> \<td width='75px'\>\<center\>\<b\>\<font color='white'\>Unit Cost\</font\>\</b\>\</center\>\</td\>\<td width='75px'\>\<center\>\<b\>\<font color='white'\>Pattern\</font\>\</b\>\</center\>\</td\>";

                        if(\$staff) \{
                            \$rstr += "\<td\>\<center\>\<b\>DB\</b\>\</center\>\</td\>";
                        \}

            \$rstr += "\</tr\>";

/*
            if(\$data[" noskill"][\$type]) \{
                \$items = map_indices(\$data[" noskill"][\$type]);

                \$rstr += "\<tr bgcolor='" + \$color + "'\>\<td align='right' bgcolor='" + \$color2 + "' valign='top' rowspan='" + Str(sizeof(\$items)) + "'\>\<font color='black'\>" + Str(0) + "\</font\>\</td\>";
                for(\$m = 0; \$m \< sizeof(\$items); \$m++) \{
                    \$item = \$data[" noskill"][\$type][\$items[\$m]];

                    \$brief = \$items[\$m];
                    \$db = \$item["db"];
                    \$command = \$type;
                    \$resource = \$item["resource"];

                    if(\$item["cost"]) \{
                        if(\$command == "chiseling") \{
                            \$cost = Flt(\$item["cost"][0])/100.0;
                        \} else if(\$command != "molding" \&\& \$command != "chiseling") \{
                            \$cost = Flt(\$item["cost"][0])/10.0;
                        \} else \{
                            \$cost = Flt(\$item["cost"][0]);
                        \}
                    \} else \{
                        \$cost = "--";
                    \}

                        if(\$color == "#ffffff") \{
                            \$color = "#eeeeee";
                        \} else \{
                            \$color = "#ffffff";
                        \}

                    \$rstr += "\<td\>" + Str(\$brief) + "\</td\>\<td\>\<center\>" + Str(\$command) + "\</center\>\</td\>\<td\>\<center\>" + Str(\$resource) + "\</center\>\</td\>\<td\>\<center\>" + Str(\$cost) + "\</center\>\</td\>";

                    if(\$staff) \{
                        \$rstr += "\<td\>\<center\>" + Str(\$db) + "\</center\>\</td\>";
                    \}

                    \$rstr += "\</tr\>\<tr bgcolor='" + \$color + "'\>";
                \}
                        if(\$color2 == "#ffffff") \{
                            \$color2 = "#eeeeee";
                        \} else \{
                            \$color2 = "#ffffff";
                        \}

                \$rstr += "\</tr\>";
            \}
*/

            if(\$staff) \{
                \$levelLimit = 24;
            \} else \{
                if(cProperties[\$career]) \{
                    \$levelLimit = Int(Get(\$character, cProperties[\$career]));
                \} else \{
                    \$levelLimit = 0;
                \}
            \}
            for(\$k = 0; \$k \<= \$levelLimit; \$k++) \{

                if(\$data[\$career][\$type][Str(\$k)]) \{
                    \$items = map_indices(\$data[\$career][\$type][Str(\$k)]);

                    \$rstr += "\<tr bgcolor='" + \$color + "'\>\<td style='1px solid black' bgcolor='" + \$color2 + "' align='right' valign='top' rowspan='" + Str(sizeof(\$items)) + "'\>\<font color='black'\>" + Str(\$k) + "\</font\>\</td\>";
                    for(\$m = 0; \$m \< sizeof(\$items); \$m++) \{

                        \$item = \$data[\$career][\$type][Str(\$k)][\$items[\$m]];

                        if(\$item["hidden"]) \$hidden = 1; else \$hidden = nil;

                        \$brief = \$items[\$m];

                        \$db = \$item["db"];

                        \$command = \$type;

                        \$resource = \$item["resource"];

                        \$bg = "";
                        if(\$item["pattern"]) \{
                            if(\$character."crafting:patterns") \{
                                \$patterns = \$character."crafting:patterns";

                                if(\$patterns[\$command + "-" + \$resource]) \{
                                    if(member(strip_right(\$brief), \$patterns[\$command + "-" + \$resource])) \{
                                        \$pattern = "KNOWN";
                                    \} else \{
                                        \$pattern = "NOT KNOWN";
                                        \$bg = "style='background-color:#FF6347;'";
                                    \}
                                \} else \{
                                    \$pattern = "NOT KNOWN";
                                    \$bg = "style='background-color:#FF6347;'";
                                \}
                            \} else \{
                                \$pattern = "NOT KNOWN";
                                \$bg = "style='background-color:#FF6347;'";
                            \}
                        \} else \{
                            \$pattern = "--";
                        \}

                        if(\$item["cost"]) \{
                            if(\$command == "chiseling") \{
                                \$cost = Flt(\$item["cost"][0])/100.0;
                            \} else if(\$command != "molding" \&\& \$command != "chiseling") \{
                                \$cost = Flt(\$item["cost"][0])/10.0;
                            \} else \{
                                \$cost = Flt(\$item["cost"][0]);
                            \}
                        \} else \{
                            \$cost = "--";
                        \}

                        if(\$color == "#ffffff") \{
                            \$color = "#eeeeee";
                        \} else \{
                            \$color = "#ffffff";
                        \}

                        if(!\$hidden \|\| \$actor.storyhost) \{

                            \$rstr += "\<td " + Str(\$bg) + "\>";

                            if(\$hidden) \$rstr += "\<i\>";
                            \$rstr += Str(\$brief);
                            if(\$hidden) \$rstr += "\</i\>";

                            \$rstr += "\</td\>\<td " + Str(\$bg) + "\>\<center\>";

                            if(\$hidden) \$rstr += "\<i\>";
                            \$rstr += Str(\$command);
                            if(\$hidden) \$rstr += "\</i\>";

                            \$rstr += "\</center\>\</td\>\<td " + Str(\$bg) + "\>\<center\>";

                            if(\$hidden) \$rstr += "\<i\>";
                            \$rstr += Str(\$resource);
                            if(\$hidden) \$rstr += "\</i\>";

                            \$rstr += "\</center\>\</td\>\<td " + Str(\$bg) + "\>\<center\>";

                            if(\$hidden) \$rstr += "\<i\>";
                            \$rstr += Str(\$cost);
                            if(\$hidden) \$rstr += "\</i\>";

                            \$rstr += "\</center\>\</td\>\<td " + Str(\$bg) + "\>\<center\>\<font size='2'\>";

                            if(\$hidden) \$rstr += "\<i\>";
                            \$rstr += Str(\$pattern);
                            if(\$hidden) \$rstr += "\</i\>";

                            \$rstr += "\</font\>\</center\>\</td\>";

                            if(\$staff) \{
                                \$rstr += "\<td\>\<center\>" + Str(\$db) + "\</center\>\</td\>";
                            \}

                            \$rstr += "\</tr\>\<tr bgcolor='" + \$color + "'\>";
                        \}
                    \}

                        if(\$color2 == "#ffffff") \{
                            \$color2 = "#eeeeee";
                        \} else \{
                            \$color2 = "#ffffff";
                        \}
                    \$rstr += "\</tr\>";
                \}
            \}
            \$rstr += "\</table\>\</div\>\</td\>\</tr\>";
          \}
        \}
    \}

    \$rstr += "\</table\>\<br/\>";

\}

\$rstr = replace_strings(\$rstr, "shaping metal", "shaping bar");
\$rstr = replace_strings(\$rstr, "forging metal", "forging rod");
\$rstr = replace_strings(\$rstr, "cutting gems", "cutting gem");
\$rstr = replace_strings(\$rstr, "etching metal", "etching");
\$rstr = replace_strings(\$rstr, "molding", "mold");
\$rstr = replace_strings(\$rstr, "cutting", "cut", "forging", "forge", "shaping", "shape", "carving", "carve", "etching", "etch", "tailoring", "tailor", "chiseling", "chisel", "weaving", "weave", "knitting", "knit");

return ParseXML(\$rstr);
      </Core:Property>
      <Core:Property property="merry:lib:viewdb">
         X[M] object db;
int i, j, k, l;
string rStr;

if(!Obj(\$db)) \{
    error("Object " + \$db + " does not exist.");
\}

db = Obj(\$db);

\$props = copy(db."*");

\$types = (\{ \});
if(structure_propmap(\$props)["alteration"] \&\& structure_propmap(\$props)["alteration"]["knowledge"]) \{
    \$data = structure_propmap(\$props)["alteration"]["knowledge"];
    \$types = map_indices(\$data);
\} 

\$rMap = ([ ]);

\$careerDB = \$\{Ironclaw:Lib:Teaching:newCareersDB\}; 
\$temp = copy(\$careerDB."*"); 
\$allCareers = map_indices(\$temp) - (\{ "revisions" \});

rStr = "";

for(i = 0; sizeof(\$types) \&\& i \< sizeof(\$types); i++) \{
    \$temp = \$data[\$types[i]];

    if(typeof(\$temp) == 6) \{
        \$careers = map_indices(\$temp);

        for(j = 0; j \< sizeof(\$careers); j++) \{
            if(member(\$careers[j], \$allCareers)) \{
                \$tempcareer = \$temp[\$careers[j]];
                \$levels = map_indices(\$tempcareer);

                for(k = 0; k \< sizeof(\$levels); k++) \{
                    \$temp2 = \$tempcareer[\$levels[k]];
                    \$items = map_indices(\$temp2);

                    for(l = 0; l \< sizeof(\$items); l++) \{
                        if(!\$rMap[\$careers[j]]) \{
                            \$rMap[\$careers[j]] = ([ ]);
                        \}

                        if(\$temp2[\$items[l]]["cost"]) \{
                            \$cost = \$temp2[\$items[l]]["cost"][0];
                        \} else \{
                            \$cost = "--";
                        \}

                        if(\$temp2[\$items[l]]["newobject"]) \{
                            \$newobject = \$temp2[\$items[l]]["newobject"];
                        \} else \{
                            \$newobject = "--";
                        \}

                        if(!\$rMap[\$careers[j]][\$levels[k]]) \{
                            \$rMap[\$careers[j]][Str(\$levels[k])] = (\{ (\{ \$items[l], explode(\$types[i], "-")[0], explode(\$types[i], "-")[1], \$cost, \$newobject \}) \});
                        \} else \{
                            \$rMap[\$careers[j]][Str(\$levels[k])] += (\{ (\{ \$items[l], explode(\$types[i], "-")[0], explode(\$types[i], "-")[1], \$cost, \$newobject \}) \});
                        \}
                    \}
                \}

                \$data[\$types[i]][\$careers[j]] = nil;
            \}
      
        \}
    \}
\}

for(i = 0; i \< sizeof(\$types); i++) \{
    \$temp = \$data[\$types[i]];

    if(typeof(\$temp) == 6) \{
  
        if(map_sizeof(\$temp)) \{
            \$items = map_indices(\$temp);

            for(j = 0; j \< sizeof(\$items); j++) \{
                if(!\$rMap[" No Skill"]) \{
                    \$rMap[" No Skill"] = ([ ]);
                \}

                if(\$temp[\$items[j]]["cost"]) \{
                    \$cost = \$temp[\$items[j]]["cost"][0];
                \} else \{
                    \$cost = "--";
                \}

                if(\$temp[\$items[j]]["newobject"]) \{
                    \$newobject = Str(\$temp[\$items[j]]["newobject"]);
                \} else \{
                    \$newobject = "--";
                \}

                if(!\$rMap[" No Skill"]["0"]) \{
                    \$rMap[" No Skill"]["0"] = (\{ (\{ \$items[j], explode(\$types[i], "-")[0], explode(\$types[i], "-")[1], \$cost, \$newobject \}) \});
                \} else \{
                    \$rMap[" No Skill"]["0"] += (\{ (\{ \$items[j], explode(\$types[i], "-")[0], explode(\$types[i], "-")[1], \$cost, \$newobject \}) \});
                \} 
            \}
        \}
    \}
\}

\$rCareers = map_indices(\$rMap);
\$sz = sizeof(\$rCareers);

for(i = 0; i \< \$sz; i++) \{
    rStr += "\<b\>" + capitalize(\$rCareers[i]) + "\</b\>";
    rStr += "\<table width='100%' border='1'\>\<tr\>\<td\>\<b\>Level\</b\>\</td\>\<td\>\<b\>Item\</b\>\</td\>\<td\>\<b\>Command\</b\>\</td\> \<td\>\<b\>Material\</b\>\</td\>\<td\>\<b\>Cost\</b\>\</td\>\<td\>\<b\>New Object\</b\>\</td\>\</tr\>";

    for(j = 0; j \<= 24; j++) \{
        if(\$rMap[\$rCareers[i]][Str(j)] \&\& sizeof(\$rMap[\$rCareers[i]][Str(j)])) \{
            \$items = \$rMap[\$rCareers[i]][Str(j)];

            rStr += "\<tr\>\<td width='50px' rowspan='" + sizeof(\$items) +"' valign='top'\>" + Str(j) + "\</td\>";

            for(k = 0; k \< sizeof(\$items); k++) \{
                rStr += "\<td width='150px'\>" + Str(\$items[k][0]) + "\</td\>\<td width='50px'\>" + Str(\$items[k][1]) + "\</td\>\<td width='75px'\>" + Str(\$items[k][2]) + "\</td\>\<td width='50px'\>" + Str(\$items[k][3]) + "\</td\>\<td\>" + Str(\$items[k][4]) + "\</td\>\</tr\>\<tr\>";
            \}

            rStr += "\</tr\>";
        \}
    \}
    rStr += "\</table\>\<table\>\<tr\>\<td\>\</td\>\</tr\>\</table\>";
\}

rStr = replace_strings(rStr, "shaping metal", "shaping bar");
rStr = replace_strings(rStr, "forging metal", "forging rod");
rStr = replace_strings(rStr, "cutting gems", "cutting gem");
rStr = replace_strings(rStr, "etching metal", "etching");
rStr = replace_strings(rStr, "molding", "mold");
rStr = replace_strings(rStr, "cutting", "cut", "forging", "forge", "shaping", "shape", "carving", "carve", "etching", "etch", "tailoring", "tailor", "chiseling", "chisel");

return rStr;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1303578333, "jominey", "E", 1303578468, "jominey", "E", 1303578523, "jominey", "E", 1303578574, "jominey", "E", 1303578611, "jominey", "E", 1303579460, "jominey", "E", 1303579569, "jominey", "E", 1303579618, "jominey", "E", 1303579922, "jominey", "E", 1303581035, "jominey", "E", 1303581070, "jominey", "E", 1303581472, "jominey", "E", 1303581628, "jominey", "E", 1303581696, "jominey", "E", 1303581745, "jominey", "E", 1303581814, "jominey", "E", 1303581854, "jominey", "E", 1303581916, "jominey", "E", 1303581970, "jominey", "E", 1303582058, "jominey", "E", 1303582175, "jominey", "E", 1303582223, "jominey", "E", 1303582437, "jominey", "E", 1303582934, "jominey", "E", 1303582977, "jominey", "E", 1303583035, "jominey", "E", 1303583232, "jominey", "E", 1303583483, "jominey", "E", 1303583823, "jominey", "E", 1303583897, "jominey", "E", 1303583977, "jominey", "E", 1303584015, "jominey", "E", 1303584388, "jominey", "E", 1303584435, "jominey", "E", 1303584503, "jominey", "E", 1303584524, "jominey", "E", 1303584560, "jominey", "E", 1303584643, "jominey", "E", 1303584704, "jominey", "E", 1303584983, "jominey", "E", 1303585145, "jominey", "E", 1303585230, "jominey", "E", 1303585370, "jominey", "E", 1303585471, "jominey", "E", 1303585617, "jominey", "E", 1303585725, "jominey", "E", 1303585842, "jominey", "E", 1303585930, "jominey", "E", 1303585976, "jominey", "E", 1303586127, "jominey", "E", 1303586183, "jominey", "E", 1303586229, "jominey", "E", 1303586306, "jominey", "E", 1303586332, "jominey", "E", 1303586353, "jominey", "E", 1303586514, "jominey", "E", 1303586682, "jominey", "E", 1303586819, "jominey", "E", 1303586845, "jominey", "E", 1303586957, "jominey", "E", 1303587081, "jominey", "E", 1303587130, "jominey", "E", 1303587345, "jominey", "E", 1303587534, "jominey", "E", 1303587569, "jominey", "E", 1303587643, "jominey", "E", 1303588035, "jominey", "E", 1303588101, "jominey", "E", 1303588150, "jominey", "E", 1303588476, "jominey", "E", 1303588555, "jominey", "E", 1303589298, "jominey", "E", 1303589351, "jominey", "E", 1303589401, "jominey", "E", 1303589622, "jominey", "E", 1303589786, "jominey", "E", 1303590222, "jominey", "E", 1303591902, "jominey", "E", 1303678877, "jominey", "E", 1303678998, "jominey", "E", 1303679055, "jominey", "E", 1303679164, "jominey", "E", 1303679764, "jominey", "E", 1303679814, "jominey", "E", 1303679851, "jominey", "E", 1303679890, "jominey", "E", 1303680200, "jominey", "E", 1303680554, "jominey", "E", 1303681315, "jominey", "E", 1304197416, "jominey", "E", 1304197470, "jominey", "E", 1304197565, "jominey", "E", 1304197642, "jominey", "E", 1304197784, "jominey", "E", 1304197870, "jominey", "E", 1304198037, "jominey", "E", 1304198158, "jominey", "E", 1304198218, "jominey", "E", 1304198353, "jominey", "E", 1304198436, "jominey", "E", 1304198573, "jominey", "E", 1307821605, "jominey", "E", 1307821711, "jominey", "E", 1307822463, "jominey", "E", 1307826682, "jominey", "E", 1307826774, "jominey", "E", 1307826863, "jominey", "E", 1307827131, "jominey", "E", 1307827251, "jominey", "E", 1307827315, "jominey", "E", 1307845362, "jominey", "E", 1307845792, "jominey", "E", 1307845847, "jominey", "E", 1307845907, "jominey", "E", 1307846187, "jominey", "E", 1307846433, "jominey", "E", 1307846527, "jominey", "E", 1307847177, "jominey", "E", 1307848010, "jominey", "E", 1307848219, "jominey", "E", 1307848432, "jominey", "E", 1307848537, "jominey", "E", 1307848631, "jominey", "E", 1307848711, "jominey", "E", 1307848746, "jominey", "E", 1307848789, "jominey", "E", 1307848827, "jominey", "E", 1307848854, "jominey", "E", 1307849267, "jominey", "E", 1307849529, "jominey", "E", 1307849807, "jominey", "E", 1307849850, "jominey", "E", 1307849937, "jominey", "E", 1307849976, "jominey", "E", 1307850026, "jominey", "E", 1307850100, "jominey", "E", 1307850152, "jominey", "E", 1307850246, "jominey", "E", 1307850309, "jominey", "E", 1307850397, "jominey", "E", 1307850441, "jominey", "E", 1307850664, "jominey", "E", 1307850686, "jominey", "E", 1307850831, "jominey", "E", 1307851867, "jominey", "E", 1307851970, "jominey", "E", 1307852498, "jominey", "E", 1307853353, "jominey", "E", 1307853729, "jominey", "E", 1307853990, "jominey", "E", 1307854213, "jominey", "E", 1307854350, "jominey", "E", 1307854447, "jominey", "E", 1307854494, "jominey", "E", 1307854584, "jominey", "E", 1307854615, "jominey", "E", 1307854653, "jominey", "E", 1307854782, "jominey", "E", 1307854987, "jominey", "E", 1307855176, "jominey", "E", 1307855343, "jominey", "E", 1307855689, "jominey", "E", 1307856333, "jominey", "E", 1307856476, "jominey", "E", 1307857066, "jominey", "E", 1307857135, "jominey", "E", 1307857199, "jominey", "E", 1307858981, "jominey", "E", 1307859113, "jominey", "E", 1307907180, "jominey", "E", 1307907305, "jominey", "E", 1307907438, "jominey", "E", 1307907592, "jominey", "E", 1307907720, "jominey", "E", 1307907985, "jominey", "E", 1307908062, "jominey", "E", 1307908237, "jominey", "E", 1307908441, "jominey", "E", 1307908605, "jominey", "E", 1307908989, "jominey", "E", 1307909043, "jominey", "E", 1307909425, "jominey", "E", 1307909504, "jominey", "E", 1307909543, "jominey", "E", 1307909654, "jominey", "E", 1307909789, "jominey", "E", 1307909876, "jominey", "E", 1307909954, "jominey", "E", 1307909999, "jominey", "E", 1307910093, "jominey", "E", 1307910595, "jominey", "E", 1307910665, "jominey", "E", 1307910833, "jominey", "E", 1307910937, "jominey", "E", 1307910988, "jominey", "E", 1307911074, "jominey", "E", 1307911360, "jominey", "E", 1307911559, "jominey", "E", 1307912481, "jominey", "E", 1307912706, "jominey", "E", 1307912768, "jominey", "E", 1307912830, "jominey", "E", 1307912864, "jominey", "E", 1307912935, "jominey", "E", 1307912966, "jominey", "E", 1307913001, "jominey", "E", 1307913029, "jominey", "E", 1307913536, "jominey", "E", 1307914054, "jominey", "E", 1307914110, "jominey", "E", 1307914214, "jominey", "E", 1307914292, "jominey", "E", 1307914336, "jominey", "E", 1307914447, "jominey", "E", 1307914531, "jominey", "E", 1307914686, "jominey", "E", 1307914761, "jominey", "E", 1307914784, "jominey", "E", 1307914894, "jominey", "E", 1307915054, "jominey", "E", 1307915127, "jominey", "E", 1307915344, "jominey", "E", 1307915406, "jominey", "E", 1307915467, "jominey", "E", 1307915517, "jominey", "E", 1307915556, "jominey", "E", 1307915650, "jominey", "E", 1307915685, "jominey", "E", 1307915727, "jominey", "E", 1307915764, "jominey", "E", 1307915909, "jominey", "E", 1307915987, "jominey", "E", 1307916011, "jominey", "E", 1307916084, "jominey", "E", 1307916162, "jominey", "E", 1307916220, "jominey", "E", 1307916285, "jominey", "E", 1307916385, "jominey", "E", 1307916509, "jominey", "E", 1308684120, "jominey", "E", 1308684357, "jominey", "E", 1308684427, "jominey", "E", 1308684516, "jominey", "E", 1308684591, "jominey", "E", 1308684650, "jominey", "E", 1308685230, "jominey", "E", 1308685335, "jominey", "E", 1308685467, "jominey", "E", 1308685790, "jominey", "E", 1308686321, "jominey", "E", 1308686576, "jominey", "E", 1308688113, "jominey", "E", 1308701227, "jominey", "E", 1308701351, "jominey", "E", 1308701737, "jominey", "E", 1308701844, "jominey", "E", 1308702021, "jominey", "E", 1308702526, "jominey", "E", 1308703023, "jominey", "E", 1308703232, "jominey", "E", 1308703618, "jominey", "E", 1308705605, "jominey", "E", 1308705828, "jominey", "E", 1308706115, "jominey", "E", 1308706340, "jominey", "E", 1308798202, "jominey", "E", 1308799001, "jominey", "E", 1308799222, "jominey", "E", 1308799416, "jominey", "E", 1308800219, "jominey", "E", 1308800555, "jominey", "E", 1308803571, "jominey", "E", 1457914950, "tonyd", "P", 1457914959, "tonyd", "P", 1458363956, "tonyd", "P", 1478137489, "jominey", "E", 1528320790, "jominey", "E", 1528320845, "jominey", "E", 1528320868, "jominey", "E", 1528320905, "jominey", "E", 1528320959, "jominey", "E", 1561850509, "jominey", "E", 1561850566, "jominey", "E", 1561850688, "jominey", "E", 1561850763, "jominey", "E", 1561850797, "jominey", "E", 1561851128, "jominey", "E", 1561851221, "jominey", "E", 1561851286, "jominey", "E", 1561851350, "jominey", "E", 1561851412, "jominey", "E", 1561851472, "jominey", "E", 1561851657, "jominey", "E", 1561851714, "jominey", "E", 1561851884, "jominey", "E", 1561851921, "jominey", "E", 1561852053, "jominey", "E", 1561852084, "jominey", "E", 1561852215, "jominey", "E", 1561852290, "jominey", "E", 1561852350, "jominey", "E", 1562020931, "jominey", "E", 1562192948, "jominey", "E", 1562193013, "jominey", "E", 1562193037, "jominey", "E", 1562193451, "jominey", "E", 1562194516, "jominey", "E", 1562195173, "jominey", "E", 1562207422, "jominey", "E", 1562207860, "jominey", "E", 1562208050, "jominey", "E", 1562208190, "jominey", "E", 1570293775, "jominey", "E", 1570294092, "jominey", "E", 1570295056, "jominey", "R", 1570295531, "jominey", "E", 1570295669, "jominey", "E", 1570295756, "jominey", "E", 1570295879, "jominey", "P", 1570295977, "jominey", "P", 1570296076, "jominey", "P", 1570296169, "jominey", "P", 1570296257, "jominey", "P", 1570296444, "jominey", "E", 1570296789, "jominey", "E", 1570296876, "jominey", "E", 1570297571, "jominey", "E", 1570297595, "jominey", "E", 1570297608, "jominey", "E", 1570297625, "jominey", "E", 1571935755, "jominey", "E", 1571935835, "jominey", "E", 1571936026, "jominey", "E", 1571936061, "jominey", "E", 1571936264, "jominey", "E", 1571936367, "jominey", "E", 1571936503, "jominey", "E", 1571936574, "jominey", "E", 1571936766, "jominey", "E", 1571936834, "jominey", "E", 1571937000, "jominey", "E", 1571937055, "jominey", "E", 1571937395, "jominey", "E", 1571937557, "jominey", "E", 1571937692, "jominey", "E", 1571937827, "jominey", "E", 1571938030, "jominey", "E", 1571938086, "jominey", "E", 1571938128, "jominey", "E", 1571938172, "jominey", "E", 1571938261, "jominey", "E", 1571938704, "jominey", "E", 1571938739, "jominey", "E", 1571938928, "jominey", "E", 1571939069, "jominey", "E", 1571939087, "jominey", "E", 1571939183, "jominey", "P", 1571939253, "jominey", "E", 1571939267, "jominey", "E", 1571939415, "jominey", "E", 1571939444, "jominey", "E", 1571939758, "jominey", "P", 1572306388, "jominey", "E", 1572306409, "jominey", "E", 1572315125, "jominey", "E", 1572315292, "jominey", "E", 1572913917, "jominey", "E", 1572913954, "jominey", "E", 1572914134, "jominey", "E", 1573095762, "jominey", "E", 1573514046, "jominey", "E", 1573514073, "jominey", "E", 1573677394, "jominey", "E", 1579911820, "jominey", "E", 1579911894, "jominey", "E", 1579911991, "jominey", "E", 1579912081, "jominey", "E", 1579912225, "jominey", "E", 1579912315, "jominey", "E", 1579912409, "jominey", "E", 1579912449, "jominey", "E", 1579912478, "jominey", "E", 1579912586, "jominey", "E", 1579912679, "jominey", "E", 1579912704, "jominey", "E", 1579912788, "jominey", "E", 1579912852, "jominey", "E", 1579912946, "jominey", "E", 1579912996, "jominey", "E", 1579913041, "jominey", "E", 1579913434, "jominey", "E", 1579913499, "jominey", "E", 1579913705, "jominey", "E", 1579914215, "jominey", "E", 1579914265, "jominey", "E", 1579914418, "jominey", "E", 1579914620, "jominey", "E", 1585583502, "jominey", "E", 1585583602, "jominey", "E", 1590015956, "jominey", "E", 1590015982, "jominey", "E", 1590016173, "jominey", "E", 1590016281, "jominey", "E", 1590017236, "jominey", "E", 1590017266, "jominey", "E", 1594331237, "jominey", "E", 1594331261, "jominey", "E", 1594331330, "jominey", "E", 1594331557, "jominey", "E", 1595784090, "jominey", "E", 1595784123, "jominey", "E", 1595784160, "jominey", "E", 1595784188, "jominey", "E", 1595784221, "jominey", "E", 1595784556, "jominey", "E", 1595784640, "jominey", "E", 1595784663, "jominey", "E", 1595785677, "jominey", "E", 1595785754, "jominey", "E", 1595785893, "jominey", "E", 1595785946, "jominey", "E", 1595786023, "jominey", "E", 1595786050, "jominey", "E", 1595786313, "jominey", "E", 1595786537, "jominey", "E", 1595786678, "jominey", "E", 1595786766, "jominey", "E", 1595787055, "jominey", "E", 1595787202, "jominey", "E", 1595787407, "jominey", "E", 1595787460, "jominey", "E", 1595787594, "jominey", "E", 1595787619, "jominey", "E", 1595787647, "jominey", "E", 1595787861, "jominey", "E", 1595787911, "jominey", "E", 1595789970, "jominey", "E", 1595790105, "jominey", "E", 1595790157, "jominey", "E", 1595790187, "jominey", "E", 1595790246, "jominey", "E", 1607283614, "sendnoodlez", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
