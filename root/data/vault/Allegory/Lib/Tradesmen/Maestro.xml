<object clone="/obj/properties" owner="ezralee">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:do_nothing">
         X[M] \$npc = \$par["npc"];
\$actor = \$par["actor"];
\$original = \$par["original"];

Act(\$npc, "refuse", \$what: (\{ \$original \}), \$who: \$actor);
Social(\$npc, "smile", "softly", "I'll give you some more time to decide.", "at", \$actor);

\$npc.busy = nil;

return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:make_the_thing">
         X[M] \$npc = \$par["npc"];
\$actor = \$par["actor"];
\$original = \$par["original"];

\$musicians = \$original."trait:musicians";

Act(\$npc, "accept", \$what: (\{ \$original \}), \$who: \$actor);
\$dudes = Spawn(\$original."trait:musicians");

\$delay(2, FALSE, "1c3c");
 
EmitTo(\$actor, "With a flourish, " + Describe(\$npc) + " bows to you before clapping loudly overhead.");
EmitIn(\$actor."base:environment", "With a flourish, " + Describe(\$npc) + " bows to " + Describe(\$actor) + " before clapping loudly overhead.", \$actor);

\$dudes."base:environment" = \$actor."base:environment"; 

\$delay(3, FALSE, "41f2");

Social(\$npc, "announce", "enthusiastically", "I am pleased to introduce our entertainment for the occasion!", "to", \$actor);

Slay(\$original);

\$npc.busy = nil;

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-post:offer-who%butcher">
         X[M] if(\$this.busy) \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "ask", "quietly", "Please give me a moment?", nil, \$actor);
    return FALSE;
\}

if(sizeof(\$what) \> 1) \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "smile", "politely", "One at a time, please.", "at", \$actor);
    return FALSE;
\}

\$ob = NRefOb(\$what[0]);

if(!\$ob."trait:musicians") \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "glance", "uncertainly", "I'm sorry, I don't know what to do with this.", "at", \$actor);
    return FALSE;
\}

\$this.busy = TRUE;

\$par = ([ ]);
\$par["npc"] = \$this;
\$par["actor"] = \$actor;
\$par["original"] = \$ob;

\$options = \$ob."trait:musicians";

\$a = "I'd like the entertainment to start now.";
\$a_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$a_fun = "make_the_thing";
\$par["a_options"] = \$options;

\$c = "I need more time to think.";
\$c_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$c_fun = "do_nothing";

\$expires = 30;
\$expire_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$expire_fun = "do_nothing";

Social(\$this, "skim", "momentarily", nil, nil, \$ob);

\$delay(5, FALSE, "9926");

\$optionsStr = "";

EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles curiously at " + Describe(\$actor) + ".", "social:third"));

interaction::question(\$question: "", \$par: \$par);

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-post:offer-who%maestro">
         X[M] if(\$this.busy) \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "ask", "quietly", "Please give me a moment?", nil, \$actor);
    return FALSE;
\}

if(sizeof(\$what) \> 1) \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "smile", "politely", "One at a time, please.", "at", \$actor);
    return FALSE;
\}

\$ob = NRefOb(\$what[0]);

if(!\$ob."trait:musicians") \{
    Act(this, "refuse", \$what: \$what, \$who: \$actor);
    Social(\$this, "glance", "uncertainly", "I'm sorry, I don't know what to do with this.", "at", \$actor);
    return FALSE;
\}

\$this.busy = TRUE;

\$par = ([ ]);
\$par["npc"] = \$this;
\$par["actor"] = \$actor;
\$par["original"] = \$ob;

\$options = \$ob."trait:musicians";

\$a = "I'd like the entertainment to start now.";
\$a_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$a_fun = "make_the_thing";
\$par["a_options"] = \$options;

\$c = "I need more time to think.";
\$c_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$c_fun = "do_nothing";

\$expires = 30;
\$expire_ob = \$\{Allegory:Lib:Tradesmen:Maestro\};
\$expire_fun = "do_nothing";

Social(\$this, "skim", "momentarily", nil, nil, \$ob);

\$delay(5, FALSE, "9926");

\$optionsStr = "";

EmitIn(\$actor."base:environment", TAG(capitalize(Describe(\$this)) + " smiles curiously at " + Describe(\$actor) + ".", "social:third"));

interaction::question(\$question: "", \$par: \$par);

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1589066742, "jominey", "E", 1589067789, "jominey", "E", 1589067808, "jominey", "E", 1589067833, "jominey", "E", 1589068168, "jominey", "E", 1589068227, "jominey", "E", 1589068438, "jominey", "E", 1589068502, "jominey", "E", 1589068768, "jominey", "E", 1589068880, "jominey", "E", 1589068955, "jominey", "P", 1589069211, "jominey", "E", 1589069280, "jominey", "P", 1589069619, "jominey", "R", 1589143824, "jominey", "E", 1589143856, "jominey", "E", 1589144094, "jominey", "E", 1589144124, "jominey", "E", 1589144660, "jominey", "E", 1589144712, "jominey", "E", 1589144990, "jominey", "E", 1589145065, "jominey", "E", 1589145081, "jominey", "E", 1589145175, "jominey", "E", 1589145266, "jominey", "E", 1589145339, "jominey", "E", 1589145418, "jominey", "E", 1589145455, "jominey", "E", 1589145556, "jominey", "E", 1589145674, "jominey", "E", 1589145811, "jominey", "E", 1589145840, "jominey", "E", 1589145903, "jominey", "E", 1589145969, "jominey", "E", 1651888980, "ezralee", "E", 1651895470, "ezralee", "E", 1651895529, "ezralee", "E", 1651895881, "ezralee", "E", 1651897223, "ezralee", "E", 1651897374, "ezralee", "E", 1651898131, "ezralee", "E", 1651898622, "ezralee", "E", 1651898628, "ezralee", "E", 1651898638, "ezralee", "E", 1651901399, "ezralee", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
