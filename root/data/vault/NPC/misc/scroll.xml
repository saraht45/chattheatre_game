<object clone="/base/obj/thing" owner="zwoc">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.02" density="0.9"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="objskin" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scroll"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scrolls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="average"/>
          <Base:Adjective adjective="ordinary"/>
          <Base:Adjective adjective="parchment"/>
          <Base:Adjective adjective="plain"/>
          <Base:Adjective adjective="plain-looking"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.seal:broken) | broken} {? | $(this.seal:type) | sealed } scroll
          </Base:Description>
          <Base:Description type="examine">
             An ordinary parchment scroll. {? | $(this.seal:type) | It has been stamped with the wax seal of $(this.seal:type). }
          </Base:Description>
          <Base:Description type="look">
             An ordinary parchment scroll. {? | $(this.seal:type) | It has been stamped with a wax seal.}
          </Base:Description>
          <Base:Description type="pbrief">scrolls</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="seal" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             official-looking seal
          </Base:Description>
          <Base:Description type="examine">
             The symbol representing $(this.seal:variation) has been stamped in wax signifying that this is an official document. {? | $(this.seal:broken) | The seal has been broken. }
          </Base:Description>
          <Base:Description type="look">
             This scroll has been stamped with a wax seal. {? | $(this.seal:broken) | The seal has been broken.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="bilbo:inherit:react:chant">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:cite">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:instruct">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:orate">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:preach">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:recite">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:sing">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:translate">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="writable">
         "1"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="bilbo:inherit:react:chant">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:cite">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:instruct">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:orate">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:preach">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:recite">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:sing">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:translate">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0010">
         "set this.scrollrefreshtemp to \$lookup(Generic:DB:ScrollDB)"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0020">
         "set this.bilbo:inherit:react:chant to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0030">
         "set this.bilbo:inherit:react:cite to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0040">
         "set this.bilbo:inherit:react:instruct to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0050">
         "set this.bilbo:inherit:react:sing to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0060">
         "set this.bilbo:inherit:react:orate to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0070">
         "set this.bilbo:inherit:react:preach to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0080">
         "set this.bilbo:inherit:react:recite to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0090">
         "set this.bilbo:inherit:react:translate to nil"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0100">
         "set writable 1"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0110">
         "set this.scrollrefreshtemp to nil"
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         0
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "scroll"
      </Core:Property>
      <Core:Property property="export:trait:sealable">
         1
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react-post:tear-dob">
         X[M] \$item = Spawn(\$\{Allegory:Props:Writing:Stationery:Scrap\});         
\$item."trait:color" = \$this."trait:color";         
\$item."trait:material" = \$this."trait:material";          
\$item."trait:quality" = \$this."trait:quality";         
\$item."base:environment" = \$actor; 
\$item2 = Spawn(\$\{Allegory:Props:Writing:Stationery:Scrap\});         
\$item2."trait:color" = \$this."trait:color";         
\$item2."trait:material" = \$this."trait:material";          
\$item2."trait:quality" = \$this."trait:quality";         
\$item2."base:environment" = \$actor; 
Slay(\$this); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" tears "+Describe(\$this, \$actor)+" in half.");    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:erase-what">
         X[M] if(\$this."seal:type") \{     
    EmitTo(\$actor, "You cannot erase sealed documents.");     
    return FALSE;     
\}     
     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:read-what">
         X[M] if(\$this."seal:type") \{     
    EmitTo(\$actor, "You cannot read sealed documents.");     
    return FALSE;     
\}     
     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:sign-what">
         X[M] if(\$this."seal:type") \{     
    EmitTo(\$actor, "You cannot modify a document that has already been signed and sealed.");     
    return FALSE;     
\}     
     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:write-what">
         X[M] if(\$this."seal:type") \{     
    EmitTo(\$actor, "You cannot modify a document that has already been signed and sealed.");     
    return FALSE;     
\}     
     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:break-dob">
         X[M] if (NRefDetail(\$target) ==  "seal") \{    
  EmitIn(\$actor."base:environment", Describe(\$actor)+" breaks the seal and the scroll unrolls easily, it may now be read.");    
  if (\$this."seal:type") \{             
    \$this."seal:type" = FALSE;   
Set(\$this, "seal:broken", TRUE);  
Set(\$this, "details:seal:sname:seal", TRUE);            
  \}             
  return FALSE;     
\}    
return TRUE;
      </Core:Property>
      <Core:Property property="misc:lastdopped">
         "1048692858 /usr/SkotOS/merry/fe76fdbb6793c3e6fedfa42659af22d0"
      </Core:Property>
      <Core:Property property="nip:item:cost">0</Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1055954180, "zwoc", "X", 1116302490, "zwoc", "S", 1116302497, "zwoc", "S", 1168581404, "tonyd", "S", 1170269197, "tunk_bodin", "X", 1372795846, "jominey", "K", 1372800971, "jominey", "K", 1372801150, "jominey", "E", 1372801188, "jominey", "E", 1372801249, "jominey", "E", 1372801311, "jominey", "E", 1372802885, "jominey", "K", 1372802992, "jominey", "E", 1373090855, "meandmine", "X", 1373095384, "meandmine", "X", 1373095663, "meandmine", "X", 1373096004, "meandmine", "X", 1373096037, "meandmine", "K", 1373096332, "meandmine", "K", 1373096522, "meandmine", "K", 1409124619, "tonyd", "P", 1409124718, "tonyd", "P", 1409124780, "tonyd", "P", 1409124812, "tonyd", "P", 1409124854, "tonyd", "P", 1409124876, "tonyd", "P", 1409124909, "tonyd", "P", 1409124932, "tonyd", "P", 1409124936, "tonyd", "P", 1409124970, "tonyd", "P", 1409125019, "tonyd", "P", 1409125058, "tonyd", "P", 1409125080, "tonyd", "P", 1409125090, "tonyd", "P", 1409125096, "tonyd", "P", 1409125100, "tonyd", "P", 1409125158, "tonyd", "P", 1409125610, "tonyd", "P", 1409125631, "tonyd", "P", 1409125956, "tonyd", "P", 1409125996, "tonyd", "P", 1409126138, "tonyd", "P", 1409126316, "tonyd", "P", 1409134608, "tonyd", "P", 1409134735, "tonyd", "P", 1409134752, "tonyd", "P", 1409134767, "tonyd", "P", 1409134778, "tonyd", "P", 1409134854, "tonyd", "P", 1409134894, "tonyd", "P", 1409135060, "tonyd", "P", 1409136282, "tonyd", "P", 1409136355, "tonyd", "P", 1409136400, "tonyd", "P", 1409137311, "tonyd", "P", 1409137333, "tonyd", "P", 1409137373, "tonyd", "P", 1409137391, "tonyd", "P", 1409137403, "tonyd", "P", 1409137443, "tonyd", "P", 1409138048, "tonyd", "P", 1409138974, "tonyd", "P", 1409139205, "tonyd", "P", 1409139280, "tonyd", "P", 1409139457, "tonyd", "P", 1409139466, "tonyd", "P", 1409139522, "tonyd", "P", 1409139788, "tonyd", "P", 1409139801, "tonyd", "P", 1409139952, "tonyd", "P", 1409139976, "tonyd", "P", 1409140109, "tonyd", "P", 1409140170, "tonyd", "P", 1409140181, "tonyd", "P", 1409140194, "tonyd", "P", 1409140218, "tonyd", "P", 1409140253, "tonyd", "P", 1409140268, "tonyd", "P", 1409140381, "tonyd", "P", 1409140394, "tonyd", "P", 1409140475, "tonyd", "P", 1409140577, "tonyd", "P", 1409140584, "tonyd", "P", 1409140611, "tonyd", "P", 1409140632, "tonyd", "P", 1409140660, "tonyd", "P", 1409140685, "tonyd", "P", 1409140747, "tonyd", "P", 1409140787, "tonyd", "P", 1409141038, "tonyd", "P", 1409141180, "tonyd", "P", 1409141216, "tonyd", "P", 1409141235, "tonyd", "P", 1409141256, "tonyd", "P", 1409141390, "tonyd", "P", 1409141426, "tonyd", "P", 1409141463, "tonyd", "P", 1409141557, "tonyd", "P", 1409141588, "tonyd", "P", 1409141600, "tonyd", "P", 1409141650, "tonyd", "P", 1409141662, "tonyd", "P", 1409141791, "tonyd", "P", 1409141819, "tonyd", "P", 1409141867, "tonyd", "P", 1409141881, "tonyd", "P", 1409141915, "tonyd", "P", 1409142164, "tonyd", "P", 1409142212, "tonyd", "P", 1409142314, "tonyd", "P", 1409142331, "tonyd", "P", 1409142536, "tonyd", "P", 1409142634, "tonyd", "P", 1409142665, "tonyd", "P", 1409142689, "tonyd", "P", 1409142701, "tonyd", "P", 1409142705, "tonyd", "P", 1409142731, "tonyd", "P", 1409142918, "tonyd", "P", 1409142945, "tonyd", "P", 1409142969, "tonyd", "P", 1409142993, "tonyd", "P", 1409143012, "tonyd", "P", 1409143278, "tonyd", "P", 1409143333, "tonyd", "P", 1409143494, "tonyd", "P", 1409143499, "tonyd", "P", 1409143518, "tonyd", "P", 1409143559, "tonyd", "P", 1409143827, "tonyd", "P", 1409144259, "tonyd", "P", 1409144436, "tonyd", "P", 1409144469, "tonyd", "P", 1409145680, "tonyd", "P", 1409288551, "tonyd", "P", 1479174932, "ezralee", "K", 1479175057, "ezralee", "K", 1479175261, "ezralee", "K", 1479176115, "ezralee", "K", 1479176153, "ezralee", "K", 1479176263, "ezralee", "K", 1568310241, "sendnoodlez", "E", 1570072544, "jominey", "E", 1581376734, "jominey", "K", 1606843399, "sendnoodlez", "X", 1624300808, "sendnoodlez", "E", 1624300809, "sendnoodlez", "E", 1624300855, "sendnoodlez", "E", 1624300892, "sendnoodlez", "E", 1624301113, "sendnoodlez", "E", 1624301312, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="writable">"1"</Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="966637404" state="Open" user="michaelb">
           The basic, original scroll.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
