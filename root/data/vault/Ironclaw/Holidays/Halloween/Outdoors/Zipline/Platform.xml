<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Rooms:UrOutside)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="25" maxweight="25"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="platform"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="platforms"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aerial"/>
          <Base:Adjective adjective="flat"/>
          <Base:Adjective adjective="sturdy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the aerial platform
          </Base:Description>
          <Base:Description type="examine">
             A sturdy, flat platform rising high above the ground. Many ziplines, with wooden handles, are tethered to the platform, leading into the distance. Far below you can distantly <acmd tag="command" cmd="look view">view</acmd> the east commons. Everyone looks like little ants from up here!
          </Base:Description>
          <Base:Description type="glance">
             The aerial platform high above the east commons.
          </Base:Description>
          <Base:Description type="look">
             A sturdy, flat platform rising high above the ground. There are ziplines strung along a wooden crossbar.
          </Base:Description>
          <Base:Description type="mapurl">
             http://dragonpieces.com/ICO/images/ziplines.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ladder" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ladder"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="down"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ladders"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="tall"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             tall ladder
          </Base:Description>
          <Base:Description type="examine">
             A tall, wooden ladder leading <acmd tag="command" cmd="climb ladder">down</acmd> to the East Commons, far below the platform. It is oft-considered the coward's exit.
          </Base:Description>
          <Base:Description type="look">
             A tall, wooden ladder leading <acmd tag="command" cmd="climb ladder">down</acmd> to the East Commons.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:World:DockTown:Commons:EastCommons|ladder)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="down"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="below" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="view"/>
            <Base:SName sname="down"/>
            <Base:SName sname="below"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="views"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the view below
          </Base:Description>
          <Base:Description type="examine">
             Far beneath you, everything seems like a child's toy: <br/> <describe-view view="$(IronClaw:Rooms:Docktown:Central:Commons:EastCommons)" type="examine" looker="$(actor)"/>
          </Base:Description>
          <Base:Description type="look">
             Far beneath you: <br/> <describe-view view="$(IronClaw:Rooms:Docktown:Central:Commons:EastCommons)" type="look" looker="$(actor)"/>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="big_snowdrift" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ground" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ground"/>
            <Base:SName sname="floor"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="grounds"/>
            <Base:PName pname="floors"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="distant"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the distant ground
          </Base:Description>
          <Base:Description type="examine">
             The distant ground is far below the platform. The <acmd tag="command" cmd="look view">view</acmd> is simply amazing.
          </Base:Description>
          <Base:Description type="look">
             The distant ground is far below the platform.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="handle" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="handle"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">handle</Base:Description>
          <Base:Description type="examine">
             One of the many handles dangling from the zipline. It tempts you to reach out and <acmd tag="command" cmd="grab handle">grab</acmd> it. This is considered the heroic exit from the platform.
          </Base:Description>
          <Base:Description type="look">
             One of the many handles dangling from the zipline. It tempts you to reach out and <acmd tag="command" cmd="grab handle">grab</acmd> it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="handles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="handles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             group of handles
          </Base:Description>
          <Base:Description type="examine">
             A group of handles dangling from the zipline. Curiosity may lead one to <acmd tag="command" cmd="grab handle">grab</acmd> hold and take a ride.
          </Base:Description>
          <Base:Description type="look">
             A group of handles dangling from the zipline.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="zipline" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="zipline"/>
            <Base:SName sname="line"/>
            <Base:SName sname="crossbar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="lines"/>
            <Base:PName pname="ziplines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="zip"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the many ziplines
          </Base:Description>
          <Base:Description type="examine">
             Taut ziplines are tethered to the aerial platform via a wooden crossbar. It extends all the way down to the west commons and several handles are dangling from it.
          </Base:Description>
          <Base:Description type="look">
             Taut ziplines are tethered to the aerial platform via a wooden crossbar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:climb-dob">
         X[M] if (NRefDetail(\$dob[0]) == "ladder")  \{                                
Social( \$actor, "climb", nil, nil, "through", \$dob[0] );                              
\}                                
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:grab-dob">
         X[M] \$delay(1, TRUE, "46a7");                          
if (NRefDetail(\$dob[0]) == "handle")  \{                          
\$env = \$actor."base:environment";                     
/* set the areas they fly over and land in */                   
/* make this the East Commons - IronClaw:Rooms:Docktown:Central:Commons:EastCommons */                     
\$env2 = \$\{Ironclaw:World:DockTown:Commons:EastCommons\};                               
/* make this the West Commons - IronClaw:Rooms:Docktown:Central:Commons:WestCommons */                     
\$env3 = \$\{Ironclaw:World:DockTown:Commons:WestCommons\};                     
/* grab the landing details */                    
/* Only two options right now but more are feasible */                   
\$land1 = NewNRef( \$env3, "haypile" );                    
\$land2 = NewNRef( \$env3, "padded_post" );             
/* set the standard delay */             
\$gap = 2;                              
/* determine their grip randomly */                  
\$grip = (\{"tightly", "loosely", "tensely", "freely", "easily" \});                  
\$sz_g = sizeof(\$grip);                  
\$g = random(\$sz_g);                  
\$gr = \$grip[\$g];                      
/* Add some random fun */                 
\$fun = (\{"You swallowed a bug. Ewww!", "The wind tears past your face!", "Your vision fades momentarily.", "You can see your house from here.", "Your stomach flips briefly." \});                 
\$sz_f = sizeof(\$fun);                 
\$f = random(\$sz_f);                 
\$fu = \$fun[\$f];              
\$fun2 = (\{"You swallowed a bug. Ewww!", "The wind tears past your face!", "Your vision fades momentarily.", "You can see your house from here.", "Your stomach flips briefly." \});                 
\$sz_f2 = sizeof(\$fun2);                 
\$f2 = random(\$sz_f2);                 
\$fu2 = \$fun2[\$f2];              
/* how well do they fly? */              
\$fly = (\{"like an eagle", "like a bat", "like a brick", "with grace", "flailingly", "glider-style" \});                 
\$sz_l = sizeof(\$fly);                 
\$l = random(\$sz_l);                 
\$fl = \$fly[\$l];              
/* how do they fall? */              
\$fall = (\{"drop", "descend", "fall" \});                 
\$sz_a = sizeof(\$fall);                 
\$a = random(\$sz_a);                 
\$fa = \$fall[\$a];              
/* some roll tests for final landing */                  
\$skill = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ \$actor."trait:agility" \}));                          
\$skill += random(5);                   
if( 0 \>= \$skill) \{            
\$sk = 1;            
\} else if(3 \> \$skill) \{          
\$sk = 2;          
\} else if(6 \> \$skill) \{          
\$sk = 3;          
\} else if(9 \> \$skill) \{          
\$sk = 4;          
\} else if(12 \> \$skill) \{          
\$sk = 5;          
\} else \{          
\$sk = 6;          
\}          
/* building emit cases */        
\$em1a = "You slam roughly into " +Describe(\$land2)+ " and fall like a lump into " +Describe(\$land2)+ ".";        
\$em1b = Describe(\$actor)+ " slams roughly into " +Describe(\$land2)+ " and falls like a lump into " +Describe(\$land2)+ ".";        
\$em2a = "You try to slow down and bang slightly into " +Describe(\$land2)+ " before sliding downward into " +Describe(\$land2)+ ".";        
\$em2b = Describe(\$actor)+ " tries to slow down and bangs slightly into " +Describe(\$land2)+ " before sliding downward into " +Describe(\$land2)+ ".";        
\$em3a = "You land with an *OOF* among " +Describe(\$land1)+ ".";        
\$em3b = Describe(\$actor)+ " lands with an *OOF* among " +Describe(\$land1)+ ".";        
\$em4a = "You let go and land easily on your back on top of " +Describe(\$land1)+ ".";        
\$em4b = Describe(\$actor)+ " lets go and lands easily on " +\$actor."trait:possessive" + " back on top of " +Describe(\$land1)+ ".";        
\$em5a = "You perform a graceful back-flip before landing safely on " +Describe(\$land1)+ ".";        
\$em5b = Describe(\$actor)+ " performs a graceful back-flip before landing safely on " +Describe(\$land1)+ ".";        
\$em6a = "You perform a graceful back-flip landing completely upright on top of " +Describe(\$land1)+ ". Did you just do that?";        
\$em6b = Describe(\$actor)+ " performs a graceful back-flip landing completely upright on top of " +Describe(\$land1)+ ". Did that just happen?";        
        
        
/* Show them starting to move out */                    
EmitTo(\$actor, "You " +\$gr+ " grab hold of " +Describe(\$dob[0])+ " as it starts to roll forward.");                           
EmitIn(\$env, Describe(\$actor)+ " " +\$gr+ " grabs hold of " +Describe(\$dob[0])+ " as it starts to roll forward.", \$actor);                        
\$delay(\$gap, TRUE, "3301");                        
EmitTo(\$actor, "You gain momentum as you zip down the line.");                        
EmitIn(\$env, Describe(\$actor) + " gains momentum as " + \$actor."trait:nominative" + " zips down the line.", \$actor);                        
/* place them over the enviroment(s) they pass by */                   
\$delay(\$gap, TRUE, "3257");                    
\$actor."base:environment" = \$env2;                   
\$actor."base:stancestring" = "hanging";                       
EmitTo(\$actor, "You soar " +\$fl+ " over " +Describe(\$env2)+ ". " +\$fu);                       
EmitIn(\$env2, Describe(\$actor)+ " soars " +\$fl+ " as " + \$actor."trait:nominative" + " passes overhead on a zipline.", \$actor);                      
\$delay(\$gap, TRUE, "19f5");                    
\$actor."base:environment" = \$env3;                   
\$actor."base:stancestring" = "hanging";                           
EmitTo(\$actor, "You soar " +\$fl+ " over " +Describe(\$env3)+ ". " +\$fu2);                       
EmitIn(\$env3, Describe(\$actor)+ " soars " +\$fl+ " as " + \$actor."trait:nominative" + " passes overhead on a zipline.", \$actor);                      
/* Here comes the landing */                   
\$delay(\$gap, TRUE, "d416");                      
EmitTo(\$actor, "You " +\$fa+ " quickly towards a padded post; time to prepare for a landing!");                      
EmitIn(\$env3, Describe(\$actor)+ " " +\$fa+ "s quickly toward a padded post.", \$actor);                      
\$delay(\$gap, TRUE, "8ea8");                      
switch(\$sk) \{      
  case 1:      
    EmitTo(\$actor, \$em1a);      
    EmitIn(\$env3, \$em1b, \$actor);     
    \$actor."base:stance" = 3;      
    \$actor."base:stancestring" = "lying";    
    \$actor."base:preposition" = 8;     
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  case 2:      
    EmitTo(\$actor, \$em2a);      
    EmitIn(\$env3, \$em2b, \$actor);      
    \$actor."base:stance" = 3;     
    \$actor."base:stancestring" = "lying";    
    \$actor."base:preposition" = 8;       
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  case 3:      
    EmitTo(\$actor, \$em3a);      
    EmitIn(\$env3, \$em3b, \$actor);      
    \$actor."base:stance" = 3;     
    \$actor."base:stancestring" = "lying";     
    \$actor."base:preposition" = 8;      
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  case 4:      
    EmitTo(\$actor, \$em4a);      
    EmitIn(\$env3, \$em4b, \$actor);     
    \$actor."base:stance" = 3;      
    \$actor."base:stancestring" = "lying";     
    \$actor."base:preposition" = 8;      
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  case 5:      
    EmitTo(\$actor, \$em5a);      
    EmitIn(\$env3, \$em5b, \$actor);    
    \$actor."base:stance" = 3;      
    \$actor."base:stancestring" = "lying";     
    \$actor."base:preposition" = 8;      
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  case 6:      
    EmitTo(\$actor, \$em6a);      
    EmitIn(\$env3, \$em6b, \$actor);    
    \$actor."base:stance" = 5;      
    \$actor."base:stancestring" = "standing";     
    \$actor."base:preposition" = 8;      
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
    break;      
  default:      
    EmitTo(\$actor, \$em6a);      
    EmitIn(\$env3, \$em6b, \$actor);    
    \$actor."base:stance" = 5;      
    \$actor."base:stancestring" = "standing";     
    \$actor."base:preposition" = 8;      
    \$actor."base:prepositionstring" = "on";      
    \$actor."base:proximity" = \$land1;      
\}        
                       
\}                                
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1288222087, "tunk_bodin", "X", 1288222280, "tunk_bodin", "X", 1288222444, "tunk_bodin", "X", 1288222540, "tunk_bodin", "X", 1288295389, "tunk_bodin", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="sys:emit:population">
         (\{ \<Chatters:Backup:AE:co:cosmo0\> \})
      </Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1538077528
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
