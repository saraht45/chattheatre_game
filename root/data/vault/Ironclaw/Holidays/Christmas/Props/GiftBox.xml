<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="0.7"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="10"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="sitting" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="box"/>
            <Base:SName sname="crate"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="boxes"/>
            <Base:PName pname="crates"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="breakable"/>
          <Base:Adjective adjective="clay"/>
          <Base:Adjective adjective="earthen"/>
          <Base:Adjective adjective="earthenware"/>
          <Base:Adjective adjective="shatterable"/>
          <Base:Adjective adjective="smashable"/>
          <Base:Adjective adjective="ware"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             earthenware box
          </Base:Description>
          <Base:Description type="examine">
             An earthenware box, brown in hue and rough to the touch, appears to be <acmd tag="command" cmd="break box">breakable</acmd>. It is solid on all sides and might be opened by a good <acmd tag="command" cmd="smash box">smash</acmd>. One might even think it could be <acmd tag="command" cmd="shatter box">shattered</acmd>.
          </Base:Description>
          <Base:Description type="look">
             An earthenware box, brown in hue and rough to the touch, appears to be <acmd tag="command" cmd="break box">breakable</acmd>. It is solid on all sides and might be opened by a good <acmd tag="command" cmd="smash box">smash</acmd>. One might even think it could be <acmd tag="command" cmd="shatter box">shattered</acmd>.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:box:gifts">
         (\{ \<Allegory:Props:Misc:Mirrors:OvalMirror\>, \<Ironclaw:Holidays:Christmas:Props:Consume:Cookie\>, \<Ironclaw:Holidays:Christmas:Props:Consume:Eggnog\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Vase\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Box-Frog\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Box-Turtle\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:MetalButterfly\>, \<Allegory:Props:Misc:Mirrors:OvalMirror\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Vase\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Suspenders\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Scarf\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:FauxCoal\>, \<Ironclaw:Holidays:Christmas:Props:Consume:ChocolateKiss\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:PrayerBeads\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:MetalButterfly\>, \<Ironclaw:Holidays:Christmas:Props:Trinkets:Vase\> \})
      </Core:Property>
      <Core:Property property="merry:lib:break_box">
         X[M] \$gifts = \$this."box:gifts";                        
\$sz = sizeof(\$gifts);                         
\$luck = random(\$sz);                       
\$prize = Spawn(\$gifts[\$luck]);                        
\$env = \$actor."base:environment";                        
EmitTo(\$actor, "You have found " +Describe(\$prize)+ " inside " +Describe(\$this, nil, nil, STYLE_NONPOSS)+ ".");                  
EmitIn(\$env, Describe(\$actor)+ " has found " +Describe(\$prize)+ " inside " +Describe(\$this, nil, nil, STYLE_NONPOSS)+ ".", \$actor);                  
\$prize."base:environment" = \$actor;                             
if (name(\$this)[0] == '[') Slay(\$this);                          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:break-dob">
         X[M] Call(\$this, "break_box", \$verb: \$verb, \$actor: \$actor, \$box: \$this);                    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:shatter-dob">
         X[M] Call(\$this, "break_box", \$verb: \$verb, \$actor: \$actor, \$box: \$this);                    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:smash-dob">
         X[M] Call(\$this, "break_box", \$verb: \$verb, \$actor: \$actor, \$box: \$this);                    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:break-dob">
         X[M] if(\$actor != \$this."base:environment") \{                    
EmitTo(\$actor, "This item must be held prior to being destroyed. Thank you.");                    
return FALSE;                    
\}                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:shatter-dob">
         X[M] if(\$actor != \$this."base:environment") \{                    
EmitTo(\$actor, "This item must be held prior to being destroyed. Thank you.");                    
return FALSE;                    
\}                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:smash-dob">
         X[M] if(\$actor != \$this."base:environment") \{                    
EmitTo(\$actor, "This item must be held prior to being destroyed. Thank you.");                    
return FALSE;                    
\}                   
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1293143713, "tunk_bodin", "X", 1293143722, "tunk_bodin", "X", 1293301997, "tunk_bodin", "X", 1293302438, "tunk_bodin", "X", 1294450908, "jominey", "E", 1294450919, "jominey", "E", 1356382707, "lidiab", "E", 1356383780, "lidiab", "E", 1356385647, "lidiab", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
