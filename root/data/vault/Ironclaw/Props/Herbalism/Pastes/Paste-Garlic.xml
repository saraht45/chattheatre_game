<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="0.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pot"/>
            <Base:SName sname="paste"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pots"/>
            <Base:PName pname="pastes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="clay"/>
          <Base:Adjective adjective="garlic"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             small pot of garlic paste
          </Base:Description>
          <Base:Description type="examine">
             A small clay pot containing garlic paste which is known for its antibacterial qualities. There seems to be enough paste for another $(this.trait:quantity) applications.
          </Base:Description>
          <Base:Description type="look">
             A small clay pot containing garlic paste.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         5
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "odorous garlic"
      </Core:Property>
      <Core:Property property="merry:react-pre:apply-dob">
         X[M] \$victim = \$iob;
if(\$victim \&\& (sizeof(\$victim) == 1)) \{


EmitIn( \$actor."base:environment", Describe(\$actor)+" professionally doctors "+Describe(\$victim, \$actor)+" with " +Describe(this)+ " in an effort to fight off infection.", \$actor );
EmitTo( \$actor, "You professionally doctor "+Describe(\$victim, nil, \$actor)+" with " +Describe(this)+ " in an effort to fight off infection." );

/*\$actor."trait:smell" = \$this."trait:smell";
\$actor."trait:taste" = "of " +\$this."trait:smell";*/

  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});


  \$this."trait:quantity" -= 1;
  if(\$this."trait:quantity" == 0) \{
    \$delay(0.1, FALSE, "4cbf");
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");
    Slay(\$this);
  \}


/* this part references the effect library*/
\$target = NRefOb(\$iob[0]); 
\$paste = \$this;
Call(\$\{Ironclaw:Props:Herbalism:EffectLib\}, "effect");
  return FALSE;
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{
  EmitTo( \$actor, "You may only rub " +Describe(this)+" on one thing at a time." );
  return FALSE;
\} else \{
  EmitTo( \$actor, "What do you intend to rub " +Describe(this)+" on?" );
  return FALSE;
\}

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:rub-dob">
         X[M] \$victim = \$iob;
if(\$victim \&\& (sizeof(\$victim) == 1)) \{


EmitIn( \$actor."base:environment", Describe(\$actor)+" carefully rubs "+Describe(\$victim, \$actor)+" with " +Describe(this)+ " in an effort to fight off infection.", \$actor );
EmitTo( \$actor, "You carefully rub "+Describe(\$victim, nil, \$actor)+" with " +Describe(this)+ " in an effort to fight off infection." );

/*\$actor."trait:smell" = \$this."trait:smell";
\$actor."trait:taste" = "of " +\$this."trait:smell";*/

  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});


  \$this."trait:quantity" -= 1;
  if(\$this."trait:quantity" == 0) \{
    \$delay(0.1, FALSE, "4cbf");
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");
    Slay(\$this);
  \}


/* this part references the effect library*/
\$target = NRefOb(\$iob[0]); 
\$paste = \$this;
Call(\$\{Ironclaw:Props:Herbalism:EffectLib\}, "effect");
  return FALSE;
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{
  EmitTo( \$actor, "You may only rub " +Describe(this)+" on one thing at a time." );
  return FALSE;
\} else \{
  EmitTo( \$actor, "What do you intend to rub " +Describe(this)+" on?" );
  return FALSE;
\}

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1202654448, "haystack", "K", 1202654478, "haystack", "E", 1202654505, "haystack", "K", 1202655496, "haystack", "K", 1202656260, "haystack", "E", 1202656348, "haystack", "E", 1202656531, "haystack", "E", 1202656594, "haystack", "E", 1202656663, "haystack", "E", 1202656690, "haystack", "E", 1202656714, "haystack", "E", 1202662192, "haystack", "E", 1202662388, "haystack", "E", 1202663264, "haystack", "E", 1202663419, "haystack", "E", 1205995892, "slurpeeslurp", "E", 1205995968, "slurpeeslurp", "E", 1205996180, "slurpeeslurp", "E", 1205996348, "slurpeeslurp", "E", 1205996567, "slurpeeslurp", "K", 1205996600, "slurpeeslurp", "E", 1205996722, "slurpeeslurp", "E", 1205996885, "slurpeeslurp", "E", 1205997246, "balkaar", "E", 1205997264, "balkaar", "E", 1205997442, "balkaar", "E", 1205997486, "balkaar", "E", 1205997522, "slurpeeslurp", "E", 1205997579, "slurpeeslurp", "E", 1205998243, "slurpeeslurp", "E", 1205998299, "slurpeeslurp", "E", 1205998311, "slurpeeslurp", "E", 1205998324, "slurpeeslurp", "E", 1205998549, "slurpeeslurp", "E", 1205998562, "slurpeeslurp", "E", 1205998572, "slurpeeslurp", "E", 1205999502, "slurpeeslurp", "E", 1205999532, "slurpeeslurp", "E", 1205999538, "slurpeeslurp", "E", 1205999549, "slurpeeslurp", "E", 1205999559, "slurpeeslurp", "E", 1205999658, "slurpeeslurp", "E", 1206000212, "slurpeeslurp", "E", 1206000410, "slurpeeslurp", "E", 1206000415, "slurpeeslurp", "E", 1206000462, "slurpeeslurp", "E", 1206000593, "slurpeeslurp", "K", 1326136098, "slurpeeslurp", "K", 1326136225, "slurpeeslurp", "E", 1326136457, "slurpeeslurp", "E", 1326136569, "slurpeeslurp", "E", 1326136587, "slurpeeslurp", "E", 1326136605, "slurpeeslurp", "E", 1326136658, "slurpeeslurp", "E", 1326136732, "slurpeeslurp", "E", 1326136840, "slurpeeslurp", "E", 1326136877, "slurpeeslurp", "E", 1326136920, "slurpeeslurp", "E", 1326136984, "slurpeeslurp", "E", 1326137043, "slurpeeslurp", "E", 1327975873, "jominey", "R", 1347220563, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">5</Core:Property>
      <Core:Property property="trait:smell">
         "odorous garlic"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
