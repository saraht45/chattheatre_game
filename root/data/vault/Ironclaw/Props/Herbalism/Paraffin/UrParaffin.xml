<object clone="/base/obj/thing" owner="balkaar">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Perfume:UrOil)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="paraffin"/>
            <Base:SName sname="tube"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="paraffins"/>
            <Base:PName pname="tubes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="small"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             small tube of {? | $(this.trait:enriched) | $(this.trait:enriched), }waxy $(this.trait:color) <propcheck career="gardener" min="4">    $(this.trait:material) flavored </propcheck>    <propcheck-not career="gardener" min="4">         <propcheck career="healer" min="8">              $(this.trait:material) flavored         </propcheck>    </propcheck-not> paraffin
          </Base:Description>
          <Base:Description type="examine">
             some {? | $(this.trait:enriched) | $(this.trait:enriched), }waxy $(this.trait:color) paraffin, <propcheck career="gardener" min="4">     flavored with $(this.trait:material), </propcheck> <propcheck-not career="gardener" min="4">    <propcheck career="healer" min="8">       flavored with $(this.trait:material),    </propcheck> </propcheck-not> used in various medical and household procedures. It is stored in a small tube.
          </Base:Description>
          <Base:Description type="glance">
             Some {? | $(this.trait:enriched) | $(this.trait:enriched), }wazy $(this.trait:color) paraffin <propcheck career="gardener" min="4">   , flavored with $(this.trait:material) </propcheck> <propcheck-not career="gardener" min="4">   <propcheck career="healer" min="8">      , flavored with $(this.trait:material)   </propcheck> </propcheck-not>  stored in a small tube.
          </Base:Description>
          <Base:Description type="look">
             Some {? | $(this.trait:enriched) | $(this.trait:enriched), }waxy $(this.trait:color) paraffin <propcheck career="gardener" min="4">   , flavored with $(this.trait:material) </propcheck> <propcheck-not career="gardener" min="4">   <propcheck career="healer" min="8">      , flavored with $(this.trait:material)   </propcheck> </propcheck-not>  stored in a small tube.
          </Base:Description>
          <Base:Description type="pbrief">
             {? | $(this.trait:enriched) | $(this.trait:enriched), }waxy $(this.trait:color) <propcheck career="gardener" min="4">    $(this.trait:material) flavored </propcheck>    <propcheck-not career="gardener" min="4">         <propcheck career="healer" min="8">              $(this.trait:material) flavored         </propcheck>    </propcheck-not> paraffins
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="merry:act-pre:crack-dob">
         X[M] /* check if dob is salve */


/* if any salve, make it rich */

/* if spider itch cure slave, make it have effect */
      </Base:InitialProperty>
      <Base:InitialProperty property="new property name">
         "New Property Value"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="approval:description">
         "for crafting"
      </Core:Property>
      <Core:Property property="approval:time">
         1249999405
      </Core:Property>
      <Core:Property property="approval:unapproved">
         1
      </Core:Property>
      <Core:Property property="base:initialcontents"/>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="merry:react-post:crack-iob">
         X[M] \$healer = Int(\$actor."skill:career:healer");

/* sanity check */
if(!\$dob) return TRUE;

/* check if iob is spider egg */
\$egg = \$\{Ironclaw:Props:Plot:Spider:Egg\};
\$what = NRefOb(\$dob[0]);
if(\$what."core:ur:parent" != \$egg) \{
  EmitTo(\$actor, "You need something else to crack into this paraffin.");
  return FALSE;
\}

   \$this."trait:enriched" = "egg yoke-enriched";
   Slay(\$what);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:crack-iob">
         X[M] \$healer = Int(\$actor."skill:career:healer");

/* sanity check */
if(!\$dob) return TRUE;

/* check if iob is spider egg */
\$egg = \$\{Ironclaw:Props:Plot:Spider:Egg\};
\$what = NRefOb(\$dob[0]);
if(\$what."core:ur:parent" != \$egg) \{
  EmitTo(\$actor, "You need something else to crack into this paraffin.");
  return FALSE;
\}

if(!\$healer \|\| \$healer \< 4) \{
  EmitTo(\$actor, "It takes a skilled healer to work with such sensitive ingredients.");
  return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1250009026, "balkaar", "R", 1250097151, "balkaar", "E", 1250097545, "balkaar", "E", 1250097661, "balkaar", "E", 1250198553, "balkaar", "E", 1250198604, "balkaar", "E", 1250198722, "balkaar", "E", 1250550545, "balkaar", "E", 1250558453, "balkaar", "E", 1250558651, "balkaar", "E", 1250559626, "balkaar", "E", 1250559700, "balkaar", "E", 1250559902, "balkaar", "E", 1250560078, "balkaar", "E", 1250560152, "balkaar", "E", 1250561015, "balkaar", "E", 1250561077, "balkaar", "E", 1250562953, "balkaar", "E", 1250606183, "balkaar", "E", 1250606736, "balkaar", "E", 1250607343, "nino", "P", 1250607563, "nino", "P", 1250610745, "balkaar", "E", 1250610753, "balkaar", "E", 1250610775, "balkaar", "E", 1250611101, "balkaar", "E", 1250619624, "balkaar", "E", 1250641788, "tonyd", "P", 1250641885, "tonyd", "P", 1250642036, "tonyd", "P", 1250863757, "balkaar", "E", 1250863797, "balkaar", "E", 1250863814, "balkaar", "E", 1250863850, "balkaar", "E", 1250863897, "balkaar", "E", 1250863942, "balkaar", "E", 1250863986, "balkaar", "E", 1250864019, "balkaar", "E", 1250864058, "balkaar", "E", 1250864168, "balkaar", "E", 1251020328, "balkaar", "E", 1251020613, "balkaar", "E", 1251021689, "balkaar", "E", 1251022143, "balkaar", "E", 1251024258, "balkaar", "E", 1251024274, "balkaar", "E", 1251024415, "balkaar", "E", 1251024462, "balkaar", "E", 1251024976, "balkaar", "E", 1251025426, "balkaar", "E", 1251026258, "balkaar", "E", 1251026756, "balkaar", "E", 1251026845, "balkaar", "E", 1251027307, "balkaar", "E", 1251027424, "balkaar", "E", 1251027449, "tonyd", "P", 1251028913, "balkaar", "E", 1251151075, "balkaar", "E", 1251665937, "balkaar", "E", 1251665953, "balkaar", "E", 1251665976, "balkaar", "E", 1251666091, "balkaar", "E", 1251666105, "balkaar", "E", 1251666112, "balkaar", "E", 1251666130, "balkaar", "E", 1251666137, "balkaar", "E", 1251666143, "balkaar", "E", 1251666161, "balkaar", "E", 1251666167, "balkaar", "E", 1251666176, "balkaar", "E", 1251666182, "balkaar", "E", 1251666236, "balkaar", "E", 1251666343, "balkaar", "E", 1251666462, "balkaar", "E", 1251666472, "balkaar", "E", 1251666486, "balkaar", "E", 1251666492, "balkaar", "E", 1252242205, "balkaar", "E", 1252243062, "balkaar", "E", 1252244172, "balkaar", "E", 1252244235, "balkaar", "E", 1252277901, "balkaar", "E", 1252280448, "balkaar", "E", 1252280491, "balkaar", "E", 1252280611, "balkaar", "E", 1252282606, "tonyd", "P", 1252282638, "tonyd", "P", 1252282683, "tonyd", "P", 1252282698, "tonyd", "P", 1252282789, "tonyd", "P", 1252282854, "tonyd", "P", 1252282889, "tonyd", "P", 1252282921, "tonyd", "P", 1252282961, "tonyd", "P", 1252282993, "tonyd", "P", 1252283011, "tonyd", "P", 1252283034, "tonyd", "P", 1252283123, "tonyd", "P", 1252283154, "tonyd", "P", 1252283171, "tonyd", "P", 1252283419, "tonyd", "P", 1252351780, "balkaar", "E", 1252351921, "balkaar", "E", 1252352330, "balkaar", "E", 1252353143, "balkaar", "E", 1252353574, "balkaar", "E", 1252761093, "balkaar", "E", 1252761285, "balkaar", "E", 1252761791, "balkaar", "E", 1252761830, "balkaar", "E", 1252769983, "balkaar", "E", 1252771702, "balkaar", "E", 1252786295, "balkaar", "E", 1270483267, "slurpeeslurp", "K", 1285279114, "morwenlorelie", "K", 1285279118, "morwenlorelie", "E", 1285279133, "morwenlorelie", "E", 1327975891, "jominey", "R", 1327975943, "jominey", "R", 1347220581, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
