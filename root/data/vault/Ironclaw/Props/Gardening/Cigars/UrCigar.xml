<object clone="/base/obj/thing" owner="rorschakovacs">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Crafting:Smoking:UrSmoke)"/>
    <Base:Bulk immobile="false" mass="0.1" density="1.2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0.15" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cigar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cigars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="smoking"/>
          <Base:Adjective adjective="stale"/>
          <Base:Adjective adjective="thick"/>
          <Base:Adjective adjective="tobacco"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             stale thick cigar
          </Base:Description>
          <Base:Description type="brief:fresh">
             fresh thick cigar
          </Base:Description>
          <Base:Description type="brief:old">
             stale thick cigar
          </Base:Description>
          <Base:Description type="examine">
             This is a stale and brittle, thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar made from rolled tobacco leaves.
          </Base:Description>
          <Base:Description type="examine:fresh">
             This is a recently-made, thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar made from rolled tobacco leaves.
          </Base:Description>
          <Base:Description type="examine:old">
             This is a stale and brittle, thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar made from rolled tobacco leaves.
          </Base:Description>
          <Base:Description type="look">
             A stale, brittle thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar.
          </Base:Description>
          <Base:Description type="look:fresh">
             This is a recently-made, thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar.
          </Base:Description>
          <Base:Description type="look:old">
             A stale, brittle thick $[if($this.timer) { return "lit"; } else { return "unlit"; }] cigar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:nip:item:cost">
         1500
      </Core:Property>
      <Core:Property property="export:trait:age:fresh">
         604800
      </Core:Property>
      <Core:Property property="export:trait:age:old">
         604800
      </Core:Property>
      <Core:Property property="export:trait:age:slay">
         86400
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "cigar"
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         15
      </Core:Property>
      <Core:Property property="export:trait:setprop">
         (\{ (\{ "details:default:adjective:fresh", nil \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:fresh">
         (\{ (\{ "trait:smell", "fresh tobacco" \}), (\{ "trait:taste", "of fresh tobacco" \}), (\{ "details:default:adjective:fresh", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:smell", "stale tobacco" \}), (\{ "trait:taste", "stale and unappetizing" \}), (\{ "details:default:adjective:stale", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "dried tobacco"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "dried tobacco"
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] Call(this, "age_cigar");        
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:age_cigar">
         X[M] int delay;        
        
/* \$delay(3, TRUE, "14fc");  */      
        
/* If this isn't a spawn */        
if(sscanf(name(\$this), "[%*s]#%*d") != 2)        
  return TRUE;        
        
if(\$this."details:default:description:brief:fresh")        
\{        
  if(\$this."trait:age:fresh" \|\| \$this."trait:setprop:fresh")        
  \{        
    delay = \$this."trait:age:fresh"*2;        
  \} else \{        
    delay = 24*60*60;        
  \}  
        
  /* set fresh descriptions */        
  if(\$this."details:default:description:brief:fresh")        
    \$this."details:default:description:brief" = \$this."details:default:description:brief:fresh";        
  if(\$this."details:default:description:pbrief:fresh")        
    \$this."details:default:description:pbrief" = \$this."details:default:description:pbrief:fresh";        
  if(\$this."details:default:description:look:fresh")        
    \$this."details:default:description:look" = \$this."details:default:description:look:fresh";        
  if(\$this."details:default:description:examine:fresh")        
    \$this."details:default:description:examine" = \$this."details:default:description:examine:fresh";        
  if(\$this."details:default:description:taste:fresh")        
    \$this."details:default:description:taste" = \$this."details:default:description:taste:fresh";        
  if(\$this."details:default:description:smell:fresh")        
    \$this."details:default:description:smell" = \$this."details:default:description:smell:fresh";        
        
  /* set the fresh properties */        
  if(\$this."trait:setprop:fresh")        
  \{        
    for(\$i = 0; \$i \< sizeof(\$this."trait:setprop:fresh"); \$i++)        
    \{        
      Set(\$this, \$this."trait:setprop:fresh"[\$i][0], \$this."trait:setprop:fresh"[\$i][1]);        
    \}        
  \}        
        
        
  \$delay(delay, TRUE, "684e");   
 
  /* If stored in a humidor, do not decay. */ 
  if(\$this."trait:preserved") \{ 
      return TRUE; 
  \}      
        
  /* unset fresh descriptions */        
  \$this."details:default:description:brief" = nil;        
  \$this."details:default:description:pbrief" = nil;        
  \$this."details:default:description:look" = nil;        
  \$this."details:default:description:examine" = nil;        
  \$this."details:default:description:taste" = nil;        
  \$this."details:default:description:smell" = nil;        
\}        
        
/* set the normal properties */        
if(\$this."trait:setprop")        
\{        
  for(\$i = 0; \$i \< sizeof(\$this."trait:setprop"); \$i++)        
  \{        
    Set(\$this, \$this."trait:setprop"[\$i][0], \$this."trait:setprop"[\$i][1]);        
  \}        
\}        
        
if(\$this."details:default:description:brief:old" \|\| \$this."trait:setprop:old")        
\{        
  if(\$this."trait:age:old")        
  \{        
    delay = \$this."trait:age:old"*7;        
  \} else \{        
    delay = 2*24*60*60;        
  \}        
        
  \$delay(delay, TRUE, "30eb");      
 
  /* If stored in a humidor, do not decay. */ 
  if(\$this."trait:preserved") \{ 
      return TRUE; 
  \}       
        
  /* set the old descriptions */        
  if(\$this."details:default:description:brief:old")        
    \$this."details:default:description:brief" = \$this."details:default:description:brief:old";        
  if(\$this."details:default:description:pbrief:old")        
    \$this."details:default:description:pbrief" = \$this."details:default:description:pbrief:old";        
  if(\$this."details:default:description:look:old")        
    \$this."details:default:description:look" = \$this."details:default:description:look:old";        
  if(\$this."details:default:description:examine:old")        
    \$this."details:default:description:examine" = \$this."details:default:description:examine:old";        
  if(\$this."details:default:description:taste:old")        
    \$this."details:default:description:taste" = \$this."details:default:description:taste:old";        
  if(\$this."details:default:description:smell:old")        
    \$this."details:default:description:smell" = \$this."details:default:description:smell:old";        
        
  /* set the old properties */        
  if(\$this."trait:setprop:old")        
  \{        
    for(\$i = 0; \$i \< sizeof(\$this."trait:setprop:old"); \$i++)        
    \{        
      Set(\$this, \$this."trait:setprop:old"[\$i][0], \$this."trait:setprop:old"[\$i][1]);        
    \}        
  \}        
        
\}        
        
if(\$this."trait:age:slay")        
\{        
  delay = \$this."trait:age:slay"*7;        
\} else \{        
  delay = 4*24*60*60;        
\}        
        
\$delay(delay, TRUE, "2aaa");    
 
/* If stored in a humidor, do not decay. */ 
if(\$this."trait:preserved") \{ 
  return TRUE; 
\}         
        
/* slay the cigar */        
if(\$this."base:environment")\{        
  if(\$this."trait:age:slay:message")        
  \{        
    EmitTo(\$this."base:environment", Describe(\$this)+" "+\$this."trait:age:slay:message");        
  \} else \{        
    EmitTo(\$this."base:environment", Describe(\$this)+" crumbles and dissipates into nothing.");        
  \}        
\}        
        
/* Check the object is a spawn before slaying it */        
/* If this isn't a spawn */        
if(sscanf(name(\$this), "[%*s]#%*d") == 2)        
  Slay(\$this);        
        
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 1)     
\{     
EmitTo(\$actor, "You smoke the last of " +Describe(\$this)+ ".");    
if(\$this."no:slay") \{    
EmitTo(\$actor, "Cannot slay error: Contact staff via @bug.");    
return FALSE;    
\} else \{    
Slay(\$this);     
return TRUE;     
\} \}
      </Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1192470253, "rorschakovacs", "E", 1192470338, "rorschakovacs", "E", 1192470389, "rorschakovacs", "E", 1192470405, "rorschakovacs", "E", 1192470427, "rorschakovacs", "E", 1192470505, "rorschakovacs", "E", 1192470529, "rorschakovacs", "E", 1192470563, "rorschakovacs", "E", 1192470680, "rorschakovacs", "E", 1192470731, "rorschakovacs", "E", 1192470793, "rorschakovacs", "E", 1192470807, "rorschakovacs", "E", 1192470842, "rorschakovacs", "E", 1192470873, "rorschakovacs", "E", 1192470901, "rorschakovacs", "E", 1192470915, "rorschakovacs", "E", 1192470953, "rorschakovacs", "E", 1192471010, "rorschakovacs", "E", 1192471026, "rorschakovacs", "E", 1192471193, "rorschakovacs", "E", 1192472018, "rorschakovacs", "E", 1192472121, "rorschakovacs", "E", 1192472244, "rorschakovacs", "E", 1192472277, "rorschakovacs", "E", 1192472291, "rorschakovacs", "E", 1192472308, "rorschakovacs", "E", 1192472656, "rorschakovacs", "E", 1192472722, "rorschakovacs", "E", 1192472843, "rorschakovacs", "E", 1192473060, "tunk_bodin", "X", 1192473181, "tunk_bodin", "X", 1192473213, "tunk_bodin", "X", 1192473416, "rorschakovacs", "E", 1192473430, "rorschakovacs", "E", 1192473526, "tunk_bodin", "X", 1192473546, "rorschakovacs", "E", 1192474028, "rorschakovacs", "E", 1192474044, "rorschakovacs", "E", 1192474077, "rorschakovacs", "E", 1192474115, "rorschakovacs", "E", 1192474174, "rorschakovacs", "R", 1192474306, "rorschakovacs", "E", 1192474392, "rorschakovacs", "E", 1192474409, "rorschakovacs", "E", 1192474476, "rorschakovacs", "E", 1192474497, "rorschakovacs", "E", 1192474516, "rorschakovacs", "E", 1192474626, "rorschakovacs", "E", 1192474704, "rorschakovacs", "E", 1215029770, "necate", "E", 1215030050, "necate", "E", 1215031902, "necate", "E", 1215037299, "necate", "E", 1215041719, "necate", "E", 1215657140, "rorschakovacs", "E", 1215657311, "rorschakovacs", "E", 1215691858, "rorschakovacs", "E", 1215694929, "rorschakovacs", "K", 1215695014, "rorschakovacs", "E", 1215695215, "rorschakovacs", "K", 1215709866, "rorschakovacs", "E", 1215709893, "rorschakovacs", "E", 1215709950, "rorschakovacs", "E", 1215709977, "rorschakovacs", "E", 1215722417, "rorschakovacs", "E", 1215722665, "rorschakovacs", "E", 1215722794, "rorschakovacs", "E", 1215722885, "rorschakovacs", "E", 1215723024, "rorschakovacs", "E", 1215723430, "rorschakovacs", "E", 1215723528, "rorschakovacs", "E", 1215723617, "rorschakovacs", "E", 1215723699, "rorschakovacs", "E", 1215723799, "rorschakovacs", "E", 1215811028, "rorschakovacs", "E", 1215811318, "rorschakovacs", "E", 1216260176, "tonyd", "P", 1216260203, "tonyd", "P", 1216260234, "tonyd", "P", 1216260354, "tonyd", "P", 1217254072, "rorschakovacs", "E", 1217358870, "rorschakovacs", "E", 1217358911, "rorschakovacs", "E", 1231101369, "jominey", "E", 1231101376, "jominey", "E", 1231101396, "jominey", "E", 1231101425, "jominey", "E", 1231101642, "jominey", "E", 1231101717, "jominey", "E", 1231101898, "jominey", "E", 1287125962, "slurpeeslurp", "E", 1287125990, "slurpeeslurp", "E", 1287126260, "slurpeeslurp", "E", 1326825451, "jominey", "E", 1327975885, "necate", "R", 1347221805, "jominey", "R", 1572451571, "sendnoodlez", "X", 1572451945, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:fresh:brief">
         "fresh thick cigar"
      </Core:Property>
      <Core:Property property="trait:old:brief">
         "stale brittle cigar"
      </Core:Property>
      <Core:Property property="trait:smell">
         "stale tobacco"
      </Core:Property>
      <Core:Property property="trait:taste">
         "stale and unappetizing"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
