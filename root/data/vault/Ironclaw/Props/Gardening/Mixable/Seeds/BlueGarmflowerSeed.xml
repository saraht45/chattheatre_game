<object clone="/base/obj/thing" owner="sinistrelle">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.01" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="seed"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="seeds"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="flower"/>
          <Base:Adjective adjective="garmflower"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             blue garmflower seed
          </Base:Description>
          <Base:Description type="examine">
             A small seed, blue in color, with a smooth coat and small black spots.  Like all seeds, this one must be "buried" before it can grow.
          </Base:Description>
          <Base:Description type="look">
             A small seed, blue in color.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react:bury-dob">
         X[M] /* check if the actor is a good enough gardener */
if(
(!\$actor."skill:alteration:gardening" \|\| \$actor."skill:alteration:gardening" \< 2)
  \&\&
(!\$actor."career:alteration:gardening" \|\| \$actor."career:alteration:gardening" \< 2)
  ) \{
  EmitTo(\$actor, "You are not skilled enough to plant this seed.");
  return FALSE;
\}

/* If we don't have somewhere to bury the seed, return true */
if(!\$iob)\{
  EmitTo(\$actor, "You must bury "+Describe(\$this, nil, \$actor)+" in a flower pot, if you wish it to grow.");
  return FALSE;
\}

/* check we are only burying the seed in one place */
if(sizeof(\$iob) \> 1) \{
  EmitTo(\$actor, "Try burying "+Describe(\$this, nil, \$actor)+" in one place at a time.");
  return FALSE;
\}

/* set the target */
\$target = NRefOb(\$iob[0]);

/* check if the target is a flowerpot */
if(!\$target."trait:objecttype" \|\| \$target."trait:objecttype" != "flowerpot") \{
  EmitTo(\$actor, "You must bury "+Describe(\$this, nil, \$actor)+" in a flower pot, if you wish it to grow.");
  return FALSE;
\}

/* check if the flowerpot already has something growing */
if(\$target."trait:bud") \{
  EmitTo(\$actor, "The plant has already begun growing, it is too late to plant more seeds.");
  return FALSE;
\}

/* check if the seed in the pot is the same as this one */
if(\$target."trait:blue") \{
  EmitTo(\$actor, "A blue garmflower seed is already planted in this pot, you don't need to plant another one.");
  return FALSE;
\}

/* all is good. Let's plant the seed */
\$target."trait:blue" = 1;


/* do we slay this seed? */
if(\$this."no:slay")\{
  return TRUE;
\} else \{
  /* slay it */
  /* delay with a return true, so we see the burying action, then slay */
  \$delay(0.1, TRUE, "94d4");
  Slay(\$this);
\}

return TRUE;
      </Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1149053804, "sinistrelle", "E", 1149054250, "sinistrelle", "E", 1149054259, "sinistrelle", "E", 1149054590, "sinistrelle", "X", 1149054777, "sinistrelle", "X", 1149128233, "sinistrelle", "E", 1149128718, "sinistrelle", "X", 1149128726, "sinistrelle", "E", 1149128751, "sinistrelle", "X", 1149301109, "sinistrelle", "E", 1149302793, "sinistrelle", "E", 1149302944, "sinistrelle", "X", 1149321251, "sinistrelle", "X", 1149322127, "sinistrelle", "E", 1149322385, "sinistrelle", "E", 1149375309, "sinistrelle", "E", 1149378673, "sinistrelle", "E", 1149392981, "tunk_bodin", "X", 1149393153, "sinistrelle", "E", 1149393234, "sinistrelle", "X", 1149393343, "sinistrelle", "E", 1149393742, "sinistrelle", "E", 1149741144, "sinistrelle", "E", 1150003882, "sinistrelle", "E", 1150004909, "sinistrelle", "E", 1150078186, "sinistrelle", "E", 1150210770, "sinistrelle", "E", 1170621183, "sinistrelle", "R", 1201550547, "jsfox", "X", 1225379959, "balkaar", "E", 1225383019, "balkaar", "E", 1327968942, "jominey", "R", 1347223365, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
