<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Gardening:UrPlanter)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="5" maxweight="10" verb2="hold" verb3="holds"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="sitting" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="planter"/>
            <Base:SName sname="urn"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="planters"/>
            <Base:PName pname="urns"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="classic"/>
          <Base:Adjective adjective="convex"/>
          <Base:Adjective adjective="regal"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:create:default:carve">
         ([ "description":(\{ "You carve ORIGINAL_OBJECT into NEW_OBJECT", "carves ORIGINAL_OBJECT into NEW_OBJECT" \}), "input-list":(\{ (\{ \<Allegory:Lib:Crafting:Wood:FurnitureDB\>, "alteration:knowledge:carving-planter" \}) \}), "input-list-actor":(\{ "alteration:knowledge:carving-planter" \}), "newobject-properties":(\{ (\{ "trait:material", "trait:material" \}), (\{ "trait:color", "trait:color" \}), (\{ "trait:engraving", "trait:engraving" \}) \}), "requiredtools":(\{ "a knife", (\{ "knife" \}) \}), "skill":"woodcarving", "stopvalue":(\{ "trait:shape", nil, "This planter has already been customized." \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:default:chisel">
         ([ "description":(\{ "You carve ORIGINAL_OBJECT into NEW_OBJECT", "carves ORIGINAL_OBJECT into NEW_OBJECT" \}), "input-list":(\{ (\{ \<Ironclaw:Lib:Crafting:Stone:Backup:StoneDB\>, "alteration:knowledge:chiseling-planter" \}) \}), "input-list-actor":(\{ "alteration:knowledge:chiseling-planter" \}), "newobject-properties":(\{ (\{ "trait:material", "trait:material" \}), (\{ "trait:color", "trait:color" \}), (\{ "trait:engraving", "trait:engraving" \}) \}), "requiredtools":(\{ "a chisel", (\{ "chisel" \}) \}), "skill":"stonemasonry", "stopvalue":(\{ "trait:shape", nil, "This planter has already been customized." \}) ])
      </Core:Property>
      <Core:Property property="export:trait:brief">
         X[S] \{? \| \$(this.trait:shape) \| \$(this.trait:shape) \} planter
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "Carved from a solid piece of smooth stone, this planter is deep enough to provide adequate room for the soil needed to plant large plants. Drainage holes have been chiseled into the bottom of the planter to allow excess water to flow out of the soil."
      </Core:Property>
      <Core:Property property="merry:react-post:chisel">
         X[M] if(\$this."trait:shape" = "two-tiered")\{
\$this."trait:planter:capacity" = 2;
\} else \{
\$this."trait:planter:capacity" = 1; \}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:shape">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1539824614, "jominey", "E", 1539824693, "jominey", "E", 1539824815, "jominey", "R", 1539824855, "jominey", "E", 1539825227, "jominey", "E", 1539825411, "jominey", "E", 1539825988, "jominey", "E", 1539826077, "jominey", "E", 1539826172, "jominey", "E", 1581699565, "sendnoodlez", "X", 1581699639, "sendnoodlez", "E", 1581699678, "sendnoodlez", "E", 1581699791, "sendnoodlez", "E", 1694995413, "ezralee", "K", 1695001223, "ezralee", "E", 1695084911, "annemairi", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
