<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="5" density="2.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="20"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="carving"/>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="carvings"/>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fox"/>
          <Base:Adjective adjective="fox-headed"/>
          <Base:Adjective adjective="head"/>
          <Base:Adjective adjective="marble"/>
          <Base:Adjective adjective="stone"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             marble fox head carving
          </Base:Description>
          <Base:Description type="look">
             A marble carving of an open-mouthed fox head decorates the wall. There is a narrow slot cut into the inside of the fox's mouth, large enough for perhaps a slip of rolled parchment to be slipped inside.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="carved"/>
          <Base:Adjective adjective="fox"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             carved fox's mouth
          </Base:Description>
          <Base:Description type="look">
             The wide gaping mouth of a carved fox head. This mouth is full of blunted, rounded teeth and narrow slip at the back of the throat.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="slot" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="slot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="slots"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="narrow"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             narrow slot
          </Base:Description>
          <Base:Description type="look">
             A narrow slot located at the back of the gaping mouth of the fox. The slot does not seem to be very large, perhaps big enough for a roll piece of parchment to be slipped in.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:put">
         X[M] /* only let them put scrolls into the carved box */  
  
/* check what they're putting in matches one of those scrolls */  
for(\$i=0;\$i\<sizeof(\$what);\$i++) \{  
 if(!member("scroll", NRefOb(\$what[\$i])."details:objskin:snames")) \{  
  EmitTo(\$actor, capitalize(Describe(\$what[\$i], nil, \$actor))+" won't fit into "+Describe(this)+".");  
  return FALSE;  
 \}  
\}  
EmitTo(\$actor, "You slip "+Describe(\$what, nil, \$actor)+" through the mouth of "+Describe(this)+".");  
EmitIn(\$actor."base:environment", Describe(\$actor)+" slips "+Describe(\$what, \$actor)+" through the mouth of "+Describe(this)+".", \$actor);  
for(\$i=0;\$i\<sizeof(\$what);\$i++) \{  
 NRefOb(\$what[\$i])."base:environment" = this;  
 NRefOb(\$what[\$i])."base:stance" = "lying";  
\}  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:place-where">
         X[M] /* only let them put scrolls into the carved box */  
return ::put();
      </Core:Property>
      <Core:Property property="merry:react-pre:slip-iob">
         X[M] /* only let them put scrolls into the carved box */  
return ::put(\$what: \$dob);
      </Core:Property>
      <Core:Property property="merry:react-pre:take-from">
         X[M] /* only let constables take out the scrolls */  
if(\$actor.guild == \$\{Allegory:Guilds:cityguard\}) return TRUE;  
EmitTo(\$actor, "You can't take "+Describe(\$what, nil, \$actor)+" - it seems there's a trick to getting into the storage compartment that only constables know.");  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:witness-pre:erase">
         X[M] if(!\$what) \{  
    return TRUE;  
\}  
  
if(!sizeof(\$what)) \{  
    return TRUE;  
\}  
  
if(NRefOb(\$what[0])."base:environment" == \$this) \{  
    EmitTo(\$actor, "You must take it out first.");  
    return FALSE;  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness-pre:read">
         X[M] if(!\$what) \{  
    return TRUE;  
\}  
  
if(!sizeof(\$what)) \{  
    return TRUE;  
\}  
  
if(NRefOb(\$what[0])."base:environment" == \$this) \{  
    EmitTo(\$actor, "You must take it out first.");  
    return FALSE;  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1271208344, "necate", "K", 1271208394, "necate", "E", 1271208450, "necate", "K", 1275481837, "tonyd", "E", 1275482145, "tonyd", "P", 1275482173, "tonyd", "P", 1275482243, "tonyd", "P", 1275482260, "tonyd", "P", 1275482279, "tonyd", "P", 1275482297, "tonyd", "P", 1275482631, "tonyd", "P", 1275482739, "tonyd", "P", 1275482753, "tonyd", "P", 1275482821, "tonyd", "P", 1275482925, "tonyd", "P", 1275482932, "tonyd", "P", 1275482972, "tonyd", "P", 1275482991, "tonyd", "P", 1275483191, "tonyd", "P", 1275483244, "tonyd", "P", 1275483298, "tonyd", "E", 1275483379, "tonyd", "P", 1275483457, "tonyd", "P", 1275483507, "tonyd", "P", 1275483537, "tonyd", "P", 1275483662, "tonyd", "E", 1275483693, "tonyd", "E", 1275483755, "tonyd", "P", 1275483853, "tonyd", "P", 1275483876, "tonyd", "P", 1275483912, "tonyd", "P", 1275483953, "tonyd", "P", 1275484079, "tonyd", "P", 1275484104, "tonyd", "P", 1275484175, "tonyd", "P", 1275484364, "tonyd", "R", 1283708116, "jominey", "E", 1283708213, "jominey", "E", 1283708244, "jominey", "E", 1283708258, "jominey", "E", 1283708301, "jominey", "E", 1283708364, "jominey", "E", 1283708425, "jominey", "E", 1283708443, "jominey", "E", 1283708463, "jominey", "E", 1490853636, "pp74", "X", 1490853701, "pp74", "X", 1490853768, "pp74", "E", 1491802311, "tonyd", "E", 1491802494, "tonyd", "E", 1491802524, "tonyd", "E", 1491803078, "tonyd", "E", 1491803086, "tonyd", "E", 1491803099, "tonyd", "E", 1491803180, "tonyd", "E", 1491803202, "tonyd", "E", 1491803278, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
