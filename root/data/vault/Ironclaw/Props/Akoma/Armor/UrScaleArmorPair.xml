<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="1" density="8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armor"/>
            <Base:SName sname="armour"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="armors"/>
            <Base:PName pname="armours"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             pair of <condition/> {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) }{? | $(this.trait:gem:inlay) | $(this.trait:gem:material)-$(this.trait:gem:inlay) } {? equal | $(this.trait:pearl) | none || $(this.trait:pearl) } {? | $(this.details:feather:snames) | feathered } {? | $(this.details:default:adjective:plain) |plain |} {? | $(this.trait:spike:material) | spiked} {? | $(this.trait:stud:material) | studded} {? equal | $(this.trait:color) | none || $(this.trait:color) } {? | $(this.trait:engraving) | {? | $(this.trait:engraving:pattern) | $(this.trait:engraving:pattern)} engraved } {? | $(this.trait:embossing) | embossed } {? equal | $(this.trait:material) | none || $(this.trait:material) } $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             A pair of {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } $(this.trait:brief). {? | $(this.details:gem:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s are embedded into the metal.} {? | $(this.details:spike:snames) | Jutting from the metal are dangerous $(this.trait:spike:color) $(this.trait:spike:material) spikes.} {? | $(this.trait:stud:material) | A set of $(this.trait:stud:color) $(this.trait:stud:material) studs adorn the $(this.trait:brief).} $(this.trait:examine) {? | $(this.trait:engraving) | $(this.trait:engraving).} {? | $(this.trait:embossing) | $(this.trait:embossing). }<makers-mark/> <sbr/><quality-full/> <sbr/><condition-full/>
          </Base:Description>
          <Base:Description type="look">
             A pair of {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } $(this.trait:brief). {? | $(this.details:gem:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s are embedded into the metal.} {? | $(this.details:spike:snames) | Jutting from the metal are dangerous $(this.trait:spike:color) $(this.trait:spike:material) spikes.} {? | $(this.trait:stud:material) | A set of $(this.trait:stud:color) $(this.trait:stud:material) studs adorn the $(this.trait:brief).} $(this.trait:look) {? | $(this.trait:engraving) | $(this.trait:engraving).} {? | $(this.trait:embroidery) | $(this.trait:embroidery) } {? | $(this.trait:embossing) | $(this.trait:embossing). }
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gempieces" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) }{? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material)s } adorning the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A fine assortment of {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) } {? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material)s } adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="spike" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:spike:color) | none | blunt | $(this.trait:spike:color) }{? equal | $(this.trait:spike:material) | none | blunt | $(this.trait:spike:material) } spikes adorning the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             An assortment of {? equal | $(this.trait:spike:color) | none | blunt | $(this.trait:spike:color) } {? equal | $(this.trait:spike:material) | none | blunt | $(this.trait:spike:material) } spikes adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stud" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:stud:color) | none | blunt | $(this.trait:stud:color) }{? equal | $(this.trait:stud:material) | none | blunt | $(this.trait:stud:material) } studs adorning the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             An assortment of {? equal | $(this.trait:stud:color) | none | blunt | $(this.trait:stud:color) }{? equal | $(this.trait:stud:material) | none | blunt | $(this.trait:stud:material) } studs adorning the $(this.details:default:descriptions:brief)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:acceptspolish">
         "armor"
      </Core:Property>
      <Core:Property property="export:alteration:add:default:gempieces">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "gem" \}), (\{ "pname", "gems" \}) \}), "properties":(\{ (\{ "trait:color", "trait:gem:color" \}), (\{ "trait:material", "trait:gem:material" \}), (\{ "trait:gem:inlay", "trait:gem:inlay" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:spike">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "spike" \}), (\{ "pname", "spikes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:spike:color" \}), (\{ "trait:material", "trait:spike:material" \}), (\{ "trait:type", "trait:spike:type" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:stud">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "stud" \}), (\{ "pname", "studs" \}) \}), "properties":(\{ (\{ "trait:color", "trait:stud:color" \}), (\{ "trait:material", "trait:stud:material" \}), (\{ "trait:type", "trait:stud:type" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:armor:rating">
         0
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         1000
      </Core:Property>
      <Core:Property property="export:trait:basematerial">
         "cloth"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "armor"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "It is protective covering used to prevent damage from being inflicted to an individual or a vehicle through use of direct contact weapons or projectiles, usually during combat."
      </Core:Property>
      <Core:Property property="export:trait:finish">
         "armor"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "scalemail"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "armor"
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calculate_hp">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:unwear%armor">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:wear%armor">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:repair-dob">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:wear%armor">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:trait:damage">
         \<Ironclaw:Lib:Combat:Armor\>
      </Core:Property>
      <Core:Property property="merry:react:fit-dob">
         X[M] /* fitting the clothes to a specific person */   
object database;      
database = \$\{Allegory:Lib:Crafting:Blacksmith:ArmorFittingDB\};   
/* sanity check */      
if(this."trait:nofit") return TRUE;      
      
if(sizeof(\$dob) != 1) \{      
 EmitTo(\$actor, "Please only attempt to fit one armor at a time.");      
 return FALSE;      
\}      
      
if(!this."base:worn-by") \{      
 EmitTo(\$actor, "How can you fit "+Describe(this, nil, \$actor)+" while nobody is wearing it?");      
 return FALSE;      
\}      
      
if(FALSE \&\& this."base:worn-by" == \$actor) \{      
 EmitTo(\$actor, "You can't fit "+Describe(this, nil, \$actor)+" yourself! You'll need someone else to fit it for you.");      
 return FALSE;      
\}      
      
if(this."trait:fit") \{      
 if(this."base:worn-by" == this."trait:fittedto") \{      
  EmitTo(\$actor, Describe(this, nil, \$actor)+" has already been fitted.");      
  return FALSE;      
 \} else \{      
  this."trait:fittedto" = this."base:worn-by";      
  EmitTo(\$actor, "You adjust the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".");      
  EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, this."base:worn-by")+" to suit you.");      
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".", \$actor, this."base:worn-by");      
 \}      
\}      
      
\$skill1 = Int(\$actor."skill:career:armorsmith");      
\$skill2 = Int(\$actor."skill:career:blacksmith");      
      
if(\$skill1 \>= \$skill2) \{      
    \$skill = \$skill1;      
\} else \{      
    \$skill = \$skill2;      
\}      
      
\$skill *= 2;      
      
/* \$skill = Int(\$actor."skill:alteration:metalworking")+Int(\$actor."career:alteration:metalworking"); */    
   
      
if(\$(raw-evoke)) \{      
 \$tmp = Get(database, \$(raw-evoke));      
 if(\$tmp) \{      
  /* found a change to make */      
  if(\$tmp["skill"] \&\& \$tmp["skill"] \> \$skill) \{      
   EmitTo(\$actor, "You don't have enough skill to fit "+Describe(this, nil, \$actor)+" in that way.");      
   return FALSE;      
  \}      
  /* no further objections. Make the change. */      
  EmitTo(\$actor, "You adjust "+Describe(this, nil, \$actor)+" to be "+\$(raw-evoke)+".");      
  if (\$actor != this."base:worn-by") \{      
    EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts "+Describe(this, nil, this."base:worn-by")+" to be "+\$(raw-evoke)+".");      
  \}      
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts "+Describe(this, \$actor)+" to be "+\$(raw-evoke)+".", \$actor, this."base:worn-by");      
      
  /* set the new fit */      
  this."trait:fit" = \$(raw-evoke);      
  this."trait:fittedto" = this."base:worn-by";      
      
  /* and set the adjectives */      
  \$words = explode(\$(raw-evoke), " ");      
  for(\$i = 0; \$i \< sizeof(\$words); \$i++)      
   Set(this, "details:default:adjective:" + lower_case(\$words[\$i])+":local", 1);      
      
  return FALSE;      
 \}      
\}      
      
/* list fitted options */      
\$options = (\{ \});      
\$tmp = Get(database, "*");      
\$indices = map_indices(\$tmp);      
\$indices -= (\{ "revisions" \});      
      
for(\$i=0;\$i\<sizeof(\$indices);\$i++) \{      
 if(typeof(\$tmp[\$indices[\$i]]) == T_MAPPING \&\& (!\$tmp[\$indices[\$i]]["skill"] \|\| Int(\$tmp[\$indices[\$i]]["skill"]) \<= \$skill)) \{      
  \$options \|= (\{ \$indices[\$i] \});      
 \}      
\}      
      
if(!sizeof(\$options)) \{      
 EmitTo(\$actor, "You don't know how to fit "+Describe(this, nil, \$actor)+".");      
 return FALSE;      
\}      
      
EmitTo(\$actor, "To fit armor to someone specific, they must be wearing the armor. Then the command is:");      
EmitTo(\$actor, "fit "+Describe(this)+" 'STYLE");      
EmitTo(\$actor, "Your style options are: "+implode(\$options, ", "));      
      
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:gem:material">
         X[M] if(!\$this."trait:gem:material") return TRUE;         
Set(\$this, "details:gem:sname:" +Str(\$this."trait:gem:material")+ ":local", 1);         
Set(\$this, "details:gem:sname:gem:local", 1);         
         
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:spike:material">
         X[M] if(!\$this."trait:spike:material") return TRUE;         
Set(\$this, "details:spike:sname:" +Str(\$this."trait:spike:material")+ ":local", 1);         
Set(\$this, "details:spike:sname:spike:local", 1);         
         
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:stud:material">
         X[M] if(!\$this."trait:stud:material") return TRUE;         
Set(\$this, "details:stud:sname:" +Str(\$this."trait:stud:material")+ ":local", 1);         
Set(\$this, "details:stud:sname:stud:local", 1);         
         
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1324456423, "meandmine", "X", 1327707947, "meandmine", "K", 1337398258, "meandmine", "E", 1343511913, "jominey", "E", 1343511941, "jominey", "E", 1343511965, "jominey", "K", 1343512304, "jominey", "E", 1343512443, "jominey", "E", 1343532783, "jominey", "E", 1343532798, "jominey", "E", 1343532816, "jominey", "E", 1343532834, "jominey", "E", 1343533050, "jominey", "E", 1344641547, "rastalabor", "X", 1344642950, "rastalabor", "X", 1347586007, "jominey", "S", 1347596303, "slurpeeslurp", "E", 1351294133, "lidiab", "K", 1351294246, "lidiab", "K", 1367255749, "slurpeeslurp", "K", 1367255826, "slurpeeslurp", "K", 1433354947, "slurpeeslurp", "K", 1433354997, "slurpeeslurp", "E", 1442260614, "jominey", "R", 1442261772, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
