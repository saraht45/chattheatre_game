<object clone="/base/obj/thing" owner="ezralee">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.02" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bottle"/>
            <Base:SName sname="thing"/>
            <Base:SName sname="perfume"/>
            <Base:SName sname="oil"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="oils"/>
            <Base:PName pname="bottles"/>
            <Base:PName pname="things"/>
            <Base:PName pname="perfumes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="oil"/>
          <Base:Adjective adjective="shisha"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) bottle of $(this.trait:taste) shisha oil
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:color) bottle of $(this.trait:taste) shisha oil with a $(this.trait:material) stopper.<sbr/> There seems to be enough oil for another $(this.trait:quantity) uses.
          </Base:Description>
          <Base:Description type="glance">
             A $(this.trait:color) bottle of $(this.trait:taste) shisha oil.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) bottle of $(this.trait:taste) shisha oil with a stopper.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stopper" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stopper"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stoppers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) stopper
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:material) stopper.
          </Base:Description>
          <Base:Description type="glance">
             A stopper.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:material) stopper.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         10000
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         20
      </Core:Property>
      <Core:Property property="merry:react-pre:apply-dob">
         X[M] \$victim = \$iob;            
if(\$victim \&\& (sizeof(\$victim) == 1)) \{            
EmitIn( \$actor."base:environment", Describe(\$actor)+" pours "+Describe(this)+" on " +Describe(\$victim, \$object)+ ".", \$object );            
EmitTo( \$actor, "You pour "+Describe(this)+" on " +Describe(\$victim, nil, \$object)+ "." );            
/*\$object."trait:taste" = \$this."trait:taste";            
\$actor."trait:taste" = "of " +\$this."trait:taste";*/           
            
      NRefOb(\$victim[0])."trait:taste" = "";     
     \$id = ironclaw::set_prop(\$obj: NRefOb(\$victim[0]), \$prop: "trait:taste", \$value: \$this."trait:taste", \$timer: 60*60*24*7);           
            
  \$this."trait:quantity" -= 1;            
  if(\$this."trait:quantity" == 0) \{            
    \$delay(0.1, FALSE, "4cbf");            
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");            
    Slay(\$this);            
  \}            
  return FALSE;            
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{            
  EmitTo( \$actor, "You may only pour " +Describe(this)+" on one thing at a time." );            
  return FALSE;            
\} else \{            
  EmitTo( \$actor, "What do you intend to dab " +Describe(this)+" on?" );            
  return FALSE;            
\}            
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:dab-using">
         X[M] \$victim = \$dob;            
if(\$victim \&\& (sizeof(\$victim) == 1)) \{            
EmitIn( \$actor."base:environment", Describe(\$actor)+" dabs "+Describe(this)+" on " +Describe(\$victim, \$actor)+ ".", \$actor );            
EmitTo( \$actor, "You dab "+Describe(this)+" on " +Describe(\$victim, nil, \$actor)+ "." );            
/*\$actor."trait:taste" = \$this."trait:taste";            
\$actor."trait:taste" = "of " +\$this."trait:taste";*/            
    
  NRefOb(\$victim[0])."trait:taste" = "";          
  \$id = ironclaw::set_prop(\$obj: NRefOb(\$victim[0]), \$prop: "trait:taste", \$value: \$this."trait:taste", \$timer: 60*60*24*7);           
            
  \$this."trait:quantity" -= 1;            
  if(\$this."trait:quantity" == 0) \{            
    \$delay(0.1, FALSE, "67f1");            
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");            
    Slay(\$this);            
  \}            
  return FALSE;            
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{            
  EmitTo( \$actor, "You may only dab " +Describe(this)+" on one thing at a time." );            
  return FALSE;            
\} else \{            
  EmitTo( \$actor, "What do you intend to dab " +Describe(this)+" on?" );            
  return FALSE;            
\}            
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:flavor-dob">
         X[M] \$victim = \$iob;            
if(\$victim \&\& (sizeof(\$victim) == 1)) \{            
EmitIn( \$actor."base:environment", Describe(\$actor)+" pours "+Describe(this)+" in " +Describe(\$victim, \$object)+ ".", \$actor );            
EmitTo( \$actor, "You pour "+Describe(this)+" in " +Describe(\$victim, nil, \$object)+ "." );            
/*\$actor."trait:taste" = \$this."trait:taste";            
\$actor."trait:taste" = "of " +\$this."trait:taste";*/            
    
  NRefOb(\$victim[0])."trait:taste" = "";            
  \$id = ironclaw::set_prop(\$obj: NRefOb(\$victim[0]), \$prop: "trait:taste", \$value: \$this."trait:taste", \$timer: 60*60*24*7);            
            
  \$this."trait:quantity" -= 1;            
  if(\$this."trait:quantity" == 0) \{            
    \$delay(0.1, FALSE, "70d9");            
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");            
    Slay(\$this);            
  \}            
  return FALSE;            
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{            
  EmitTo( \$actor, "You may only pour " +Describe(this)+" on one thing at a time." );            
  return FALSE;            
\} else \{            
  EmitTo( \$actor, "What do you intend to pour " +Describe(this)+" on?" );            
  return FALSE;            
\}            
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:variation">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127923051, "tunk_bodin", "X", 1127923345, "tunk_bodin", "X", 1127923680, "tunk_bodin", "X", 1127923815, "tunk_bodin", "X", 1127924823, "tunk_bodin", "X", 1127930010, "tunk_bodin", "X", 1127968158, "tunk_bodin", "X", 1127968319, "tunk_bodin", "X", 1127969815, "tunk_bodin", "X", 1127970910, "tunk_bodin", "X", 1127971625, "tunk_bodin", "E", 1128056257, "tunk_bodin", "X", 1129048001, "tunk_bodin", "E", 1129771495, "tunk_bodin", "S", 1129773643, "tunk_bodin", "S", 1129787113, "tunk_bodin", "X", 1136586185, "tunk_bodin", "X", 1136707572, "tunk_bodin", "X", 1136709214, "tunk_bodin", "X", 1136709377, "tunk_bodin", "X", 1136709513, "tunk_bodin", "X", 1136709537, "tunk_bodin", "X", 1136709687, "tunk_bodin", "X", 1136709792, "tunk_bodin", "X", 1136709831, "tunk_bodin", "X", 1136709873, "tunk_bodin", "X", 1136710143, "tunk_bodin", "X", 1136710275, "tunk_bodin", "X", 1136710300, "tunk_bodin", "X", 1136710401, "tunk_bodin", "X", 1136712006, "tunk_bodin", "X", 1136757751, "roccon", "X", 1136757874, "roccon", "X", 1136757953, "roccon", "X", 1136772933, "tunk_bodin", "X", 1136773254, "tunk_bodin", "X", 1136774798, "tunk_bodin", "X", 1136776241, "tunk_bodin", "X", 1138913572, "tunk_bodin", "X", 1138919541, "tunk_bodin", "X", 1138919766, "tunk_bodin", "X", 1138919850, "tunk_bodin", "X", 1138920047, "tunk_bodin", "X", 1138920133, "tunk_bodin", "X", 1138920327, "tunk_bodin", "X", 1138920377, "tunk_bodin", "X", 1138920784, "tunk_bodin", "X", 1138920847, "tunk_bodin", "X", 1146701394, "tunk_bodin", "X", 1146701556, "tunk_bodin", "X", 1175884195, "tonyd", "P", 1175884256, "tonyd", "E", 1175884340, "tonyd", "P", 1175884359, "tonyd", "P", 1179801382, "necate", "E", 1186526244, "rorschakovacs", "E", 1186526377, "rorschakovacs", "E", 1186526984, "rorschakovacs", "E", 1186527921, "rorschakovacs", "E", 1186527976, "rorschakovacs", "E", 1186528318, "rorschakovacs", "E", 1186528409, "rorschakovacs", "E", 1186528698, "rorschakovacs", "E", 1186528728, "rorschakovacs", "E", 1186528854, "rorschakovacs", "E", 1186528922, "rorschakovacs", "E", 1186529012, "rorschakovacs", "E", 1186529125, "rorschakovacs", "E", 1186529255, "rorschakovacs", "P", 1186529298, "rorschakovacs", "P", 1186529310, "rorschakovacs", "P", 1186529332, "rorschakovacs", "P", 1186529349, "rorschakovacs", "P", 1186883950, "tonyd", "P", 1186884078, "tonyd", "P", 1186884283, "tonyd", "P", 1186884402, "tonyd", "P", 1186884431, "tonyd", "P", 1186884450, "tonyd", "P", 1186884469, "tonyd", "P", 1186884556, "tonyd", "P", 1186884680, "tonyd", "P", 1201371532, "slurpeeslurp", "R", 1201371574, "slurpeeslurp", "E", 1201371629, "slurpeeslurp", "E", 1201371691, "slurpeeslurp", "E", 1201371775, "slurpeeslurp", "E", 1201371940, "slurpeeslurp", "E", 1201371964, "slurpeeslurp", "E", 1201554545, "jsfox", "X", 1205835212, "slurpeeslurp", "E", 1205835259, "slurpeeslurp", "E", 1205835289, "slurpeeslurp", "E", 1227009034, "slurpeeslurp", "E", 1227009039, "slurpeeslurp", "E", 1442462609, "ezralee", "X", 1442462725, "ezralee", "K", 1454812451, "ezralee", "X", 1454812892, "ezralee", "X", 1454813369, "ezralee", "X", 1454813387, "ezralee", "E", 1454813395, "ezralee", "X", 1454813596, "ezralee", "X", 1454813699, "ezralee", "X", 1454814022, "ezralee", "X", 1454814168, "ezralee", "X", 1454814615, "ezralee", "X", 1454815736, "ezralee", "X", 1458007032, "ezralee", "K", 1458007137, "ezralee", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">20</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
