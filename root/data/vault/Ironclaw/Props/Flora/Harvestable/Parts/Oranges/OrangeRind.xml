<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Plants:Urs:Part:UrFruit)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rind"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rind"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="orange"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             orange rind
          </Base:Description>
          <Base:Description type="brief:fresh">
             fresh orange rind
          </Base:Description>
          <Base:Description type="brief:old">
             moldy orange rind
          </Base:Description>
          <Base:Description type="examine">
             The rind of an orange.
          </Base:Description>
          <Base:Description type="examine:fresh">
             The fresh rind of an orange.
          </Base:Description>
          <Base:Description type="examine:old">
             The moldy rind of an orange.
          </Base:Description>
          <Base:Description type="look">
             An orange rind.
          </Base:Description>
          <Base:Description type="look:fresh">
             The fresh rind of an orange.
          </Base:Description>
          <Base:Description type="look:old">
             The moldy rind of an orange.
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             fresh orange rinds
          </Base:Description>
          <Base:Description type="pbrief:old">
             moldy orange rinds
          </Base:Description>
          <Base:Description type="trait:smell">
             citrus
          </Base:Description>
          <Base:Description type="trait:taste">
             bitter and unappetizing
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:smell">
         "citrus"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "bitter and unappetizing"
      </Core:Property>
      <Core:Property property="merry:react-post:slip-iob">
         X[M] /*agility based reaction on stepping on the orange (falling if that is the case)*/
\$agility = \$actor."trait:agility";

if(\$agility \< 3)\{
  EmitTo(\$actor, "You trip on the orange rind and topple over clumsily.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" slips on a discarded orange rind, and clumsily topples over." ,\$actor);
  \$actor."base:stance" = "lying";
  return TRUE;
\}
if(\$agility \< 5)\{
  EmitTo(\$actor, "You trip on the orange rind, and almost manage to find your balance while wildly flailing your arms, but you eventually lose the battle and land on your rump!");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" trips on an orange rind, and almost manages to find "+\$actor."base:possessive" + " balance while wildly flailing "+\$actor."base:possessive"+ " arms, but eventually loses the battle and plops on the ground." ,\$actor);
  \$actor."base:stance" = "lying";
  return TRUE;
\}
if(\$agility \< 7)\{
  EmitTo(\$actor, "You trip on an orange rind, but, with some ridiculous flappings of the arms, manage to regain balance instead of planting face-first into the ground. ");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" trips on an orange rind, but, with some ridiculous flappings of the arms, manages to regain balance instead of planting face-first into the ground.", \$actor);
  return TRUE;
\}
if(\$agility \>= 7)\{
  EmitTo(\$actor, "You nearly step on an orange rind, but manage to spot it at the last moment and take evasive actions!");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" nearly steps on an orange rind, but manages to spot it at the last moment and take evasive actions." ,\$actor);
  return TRUE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:step-iob">
         X[M] /*agility based reaction on stepping on the orange (falling if that is the case)*/
\$agility = \$actor."trait:agility";

if(\$agility \< 3)\{
  EmitTo(\$actor, "You trip on the orange rind and topple over clumsily.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" slips on a discarded orange rind, and clumsily topples over." ,\$actor);
  \$actor."base:stance" = "lying";
  return TRUE;
\}
if(\$agility \< 5)\{
  EmitTo(\$actor, "You trip on the orange rind, and almost manage to find your balance while wildly flailing your arms, but you eventually lose the battle and land on your rump!");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" trips on an orange rind, and almost manages to find "+\$actor."base:possessive" + " balance while wildly flailing "+\$actor."base:possessive"+ " arms, but eventually loses the battle and plops on the ground." ,\$actor);
  \$actor."base:stance" = "lying";
  return TRUE;
\}
if(\$agility \< 7)\{
  EmitTo(\$actor, "You trip on an orange rind, but, with some ridiculous flappings of the arms, manage to regain balance instead of planting face-first into the ground. ");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" trips on an orange rind, but, with some ridiculous flappings of the arms, manages to regain balance instead of planting face-first into the ground.", \$actor);
  return TRUE;
\}
if(\$agility \>= 7)\{
  EmitTo(\$actor, "You nearly step on an orange rind, but manage to spot it at the last moment and take evasive actions!");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" nearly steps on an orange rind, but manages to spot it at the last moment and take evasive actions." ,\$actor);
  return TRUE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1418710194, "jominey", "E", 1418710199, "jominey", "E", 1418710202, "jominey", "E", 1418710239, "jominey", "K", 1418710293, "jominey", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
