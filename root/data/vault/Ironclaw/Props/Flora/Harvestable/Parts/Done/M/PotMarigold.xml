<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Plants:Urs:Part:UrFlower)"/>
    <Base:Bulk immobile="false" mass="1" density="0.8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="marigold"/>
            <Base:SName sname="flower"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="marigolds"/>
            <Base:PName pname="flowers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bright"/>
          <Base:Adjective adjective="pot"/>
          <Base:Adjective adjective="yellow"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bright yellow marigold
          </Base:Description>
          <Base:Description type="brief:fresh">
             bright yellow marigold
          </Base:Description>
          <Base:Description type="brief:old">
             limp bright yellow marigold
          </Base:Description>
          <Base:Description type="examine">
             A bright yellow marigold. <sbr/> This flower has $[if($this."trait:quantity" == 0) { return "no petals"; } else if ($this."trait:quantity" == 1) { return "one petal"; } else { return desc_cardinal($this."trait:quantity")+ " petals"; }] ready to be harvested.
          </Base:Description>
          <Base:Description type="examine:fresh">
             A bright yellow marigold. <sbr/> This flower has $[if($this."trait:quantity" == 0) { return "no petals"; } else if ($this."trait:quantity" == 1) { return "one petal"; } else { return desc_cardinal($this."trait:quantity")+ " petals"; }] ready to be harvested.
          </Base:Description>
          <Base:Description type="examine:old">
             A limp bright yellow marigold. <sbr/> This flower has $[if($this."trait:quantity" == 0) { return "no petals"; } else if ($this."trait:quantity" == 1) { return "one petal"; } else { return desc_cardinal($this."trait:quantity")+ " petals"; }] ready to be harvested.
          </Base:Description>
          <Base:Description type="look">
             A bright yellow marigold.
          </Base:Description>
          <Base:Description type="look:fresh">
             A bright yellow marigold.
          </Base:Description>
          <Base:Description type="look:old">
             A limp bright yellow marigold.
          </Base:Description>
          <Base:Description type="pbrief">
             bright yellow marigolds
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             bright yellow marigolds
          </Base:Description>
          <Base:Description type="pbrief:old">
             limp bright yellow marigolds
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:smell">
         "subtle sweetness"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "subtly sweet with a smooth texture"
      </Core:Property>
      <Core:Property property="merry:react:harvest-dob">
         X[M] /* check there are flowers available */                
if(\$this."trait:quantity" \< 1) \{                
  EmitTo(\$actor, "There are no harvestable flowers on "+Describe(\$this)+".");                
  return FALSE;                
\}                
                
/* reduce the number of flowers on the tree */                
\$this."trait:quantity" -= 1;                
                
/* create the flower object and give it to the player */                
\$object = Spawn(nil /* defunct */); \$object."base:environment" = \$actor;                
                
/* emit message to player and room */                
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");                
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);                
                
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pick-dob">
         X[M] /* check there are petals available */                  
if(\$this."trait:quantity" \< 1) \{                  
  EmitTo(\$actor, "There are no harvestable petals on "+Describe(\$this)+".");                  
  return FALSE;                  
\}                  
                  
/* reduce the number of petals on the flower */                  
\$this."trait:quantity" -= 1;                  
                  
/* create the petal object and give it to the player */                  
\$object = Spawn(nil /* defunct */); \$object."base:environment" = \$actor;                  
                  
/* emit message to player and room */                  
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");                  
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);                  
                  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] /* stop when we hit 15 petals on the flower */                
if(\$this."trait:quantity" \>= 15)    
   return TRUE; 
 
/* wait a while, then add a petal */              
\$delay((2*24*60), TRUE, "9d85");              
if(\$this."trait:quantity" \< 5)              
  \$this."trait:quantity" += 1;  
 
   return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1286998100, "morwenlorelie", "E", 1286998131, "morwenlorelie", "E", 1286998197, "morwenlorelie", "K", 1286998507, "morwenlorelie", "X", 1286998590, "morwenlorelie", "K", 1286998599, "morwenlorelie", "E", 1286999147, "morwenlorelie", "X", 1286999286, "morwenlorelie", "K", 1286999392, "morwenlorelie", "X", 1286999519, "morwenlorelie", "E", 1286999560, "morwenlorelie", "E", 1286999949, "morwenlorelie", "X", 1286999998, "morwenlorelie", "X", 1287000066, "morwenlorelie", "X", 1287000602, "morwenlorelie", "E", 1315423219, "morwenlorelie", "R", 1327969651, "jominey", "R", 1347222640, "jominey", "R", 1347233584, "jominey", "R", 1418709983, "jominey", "E", 1418796085, "jominey", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
