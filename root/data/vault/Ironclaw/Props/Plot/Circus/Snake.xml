<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.7" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0.001" maxweight="0.2"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="snake"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="snakes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:build) $(this.trait:color) snake
          </Base:Description>
          <Base:Description type="examine">
             This $(this.trait:build) snake measures about two feet in length from head to tail. Its scaly $(this.trait:color) hide glistens as it undulates its muscular body, and a flickering forked tongue is occasionally visible through its sharp fangs.
          </Base:Description>
          <Base:Description type="look">
             This $(this.trait:color) snake has a $(this.trait:build), muscular body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="serpent"/>
          <Base:Adjective adjective="snake"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:size) serpant's body
          </Base:Description>
          <Base:Description type="look">
             A snake's $(this.trait:build), muscular body covered in $(this.trait:color) scales.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="serpent"/>
          <Base:Adjective adjective="slitted"/>
          <Base:Adjective adjective="snake"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:eyes) slitted eyes
          </Base:Description>
          <Base:Description type="look">
             A pair of $(this.trait:eyes) slitted eyes located on the sides of this snake's head.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fangs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fang"/>
            <Base:SName sname="teeth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fangs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="long"/>
          <Base:Adjective adjective="serpent"/>
          <Base:Adjective adjective="sharp"/>
          <Base:Adjective adjective="snake"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             snake's sharp fangs
          </Base:Description>
          <Base:Description type="look">
             A set of long sharp fangs extend from the roof of the snake's mouth when it opens its mouth. These hollow fangs are filled with potent poison.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="serpent"/>
          <Base:Adjective adjective="snake"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             snake's head
          </Base:Description>
          <Base:Description type="look">
             A scaly snake head.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tongue" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tongue"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tongues"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="forked"/>
          <Base:Adjective adjective="long"/>
          <Base:Adjective adjective="serpent"/>
          <Base:Adjective adjective="snake"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             snake's forked tongue
          </Base:Description>
          <Base:Description type="look">
             This is a long tongue, the very tip of it is slip up the middle giving it a forked appearance.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="base:initialcontents"/>
      <Core:Property property="export:career:combat:unarmed">
         24
      </Core:Property>
      <Core:Property property="export:nip-core:consent:allow-all">
         1
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "emoting":\<Lib:NIP:lib:emoting\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave", "lib:handler:emoting:preparse" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<Lib:NIP:lib:spawn-control\>:(\{ "act:stop" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:emoting\>, \<Lib:NIP:lib:spawn-control\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:spawn:area">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="export:nip:behavior:db">
         \<Ironclaw:Props:Plot:WildDray:DrayBDO\>
      </Core:Property>
      <Core:Property property="export:nip:trait:emoting:frequency">
         7
      </Core:Property>
      <Core:Property property="export:nip:trait:freemoting:frequency">
         7
      </Core:Property>
      <Core:Property property="export:nip:trait:freemoting:steal-frequency">
         10
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:skill:combat:unarmed">
         24
      </Core:Property>
      <Core:Property property="export:trait:agility">
         50
      </Core:Property>
      <Core:Property property="export:trait:body">24</Core:Property>
      <Core:Property property="export:trait:catch:difficulty">
         6
      </Core:Property>
      <Core:Property property="export:trait:speed">
         50
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:color" = oneof("orange", "black", "amber", "tan", "russet", "moss green", "rich brown", "muddy brown", "pitch black", "yellow");

\$this."trait:build" = oneof("sinuous", "slender", "thick", "long", "thin", "average");

\$this."trait:catch:difficulty" = random(8);

Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$(hook-property): "trait:color");
Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$(hook-property): "trait:build");

return TRUE;
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:breakcombat">
         \<Ironclaw:Lib:Combat:New:Combat\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:pass">
         \<Ironclaw:Lib:Combat:New:Combat\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:stop">
         \<Lib:NIP:lib:spawn-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:behave">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:emoting:decide">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:parse">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:preparse">
         \<Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness-post:login%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:lib:combat:got_hit">
         X[M] /* assign actions with this script rather than using the normal combat system */
\$az = \$\{Chatters:AE:az:azrael\};
EmitTo(\$az, "Checking damage");

if(Int(\$this."combat:damage") \<= 24) return TRUE;

/* high damage. Kill the NPC */

/* is the dray already dead? */
/*if(\$this."death:dead") return TRUE;*/

Social(\$this, "thrash", "wildly", nil);
EmitIn(\$this."base:environment", Describe(this)+" dies.");

Call(\$\{Ironclaw:Lib:Combat:New:Combat\}, "remove_from_combat", \$fighter: \$this);

\$this."death:dead" = 1;
\$this."details:default:sname:corpse" = 1;
\$this."details:default:pname:corpses" = 1;
\$this."details:default:adjective:dray" = 1;

\$this."core:ur:parent" = \$\{Ironclaw:Animals:InProgress:Dray\};

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:catch-what">
         X[M] if(!\$using) \{
    EmitTo(\$actor, "What did you want to catch " + Describe(\$this, nil, \$actor) + " with?");
    return FALSE;
\}

if(!sizeof(\$using)) \{
    EmitTo(\$actor, "What did you want to catch " + Describe(\$this, nil, \$actor) + " with?");
    return FALSE;
\}

\$net = NRefOb(\$using[0]);

if(\$net."trait:objecttype" != "snakenet") \{
    EmitTo(\$actor, "You can't catch " + Describe(\$this, nil, \$actor) + " with " + Describe(\$net, nil, \$actor) + ".");
    return FALSE;
\}

if(sizeof(\$net."base:inventory")) \{
    EmitTo(\$actor, Describe(\$net, nil, \$actor) + " can't hold anymore.");
    return FALSE;
\}

if(\$this."base:environment" != \$actor."base:environment") \{
    EmitTo(\$actor, "You can't get close enough to " + Describe(\$this, nil, \$actor) + ".");
    return FALSE;
\}

\$roll = ironclaw::makeroll(\$dicearray: (\{ \$actor."trait:mind", \$actor."trait:agility" \})) * 10;  
\$difficulty = Int(\$this."trait:catch:difficulty") * 10;
\$critf = Int(Flt(\$difficulty) * 0.05);

if(\$roll \>= \$difficulty) \{
    \$success = 2;
\} else if(\$roll \< \$difficulty \&\& \$roll \> \$critf) \{
    \$success = 1;
\} else \{
    \$success = 0;
\}

switch(\$success) \{
    case 0: 
        /* Critical Failure */
        EmitTo(\$actor, Describe(\$this) + " gets startled by your clumsy attempt and bites you!");
        EmitIn(\$actor, Describe(\$this) + " gets startled by " + Describe(\$actor) + "'s clumsy attempt and bites " + Str(\$actor."base:objective") + ".");
        \$actor."combat:damage" = Int(\$actor."combat:damage") + random(3) + 1;
        break;
    case 1:
        /* Failure */
        EmitTo(\$actor, Describe(\$this) + " evades " + Describe(\$net, nil, \$actor) + ".");
        EmitIn(\$actor, Describe(\$this) + " evades " + Describe(\$net, \$actor) + ".");
        break;
    case 2:
        /* Success */
        EmitTo(\$actor, "You manage to lure " + Describe(\$this) + " into " + Describe(\$net, nil, \$actor) + ".");
        EmitIn(\$actor, Describe(\$actor) + " manages to lure " + Describe(\$this) + " into " + Describe(\$net, \$actor) + ".");
        \$this."base:environment" = \$net;
        break;
    default:
        /* Success */
        EmitTo(\$actor, "You manage to lure " + Describe(\$this) + " into " + Describe(\$net, nil, \$actor) + ".");
        EmitIn(\$actor, Describe(\$actor) + " manages to lure " + Describe(\$this) + " into " + Describe(\$net, \$actor) + ".");
        \$this."base:environment" = \$net;
        break;
\}

return FALSE;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:consent:allow-all">
         1
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "emoting":\<Lib:NIP:lib:emoting\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave", "lib:handler:emoting:preparse" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<Lib:NIP:lib:spawn-control\>:(\{ "act:stop" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:emoting\>, \<Lib:NIP:lib:spawn-control\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:spawn:area">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="nip:behavior:db">
         \<Ironclaw:Props:Plot:WildDray:DrayBDO\>
      </Core:Property>
      <Core:Property property="nip:trait:emoting:frequency">
         7
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:frequency">
         7
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:steal-frequency">
         10
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="nip:trait:spawn:area">
         \<Ironclaw:Props:Plot:WildDray:spawnpoint\>
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1266735668
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1266735668
      </Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1265593703, "catobelpas", "R", 1265593717, "catobelpas", "E", 1265593765, "catobelpas", "E", 1265593799, "catobelpas", "E", 1265593972, "catobelpas", "E", 1265593986, "catobelpas", "E", 1265594009, "catobelpas", "E", 1265594021, "catobelpas", "E", 1265594058, "catobelpas", "E", 1266338764, "slurpeeslurp", "E", 1266338798, "slurpeeslurp", "E", 1266338845, "slurpeeslurp", "E", 1266338856, "slurpeeslurp", "E", 1266338864, "slurpeeslurp", "E", 1266338874, "slurpeeslurp", "E", 1266338882, "slurpeeslurp", "E", 1266340123, "slurpeeslurp", "E", 1266340143, "slurpeeslurp", "E", 1266340370, "slurpeeslurp", "E", 1266340446, "slurpeeslurp", "E", 1266341638, "slurpeeslurp", "E", 1266341759, "slurpeeslurp", "E", 1266342137, "slurpeeslurp", "E", 1266342385, "slurpeeslurp", "K", 1266342398, "slurpeeslurp", "E", 1266342533, "slurpeeslurp", "E", 1266343115, "slurpeeslurp", "E", 1266343192, "slurpeeslurp", "E", 1266650130, "tonyd", "P", 1266650392, "tonyd", "P", 1266650435, "tonyd", "P", 1266650475, "tonyd", "P", 1266650504, "tonyd", "P", 1266650525, "tonyd", "P", 1266650602, "tonyd", "P", 1266650617, "tonyd", "P", 1266650775, "tonyd", "P", 1266651149, "tonyd", "P", 1266674060, "tonyd", "P", 1266674095, "tonyd", "P", 1266674123, "tonyd", "P", 1266674165, "tonyd", "P", 1266674216, "tonyd", "P", 1266674259, "tonyd", "P", 1266674294, "tonyd", "P", 1266674334, "tonyd", "P", 1266674604, "tonyd", "P", 1266674623, "tonyd", "P", 1266675385, "tonyd", "P", 1266675419, "tonyd", "P", 1266675991, "tonyd", "P", 1266676027, "tonyd", "P", 1266676192, "tonyd", "P", 1266676336, "tonyd", "P", 1266676455, "tonyd", "P", 1266676528, "tonyd", "P", 1266730283, "tonyd", "P", 1266730352, "tonyd", "P", 1266730521, "tonyd", "E", 1266730671, "tonyd", "E", 1266730687, "tonyd", "E", 1266730883, "tonyd", "E", 1266730895, "tonyd", "E", 1266730917, "tonyd", "E", 1266730942, "tonyd", "E", 1266731076, "tonyd", "E", 1266731171, "tonyd", "E", 1266732713, "tonyd", "P", 1266733478, "tonyd", "P", 1266733627, "tonyd", "P", 1266734602, "tonyd", "P", 1266734627, "tonyd", "P", 1266734740, "tonyd", "P", 1266734833, "tonyd", "P", 1266734855, "tonyd", "P", 1266735146, "tonyd", "P", 1266735153, "tonyd", "P", 1266735334, "tonyd", "P", 1266735690, "tonyd", "S", 1266735806, "tonyd", "S", 1266736498, "catobelpas", "E", 1266736578, "tonyd", "E", 1266736800, "tonyd", "S", 1266737001, "tonyd", "E", 1266737332, "tonyd", "E", 1266741293, "tonyd", "S", 1266741620, "tonyd", "S", 1266741686, "tonyd", "S", 1266742076, "tonyd", "S", 1267136040, "jominey", "E", 1267136059, "jominey", "S", 1267136135, "jominey", "S", 1267998221, "morwenlorelie", "S", 1267998229, "morwenlorelie", "S", 1267998271, "morwenlorelie", "E", 1267998289, "morwenlorelie", "E", 1267998322, "morwenlorelie", "K", 1268935863, "jominey", "E", 1268935870, "jominey", "E", 1268935877, "jominey", "E", 1268935887, "jominey", "E", 1268935902, "jominey", "E", 1268935972, "jominey", "E", 1269039958, "jominey", "K", 1269040040, "jominey", "E", 1269040042, "jominey", "E", 1269040046, "jominey", "E", 1269040048, "jominey", "E", 1269040051, "jominey", "E", 1269040054, "jominey", "E", 1269040059, "jominey", "E", 1269040071, "jominey", "E", 1269040073, "jominey", "E", 1269040076, "jominey", "E", 1269040079, "jominey", "E", 1269040095, "jominey", "E", 1269040127, "jominey", "E", 1269040163, "jominey", "E", 1269040168, "jominey", "E", 1269040170, "jominey", "E", 1269040173, "jominey", "E", 1269040177, "jominey", "E", 1269040179, "jominey", "E", 1269040231, "jominey", "K", 1269040821, "jominey", "K", 1269041089, "jominey", "E", 1269457748, "jominey", "E", 1269457775, "jominey", "E", 1269457797, "jominey", "E", 1269457829, "jominey", "E", 1269457846, "jominey", "E", 1269458708, "jominey", "E", 1269458932, "jominey", "E", 1269459025, "jominey", "E", 1269459212, "jominey", "E", 1269459385, "jominey", "K", 1269550498, "jominey", "E", 1269550576, "jominey", "E", 1269552563, "jominey", "E", 1269552803, "jominey", "E", 1269552888, "jominey", "E", 1269553094, "jominey", "E", 1269553121, "jominey", "E", 1269553159, "jominey", "E", 1269553183, "jominey", "E", 1269553231, "jominey", "E", 1269553498, "jominey", "E", 1269553681, "jominey", "E", 1269553772, "jominey", "E", 1269553781, "jominey", "E", 1269553845, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="sigstream">2</Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="trait:build">"firm"</Core:Property>
      <Core:Property property="trait:color">"sable"</Core:Property>
      <Core:Property property="trait:eyeshape">
         "discoid"
      </Core:Property>
      <Core:Property property="trait:size">
         "super-sized"
      </Core:Property>
      <Core:Property property="trait:variation">
         "sapphire"
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
