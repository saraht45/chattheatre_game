<object clone="/base/obj/thing" owner="meandmine">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="handwear"/>
            <Base:SName sname="glove"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="handwears"/>
            <Base:PName pname="gloves"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rawhide"/>
          <Base:Adjective adjective="right"/>
          <Base:Adjective adjective="right-handed"/>
          <Base:Adjective adjective="strong"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) rawhide leather glove
          </Base:Description>
          <Base:Description type="look">
             A single elbow-length $(this.trait:color) right-handed glove, made from strong rawhide leather. Some discolored scratch marks decorate the length of the arm covering.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="covering"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="coverings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="arm"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             arm covering
          </Base:Description>
          <Base:Description type="look">
             The section of this $(this.trait:color) rawhide leather glove that covers the arm. The surface has discolored scratches that resemebles claw marks.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="wrist-right"/>
      <Base:Covered value="hand-right"/>
      <Base:Covered value="fingers-right"/>
      <Base:Covered value="arm-lower-right"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:birdtype">
         \<Ironclaw:Props:Plot:Falconer:Bird-Goshawk\>
      </Core:Property>
      <Core:Property property="merry:act-post:approach%falconry">
         X[M] /* make the bird move with the person */
if(\$actor."falconry:glove" \&\& \$actor."falconry:glove".bird \&\& \$actor."falconry:glove".bird."base:environment" == \$actor."base:environment" \&\& \$actor."falconry:glove".bird.onhand) \{
  \$delay(0.1, TRUE, "d4ca");
  \$target = NewNRef(\$actor, "right-arm");
  \$actor."falconry:glove".bird."base:proximity" = \$target;
  \$actor."falconry:glove".bird."base:prepositionstring" = "on";
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:enter%falconry">
         X[M] /* make the bird move with the person */
if(\$actor."falconry:glove" \&\& \$actor."falconry:glove".bird \&\& \$actor."falconry:glove".bird."base:environment" != \$actor."base:environment" \&\& \$actor."falconry:glove".bird.onhand) \{
  \$actor."falconry:glove".bird."base:environment" = \$actor."base:environment";
  \$target = NewNRef(\$actor, "right-arm");
  \$actor."falconry:glove".bird."base:proximity" = \$target;
  \$actor."falconry:glove".bird."base:prepositionstring" = "on";
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:raise%falconry">
         X[M] if(\$actor."falconry:glove" \&\& NRefDetail(\$target) == "right-arm")
  return Call(\$actor."falconry:glove", "call_bird");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:call_bird">
         X[M] /* someone called their bird */
/* do we have a bird associated with this glove? */
if(!this.bird) \{
  /* no bird. Create one */
  if(this.birdtype) \{
    \$ob = this.birdtype;
  \} else \{
    \$ob = \$\{Ironclaw:Props:Animals:Falconing:Birds:Falcon\};
  \}
  if(\$ob) \{
    this.bird = Spawn(\$ob);
    this.bird.ownerglove = this;
  \} else \{
    EmitTo(\$actor, "Error: Bird type not found. Please @bug this.");
    return FALSE;
  \}
\}

/* where will the bird land */
\$target = NewNRef(\$actor, "right-arm");

/* make the bird arrive */
if(this.bird."base:environment" != \$actor."base:environment") \{
  if(this.bird."base:environment")
    EmitIn(this.bird."base:environment", Describe(this.bird)+" flaps up, up, and away.");
  this.bird."base:environment" = \$actor."base:environment";
  EmitTo(\$actor, Describe(this.bird)+" slowly flaps in, and observantly lands on "+Describe(\$target, nil, \$actor)+".");
  EmitIn(\$actor."base:environment", Describe(this.bird)+" slowly flaps in, and observantly lands on "+Describe(\$target)+".", \$actor);
\} else \{
  if(this.bird."base:proximity" \&\& (NRefOb(this.bird."base:proximity") == \$actor \&\& NRefDetail(this.bird."base:proximity") == "right-arm")) \{
    EmitTo(\$actor, Describe(this.bird)+" lazily flaps its wings while remaining on your arm.");
    EmitIn(\$actor."base:environment", Describe(this.bird)+" lazily flaps its wings while remaining on "+Describe(\$target)+".", \$actor);
  \} else \{
    EmitTo(\$actor, Describe(this.bird)+" slowly flaps back to "+Describe(\$target, nil, \$actor)+".");
    EmitIn(\$actor."base:environment", Describe(this.bird)+" flaps slowly back to "+Describe(\$target)+".", \$actor);
  \}
\}
this.bird."base:proximity" = \$target;
this.bird."base:prepositionstring" = "on";
this.bird.onhand = TRUE;
this.bird.caller = \$actor;

Call(this.bird, "ingame:loop");

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:raise-dob%falconry">
         X[M] if(this."base:environment" != \$actor) return TRUE;
return Call(this, "call_bird");
      </Core:Property>
      <Core:Property property="merry:react-post:unwear%falconry">
         X[M] /* make the falcon no longer respond to the person wearing the glove */
\$actor."falconry:glove" = nil;
\$actor."merry:inherit:act-post:raise%falconry" = nil;
\$actor."merry:inherit:act-post:approach%falconry" = nil;
\$actor."merry:inherit:act-post:enter%falconry" = nil;

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:wear%falconry">
         X[M] /* make the falcon respond to the person wearing the glove */
\$actor."falconry:glove" = this;
\$actor."merry:inherit:act-post:raise%falconry" = \$\{Ironclaw:Props:Animals:Falconing:Glove\};
\$actor."merry:inherit:act-post:approach%falconry" = \$\{Ironclaw:Props:Animals:Falconing:Glove\};
\$actor."merry:inherit:act-post:enter%falconry" = \$\{Ironclaw:Props:Animals:Falconing:Glove\};

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:unwear%falconry">
         X[M] /* make sure the falcon isn't still their arm already */
if(this.bird \&\& this.bird.onhand \&\& this.bird."base:environment" == \$actor."base:environment") \{
  EmitTo(\$actor, "You cannot remove "+Describe(this, nil, \$actor)+" while "+Describe(this.bird)+" is on your arm.");
  return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1200110298, "tonyd", "E", 1200110318, "tonyd", "E", 1200111581, "tonyd", "P", 1200111654, "tonyd", "E", 1200111708, "tonyd", "P", 1200111751, "tonyd", "P", 1200111777, "tonyd", "P", 1200111790, "tonyd", "P", 1200111990, "tonyd", "P", 1200112000, "tonyd", "P", 1200112016, "tonyd", "P", 1200112080, "tonyd", "P", 1200112432, "tonyd", "P", 1200112460, "tonyd", "P", 1200112508, "tonyd", "P", 1200112527, "tonyd", "P", 1200112558, "tonyd", "P", 1200112586, "tonyd", "P", 1200112850, "tonyd", "P", 1200114986, "tonyd", "P", 1200115224, "tonyd", "P", 1200115535, "tonyd", "P", 1200115697, "tonyd", "P", 1200115973, "tonyd", "P", 1200115995, "tonyd", "P", 1200116084, "tonyd", "P", 1200116107, "tonyd", "P", 1200116239, "tonyd", "P", 1200116260, "tonyd", "P", 1200116525, "tonyd", "P", 1200116563, "tonyd", "P", 1200116593, "tonyd", "P", 1200116618, "tonyd", "P", 1200116646, "tonyd", "P", 1200116664, "tonyd", "P", 1200116683, "tonyd", "P", 1200116749, "tonyd", "P", 1200116763, "tonyd", "P", 1200116830, "tonyd", "P", 1200116887, "tonyd", "P", 1200116902, "tonyd", "P", 1200116935, "tonyd", "P", 1200117000, "tonyd", "P", 1200117047, "tonyd", "P", 1200117159, "tonyd", "P", 1200117198, "tonyd", "P", 1200117225, "tonyd", "P", 1200117637, "tonyd", "P", 1200117840, "tonyd", "P", 1200117891, "tonyd", "P", 1200119622, "tonyd", "P", 1200119702, "tonyd", "P", 1200119754, "tonyd", "P", 1200119825, "tonyd", "P", 1200119870, "tonyd", "P", 1200119992, "tonyd", "P", 1200120045, "tonyd", "P", 1200120066, "tonyd", "P", 1200120102, "tonyd", "P", 1200120129, "tonyd", "P", 1200120201, "tonyd", "P", 1200120241, "tonyd", "P", 1200120456, "tonyd", "P", 1200120511, "tonyd", "P", 1200121817, "tonyd", "P", 1200121840, "tonyd", "P", 1200121904, "tonyd", "P", 1200121949, "tonyd", "P", 1200122130, "tonyd", "P", 1200123052, "tonyd", "P", 1200123086, "tonyd", "P", 1200123099, "tonyd", "P", 1200123762, "tonyd", "P", 1200124253, "tonyd", "P", 1200124445, "tonyd", "P", 1200124610, "tonyd", "P", 1200124697, "tonyd", "P", 1200124712, "tonyd", "P", 1200124731, "tonyd", "P", 1200124777, "tonyd", "P", 1211098017, "tonyd", "P", 1211098602, "tonyd", "E", 1211098653, "tonyd", "E", 1237151405, "morwenlorelie", "K", 1265648513, "catobelpas", "E", 1307579279, "slurpeeslurp", "E", 1307579480, "slurpeeslurp", "E", 1307579539, "slurpeeslurp", "E", 1307579550, "slurpeeslurp", "E", 1307581898, "slurpeeslurp", "E", 1307732687, "slurpeeslurp", "E", 1307732724, "slurpeeslurp", "E", 1307733985, "slurpeeslurp", "E", 1307736098, "meandmine", "X", 1307736158, "meandmine", "X", 1307736336, "meandmine", "X", 1307737929, "rastalabor", "R", 1307738046, "slurpeeslurp", "E", 1307738399, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:master">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
