<object clone="/base/obj/thing" owner="balkaar">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="50" density="0.6"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="sitting" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bonfire"/>
            <Base:SName sname="fire"/>
            <Base:SName sname="tree"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bonfires"/>
            <Base:PName pname="fires"/>
            <Base:PName pname="plural name"/>
            <Base:PName pname="trees"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="NEW"/>
          <Base:Adjective adjective="burning"/>
          <Base:Adjective adjective="roaring"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? not | $(this.detail:light:hidden) |burning } tree and lumbers
          </Base:Description>
          <Base:Description type="look">
             {? not | $(this.detail:light:hidden) | A pomegranate tree with its leaves burnt, the bark dark from fire. It is surrounded by a  pile of collected woods. Roaring flames coming from the massive body illuminate the area and provide a comfortable warmth. To put out the bonfire, you can <acmd tag="command" cmd="extinguish bonfire">extinguish</acmd> it.| A pomegranate tree with its leaves burnt, the bark dark from fire. It is surrounded by a pile of collected woods. You can <acmd tag="command" cmd="light bonfire">light</acmd> the bonfire to apply flame to it.}
          </Base:Description>
          <Base:Description type="pbrief">
             {? not | $(this.detail:light:hidden) |burning }tree and lumbers
          </Base:Description>
          <Base:Description type="react-desc:extinguish-dob">
             {? not | $(this.detail:light:hidden) | $[EmitTo($actor, Describe($this, nil, $actor) + " gradually extinguish as the flames die away."); EmitIn(Get($actor, "base:environment"), Describe($this, nil, nil) + " gradually extinguish as the flames die away.", $actor); Set(this, "detail:light:hidden", TRUE);] | The tree and the lumbers surrounding it are not lit. }
          </Base:Description>
          <Base:Description type="react-desc:light-dob">
             {? not | $(this.detail:light:hidden) | The burning tree and lumbers already burn. | $[EmitTo($actor, Describe($this, nil, $actor) + " set on fire. The flames inch by inch claim the wood to their own game."); EmitIn(Get($actor, "base:environment"), Describe($this, nil, nil) + " set on fire. The flames inch by inch claim the wood to their own game.", $actor); Set(this, "detail:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react-post:switch-dob">
             {? not | $(this.detail:light:hidden) | The fire of the burning tree and lumbers slowly dies away. $[Set($this, "detail:light:hidden", TRUE);] | The tree and lumbers set on fire. $[Set(this, "detail:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react-post:toggle-dob">
             {? not | $(this.detail:light:hidden) | The fire of the burning tree and lumbers slowly dies away. $[Set($this, "detail:light:hidden", TRUE);] | The tree and lumbers set on fire. $[Set(this, "detail:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react3-post:switch-dob">
             {? not | $(this.detail:light:hidden) |  The tree and lumbers set on fire. | The fire of the burning tree and lumbers slowly dies away.}
          </Base:Description>
          <Base:Description type="react3-post:toggle-dob">
             {? not | $(this.details:light:hidden) |  The tree and lumbers set on fire. | The fire of the burning tree and lumbers slowly dies away.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ash" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ash"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ashes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="some"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             some ash at the base of the burning tree
          </Base:Description>
          <Base:Description type="examine">
             Ash in various shades lying at the base of the burning tree and the lumbers. The sizzling pieces of wood show through the thin whitish gray ash coat. You might be able to get some of the less scorching part.
          </Base:Description>
          <Base:Description type="look">
             Ash in various shades lying at the base of the burning tree and the lumbers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bowl" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="set"/>
            <Base:SName sname="bowl"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sets"/>
            <Base:PName pname="bowls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="NEW"/>
          <Base:Adjective adjective="empty"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             set of bowls
          </Base:Description>
          <Base:Description type="examine">
             A set of fist-sized bowls safely gathered at some distance from the tree and the lumbers. They are put there to be used if someone wishes to SCOOP the ash that is collecting around the base of the burning tree and the lumbers.
          </Base:Description>
          <Base:Description type="look">
             A set of fist-sized bowls safely gathered at some distance from the tree and the lumbers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="light" prime="false" def="false" abstract="false" hidden="true" luminosity="20" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="light"/>
            <Base:SName sname="flame"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="flames"/>
            <Base:PName pname="lights"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="light"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             light from the burning tree and lumbers
          </Base:Description>
          <Base:Description type="examine">
             The light from the burning tree and lumbers casts a warm golden hue on the surrounding area.
          </Base:Description>
          <Base:Description type="look">
             A yellowish orange light from the burning tree and lumbers.
          </Base:Description>
          <Base:Description type="pbrief">lights</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="detail:light:hidden">
         1
      </Base:InitialProperty>
      <Base:InitialProperty property="trait:light:lightable">
         1
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:trait:objecttype">
         "bonfire"
      </Core:Property>
      <Core:Property property="merry:lib:burn">
         X[M] /* code to add things to the bonfire */           
           
/* did they add something? */           
if(!\$what) \{           
  /* did they actually toss something at the fire? */       
  EmitTo (\$actor, "You need to toss something");           
  return TRUE;    \}       
       
/* check they are only add one item */           
if(sizeof(\$what) \> 1) \{          
EmitTo (\$actor, "You clumsily toss " +Describe(\$what)+ " at a fire but they fall short. Perhaps try one at a time.");       
EmitIn (\$actor."base:environment", Describe(\$actor)+ " tosses " +Describe(\$what)+ " at the fire, missing.", \$actor);       
  return TRUE;  \}          
       
/* Send the random emits to the crowd of the objects being fed to the fire */       
       
\$object = NRefOb(\$what[0]);       
\$room = \$actor."base:environment";       
     
  switch(random(7))               
  \{        
    case 6:               
      EmitIn( \$room, "The moment " +Describe(\$actor)+ " throws " +Describe(\$what)+ " on the fire, sparkles are released and fly far up into the sky." );               
    break;     
    case 5:               
      EmitIn( \$room, "As " +Describe(\$actor)+ " feeds the fire with " +Describe(\$what)+ " bright flames leap high up into the air." );               
    break;    
    case 4:               
      EmitIn( \$room, "Sparkles fly high into the sky as new fuel is added to the fire." );               
    break;     
    case 3:               
      EmitIn( \$room, Describe(\$actor)+ " feeds the fire with " +Describe(\$what)+ " and the heat of the flames burgeons outward warming your fur." );               
    break;                
    case 2:               
      EmitIn( \$room, "The bonfire blazes upward as new fuel is tossed upon it by " +Describe(\$actor)+ "." );               
    break;               
    case 1:               
      EmitIn( \$room, "Sizzling and crackling comes from the bonfire as it feeds upon itself and " +Describe(\$what)+ "." );               
    break;               
    case 0:               
      EmitIn( \$room, "A section of the bonfire collapses as " +NRefOb(\$actor)."base:pronoun"+ " tosses " +Describe(\$what)+ " on it." );               
    break;               
    default:               
    break;         
  \}      
      
/* Send the item being added to the storage room */          
     
\$object."base:environment" = \$\{Ironclaw:Staff:Spot:BonfireStorageRoom\};     
          
/* now we're done! */          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:scoop-dob">
         X[M] object bowl;  

EmitTo(\$actor, "You grab one from the bowls laying near the burning fire at a safe distance, inch to the tree closer and scoop up some ash with it.");
EmitIn(\$actor."base.environment", Describe(\$actor)+" grabs one from the bowls lying near the burning fire at a safe distance, inches to the tree closer and scoops up some ash with it.", \$actor);  

 bowl = Spawn(\$\{Ironclaw:Props:Plot:LutaranVision:Ashbowl\});  
 Set(bowl,"base:environment", \$actor);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:toss-iob">
         X[M] /* code to add things to the bonfire */           
           
Call (this, "burn");
      </Core:Property>
      <Core:Property property="merry:react-post:toss-where">
         X[M] /* code to add things to the bonfire */           
           
Call (this, "burn");
      </Core:Property>
      <Core:Property property="merry:react-pre:extinguish-dob">
         X[M] EmitTo(\$actor, Describe(\$this, nil, \$actor)+" is burning too well to be extinguished.");
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:light-dob">
         X[M] EmitTo(\$actor, Describe(\$this, nil, \$actor)+" is already burning.");
return FALSE;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1129133910, "tunk_bodin", "X", 1129133998, "tunk_bodin", "E", 1129134867, "tunk_bodin", "X", 1129135159, "tunk_bodin", "X", 1129137534, "tunk_bodin", "X", 1129137559, "tunk_bodin", "X", 1129137677, "tunk_bodin", "E", 1129138251, "tunk_bodin", "X", 1129138615, "tunk_bodin", "X", 1129139375, "tunk_bodin", "X", 1129139517, "tunk_bodin", "E", 1129141339, "tunk_bodin", "E", 1129141679, "tunk_bodin", "X", 1129142774, "tunk_bodin", "X", 1129160350, "tunk_bodin", "X", 1129160542, "tunk_bodin", "X", 1129249972, "tunk_bodin", "X", 1129249983, "tunk_bodin", "X", 1129250007, "tunk_bodin", "X", 1129250496, "tunk_bodin", "X", 1129250599, "tunk_bodin", "X", 1130714631, "roccon", "E", 1130715286, "roccon", "X", 1130715571, "roccon", "E", 1130715750, "roccon", "E", 1130715761, "roccon", "E", 1130715902, "roccon", "E", 1130715919, "roccon", "E", 1130715933, "roccon", "E", 1130715956, "roccon", "E", 1132979047, "sinistrelle", "E", 1132995483, "sinistrelle", "E", 1132995506, "sinistrelle", "E", 1136619700, "idrocket", "E", 1138155459, "librarysage", "E", 1152495499, "tunk_bodin", "X", 1152505908, "tonyd", "E", 1152505932, "tonyd", "E", 1152505942, "tonyd", "E", 1198945328, "slurpeeslurp", "E", 1199041238, "slurpeeslurp", "E", 1199041309, "slurpeeslurp", "E", 1199041327, "slurpeeslurp", "E", 1199041340, "slurpeeslurp", "E", 1199041377, "slurpeeslurp", "E", 1199041593, "slurpeeslurp", "E", 1199041721, "slurpeeslurp", "E", 1199042059, "slurpeeslurp", "E", 1199042114, "slurpeeslurp", "E", 1199043932, "rastalabor", "E", 1199044820, "slurpeeslurp", "E", 1199045544, "rastalabor", "X", 1199045733, "rastalabor", "E", 1199046538, "rastalabor", "X", 1199046568, "rastalabor", "X", 1199046600, "rastalabor", "X", 1199046682, "rastalabor", "X", 1199046712, "rastalabor", "E", 1199046832, "rastalabor", "X", 1199046888, "rastalabor", "E", 1199046967, "rastalabor", "X", 1199047034, "rastalabor", "E", 1199047288, "rastalabor", "E", 1199047357, "rastalabor", "E", 1199047435, "rastalabor", "E", 1199047552, "rastalabor", "E", 1199047630, "rastalabor", "E", 1199047647, "rastalabor", "E", 1199048186, "rastalabor", "X", 1199048207, "rastalabor", "E", 1199048860, "rastalabor", "X", 1199048881, "rastalabor", "E", 1199299757, "slurpeeslurp", "E", 1199299780, "slurpeeslurp", "E", 1199487101, "rastalabor", "X", 1199487218, "rastalabor", "X", 1199487313, "rastalabor", "X", 1199487344, "rastalabor", "X", 1199487739, "rastalabor", "X", 1199487751, "rastalabor", "X", 1199488000, "rastalabor", "X", 1199488063, "rastalabor", "X", 1199489454, "rastalabor", "X", 1199489628, "rastalabor", "X", 1199495322, "rastalabor", "X", 1199495360, "rastalabor", "X", 1199495382, "rastalabor", "X", 1199495414, "rastalabor", "X", 1199495530, "rastalabor", "X", 1199495581, "rastalabor", "X", 1199496095, "rastalabor", "X", 1199496313, "rastalabor", "X", 1199496339, "rastalabor", "E", 1199496426, "rastalabor", "X", 1199496839, "rastalabor", "X", 1199497023, "rastalabor", "X", 1199497167, "rastalabor", "X", 1199502579, "rastalabor", "X", 1199503255, "rastalabor", "X", 1199503421, "rastalabor", "E", 1199514760, "rastalabor", "E", 1199514811, "rastalabor", "E", 1199514851, "rastalabor", "X", 1199514884, "rastalabor", "E", 1199514906, "rastalabor", "E", 1199515069, "rastalabor", "E", 1199647425, "rastalabor", "X", 1199647443, "rastalabor", "X", 1201247379, "missk", "X", 1201248388, "missk", "K", 1201251558, "missk", "X", 1201252438, "missk", "K", 1201252550, "missk", "K", 1201253066, "missk", "X", 1225404445, "balkaar", "E", 1225404837, "balkaar", "E", 1225405727, "balkaar", "E", 1225405795, "balkaar", "E", 1225405798, "balkaar", "E", 1225405806, "balkaar", "E", 1225405827, "balkaar", "E", 1225405843, "balkaar", "E", 1225405868, "balkaar", "E", 1225405894, "balkaar", "E", 1225405937, "balkaar", "E", 1225406003, "balkaar", "E", 1225406086, "balkaar", "E", 1225406221, "balkaar", "E", 1225406288, "balkaar", "E", 1225406418, "balkaar", "E", 1225406423, "balkaar", "E", 1225406428, "balkaar", "E", 1225406438, "balkaar", "E", 1225406541, "balkaar", "E", 1225406557, "balkaar", "E", 1225406626, "balkaar", "E", 1225406667, "balkaar", "E", 1225406843, "balkaar", "E", 1225406974, "balkaar", "E", 1225407091, "balkaar", "E", 1225407466, "balkaar", "E", 1225408501, "balkaar", "E", 1225409092, "balkaar", "E", 1225409145, "balkaar", "E", 1225410305, "balkaar", "E", 1225410589, "balkaar", "E", 1225410608, "balkaar", "E", 1225410656, "balkaar", "E", 1225410667, "balkaar", "E", 1225410672, "balkaar", "E", 1225410689, "balkaar", "E", 1225410700, "balkaar", "E", 1225410715, "balkaar", "E", 1225410735, "balkaar", "E", 1225410797, "balkaar", "E", 1225410949, "balkaar", "E", 1225411043, "balkaar", "E", 1225411210, "balkaar", "E", 1225418490, "tonyd", "P", 1225418588, "tonyd", "P", 1311380363, "morwenlorelie", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="storageroom">
         "Ironclaw:Staff:Spot:BonfireStorageRoom"
      </Core:Property>
      <Core:Property property="trait:light:lightable">
         1
      </Core:Property>
      <Core:Property property="trait:objecttype">
         "bonfire"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
