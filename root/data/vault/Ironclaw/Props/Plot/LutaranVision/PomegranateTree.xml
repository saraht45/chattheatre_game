<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tree"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trees"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="pomegranate"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             pomegranate tree
          </Base:Description>
          <Base:Description type="examine">
             A pomegranate tree, lush and leafy. It is a fruit-bearing deciduous shrub or small tree growing between five and eight meters tall. Straw, hay and lumber have been stacked at the bottom of this tree. A set of bowls is carefully positioned at some distance from the tree. <sbr/> This plant has $[if($this."trait:quantity" == 0) { return "no pomegranates"; } else if ($this."trait:quantity" == 1) { return "one pomegranate"; } else { return desc_cardinal($this."trait:quantity")+ " pomegranates"; }] ready to be picked.
          </Base:Description>
          <Base:Description type="look">
             A pomegranate tree, lush and leafy. It is a fruit-bearing deciduous shrub or small tree growing between five and eight meters tall.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bowl" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bowl"/>
            <Base:SName sname="set"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bowls"/>
            <Base:PName pname="sets"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">
             set of bowls
          </Base:Description>
          <Base:Description type="examine">
             A set of fist-sized bowls safely gathered at some distance from the tree and the lumbers. They appear to be put there for some unknown reason. Surely they can be used for something.
          </Base:Description>
          <Base:Description type="look">
             A set of fist-sized bowls safely gathered at some distance from the tree and the lumbers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="straw" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="straw"/>
            <Base:SName sname="hay"/>
            <Base:SName sname="lumber"/>
            <Base:SName sname="wood"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="straws"/>
            <Base:PName pname="hays"/>
            <Base:PName pname="lumbers"/>
            <Base:PName pname="woods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the hay, straw and bits of lumber
          </Base:Description>
          <Base:Description type="look">
             The hay, straw and bits of lumber scattered around the bottom of the tree.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         50
      </Core:Property>
      <Core:Property property="merry:react-post:light-dob">
         X[M] /*turn tree into bonfire*/

EmitTo(\$actor, "You push your torch into the straw at the base of the tree making it flame up. The flames slowly spread over the lumbers and eventually claim the leaves and bark of the tree filling the room with a hint scented smoke");
EmitIn(\$actor."base.environment", Describe(\$actor)+" pushes "+Describe(\$item, \$actor)+",  into the straw at the base of the tree making it flame up. The flames slowly spread over the lumbers and eventually claim the leaves and bark of the tree filling the room with a hint scented smoke.");

\$spawn = Spawn(\$\{Ironclaw:Props:Plot:LutaranVision:BurningTree\});

\$spawn."base:environment" = \$this."base:environment";
\$spawn."base:proximity" = \$this."base:proximity";
\$spawn."base:stancestring" = "lying";

Slay(\$this);


return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:light-iob">
         X[M] /*check if actor has torch*/

/*  if(!\$using) \{
        EmitTo(\$actor, "Your bare hands won't do you good with lighting this tree.");
        return FALSE;
  \}
  if(sizeof(\$using) != 1) \{
     EmitTo(\$actor, "A single torch will suffice.");
     return FALSE;
  \}
 \$item = NRefOb(\$using[0]);
  if(\$item."core:ur:parent" != \$\{IronClaw:Props:Lighting:Source:Handtorch\}) \{
    EmitTo(\$actor, "You need a torch to set this straw effectively on fire.");
    return TRUE;
  \}

*/
/*turn tree into bonfire*/ 
object tree;  
  
EmitTo(\$actor, "You push your torch into the straw at the base of the tree making it flame up. The flames slowly spread over the lumbers and eventually claim the leaves and bark of the tree filling the room with a hint scented smoke");  
EmitIn(\$actor."base.environment", Describe(\$actor)+" pushes "+Describe(\$item, \$actor)+",  into the straw at the base of the tree making it flame up. The flames slowly spread over the lumbers and eventually claim the leaves and bark of the tree filling the room with a hint scented smoke.", \$actor);

  tree = Spawn(\$\{Ironclaw:Props:Plot:LutaranVision:BurningTree\});  
  Slay(\$this);


return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:light-dob">
         X[M] /*check if actor has torch*/

if(!\$iob) \{
 EmitTo(\$actor, "Your bare hands won't do you good with lighting this tree.");
 return FALSE;
\}
if(sizeof(\$iob) != 1) \{
 EmitTo(\$actor, "A single torch will suffice.");
 return FALSE;
\}
\$item = NRefOb(\$iob[0]);
if(\$item."core:ur:parent" != \$\{IronClaw:Props:Lighting:Source:Misc:Handtorch\}) \{
 EmitTo(\$actor, "You need a torch to set this straw effectively on fire.");
 return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:pick-what">
         X[M] /* check there are pomegranates available */ 
if(\$this."trait:quantity" \< 1) \{ 
  EmitTo(\$actor, "There are no ripe pomegranates on "+Describe(\$this)+"."); 
  return FALSE; 
\} 
 
/* reduce the number of pomegranates on the plant */ 
\$this."trait:quantity" -= 1; 
 
/* create the tomato object and give it to the player */ 
\$object = Spawn(\$\{Allegory:Props:Plants:P:Pomegranate:PomegranateFruit\}); \$object."base:environment" = \$actor; 
 
/* emit message to player and room */ 
EmitTo(\$actor, "You pick "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+"."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" picks "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] /* stop when we hit 50 pomegranates on the plant */  
if(\$this."trait:quantity" \>= 51) return TRUE;  
  
/* wait a while, then add a pomegranate */  
\$delay((2*24*60), TRUE, "9d85");  
if(\$this."trait:quantity" \< 51)  
  \$this."trait:quantity" += 1;  
  
return TRUE;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1225365549, "morwenlorelie", "K", 1225365560, "morwenlorelie", "E", 1225365695, "morwenlorelie", "K", 1225365955, "morwenlorelie", "X", 1225366015, "morwenlorelie", "E", 1225366279, "morwenlorelie", "X", 1225366363, "morwenlorelie", "E", 1225366586, "morwenlorelie", "E", 1225367309, "morwenlorelie", "K", 1225367330, "morwenlorelie", "K", 1225367425, "morwenlorelie", "K", 1225367436, "morwenlorelie", "E", 1225367513, "morwenlorelie", "K", 1225368042, "morwenlorelie", "X", 1225371373, "slurpeeslurp", "E", 1225372306, "slurpeeslurp", "K", 1225372350, "slurpeeslurp", "E", 1225413124, "balkaar", "E", 1225413332, "balkaar", "E", 1225413397, "balkaar", "E", 1225415041, "balkaar", "E", 1225415163, "balkaar", "E", 1225415501, "balkaar", "E", 1225415514, "balkaar", "E", 1225416435, "balkaar", "E", 1225416927, "balkaar", "E", 1225417449, "balkaar", "E", 1225417555, "tonyd", "P", 1225417585, "balkaar", "E", 1225417590, "tonyd", "P", 1225417642, "tonyd", "P", 1225417662, "tonyd", "P", 1225417731, "tonyd", "P", 1225417800, "tonyd", "P", 1225418164, "tonyd", "P", 1225418224, "tonyd", "P", 1225418822, "balkaar", "E", 1225418830, "balkaar", "E", 1225418843, "balkaar", "E", 1225418936, "balkaar", "E", 1225418951, "balkaar", "E", 1225418961, "balkaar", "E", 1225418966, "balkaar", "E", 1225418978, "balkaar", "E", 1225419066, "balkaar", "E", 1225580350, "morwenlorelie", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
