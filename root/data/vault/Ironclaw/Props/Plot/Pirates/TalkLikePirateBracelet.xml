<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Jewelry:Old:Bracelets:UrBraceletOld)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:clasp:material">
         "bronze"
      </Core:Property>
      <Core:Property property="export:trait:etching">
         "\\"What they do say, that is what you hear\\""
      </Core:Property>
      <Core:Property property="export:trait:material">
         "gold"
      </Core:Property>
      <Core:Property property="export:trait:pendant:material">
         "silver"
      </Core:Property>
      <Core:Property property="export:trait:pendant:shape">
         "mysteriously shaped"
      </Core:Property>
      <Core:Property property="export:trait:quality">
         10
      </Core:Property>
      <Core:Property property="merry:act-pre:evoke%talkpirate">
         X[M] /* replace their words with pirate words */
int i, j, capital;
string word, prefix, suffix;

\$tmp = explode(\$(raw-evoke), " ");

\$replacements = ([
"avoirdupois":"snooty horses",
"rinaldi":"darn dirty merchant thieves",
"bisclavret":"biscuits",
"doloreaux":"piggies",
"geradan":"Gero",
"geradans":"Gero's",
"pirate":"honest sailor",
"pirates":"honest sailors",
"captain":"Cap'n",
"hello":"ahoy",
"hi":"ahoy",
"hey":"avast",
"yes":"aye",
"yeah":"aye",
"no":"nay",
"ok":"aye aye",
"okay":"aye aye",
"alright":"aye aye",
"for":"fer",
"alcohol":"grog",
"rum":"grog",
"beer":"grog",
"ale":"grog",
"quickly":"smartly",
"quick":"sharp",
"i":"meself",
"myself":"meself",
"my":"me",
"there":"thar",
"you":"yer",
"your":"yar",
"youre":"yar",
"them":"'em",
"goes":"blows",
"go":"blow",
"speak":"talk",
"know":"ken",
"child":"kid",
"treasure":"loot",
"jewelry":"loot",
"jewlery":"loot",
"money":"loot",
"denar":"piece of eight",
"denarii":"pieces of eight"
]);

for(i=0;i\<sizeof(\$tmp);i++) \{
  prefix = "";
  word = "";
  suffix = "";
  /* strip off any punctuation */
  for(j=0;j\<strlen(\$tmp[i]);j++) \{
    if(word == "") \{
      /* still checking for prefix */
      if((\$tmp[i][j] \>= 'a' \&\& \$tmp[i][j] \<= 'z') \|\| (\$tmp[i][j] \>= 'A' \&\& \$tmp[i][j] \<= 'Z')) \{
        word = word+char_to_string(\$tmp[i][j]);      
      \} else \{
        prefix = prefix+char_to_string(\$tmp[i][j]);            
      \}
    \} else if(suffix == "") \{
      /* still checking for word */
      if((\$tmp[i][j] \>= 'a' \&\& \$tmp[i][j] \<= 'z') \|\| (\$tmp[i][j] \>= 'A' \&\& \$tmp[i][j] \<= 'Z')) \{
        word = word+char_to_string(\$tmp[i][j]);      
      \} else \{
        suffix = suffix+char_to_string(\$tmp[i][j]);            
      \}
    \} else \{
      /* tack onto the suffix */
      suffix = suffix+char_to_string(\$tmp[i][j]);
    \}
  \}

  if(word != "") \{
    /* check if this is capitalized */
    if(word[0] \>= 'A' \&\& word[0] \<= 'Z') \{
      capital = TRUE;
    \} else \{
      capital = FALSE;
    \}
  
    word = lower_case(word);
  
    /* check if this is a replacement */
    if(\$replacements[word])
      word = \$replacements[word];

    if(capital) word = capitalize(word);
  \}
  \$tmp[i] = prefix+word+suffix;
\}

\$evoke = "\\"";
if(!random(12)) \$evoke += "Arrr# ";
if(!random(12)) \$evoke += "Ahoy# ";
if(!random(12)) \$evoke += "Avast# ";
if(!random(12)) \$evoke += "Aye, ";
if(!random(50)) \$evoke += "Shiver me timbers# ";
if(!random(100)) \$evoke += "Blow me down# ";
if(!random(100)) \$evoke += "Thar she blows# ";

\$evoke = \$evoke+capitalize(implode(\$tmp, " "))+"\\"";

\$evoke = replace_strings(\$evoke, "!", ", yar!", "ing ", "in' ", "ings ", "in's ", "you're", "yar", "out of", "outta", "going to", "gonna", "Geradan's", "Gero's", "geradan's", "Gero's", ":)", ":) \<= (means that I'm a retard and don't understand IC and OOC)", ";)", ";) \<= (means that I'm a retard and don't understand IC and OOC)", "#", "!");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:wear">
         X[M] /* this script makes people talk like a pirate */
/* when they wear it, make it load a script in the PCs body */
\$actor."merry:inherit:act-pre:evoke%talkpirate" = \$\{Ironclaw:Props:Plot:Pirates:TalkLikePirateBracelet\};
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:unwear">
         X[M] /* this script makes people talk like a pirate */
/* when they unwear it, remove a script in the PCs body */
\$actor."merry:inherit:act-pre:evoke%talkpirate" = nil;
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1190112567, "tonyd", "E", 1190112718, "tonyd", "P", 1190112901, "tonyd", "P", 1190112924, "tonyd", "P", 1190112962, "tonyd", "P", 1190112998, "tonyd", "P", 1190113217, "tonyd", "P", 1190113292, "tonyd", "P", 1190113396, "tonyd", "P", 1190113559, "tonyd", "P", 1190113595, "tonyd", "P", 1190113612, "tonyd", "P", 1190113640, "tonyd", "P", 1190113657, "tonyd", "P", 1190113711, "tonyd", "P", 1190113731, "tonyd", "P", 1190113774, "tonyd", "P", 1190113826, "tonyd", "P", 1190113881, "tonyd", "P", 1190114015, "tonyd", "P", 1190114247, "tonyd", "P", 1190114319, "tonyd", "P", 1190114609, "tonyd", "P", 1190114699, "tonyd", "P", 1190114754, "tonyd", "P", 1190114823, "tonyd", "P", 1190114957, "tonyd", "P", 1190115194, "tonyd", "P", 1190115225, "tonyd", "P", 1190115247, "tonyd", "P", 1190115268, "tonyd", "P", 1190115403, "tonyd", "P", 1190115526, "tonyd", "P", 1190115636, "tonyd", "P", 1190115766, "tonyd", "P", 1190115808, "tonyd", "P", 1190115830, "tonyd", "P", 1190115849, "tonyd", "P", 1190115894, "tonyd", "P", 1190115919, "tonyd", "P", 1190115956, "tonyd", "P", 1190115990, "tonyd", "P", 1190116030, "tonyd", "P", 1190116046, "tonyd", "P", 1190116069, "tonyd", "P", 1190116097, "tonyd", "P", 1190116213, "tonyd", "P", 1190116238, "tonyd", "P", 1190116373, "tonyd", "P", 1190116452, "tonyd", "P", 1190116477, "tonyd", "P", 1190116691, "tonyd", "P", 1190116705, "tonyd", "P", 1190116722, "tonyd", "P", 1190116780, "tonyd", "P", 1190116861, "tonyd", "P", 1190116871, "tonyd", "P", 1190116916, "tonyd", "P", 1190116940, "tonyd", "P", 1190116988, "tonyd", "P", 1190117039, "tonyd", "P", 1190117423, "tonyd", "P", 1190117826, "tonyd", "P", 1190117911, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
