<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="moss"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="moss"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="damp"/>
          <Base:Adjective adjective="green"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             patch of moss
          </Base:Description>
          <Base:Description type="examine">
             A patch of damp, green moss which $[if($this."details:default:luminosity:local" == 0.0) { return "appears a bit lackluster"; } else if($this."details:default:luminosity:local" <= 0.0) { return "appears a bit lackluster";} else if($this."details:default:luminosity:local" >= 1.0 && $this."details:default:luminosity:local" <= 10.0) { return "almost glows"; } else if($this."details:default:luminosity:local" >= 9.0 && $this."details:default:luminosity:local" <= 25.0) { return "full of life"; } else if($this."details:default:luminosity:local" >= 24.0 && $this."details:default:luminosity:local" <= 50.0) { return "glows brightly"; } else if($this."details:default:luminosity:local" >= 49.0 && $this."details:default:luminosity:local" <= 85.0) { return "is glowing as if it holds the sun"; } else { return "is glowing to the point of being blinding"; }].
          </Base:Description>
          <Base:Description type="look">
             A patch of damp, green moss.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:glowingmoss">
         X[M] int t;                                 
t = time();              
\$w = \$this."base:environment";                           
\$z = \$\{Chatters:IC:de:death\};                             
\$a = \$w."base:totalluminosity";                                 
\$b = \$w."base:intrinsicluminosity";                                 
\$c = \$a - \$b;                                 
EmitTo(\$z, "Before time set");                              
if(!this.lastlit) \{                                 
\$this.lastlit = t-86400;                                 
\}                                 
EmitTo(\$z, "After time set");                              
\$d = \$this.lastlit;                                 
                                 
if(!\$this.lastentered) \{                                 
\$this.lastentered = t;                                 
\}                                 
EmitTo(\$z, "Last entered got set");                              
if( 0.0 \< \$c) \{                                  
EmitTo(\$z, "1st if");                                  
\$this.lastlit = t;                                 
EmitTo(\$z, "Set lit");                          
\$y = \$this."details:default:luminosity:local";                       
\$x = \$c - \$y;                       
if( 0.0 \< \$x) \{                       
\$v = \$y + \$x;                       
Set(\$this, "details:default:luminosity:local", \$v);                                
EmitTo(\$z, "Set lumin");                        
\} else \{                       
EmitTo(\$z, "Has light but not bright enough to power moss.");                       
\}                         
\} else \{                                 
\$this.lastentered = t;                                 
EmitTo(\$z, "Set entered");                                
\$e = \$this.lastentered;                                 
EmitTo(\$z, "Last entered:" + Str(\$e));                               
\$f = \$e - \$d;                               
EmitTo(\$z, "Time difference:" + Str(\$f));                               
\$g = \$f/3600;                              
EmitTo(\$z, "Hours passed:" + Str(\$g));                              
\$h = \$this.lastlit;                              
EmitTo(\$z, "Last Lit by something:" + Str(\$h));                              
\$i = \$g/4;                              
EmitTo(\$z, "Made  4 hour increments:" + Str(\$i));                              
\$j = \$i*10;                              
EmitTo(\$z, "Set up the amount to reduce lumin by:" + Str(\$j));                              
\$k = \$this."details:default:luminosity:local";                              
EmitTo(\$z, "Current lumin:" + Str(\$k));                              
\$k = Int(\$k);                              
\$j = Int(\$j);                              
\$l = \$k-\$j;                              
EmitTo(\$z, "Current lumin minus reduction amount:" + Str(\$l));                              
if(\$l == 0 \|\| \$l \< 0) \{                              
Set(\$this, "details:default:luminosity:local", 0.0);                              
EmitTo(\$z, "If under 0 or equal to, Set to 0.0");                              
\} else \{                              
\$l = Flt(\$l);                              
Set(\$this, "details:default:luminosity:local", \$l);                              
EmitTo(\$z, "Set lumin to " + Str(\$l));                              
\}                              
                              
\}                                  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness-post:enter-from">
         X[M] return Call(\$this, "glowingmoss");
      </Core:Property>
      <Core:Property property="merry:witness-post:light">
         X[M] return Call(\$this, "glowingmoss");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1234794948, "tunk_bodin", "X", 1238802613, "jominey", "K", 1238802695, "jominey", "E", 1309200939, "tunk_bodin", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
