<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Underground:NecroLair:UrPassage)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             an underwater tunnel
          </Base:Description>
          <Base:Description type="examine">
             This is a dark eroding tunnel fully encased in water. Filtered light wades in from the north and south, but the illumination is so mild that you can't make anything out clearly. Every detail of the area is cloaked in shadows from various coral formations, underwater creatures, and vegetation. Mixed currents continuously flow in and out of the tunnel, moving you to-and-fro unwillingly. $[$dirs = $this."base:dirs:local"; $dirs -= ({ "NEW", "enter", "go" }); if(sizeof($dirs) == 0) { return "There are no visible exits from here.";} else if(sizeof($dirs) == 1) { return "There is a single exit that heads " +Str($dirs[0])+ "."; } else if(sizeof($dirs) == 2) { return "The exits from here head to the " +Str($dirs[0])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 3) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 4) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 5) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 6) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ ", " +Str($dirs[5])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 7) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ ", " +Str($dirs[5])+ ", " +Str($dirs[6])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 8) { return "The exits from here are to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ ", " +Str($dirs[5])+ ", " +Str($dirs[6])+ ", " +Str($dirs[7])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 9) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ ", " +Str($dirs[5])+ ", " +Str($dirs[6])+ ", " +Str($dirs[7])+ ", " +Str($dirs[8])+ " and the " +Str($dirs[1])+ "."; } else if(sizeof($dirs) == 10) { return "The exits from here head to the " +Str($dirs[0])+ ", " +Str($dirs[2])+ ", " +Str($dirs[3])+ ", " +Str($dirs[4])+ ", " +Str($dirs[5])+ ", " +Str($dirs[6])+ ", " +Str($dirs[7])+ ", " +Str($dirs[8])+ ", " +Str($dirs[9])+ " and the " +Str($dirs[1])+ "."; } else { return "There are multiple exits available."; }]
          </Base:Description>
          <Base:Description type="glance">
             An underwater tunnel, eroded by years of running water.
          </Base:Description>
          <Base:Description type="look">
             An underwater tunnel eroded by a century-long embrace of running water. The details of the tunnel are lost to darkness and shadow, save for some scarce, filtered illuminations to the north and south which appear in the form of subtle, flickering lights.
          </Base:Description>
          <Base:Description type="mapurl">
             http://img0.tar.hu/omame/size2/38787688.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-north" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="true" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="door"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="north"/>
            <Base:SName sname="northern"/>
            <Base:SName sname="hole"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="doors"/>
            <Base:PName pname="exits"/>
            <Base:PName pname="holes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="indescernible"/>
          <Base:Adjective adjective="moss-covered"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             an indescernible moss-covered hole
          </Base:Description>
          <Base:Description type="examine">
             An indiscernible moss-covered hole has naturally formed in the northern portion of the tunnel. Light filters around the exit so it is noticeable, but there isn't enough illumination to show true size or absolute shape. You've no idea where it leads and there's only one way to find out.
          </Base:Description>
          <Base:Description type="look">
             An indiscernible moss-covered hole has naturally formed in the northern portion of the tunnel.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="north"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-south" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="true" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="door"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="south"/>
            <Base:SName sname="hole"/>
            <Base:SName sname="southern"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="doors"/>
            <Base:PName pname="exits"/>
            <Base:PName pname="holes"/>
            <Base:PName pname="formations"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="green"/>
          <Base:Adjective adjective="midnight"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a hole crowded by a coral formation
          </Base:Description>
          <Base:Description type="examine">
             A hole crowded by a coral formation has formed in the southern portion of the tunnel. Light filters around the exit so it is noticeable, but there isn't enough illumination to show true size or absolute shape. The coral itself further lends to your confusion as shadows from it's limbs threaten to overtake the light. You've no idea where this hole might lead, nor if you can actually fit through.
          </Base:Description>
          <Base:Description type="look">
             A hole crowded by a coral formation has formed in the southern portion of the tunnel.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Allegory:Setting:Rinascita:Sewers:33|basin)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="current" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="current"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="currents"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="mixed"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the mixed current
          </Base:Description>
          <Base:Description type="examine">
             Mixed currents continuously flow in and out of the tunnel, moving you to-and-fro unwillingly.
          </Base:Description>
          <Base:Description type="look">
             Mixed currents continuously flow in and out of the tunnel, moving you to-and-fro unwillingly.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="floor" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="underwater"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the underwater floor
          </Base:Description>
          <Base:Description type="examine">
             Swimming down grants you the view of the underwater floor. Various coral formations along with a small array of fish and vegetation decorate it's surface.
          </Base:Description>
          <Base:Description type="look">
             Swimming down grants you the view of the underwater floor.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="water" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="true" on="false" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="waters"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="dark"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the water
          </Base:Description>
          <Base:Description type="examine">
             Dark blue water encases this tunnel in entirety. Mixed currents continuously flow in and out, moving bodies unwillingly.
          </Base:Description>
          <Base:Description type="look">
             Dark blue water encases this tunnel in entirety.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="auto-trait:integration:688686">
         \<Chatters:AE:az:azrael\>
      </Core:Property>
      <Core:Property property="export:sys:emit:rand-creepy_emits">
         1
      </Core:Property>
      <Core:Property property="export:sys:emit:sam-creepy_emits">
         X[S] \{You feel \{something\|a soft piece of waste\|wire\|something hard\} \{brush\|float\|run\} \{past you\|across your hand\|over your body\}.
\|
Something \{beneath\|below\} \{you\|the ground\|the mud\} lets out \{a stream of bubbles\|a burst of gas\}.
\|
The city's \{refuse\|waste\} makes the water almost black.
\|
\{A sudden \|An unexpected \|An \}eddy\{ of water\|\|\} \{spins\|turns\|tumbles\} you around.
\|
The smell makes you want to retch.\{ In fact, you're pretty sure someone has already retched in this water.\|\|\}
\}
      </Core:Property>
      <Core:Property property="merry:react:enter-from%rope">
         X[M] /* are they entering another room? */
\$start = \$\{Allegory:Setting:Rinascita:Sewers:33\};
if(\$start."rope:tied" \&\& \$start."rope:second") \{
 /* A rope is tied. Does \$actor have it? */
 if(member(\$start."rope:tied", \$actor."base:deep-inventory")) \{
  /* they have it. Is the exit through the tunnel? */
  if(NRefDetail(\$target) != "exit-north")
   return TRUE;
  /* link the rope to our coil rather than the exit */
  \$start."rope:second".secondend = NewNRef(\$start."rope:tied", "default");
  if(\$start."rope:third")
   Slay(\$start."rope:third");
 \}
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:enter-into%rope">
         X[M] /* are they entering another room? */
\$start = \$\{Allegory:Setting:Rinascita:Sewers:33\};
if(NRefDetail(\$target) == "exit-north") \{
 /* can they go through the water? */
 /* are they a swimming creature? */
 if(!\$actor."bonus:mental:swimming") \{
  /* they're a swimming creature */
  if(!\$start."rope:third") \{
   EmitTo(\$actor, "You really don't think it'd be a good idea to try swimming through there. Without something to guide your way through the underwater tunnel like, say, a rope, you are convinced you'd get lost. You'd better let someone better at swimming go through instead.");
   return FALSE;
  \}
 \}
\}
if(\$start."rope:tied" \&\& \$start."rope:second") \{
 /* A rope is tied. Does \$actor have it? */
 if(member(\$start."rope:tied", \$actor."base:deep-inventory")) \{
  /* they have it. Is the exit through the tunnel? */
  if(NRefDetail(\$target) != "exit-north") return TRUE;
  /* they're swimming through with the rope */
  \$start."rope:second".secondend = \$target;
  if(!\$this."rope:third") \{
   \$newrope = Spawn(\$\{Ironclaw:Props:Misc:Items:Rope-tied\});
   \$newrope."base:environment" = nil /* defunct */;
   \$newrope."tied:owner" = \$start;
   \$newrope.firstend = NewNRef(nil /* defunct */, "exit-down");
   \$newrope.secondend = NewNRef(\$start."rope:tied", "default");
   \$newrope."base:stance" = 3;
   \$newrope."base:immobile" = TRUE;
   \$start."rope:third" = \$newrope;
  \}

 \}
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness-post:command">
         X[M] EmitIn(\$this, dump_value(args));
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness-post:wave">
         X[M] EmitIn(\$this, dump_value(args));
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1251026132, "tonyd", "E", 1251026549, "tonyd", "E", 1251026658, "tonyd", "E", 1251026803, "tonyd", "E", 1251026862, "tonyd", "E", 1251026943, "tonyd", "E", 1251027724, "tonyd", "E", 1251027924, "tonyd", "E", 1251028052, "tonyd", "E", 1251028081, "tonyd", "E", 1251028120, "tonyd", "E", 1251033654, "tonyd", "E", 1251072945, "balkaar", "E", 1251152672, "slurpeeslurp", "E", 1251152702, "slurpeeslurp", "E", 1251152874, "slurpeeslurp", "E", 1251152895, "slurpeeslurp", "E", 1251153059, "slurpeeslurp", "E", 1251153183, "slurpeeslurp", "E", 1251153410, "slurpeeslurp", "E", 1251154118, "slurpeeslurp", "E", 1251154190, "slurpeeslurp", "E", 1251154238, "slurpeeslurp", "E", 1251154513, "slurpeeslurp", "K", 1251154573, "slurpeeslurp", "E", 1251154601, "slurpeeslurp", "E", 1251154650, "slurpeeslurp", "E", 1251508935, "balkaar", "E", 1252826576, "tonyd", "P", 1252826619, "tonyd", "E", 1252826707, "tonyd", "P", 1252826734, "tonyd", "P", 1252826764, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="sys:emit:channels">
         (\{ "creepy_emits" \})
      </Core:Property>
      <Core:Property property="sys:emit:clist">
         (\{ "creepy_emits" \})
      </Core:Property>
      <Core:Property property="sys:emit:population"/>
      <Core:Property property="sys:emit:rand-creepy_emits">
         1
      </Core:Property>
      <Core:Property property="sys:emit:sam-creepy_emits">
         X[S] \{You feel \{something\|a soft piece of waste\|wire\|something hard\} \{brush\|float\|run\} \{past you\|across your hand\|over your body\}.
\|
Something \{beneath\|below\} \{you\|the ground\|the mud\} lets out \{a stream of bubbles\|a burst of gas\}.
\|
The city's \{refuse\|waste\} makes the water almost black.
\|
\{A sudden \|An unexpected \|An \}eddy\{ of water\|\|\} \{spins\|turns\|tumbles\} you around.
\|
The smell makes you want to retch.\{ In fact, you're pretty sure someone has already retched in this water.\|\|\}
\}
      </Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1282607787
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
