<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Shared:Systems:ItemBuilder:DefaultObject)"/>
    <Base:Bulk immobile="false" mass="20" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="NEW" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             NEW detail
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="button" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="button"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             something on the spider
          </Base:Description>
          <Base:Description type="look">
             [OOC help for staff to handle this plot item.]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="corpse"/>
            <Base:SName sname=""/>
            <Base:SName sname="spider"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="corpse"/>
            <Base:PName pname=""/>
            <Base:PName pname="spider"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective=""/>
          <Base:Adjective adjective="dead"/>
          <Base:Adjective adjective="decaying"/>
          <Base:Adjective adjective="rotting"/>
          <Base:Adjective adjective="spider"/>
          <Base:Adjective adjective="torn"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             torn corpse of a giant spider $(this.trait:number)
          </Base:Description>
          <Base:Description type="examine">
             The lifeless body of a giant spider laying on its back with its legs pulled closely against its belly. $(this.trait:state)
          </Base:Description>
          <Base:Description type="look">
             The lifeless body of a giant spider laying on its back with its legs pulled closely against its belly. $(this.trait:state)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stomach" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="abdomen"/>
            <Base:SName sname="belly"/>
            <Base:SName sname="stomach"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="abdomens"/>
            <Base:PName pname="bellies"/>
            <Base:PName pname="stomachs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="round"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             round abdomen
          </Base:Description>
          <Base:Description type="look">
             The round abdomen of the corpse of the giant spider.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="approval:approver">
         "balkaar"
      </Core:Property>
      <Core:Property property="approval:description">
         "For swamp plot. "
      </Core:Property>
      <Core:Property property="approval:time">
         1253385995
      </Core:Property>
      <Core:Property property="approval:unapproved">
         1
      </Core:Property>
      <Core:Property property="base:initialcontents"/>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:number" = "swarmed by uncountable green spiders";
\$this."trait:quality" = 5;
\$this."trait:egg" = 5;
\$this."trait:random" = 10;
\$this."trait:state" = "You can barely see the giant's corpse from the swarming mass of medium-sized green spiders that feast upon the once magnificent beast.";
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:random">
         X[M] /* if the corpse is depleted */
if(!\$this."trait:random") \{
   EmitTo(\$actor, "There isn't much else in this spider but the gases from the decomposition.");
   EmitIn(\$actor."base:environment", Describe(\$actor)+" continues the quest for eggs, without much success.", \$actor);
   return FALSE; 
\} 

/* spawn something */
\$objectlist = (\{ \$\{Ironclaw:Props:Plot:Spider:Swamp:SlimeBroom\}, \$\{Ironclaw:Props:Plot:Spider:Swamp:TurtleShell\}, \$\{Ironclaw:Props:Plot:Spider:Swamp:SkinkCorpse\}, \$\{Ironclaw:Props:Plot:Spider:Swamp:Tuatara\}, \$\{Ironclaw:Props:Plot:Spider:Swamp:BrumbleHead\}, \$\{Ironclaw:Props:Plot:Spider:Swamp:RustyRing\} \});
\$sz = sizeof(\$objectlist);
\$temp = \$objectlist[random(\$sz)];
 \$random = Spawn(\$temp); 
\$random."base:environment" = \$actor;
\$this."trait:random"--;

/* emit */
EmitTo(\$actor, "You push the layered abdomen of the spider, which stirs its leaking entrails. Something stirs within. You dip your fingers deeper to fish out that something, your bravery rewards you with fingers dripping from half-rotten spider flesh and "+Describe(\$random)+".");
EmitIn(\$actor."base:environment", Describe(\$actor)+" pushes the layered abdomen of the spider, which stirs its leaking entrails. Something floats within. Upon this "+\$actor."trait:nominative"+" dips "+\$actor."trait:possessive"+" fingers deeper to fish out that object, "+\$actor."trait:possessive"+" bravery's rewards are: fingers dripping from half-rotten spider flesh and "+Describe(\$random)+".", \$actor);


if(\$this."trait:random" == 0) \{
   \$this."trait:random" = nil;
   return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:reward">
         X[M] /* rewards for pushing the spider's abdomen */    
    
switch(random(3)+1) \{    
  case 3:    
    Call(this, "random");
    break;
  case 2:    
    Call(this, "spideregg");
    break;    
  case 1:    
    Call(this, "random");
    break;
  default:    
    EmitTo(\$actor, "default");
    break;    
\}    
    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:spideregg">
         X[M] /* if the corpse is depleted */
if(!\$this."trait:egg") \{
   EmitTo(\$actor, "Even if you hope for a new egg to find, you spot no more circular objects.");
   EmitIn(\$actor."base:environment", "Even if you all hope for a new egg to surface the corpse's decaying body, no more is turning up.", \$actor);

   return FALSE; 
\} 

/* spawn egg, correct egg sack's content */
\$egg = Spawn(\$\{Ironclaw:Props:Plot:Spider:Egg\});
\$egg."base:environment" = \$actor;
\$this."trait:egg"--;

/* emit */
EmitTo(\$actor, "You push the layered abdomen of the spider, which stirs its leaking entrails. Something stirs within. You dip your fingers deeper to fish out that something, your bravery rewards you with fingers dripping from half-rotten spider flesh and a spider egg.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" pushes the layered abdomen of the spider, which stirs its leaking entrails. Something floats within. Upon this "+\$actor."trait:nominative"+" dips "+\$actor."trait:possessive"+" fingers deeper to fish out that object, "+\$actor."trait:possessive"+" bravery's rewards are: fingers dripping from half-rotten spider flesh and a spider egg.", \$actor);


if(\$this."trait:egg" == 0) \{
   \$this."trait:egg" = nil;
   return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:react-post:examine-what">
         X[M] \$healer = Int(\$actor."skill:career:healer") + Int(\$actor."skill:metal:first-aid");
\$obs = Int(\$actor."career:mental:observation") + Int(\$actor."skill:mental:observation");
\$delay(0.5, TRUE, "8135");
\$target = \$what[0];
if(NRefDetail(\$target) == "default") \{
   if(\$obs \< 6 \&\& \$obs \> 2) \{ 
      /* emit something odd on belly */
      EmitTo(\$actor, "The abdomen seems to be tenser then it should be.");
   \} else if(\$obs \> 5) \{ 
      /* emit belly's unusually round shape, maybe cutting up  */
      EmitTo(\$actor, "The abdomen seems to be tenser then is should be. It might be wort pushing it a bit.");
   \} 

   if(\$healer \< 6 \&\& \$healer \> 2) \{
      /* emit deformity of belly */
       EmitTo(\$actor, "The abdomen of the corpse seems to be out of place due to it being enlarged. It would be nice to know more of the art of healing to know why.");
   \} else if(\$healer \> 5) \{ 
      /* emit pregnancy */
       EmitTo(\$actor, "From the shape of the abdomen you can safely presume that this spider was about to lay eggs before death claimed it. The corpse is half-way eaten, full of tears and cuts.");
   \}
\}

if(NRefDetail(\$target) == "stomach") \{
   if(\$obs \< 6 \&\& \$obs \> 2) \{ 
      /* emit something odd on belly */
      EmitTo(\$actor, "The abdomen seems to be tenser then it should be.");
   \} else if(\$obs \> 5) \{ 
      /* emit belly's unusually round shape, maybe cutting up  */
      EmitTo(\$actor, "The abdomen seems to be tenser then is should be. It might be worth pushing it a bit. Though the many cuts in the body something might come out.");
   \} 

   if(\$healer \< 6 \&\& \$healer \> 2) \{
     /* emit deformity of belly */
      EmitTo(\$actor, "The abdomen of the corpse seems to be out of place due to it being enlarged. It would be nice to know more of the art of healing to know why.");
   \} else if(\$healer \> 5) \{ 
     /* emit pregnancy */
      EmitTo(\$actor, "From the shape of the abdomen you can safely presume that this spider was about to lay eggs before death claimed it. The body is half eaten, through the many wholes the entrails of the spider is visible. There is surely a way to retrieve things from within.");
   \}
\}
      </Core:Property>
      <Core:Property property="merry:react-post:push-dob">
         X[M] if(NRefDetail(\$dob[0]) != "stomach") \{ 
   EmitIn(\$actor."base:environment", oneof("Wafts of gases bearing the stench of decay emerge upon the corpse being pushed.", "The entrails of the spiders leak through the holes torn into the corpse' decaying body.", "Something indescribable and fluid drips from the bitemarks that richly decorate the odorous spider corpse.", "The abdomen of the corpse spider moves as entrails and other things jiggle within.", "A new wave of stench carrying the message of death fills the place invading your nostrils."));
   return FALSE; 


/* if proper detail give out the reward*/
\} else \{
   Call(this, "reward");
\};
      </Core:Property>
      <Core:Property property="merry:react-pre:press-dob">
         X[M] /*  as this is an ooc help for plotters, check for the detail others don't know about */
\$target = \$dob[0];
if(NRefDetail(\$target) == "button") \{


/* emit spiders crawling off the corpse and attack participants */
EmitIn(\$actor."base:environment", oneof("Seeing the stand of the battle a new sum of medium sized green spiders leave their meal to deal with the intruders.", "With the fighter spiders fallen, the feast is disrupted and new medium sized green spiders leap from the corpse to join the battle.", "A new mass of medium sized green spiders gather their web-lassos in order to chase off the uninvited guests of the meal."));

/* spawn and place spiders */
\$spiderone = Spawn(\$\{Ironclaw:Props:Plot:Spider:Swamp:GreenSpider\});
\$spiderone."base:environment" = \$actor."base:environment";
\$spidertwo = Spawn(\$\{Ironclaw:Props:Plot:Spider:Swamp:GreenSpider\});
\$spidertwo."base:environment" = \$actor."base:environment";
/* decrease number of spiders on corpse and set properties*/
this."trait:quality"--;
if(this."trait:quality" == 5) \{    
    this."trait:state" = "You can barely see the giant's corpse from the swarming mass of medium-sized green spiders that feast upon the once magnificent beast.";    
    this."trait:number" = "swarmed by uncountable green spiders";
\} else if(this."trait:quality" == 4) \{    
    this."trait:state" = "A massive amount of medium sized green spiders feast upon the giant spider's corpse, yet occasionally you see the legs or other parts of the corpse.";    
    this."trait:number" = "swarmed by numerous green spiders";
\} else if(this."trait:quality" == 3) \{   
    this."trait:state" = "Quite a lot of medium sized green spiders occupy themselves with consuming the remains of a giant beast, that used to be a spider once upon a time.";    
    this."trait:number" = "feasted upon by many green spiders";
\} else if(this."trait:quality" == 2) \{    
    this."trait:state" = "Some medium sized green spiders are occupied with their dinner, a giant spider corpse served on marsh plate.";    
    this."trait:number" = "torn by some green spiders";
\} else if(this."trait:quality" == 1) \{    
    this."trait:state" = "Sporadically you note a medium sized green spider which stuffs its mouth by tearing chunks from the giant spider corpse with its fangs.";    
    this."trait:number" = "nibbled on by a few green spiders";
\} else \{    
    this."trait:state" = "No bugs or beasts are visible around the corpse.";    
    this."trait:number" = " ";
    this."trait:spider" = 1;
\}
return FALSE;
\} else \{ return TRUE; \}
      </Core:Property>
      <Core:Property property="merry:react-pre:push-dob">
         X[M] /* check if free of guardians */

if(\$this."trait:spider" != 1) \{ 
   EmitIn(\$actor."base:environment", oneof("Green spiders stir upon the attempt of touching the corpse", "Furious guardians defend the corpse not allowing anyone to approach", "The medium green spiders protest against the break in their meal, they lift their forelegs in warning."));
   return FALSE; 
\} return TRUE;
      </Core:Property>
      <Core:Property property="misc:lastdropped">
         "1267606574 StoryPlotter Sirazad[balkaar]"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1253386364, "balkaar", "R", 1253386908, "balkaar", "E", 1253387949, "balkaar", "E", 1253395938, "balkaar", "E", 1253656419, "balkaar", "E", 1253656480, "balkaar", "E", 1253656662, "balkaar", "E", 1253656700, "balkaar", "E", 1253656746, "balkaar", "E", 1253656793, "balkaar", "E", 1253656821, "balkaar", "E", 1253656866, "balkaar", "E", 1253656898, "balkaar", "E", 1253695219, "balkaar", "E", 1253695223, "balkaar", "E", 1253695226, "balkaar", "E", 1253695226, "balkaar", "E", 1253697226, "balkaar", "E", 1253697306, "balkaar", "E", 1253697307, "balkaar", "E", 1253697309, "balkaar", "E", 1253697310, "balkaar", "E", 1253697338, "balkaar", "E", 1253697352, "balkaar", "E", 1253697353, "balkaar", "E", 1253697373, "balkaar", "E", 1253697481, "balkaar", "E", 1253698280, "balkaar", "E", 1253701551, "balkaar", "E", 1253701581, "balkaar", "E", 1253701925, "balkaar", "E", 1253701970, "balkaar", "E", 1253702405, "balkaar", "E", 1253702452, "balkaar", "E", 1253702830, "balkaar", "E", 1253702926, "balkaar", "E", 1253703057, "balkaar", "E", 1253703129, "balkaar", "E", 1253703149, "balkaar", "E", 1253703539, "balkaar", "E", 1253704267, "balkaar", "E", 1253704318, "balkaar", "E", 1253704355, "balkaar", "E", 1253704391, "balkaar", "E", 1253704402, "balkaar", "E", 1253704407, "balkaar", "E", 1253704597, "balkaar", "E", 1253704630, "balkaar", "E", 1253704670, "balkaar", "E", 1253704707, "balkaar", "E", 1253704745, "balkaar", "E", 1253704823, "balkaar", "E", 1253704931, "balkaar", "E", 1253707657, "balkaar", "E", 1253707859, "balkaar", "E", 1253708041, "balkaar", "E", 1253708268, "balkaar", "E", 1253708326, "balkaar", "E", 1253708367, "balkaar", "E", 1253708411, "balkaar", "E", 1253708460, "balkaar", "E", 1253708609, "balkaar", "E", 1253708716, "balkaar", "E", 1253708839, "balkaar", "E", 1253709073, "balkaar", "E", 1253709149, "balkaar", "E", 1253709222, "balkaar", "E", 1253709363, "balkaar", "E", 1253709405, "balkaar", "E", 1253709522, "balkaar", "E", 1253709819, "balkaar", "E", 1253710069, "balkaar", "E", 1253710111, "balkaar", "E", 1253710125, "balkaar", "E", 1253710144, "balkaar", "E", 1253710184, "balkaar", "E", 1253710661, "balkaar", "E", 1253710701, "balkaar", "E", 1253710828, "balkaar", "E", 1253711112, "balkaar", "E", 1253711164, "balkaar", "E", 1253711430, "balkaar", "E", 1253711551, "balkaar", "E", 1253711644, "balkaar", "E", 1253711732, "balkaar", "E", 1253712075, "balkaar", "E", 1253712112, "balkaar", "E", 1253712308, "balkaar", "E", 1253712356, "balkaar", "E", 1253712416, "balkaar", "E", 1253712447, "balkaar", "E", 1253712514, "balkaar", "E", 1253712564, "balkaar", "E", 1253712678, "balkaar", "E", 1253712814, "balkaar", "E", 1253712875, "balkaar", "E", 1253712970, "balkaar", "E", 1253713009, "balkaar", "E", 1253713141, "balkaar", "E", 1253713364, "balkaar", "E", 1253713397, "balkaar", "E", 1253713767, "balkaar", "E", 1253713951, "balkaar", "E", 1253713965, "balkaar", "E", 1253713968, "balkaar", "E", 1253713972, "balkaar", "E", 1253714101, "balkaar", "E", 1253714174, "balkaar", "E", 1253714327, "balkaar", "E", 1253714370, "balkaar", "E", 1253714516, "balkaar", "E", 1253714575, "balkaar", "E", 1253714639, "balkaar", "E", 1253714819, "balkaar", "E", 1253714854, "balkaar", "E", 1253714906, "balkaar", "E", 1253716396, "balkaar", "E", 1253716587, "balkaar", "E", 1253716683, "balkaar", "E", 1253716724, "balkaar", "E", 1253717041, "balkaar", "E", 1253717119, "balkaar", "E", 1253717422, "balkaar", "E", 1253721631, "balkaar", "E", 1253721801, "balkaar", "E", 1253721874, "balkaar", "E", 1253721885, "balkaar", "E", 1253722167, "balkaar", "E", 1253723426, "balkaar", "E", 1253723460, "balkaar", "E", 1253724406, "balkaar", "E", 1253724547, "balkaar", "E", 1253724925, "balkaar", "E", 1253725163, "balkaar", "E", 1253725280, "balkaar", "E", 1253725310, "balkaar", "E", 1253725379, "balkaar", "E", 1253725719, "balkaar", "E", 1253725806, "balkaar", "E", 1253725918, "balkaar", "E", 1253731513, "balkaar", "E", 1253731567, "balkaar", "E", 1253731688, "balkaar", "E", 1253732012, "balkaar", "E", 1253732101, "balkaar", "E", 1253732321, "balkaar", "E", 1253732487, "balkaar", "E", 1253732549, "balkaar", "E", 1253732646, "balkaar", "E", 1253732743, "balkaar", "E", 1253733417, "balkaar", "E", 1253733648, "balkaar", "E", 1253733753, "balkaar", "E", 1253733905, "balkaar", "E", 1253734879, "balkaar", "E", 1253735080, "balkaar", "E", 1253735110, "balkaar", "E", 1253735164, "balkaar", "E", 1253735227, "balkaar", "E", 1253735269, "balkaar", "E", 1253735316, "balkaar", "E", 1253735422, "balkaar", "E", 1253735927, "balkaar", "E", 1253736022, "balkaar", "E", 1253736251, "balkaar", "E", 1253737784, "balkaar", "E", 1253737870, "balkaar", "E", 1253737920, "balkaar", "E", 1253738165, "balkaar", "E", 1253738367, "balkaar", "E", 1253738456, "balkaar", "E", 1253738514, "balkaar", "E", 1253738553, "balkaar", "E", 1253738770, "balkaar", "E", 1253739148, "balkaar", "E", 1253740959, "balkaar", "E", 1253741006, "balkaar", "E", 1253741110, "balkaar", "E", 1253741132, "balkaar", "E", 1253742211, "balkaar", "E", 1253751603, "balkaar", "E", 1253752057, "balkaar", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
