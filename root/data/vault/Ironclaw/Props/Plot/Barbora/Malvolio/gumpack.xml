<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pack"/>
            <Base:SName sname="candy"/>
            <Base:SName sname="gum"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="candies"/>
            <Base:PName pname="packs"/>
            <Base:PName pname="gums"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="chewing"/>
          <Base:Adjective adjective="gum"/>
          <Base:Adjective adjective="rectangular"/>
          <Base:Adjective adjective="silvery"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             pack of chewing gum
          </Base:Description>
          <Base:Description type="look">
             A small silvery pack of $(this.trait:smell)-flavored gum. {? greaterthan | $(this.trait:quantity) | 0 | It has $(this.trait:quantity) pieces left. | The pack is empty. } <acmd tag="command" cmd="pull gum pack">Pull out a piece?</acmd>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         5
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "like foil, try eating the gum inside"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$flavor = (\{ "spearmint", "trash", "mint", "wintergreen", "raw meat", "blood", "dirt", "mud", "snow" \});

\$sz = sizeof(\$flavor);

\$v = random(\$sz)+1;

Set(\$this, "trait:smell", \$flavor[\$v]);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:pull-dob">
         X[M] if(\$this."base:environment" != \$actor) \{ EmitTo(\$actor, "Get your own "+Describe(this, nil, \$actor)+" or ask for a piece."); return FALSE;\} 
if(!\$this."trait:quantity") \{ EmitTo(\$actor, Describe(\$this, nil, \$actor)+ " is empty. Poor you."); return FALSE; \} 
\$gum = Spawn(\$\{Ironclaw:Props:Plot:Barbora:Malvolio:gumpiece\}); 
\$v = \$this."trait:smell";
Set(\$gum, "trait:smell", \$v);
\$t = "of " +\$v;
Set(\$gum, "trait:taste", \$t);
\$gum."base:environment" = \$actor; 
if(\$gum."base:environment" != \$actor) \{ 
 EmitTo(\$actor, "Your hands are too full!"); 
 Slay(\$gum); 
 return FALSE; 
\} else \{ 
\$this."trait:quantity" -= 1; 
\} 
 
EmitTo(\$actor, "You pull " +Describe(\$gum, nil, \$actor)+ " from "+Describe(this, nil, \$actor)+"."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+" pulls " +Describe(\$gum, \$actor)+ " from "+Describe(this, \$actor)+".", \$actor); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1294988050, "delfina", "E", 1294988068, "delfina", "E", 1294988071, "delfina", "E", 1294988238, "delfina", "K", 1294988244, "delfina", "E", 1294988404, "delfina", "E", 1295075316, "delfina", "K", 1295075611, "delfina", "E", 1295075957, "delfina", "K", 1295076896, "tunk_bodin", "P", 1295076909, "delfina", "E", 1295076947, "tunk_bodin", "P", 1295076972, "tunk_bodin", "P", 1295077099, "tunk_bodin", "P", 1295077218, "delfina", "E", 1295077342, "delfina", "K", 1295077426, "delfina", "E", 1295077459, "delfina", "E", 1295077497, "tunk_bodin", "X", 1295077716, "delfina", "K", 1295077745, "delfina", "E", 1295077775, "delfina", "E", 1295077831, "delfina", "E", 1295077872, "delfina", "E", 1295077897, "delfina", "E", 1295077914, "delfina", "K", 1295078213, "delfina", "E", 1295078290, "delfina", "E", 1295078498, "delfina", "E", 1295078553, "delfina", "E", 1295078765, "delfina", "E", 1295078898, "delfina", "K", 1295078936, "delfina", "K", 1295078977, "delfina", "K", 1295079122, "delfina", "E", 1295079268, "delfina", "K", 1295079306, "delfina", "K", 1295079460, "delfina", "R", 1295245562, "delfina", "K", 1295245708, "delfina", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
