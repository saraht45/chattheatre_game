<object clone="/base/obj/thing" owner="rastalabor">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Races:Bodies:Mainbody)"/>
    <Base:Bulk immobile="false" mass="50" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="200" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="destrier"/>
            <Base:SName sname="lizard"/>
            <Base:SName sname="reptile"/>
            <Base:SName sname="steed"/>
            <Base:SName sname="mount"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="lizards"/>
            <Base:PName pname="reptiles"/>
            <Base:PName pname="steeds"/>
            <Base:PName pname="destriers"/>
            <Base:PName pname="mounts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="mounted"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="arturl">
             http://greywolf.critter.net/images/ironclaw/standups/icsu03/icsu03-destrier-r.gif
          </Base:Description>
          <Base:Description type="brief">
             $(this.trait:build) $(this.trait:color) destrier
          </Base:Description>
          <Base:Description type="examine">
             A massive lizard with $(this.trait:scaletype) $(this.trait:color) scales covering $(this.base:possessive) body. <capitalize what="$(this.base:pronoun)"/> looks like $(this.base:pronoun) could swallow you whole.
          </Base:Description>
          <Base:Description type="look">
             A massive lizard with $(this.trait:scaletype) $(this.trait:color) scales covering $(this.base:possessive) body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="back" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="back"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">back</Base:Description>
          <Base:Description type="examine">
             Scales running up and down the back form a seemingly smooth appearance. The back looks like it could carry the weight of just about anything, and hardly feel it.
          </Base:Description>
          <Base:Description type="look">
             You see the long scaled back of a $[Describe($this)].
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:build) body
          </Base:Description>
          <Base:Description type="examine">
             The massive and bulky body of the $[Describe($this)] is covered in $(this.trait.scaletype) $(this.trait:color) scales. The body of the this creature is easily capable of carrying around large mounted weight atop it.
          </Base:Description>
          <Base:Description type="look">
             A scaled and bulky body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="claws" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="claw"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="claws"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">claws</Base:Description>
          <Base:Description type="examine">
             On the ends of each foot are four long, sharp and dangerous claws. Though the size of the legs it is doubtful it could do much of any clawing, but they allow the $[Describe($this)] to climb over virtually any terrain.
          </Base:Description>
          <Base:Description type="look">
             Sharp and deadly looking claws.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">eyes</Base:Description>
          <Base:Description type="examine">
             A pair of of reptilian eyes stare blankly back at you. A green, marble-like texture represents the pupil.
          </Base:Description>
          <Base:Description type="look">
             A pair of of reptilian eyes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forefeet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="forefoot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="forefeet"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">forefeet</Base:Description>
          <Base:Description type="examine">
             At the end of the legs are small, partially webbed feet. Sharp claws glitter dangerously at the end.
          </Base:Description>
          <Base:Description type="look">
             Small partially webbed feet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forelegs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foreleg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="forelegs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">foreleg</Base:Description>
          <Base:Description type="examine">
             The short and stumpy legs of this creature shouldn't possibly be able to support the weight of this massive creature, or anything on top of it, but somehow capable of propelling its massive bulk around at faster than average speed.
          </Base:Description>
          <Base:Description type="look">
             Short, stumpy legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">head</Base:Description>
          <Base:Description type="heads">
             The long conical head of the $[Describe($this)] terminates into a heavy, bony snout. Made up of $(this.trait.scaletype) $(this.trait:color) scales, the head of this beast looks as solid as stone.
          </Base:Description>
          <Base:Description type="look">
             A long conical head.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">mouth</Base:Description>
          <Base:Description type="examine">
             Elongated and lined with rows of razor sharp teeth, the mouth of a $[Describe($this)] can open wide enough to snap around the waist of a large horse.
          </Base:Description>
          <Base:Description type="look">
             An elongated mouth with many rows of teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nose" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nose"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="noses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">nose</Base:Description>
          <Base:Description type="examine">
             Two rather small holes at the tip of the snout. Though small in nature, a $[Describe($this)] is quite capable of distinguishing various scents.
          </Base:Description>
          <Base:Description type="look">
             Two small holes at the tip of the snout.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rear feet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="feet"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             rear feet
          </Base:Description>
          <Base:Description type="examine">
             At the end of the legs are small, partially webbed feet. Sharp claws glitter dangerously at the end.
          </Base:Description>
          <Base:Description type="look">
             Small partially webbed feet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rear legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             rear legs
          </Base:Description>
          <Base:Description type="examine">
             The short and stumpy legs of this creature shouldn't possibly be able to support the weight of this massive creature, or anything on top of it, but somehow capable of propelling its massive bulk around at faster than average speed.
          </Base:Description>
          <Base:Description type="look">
             Short, stumpy legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scale" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scale"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scales"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">scale</Base:Description>
          <Base:Description type="examine">
             A multitude of $(this.trait.scaletype) $(this.trait:color) scales cover every inch of its body. Rigid and smooth to the eye, these scales makeup the outer layer of this fearsome beast.
          </Base:Description>
          <Base:Description type="look">
             A multitude of scales covering every speck of this creature.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="snout" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="snout"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="snouts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">snout</Base:Description>
          <Base:Description type="examine">
             The long, bony snout is merely an extension of the $[Describe($this)] head. Two small holes at the tip are the only visual indications of a nose.
          </Base:Description>
          <Base:Description type="look">
             A long, bony snout.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tail" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tail"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tails"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">tail</Base:Description>
          <Base:Description type="examine">
             The tail of a $[Describe($this)] is almost the length of $(this.base:possessive) body. Covered with $(this.trait.scaletype) $(this.trait:color) scales, this powerful extension of the body is strong enough to topple over trees.
          </Base:Description>
          <Base:Description type="look">
             A long, powerful and flexible tail.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="teeth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tooth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="teeth"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">teeth</Base:Description>
          <Base:Description type="examine">
             Each individual tooth looks sharp enough to pierce flesh. Three rows of these razor sharp daggers allow even bone to be crushed easily.
          </Base:Description>
          <Base:Description type="look">
             Rows of razor sharp teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="decide">
         "sleep:state sleep"
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "sleeping":\<MOVED:20080918-114107:Lib:NIP:lib:sleeping\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Ironclaw:Staff:Spot:Lib:NIP:mounting\>:(\{ "pre-react:mount-dob", "react:mount-dob" \}), \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:(\{ "lib:act:sleep:state", "lib:handler:state:awake", "lib:handler:state:sleep" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, \<Ironclaw:Staff:Spot:Lib:NIP:mounting\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:mounting:rider-gait">
         ([ 3:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:mounting:rider-inherits">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:sleeping:effect">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:sleeping:interval">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:sleeping:states">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "sleeping:DELAY", "delay:DELAY-exec", "sleeping:INTERNAL", "internal:INTERNAL-exec", "decide:DECIDE-init", "sleeping:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         31
      </Core:Property>
      <Core:Property property="export:nip:trait:mounting:rider-gait">
         "rides"
      </Core:Property>
      <Core:Property property="export:nip:trait:mounting:rider-inherits">
         ([ "act-post:enter":"nip:trait:mounting:riderlib", "act:approach":"nip:trait:mounting:riderlib", "act:dismount":"nip:trait:mounting:riderlib", "act:leave":"nip:trait:mounting:riderlib", "act:stance":"nip:trait:mounting:riderlib" ])
      </Core:Property>
      <Core:Property property="export:nip:trait:mounting:riderlib">
         \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:nip:trait:sleeping:effect">
         2
      </Core:Property>
      <Core:Property property="export:nip:trait:sleeping:interval">
         300
      </Core:Property>
      <Core:Property property="export:nip:trait:sleeping:states">
         ([ "awake":1, "sleep":1 ])
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:act:sleep:state">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:state:awake">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:state:sleep">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<MOVED:20080918-114107:Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:sleeping:decide">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:sleeping:delay">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:sleeping:internal">
         \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:login%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:pre-react:mount-dob">
         X[M] if(\$actor.isbusy)\{                                
  EmitTo(\$actor, "You are in the middle of something. Please wait for your current action to complete before attempting something new.");                                
  return FALSE;                                
\}                                
                                
if(\$actor.lastmount \&\& (\$actor.lastmount+60 \> time()))\{                                
  EmitTo(\$actor, "Best to take a moment before trying to get back on.");                                
  return FALSE;                                
\}                                
                                      
\$target = NRefOb(\$dob[0]);                                  
\$detail = NRefDetail(\$dob[0]);               
   
/* Check if the actor has a rope  */              
\$inv = \$actor."base:inventory";                                
for( \$i = 0; \$i \< sizeof( \$inv ); \$i++ )\{                                
  if( \$inv[\$i]."trait:rope" == "1" ) \$foundrope = \$inv[\$i];                                
  break;                                
\}                               
                                
/* If we didn't find a rope, give error message, and return false */                              
if( !\$foundrope )\{                                
  EmitTo( \$actor, "You don't even want to consider getting on " + Describe( \$target ) + " without a rope." );                                
  return FALSE;                                
\}                              
                                
/* Okay, we've got the tools and a target. Begin the action. */                                
\$actor.isbusy = 1;                                
\$actor.workenv = \$actor."base:environment";                                
                                
EmitTo(\$actor, "You begin circling "+Describe(\$target)+" looking for the right opportunity.");                                
EmitIn(\$actor."base:environment", Describe(\$actor)+" starts circling, looking for the right opportunity to jump onto "+Describe(\$target)+".", \$actor);                                
                                
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ \$actor."trait:agility", \$actor."skill:combat:riding", \$actor."career:combat:riding" \}));                                
                                
/* delay based on how good their roll was */                                
\$delay(900-(\$result*3), FALSE, "1660");                                
                                
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ \$actor."trait:agility", \$actor."skill:combat:riding", \$actor."career:riding" \}));                                
                                
                                
if(\$actor."base:environment" != \$actor.workenv)                                
\{                                
  EmitTo(\$actor, "Your attempt to mount the beast failed due to moving.");                                
  \$actor.isbusy = nil;                                
  \$actor.workenv = nil;                                
  return TRUE;                                
\} else \{                                
  /* We need to roll at least a 23 to earn something */                                
  if(\$result \< 8)                                
  \{                                  
    EmitTo(\$actor, "Your attempt to mount the " + Describe(\$target)+ " ends with it on top of you instead, oh the claws, oh the pain, make it stop.");                                
    EmitIn(\$actor."base:environment", Describe(\$actor)+" attempts to jump on the " +Describe(\$target)+ "but it is too wild and " +Describe(\$actor)+ "ends up underneath torn by the long claws.", \$actor);     
    \$actor.lastmount = time();                                
\$actor.isbusy = nil;                                
\$actor.workenv = nil;       
    return FALSE;    
  \}     
  else if(\$result \< 15)    
  \{                                  
    EmitTo(\$actor, "You almost jump on " + Describe(\$target)+ " when it snaps at you and you decide it may be too dangerous.");                                
    EmitIn(\$actor."base:environment", Describe(\$actor)+" almost jumps on " +Describe(\$target)+ "but it snaps at " +Describe(\$actor)+ " and they decide otherwise.", \$actor);     
    \$actor.lastmount = time();                                
    \$actor.isbusy = nil;                                
    \$actor.workenv = nil;       
    return FALSE;    
  \}    
    else if(\$result \< 23)    
  \{                                  
    EmitTo(\$actor, "You leap onto " + Describe(\$target)+ " and stay on for a moment before it bucks and tosses you free.");                                
    EmitIn(\$actor."base:environment", Describe(\$actor)+" jumps on " +Describe(\$target)+ " and rides it for a moment, before tossed free as it bucks.", \$actor);     
    \$actor.lastmount = time();                                
    \$actor.isbusy = nil;                                
    \$actor.workenv = nil;       
    return FALSE;    
  \}    
  else     
  \{                                  
    EmitTo(\$actor, "You leap onto " + Describe(\$target)+ " using the rope to control its head and bend it to your will despite it's struggles.");                                
    EmitIn(\$actor."base:environment", Describe(\$actor)+" leaps onto " +Describe(\$target)+ " using rope and skill to keep their seat despite its struggles.", \$actor);    
    \$actor.lastmount = time();                                
    \$actor.isbusy = nil;                                
    \$actor.workenv = nil;       
    return TRUE;    
  \}    
\}
      </Core:Property>
      <Core:Property property="merry:react:mount-dob">
         X[M] /*   
   
   D=This script deals with mounting an NPC.   
   
*/   
   
if( this."npc:mounted" ) \{ /* Someone is mounting the NPC already... */   
  EmitTo( \$actor, "You can't mount "+Describe(this)+" as "+this."base:pronoun"+" is already being mounted." );   
  return FALSE;   
\}   
   
/* Let's also check if the actor is mounting something currently */   
if( \$actor."npc:mounting" ) /* Actor is already mounting something. */   
  if( \$actor."npc:mounting" == this ) \{ /* Actor is mounting this NPC already! */   
    EmitTo( \$actor, "You are already mounting "+Describe( this )+"!" );   
    return FALSE;   
  \} else \{ /* Actor is mounting something else. */   
    EmitTo( \$actor, "You are already mounting "+Describe( \$actor."npc:mounting" )+"!" );   
    return FALSE;   
  \}   
   
/* If we get here, the NPC isn't mounted. Let's print some pretty message describing what happens, */   
   
EmitIn( this."base:environment", Describe( \$actor )+" mounts "+Describe( this )+".", \$actor );   
EmitTo( \$actor, "You mount "+Describe( this )+"." );   
   
/* ... and put the rider ON the NPC */   
   
\$actor."base:proximity" = this;   
\$actor."base:stance" = STANCE_SIT;   
\$actor."base:preposition" = PREP_ON;   
   
/*   
 * Add adjective "mounted" to the NPC, and remove adjective "unmounted".   
 */   
Set( this, "details:"+NRefDetail(this)+":adjective:mounted", TRUE );   
Set( this, "details:"+NRefDetail(this)+":adjective:unmounted", FALSE );   
   
/* We inherit, as specified in the inherits mapping */   
\$inherits = this."nip:trait:mounting:rider-inherits";   
\$scripts = map_indices( \$inherits );   
for( \$i = 0; \$i \< sizeof( \$scripts ); \$i++ )   
  Set( \$actor, "merry:inherit:"+\$scripts[\$i], Get( this, \$inherits[\$scripts[\$i]] ));   
   
/* And we set the 'npc:mounted' property in the NPC to 1 to signal that we're mounted. */   
this."npc:mounted" = 1;   
   
/* Let's replace the base:gait in the actor for when we move through rooms. */   
\$actor."base:oldgait" = \$actor."base:gait"; /* store old value, just in case */   
\$actor."base:gait" = this."nip:trait:mounting:rider-gait"; /* and set our own */   
   
/* And finally, let's set a "npc:mounting" property in the actor (the rider, not the horse) to the horse object reference (this) */   
\$actor."npc:mounting" = this;   
this."nip:trait:movement:frequency" = 0;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, "sleeping":\<MOVED:20080918-114107:Lib:NIP:lib:sleeping\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Ironclaw:Staff:Spot:Lib:NIP:mounting\>:(\{ "pre-react:mount-dob", "react:mount-dob" \}), \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>:(\{ "lib:act:sleep:state", "lib:handler:state:awake", "lib:handler:state:sleep" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:sleeping\>, \<Ironclaw:Staff:Spot:Lib:NIP:mounting\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:mounting:rider-gait">
         ([ 3:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:mounting:rider-inherits">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:sleeping:effect">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:sleeping:interval">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:sleeping:states">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "sleeping:DELAY", "delay:DELAY-exec", "sleeping:INTERNAL", "internal:INTERNAL-exec", "decide:DECIDE-init", "sleeping:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         31
      </Core:Property>
      <Core:Property property="nip:trait:mounting:rider-gait">
         "rides"
      </Core:Property>
      <Core:Property property="nip:trait:mounting:rider-inherits">
         ([ "act-post:enter":"nip:trait:mounting:riderlib", "act:approach":"nip:trait:mounting:riderlib", "act:dismount":"nip:trait:mounting:riderlib", "act:leave":"nip:trait:mounting:riderlib", "act:stance":"nip:trait:mounting:riderlib" ])
      </Core:Property>
      <Core:Property property="nip:trait:mounting:riderlib">
         \<MOVED:20080918-114107:Lib:NIP:lib:mountrider\>
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="nip:trait:sleeping:effect">
         2
      </Core:Property>
      <Core:Property property="nip:trait:sleeping:interval">
         300
      </Core:Property>
      <Core:Property property="nip:trait:sleeping:states">
         ([ "awake":1, "sleep":1 ])
      </Core:Property>
      <Core:Property property="npc:mounted">0</Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1110251412
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1318102265
      </Core:Property>
      <Core:Property property="npc:status:startup">
         1110241619
      </Core:Property>
      <Core:Property property="npc:sys:shk-cursor">8</Core:Property>
      <Core:Property property="npc:sys:sign">1</Core:Property>
      <Core:Property property="npc:weariness">9440</Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1110239416, "tonyd", "E", 1110239442, "tonyd", "E", 1110239549, "tonyd", "X", 1110239768, "tonyd", "E", 1110239839, "tonyd", "E", 1110240075, "tonyd", "E", 1110240091, "tonyd", "E", 1110240306, "tonyd", "E", 1110240424, "tonyd", "E", 1110241441, "tonyd", "S", 1110241568, "tonyd", "S", 1110241766, "tonyd", "S", 1110245493, "tonyd", "S", 1110245500, "tonyd", "S", 1110245647, "zwoc", "S", 1110245654, "zwoc", "S", 1110245665, "zwoc", "S", 1110245997, "zwoc", "S", 1110246002, "zwoc", "S", 1110252329, "tonyd", "E", 1110252346, "tonyd", "E", 1117940388, "tonyd", "E", 1172082119, "tunk_bodin", "E", 1172082128, "tunk_bodin", "E", 1186887726, "tonyd", "E", 1186887830, "tonyd", "E", 1186887863, "tonyd", "X", 1186888054, "tonyd", "E", 1186888405, "tonyd", "E", 1186888628, "tonyd", "X", 1186897376, "tonyd", "X", 1193443943, "rorschakovacs", "E", 1193444797, "rorschakovacs", "E", 1193444904, "rorschakovacs", "E", 1193445542, "rorschakovacs", "K", 1193445893, "rorschakovacs", "K", 1309487795, "rorschakovacs", "R", 1318106021, "rastalabor", "X", 1318106342, "rastalabor", "X", 1318106385, "rastalabor", "X", 1318106441, "rastalabor", "X", 1318110641, "rastalabor", "E", 1318392166, "morwenlorelie", "R" \})
      </Core:Property>
      <Core:Property property="sigstream">0</Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
