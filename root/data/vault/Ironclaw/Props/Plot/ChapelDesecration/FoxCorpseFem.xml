<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Races:Bodies:Mainbody)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="female" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="corpse"/>
            <Base:SName sname="fox"/>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="corpses"/>
            <Base:PName pname="foxes"/>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="decayed"/>
          <Base:Adjective adjective="decaying"/>
          <Base:Adjective adjective="dried"/>
          <Base:Adjective adjective="female"/>
          <Base:Adjective adjective="furred"/>
          <Base:Adjective adjective="red"/>
          <Base:Adjective adjective="wounded"/>
          <Base:Adjective adjective="young"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             corpse of a female fox
          </Base:Description>
          <Base:Description type="examine">
             The corpse of a female fox. She's a dainty young mature red furred fox. The body is bearing several wounds, marks and bruises, as well as broken bones and missing teeth. Claws seem to be missing and hair is missing in patches from her head. The corpse is somewhat dried out and has started to decay in certain areas.
$[Call($this, "examine"); return nil;]
          </Base:Description>
          <Base:Description type="look">
             The corpse of a female fox. She's a young red furred fox bearing marks and wounds. The corpse is somewhat dried out and starting to decay in certain areas. You can see something is amiss.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         1
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:demand-consent%corpse">
         \<Ironclaw:Lib:Characters:Death\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:take%takecorpse">
         \<Ironclaw:Lib:Characters:Death\>
      </Core:Property>
      <Core:Property property="merry:lib:examine">
         X[M] \$delay(1, TRUE, "030f");

\$healer = Int(\$actor."skill:mental:first-aid") + Int(\$actor."career:mental:first-aid");
\$obs = Int(\$actor."skill:mental:observation") + Int(\$actor."career:mental:observation");

if(\$healer \> 9) \{
  EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin.");
  if(\$obs \< 5 \&\& (\$this."trait:quantity" \>= 1 \|\| \$this."trait:quantity" == -1))
    EmitTo(\$actor, "Something seems to be wrong, but you can't spot what it is.");
\} else if(\$healer \> 7) \{
  EmitTo(\$actor, "The woman was deliberately tortured for a long while before she died from her wounds. She was a virgin.");
  if(\$obs \< 5 \&\& (\$this."trait:quantity" \>= 1 \|\| \$this."trait:quantity" == -1))
    EmitTo(\$actor, "Something seems to be wrong, but you can't spot what it is.");
\} else if(\$healer \> 5) \{
  EmitTo(\$actor, "The woman was tortured to her death.");
\} else if(\$healer \> 3) \{
  EmitTo(\$actor, "The woman died from her wounds.");
\}

if(\$obs \>= 5 \&\& (\$this."trait:quantity" \>= 1 \|\| \$this."trait:quantity" == -1)) \{
  EmitTo(\$actor, "As you study the body you realize something is hidden in it. You can search the corpse to find what's hidden.");
\}

return TRUE;


/*if(\$this."trait:quantity" \< 1 \&\& \$this."trait:quantity" != -1) \{



if(\$this."trait:quantity" \< 1 \&\& \$this."trait:quantity" != -1) \{

if(\$actor."skill:career:healer" == 1) \{
EmitTo(\$actor, "The woman died from her wounds.");
return TRUE;
\}
if(\$actor."skill:career:healer" == 2) \{
EmitTo(\$actor, "The woman died from her wounds.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 3) \{
EmitTo(\$actor, "The woman was tortured to her death.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 4) \{
EmitTo(\$actor, "The woman was tortured to her death.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 5) \{
EmitTo(\$actor, "The woman was deliberately tortured for a long while before she died from her wounds. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 6) \{
EmitTo(\$actor, "The woman was deliberately tortured for a long while before she died from her wounds. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 7) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 8) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 9) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 10) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 11) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:career:healer" == 12) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 3) \{
EmitTo(\$actor, "The woman died from her wounds.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 4) \{
EmitTo(\$actor, "The woman died from her wounds.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 5) \{
EmitTo(\$actor, "The woman was tortured to her death.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 6) \{
EmitTo(\$actor, "The woman was tortured to her death.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 7) \{
EmitTo(\$actor, "The woman was deliberately tortured for a long while before she died from her wounds. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 8) \{
EmitTo(\$actor, "The woman was deliberately tortured for a long while before she died from her wounds. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 9) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 10) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 11) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else if(\$actor."skill:mental:first-aid" == 12) \{
EmitTo(\$actor, "The woman was professionally tortured and kept alive for as long as possible while suffering greatly. She was a virgin. Something seems to be wrong, but you can't spot what it is.");
return TRUE;
\}
else \{
EmitTo(\$actor, "You have a feeling that if you had the right skills you might be able to tell how this young fox died.");
\}
return TRUE;
*/
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:search-dob">
         X[M] \$delay(3, TRUE, "030f");


/* check to make sure the knife is still there */
if(\$this."trait:quantity" \< 1 \&\& \$this."trait:quantity" != -1) \{
  EmitTo(\$actor, "You can't seem to find anything.");
  return FALSE;
\}

/* remove the knife from the quantity */
if(\$this."trait:quantity" != -1)
  \$this."trait:quantity" -= 1;

/* create the knife and put it in the actor's inventory */
\$object = Spawn(\$\{Ironclaw:Props:Plot:ChapelDesecration:SilverKnife\});
\$object."base:environment" = \$actor;

/* emit message to player and room */
EmitTo(\$actor, "You uncover a silver knife from "+Describe(\$this)+".");
EmitIn(\$actor."base:environment", Describe(\$actor)+" uncovers a silver knife from "+Describe(\$this)+".", \$actor);

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1196137947, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1192219816
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
