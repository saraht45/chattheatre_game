<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.0025" density="0.01"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="needle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="needles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="copper"/>
          <Base:Adjective adjective="tattoo"/>
          <Base:Adjective adjective="tattooing"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) tattoo needle
          </Base:Description>
          <Base:Description type="examine">
             A small, tapered $(this.trait:material) needle used for tattoos. It has been very carefully hollowed out in order to contain the necessary inks. {? | $(this.trait:ink) | The needle is currently filled with $(this.trait:ink) ink. }
          </Base:Description>
          <Base:Description type="look">
             A small, pointed $(this.trait:material) tattoo needle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         500
      </Core:Property>
      <Core:Property property="export:trait:material">
         "copper"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "tattooneedle"
      </Core:Property>
      <Core:Property property="merry:react-pre:dip-dob">
         X[M] /* EmitTo(\$actor, dump_value(args));   */        
if(\$into \&\& sizeof(\$into) == 1) \{                       
\$ink_ob = NRefOb(\$into[0]);             
if(\$ink_ob."trait:objecttype" == "ink") \{         
if(\$this."trait:ink") \{         
EmitTo(\$actor, Describe(\$this, nil, \$actor)+ " already holds " +\$this."trait:ink"+ " ink. You will need to empty it before attempting a new color.");       
return FALSE;         
\} else if(\$ink_ob."trait:color") \{            
\$this."trait:ink" = \$ink_ob."trait:color";                
\}                      
\}              
\}                     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:empty-dob">
         X[M] if(\$this."trait:ink") \{     
EmitTo(\$actor, "You empty " +Describe(\$this, nil, \$actor)+ " of " +\$this."trait:ink"+ " ink.");   
EmitIn(\$actor."base:environment", Describe(\$actor)+ " empties " +Describe(\$this, \$actor)+ " of " +\$this."trait:ink"+ " ink.", \$actor);     
\$this."trait:ink" = nil;     
return FALSE;     
\} else \{     
EmitTo(\$actor, "There is nothing to empty from " +Describe(\$this, nil, \$actor)+ ".");     
return FALSE;     
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1149008375, "tunk_bodin", "X", 1149008475, "tunk_bodin", "X", 1149009218, "tunk_bodin", "X", 1149009238, "tunk_bodin", "X", 1149009258, "tunk_bodin", "X", 1149009320, "tunk_bodin", "X", 1149009343, "tunk_bodin", "X", 1149009380, "tunk_bodin", "X", 1149009400, "tunk_bodin", "X", 1149009412, "tunk_bodin", "X", 1149009446, "tunk_bodin", "X", 1149009473, "tunk_bodin", "X", 1149009531, "tunk_bodin", "X", 1149009550, "tunk_bodin", "X", 1149009569, "tunk_bodin", "X", 1149009640, "tunk_bodin", "X", 1149009724, "tunk_bodin", "X", 1149009858, "tunk_bodin", "X", 1149010183, "tunk_bodin", "X", 1149010266, "tunk_bodin", "X", 1149010326, "tunk_bodin", "X", 1149010403, "tunk_bodin", "X", 1149010434, "tunk_bodin", "X", 1149010642, "tunk_bodin", "X", 1149010676, "tunk_bodin", "X", 1149010777, "tunk_bodin", "X", 1149010878, "tunk_bodin", "X", 1149013281, "tunk_bodin", "X", 1168713664, "tunk_bodin", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:material">
         "copper"
      </Core:Property>
      <Core:Property property="trait:objecttype">
         "tattooneedle"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
