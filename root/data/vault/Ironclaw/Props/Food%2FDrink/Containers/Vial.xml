<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Shared:food/drinks:sizes:Sips3)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="20" maxweight="20"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="glass"/>
            <Base:SName sname="vial"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="glasses"/>
            <Base:PName pname="vials"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="glass"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="examine">
             A $(this.trait:color) $(this.trait:material) vial. This long, slender vessel has a flat bottom and can be sealed with a cork stopper. It is used to hold liquids, powders, and various other forms of medication.<sbr/><quality-full/>
          </Base:Description>
          <Base:Description type="look">
             A slender $(this.trait:color) $(this.trait:material) vial.
          </Base:Description>
          <Base:Description type="type">
             $(this.trait:material) vial
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         2400
      </Core:Property>
      <Core:Property property="export:trait:material">
         "glass"
      </Core:Property>
      <Core:Property property="export:trait:quality">
         3
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] object liquid;       
      
liquid = Get(this, "sys:shared:consume:last-content");      
      
shared_consumable::consumable_add(\$what: liquid, \$where: this);
      </Core:Property>
      <Core:Property property="merry:react-pre:drink-what">
         X[M] if(!sizeof(\$this."base:inventory")) \{ 
    return TRUE; 
\} 
\$contents = \$this."base:inventory"[0]; 
 
if(\$contents."base:urparent" == \$\{Ironclaw:Props:Plot:Spider:Blood\}) \{ 
    if(Str(\$contents."trait:color") == "yellowish-red") \{ 
        \$delay(1, TRUE, "4315"); 
        Call(\$\{Ironclaw:Effects:Disease:SpiderItch\}, "apply", \$who: \$actor, \$severity: 5 + random(10)); 
    \} 
\} 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:sip-iob">
         X[M] if(!sizeof(\$this."base:inventory")) \{ 
    return TRUE; 
\} 
 
\$contents = \$this."base:inventory"[0]; 
 
if(\$contents."base:urparent" == \$\{Ironclaw:Props:Plot:Spider:Blood\}) \{ 
    if(Str(\$contents."trait:color") == "yellowish-red") \{ 
        \$delay(1, TRUE, "440a"); 
        Call(\$\{Ironclaw:Effects:Disease:SpiderItch\}, "apply", \$who: \$actor, \$severity: 5 + random(10)); 
    \} 
\} 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:collect-iob">
         X[M] int skill; 
 
if(Int(\$actor."skill:career:healer") \> Int(\$actor."skill:mental:first-aid")) \{ 
    skill = Int(\$actor."skill:career:healer"); 
\} else \{ 
    skill = Int(\$actor."skill:mental:first-aid"); 
\} 
 
if(skill \<= 0) \{ 
    EmitTo(\$actor, "You don't know how to do that."); 
    return FALSE; 
\} 
 
if(!\$dob) \{ 
    return TRUE; 
\} 
 
if(!sizeof(\$dob)) \{ 
    return TRUE; 
\} 
 
if(sizeof(\$dob) \> 1) \{ 
    EmitTo(\$actor, "You can only collect one thing at a time."); 
    return FALSE; 
\} 
 
if(NRefDetail(\$dob[0]) != "blood") \{ 
    EmitTo(\$actor, "You cannot collect that in " + Describe(\$this, nil, \$actor) + "."); 
    return FALSE; 
\} 
 
\$who = NRefOb(\$dob[0]); 
if(!\$who."udat:possessed") \{ 
    EmitTo(\$actor, "You cannot collect blood from that."); 
    return FALSE; 
\} 
 
if(\$this."base:inventory" \&\& sizeof(\$this."base:inventory") \&\& sizeof(\$this."base:inventory") \> 0) \{ 
    EmitTo(\$actor, Describe(\$this, nil, \$actor) + " already has something in it."); 
    return FALSE; 
\} 
 
shared_consumable::consumable_add(\$what: \$\{Ironclaw:Props:Plot:Spider:Blood\}, \$where: \$this); 
\$blood = \$this."base:inventory"[0]; 
\$blood."trait:color" = \$who."blood:color"; 
 
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1363025469, "meandmine", "X", 1404689374, "jominey", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
