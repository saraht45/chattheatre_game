<object clone="/base/obj/thing" owner="balkaar">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Shared:food/drinks:sizes:measured:metric:Litre)"/>
    <Base:Bulk immobile="false" mass="3.5" density="2.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="2" maxweight="2"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bucket"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="buckets"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="examine">
             A circular $(this.trait:color) $(this.trait:material) bucket with a set of metal straps aligned at its middle. $(this.trait:engraving) <makers-mark/> <sbr/> <quality-full/>
          </Base:Description>
          <Base:Description type="look">
             A  $(this.trait:color) $(this.trait:material) bucket with metal straps.
          </Base:Description>
          <Base:Description type="type">
             {? | $(this.trait:engraving) | {? | $(this.trait:engraving:pattern) | $(this.trait:engraving:pattern)} engraved } $(this.trait:color) $(this.trait:material) bucket
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:basematerial">
         "wood"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "milk pail"
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:engrave-dob">
         \<Allegory:Lib:Crafting:Custom:Engraving\>
      </Core:Property>
      <Core:Property property="merry:lib:is_full">
         X[M] object drink;

if(!sizeof(\$this."base:inventory")) return FALSE;

drink = \$this."base:inventory"[0];

\$brim = drink."base:actualdensity" * \$this."base:intrinsiccapacity" * 1000.0;
\$brim -= 0.0001;

if((drink."base:actualmass" + 0.0001) \>= \$brim) return TRUE;

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-post:collect-iob">
         X[M] if(!\$dob) \{   
return TRUE;
\}

if(!sizeof(\$dob)) \{
return TRUE;
\}

if(sizeof(\$dob) \> 1) \{
EmitTo(\$actor, "You can only collect one thing at a time.");
return FALSE;
\}

if(NRefDetail(\$dob[0]) != "bay") \{
EmitTo(\$actor, "You cannot collect that in " + Describe(\$this, nil, \$actor) + ".");
return FALSE;
\}

if(\$this."base:inventory" \&\& sizeof(\$this."base:inventory") \&\& sizeof(\$this."base:inventory") \> 0) \{
EmitTo(\$actor, Describe(\$this, nil, \$actor) + " already has something in it.");
return FALSE;
\}


EmitTo(\$actor, "You dip " + Describe(\$this, nil, \$actor) + " into the bay's waves filling it with cold sea water to the brim.");
EmitIn(\$actor."base:environment", Describe(\$actor)+ " dips " + Describe(\$this, nil, \$actor) + " into the bay's waves filling it with cold sea water to the brim.", \$actor);
shared_consumable::consumable_add(\$what: \$\{Ironclaw:Props:Food/Drink:Drinks:WaterSalty\}, \$where: \$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:collect-using">
         X[M] if(!\$dob) \{   
return TRUE;
\}

if(!sizeof(\$dob)) \{
return TRUE;
\}

if(sizeof(\$dob) \> 1) \{
EmitTo(\$actor, "You can only collect one thing at a time.");
return FALSE;
\}

if(NRefDetail(\$dob[0]) != "bay") \{
EmitTo(\$actor, "You cannot collect that in " + Describe(\$this, nil, \$actor) + ".");
return FALSE;
\}

if(\$this."base:inventory" \&\& sizeof(\$this."base:inventory") \&\& sizeof(\$this."base:inventory") \> 0) \{
EmitTo(\$actor, Describe(\$this, nil, \$actor) + " already has something in it.");
return FALSE;
\}

EmitTo(\$actor, "You dip " + Describe(\$this, nil, \$actor) + " into the bay's waves filling it with cold sea water to the brim.");
EmitIn(\$actor."base:environment", Describe(\$actor)+ " dips " + Describe(\$this, nil, \$actor) + " into the bay's waves filling it with cold sea water to the brim.", \$actor);
shared_consumable::consumable_add(\$what: \$\{Ironclaw:Props:Food/Drink:Drinks:WaterSalty\}, \$where: \$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1589157345, "jominey", "E", 1589157570, "jominey", "E", 1589157605, "jominey", "E", 1589157664, "jominey", "E", 1589157696, "jominey", "E", 1589157750, "jominey", "E", 1589157795, "jominey", "E", 1589157833, "jominey", "E", 1589157859, "jominey", "E", 1589157885, "jominey", "E", 1589157986, "jominey", "E", 1589158010, "jominey", "E", 1589158047, "jominey", "E", 1589158073, "jominey", "E", 1614557854, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
