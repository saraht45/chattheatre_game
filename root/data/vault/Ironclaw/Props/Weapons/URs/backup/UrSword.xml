<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Weapons:URs:Updated:UrWeapon)"/>
    <Base:Bulk immobile="false" mass="2" density="8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sword"/>
            <Base:SName sname="weapon"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="swords"/>
            <Base:PName pname="weapons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color)
$(this.trait:material)
$(this.trait:type)
sword
          </Base:Description>
          <Base:Description type="examine">
             <describe what="$(this)" cap="1" nonposs="1"/>.
$(this.trait:bladedescription)
{? | $[if($this."trait:hilttype" || $this."trait:hiltdescription" || $this."trait:hiltmaterial") return TRUE;] |
It has a $(this.trait:hiltmaterial) $(this.trait:hilttype) hilt.
$(this.trait:hiltdescription)
}
<quality-full/>
          </Base:Description>
          <Base:Description type="look">
             <describe what="$(this)" cap="1" nonposs="1"/>.
{? | $[if($this."trait:hilttype" || $this."trait:hiltmaterial") return TRUE;] |It has a $(this.trait:hiltmaterial) $(this.trait:hilttype) hilt.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="blade" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="true" on="false" inside="false" near="false" over="false" behind="false" before="true" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="blade"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="blades"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="sharp"/>
          <Base:Adjective adjective="sword"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:color) | none || $(this.trait:color) }
{? equal | $(this.trait:material) | none || $(this.trait:material) }
{? | $(this.trait:type) |$(this.trait:type)|sword}
blade
          </Base:Description>
          <Base:Description type="look">
             <describe what="$(this)" cap="1" nonposs="1" detail="blade"/>.<br/>
$(this.trait:bladedescription)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hilt" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="false" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hilt"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="hilts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="sword"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:hiltcolor) $(this.trait:hiltmaterial)
{? | $(this.trait:hilttype) |$(this.trait:hilttype)|sword}
hilt
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:hiltmaterial) lower portion of the sword that allows the wielder to handle the weapon. A leather piece is wrapped around it for a more comfortable grip.
{? | $(this.trait:hilttype) |This is a $(this.trait:hilttype) hilt.}
$(this.trait:hiltdescription)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pommel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="false" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pommel"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pommels"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="sword"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             sword pommel
          </Base:Description>
          <Base:Description type="look">
             The counter-weight knob on the hilt which secures the hilt to the blade and allows the hand to either rest on it or grip it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:hilt">
         ([ "adj-prop":(\{ "trait:color" \}), "newobject":\<Allegory:Props:Weapons:Bladed:Swords:Medium:GenericSword\>, "properties":(\{ (\{ "trait:material", "trait:hiltmaterial" \}), (\{ "trait:color", "trait:hiltcolor" \}), (\{ "trait:type", "trait:hilttype" \}), (\{ "trait:hiltdescription", "trait:hiltdescription" \}) \}), "properties-this":(\{ (\{ "trait:material", "trait:material" \}), (\{ "trait:color", "trait:color" \}), (\{ "trait:type", "trait:type" \}), (\{ "trait:bladedescription", "trait:bladedescription" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:hiltmaterial">
         "metal"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "metal"
      </Core:Property>
      <Core:Property property="export:trait:sheathtype">
         "sword"
      </Core:Property>
      <Core:Property property="export:weapon:bonus:attack">
         3
      </Core:Property>
      <Core:Property property="export:weapon:bonus:damage">
         2
      </Core:Property>
      <Core:Property property="export:weapon:parry">
         1
      </Core:Property>
      <Core:Property property="export:weapon:skill">
         "sword"
      </Core:Property>
      <Core:Property property="export:weapon:speed">
         50
      </Core:Property>
      <Core:Property property="export:weapon:targets">
         (\{ "chest", "torso", "right-cheek", "left-cheek", "right-shoulder", "left-shoulder", "right-shoulder", "left-shoulder", "right-forearm", "left-forearm", "left-forearm", "right-hand", "left-hand", "left-hand" \})
      </Core:Property>
      <Core:Property property="merry:lib:combat:attack-description-missed">
         X[M] /* output a description of the attack missing */ 
string first, second, third; 
/* 
\$attacker 
\$defender 
\$target (on defender) 
\$weapon 
\$weapon_skill 
\$attack_roll 
*/ 
 
if(\$adverb) \{ 
  \$adverb = \$adverb+" "; 
\} else \{ 
  \$adverb = ""; 
\} 
 
switch(random(3)) \{ 
case 2: 
  if(\$adverb != "") \$adverb += "and "; 
  first = "You "+\$adverb+"inaccurately thrust your "+\$weapon+" at "+Describe(\$target)+"."; 
  second = Describe(\$attacker)+" "+\$adverb+"inaccurately thrusts "+\$attacker."base:possessive"+" "+\$weapon+" at "+Describe(\$target, nil, \$defender)+"."; 
  third = Describe(\$attacker)+" "+\$adverb+"innacurately thrusts "+\$attacker."base:possessive"+" "+\$weapon+" at "+Describe(\$target)+"."; 
  break; 
case 1: 
  if(\$adverb != "") \$adverb += "and "; 
  first = "You "+\$adverb+"wildly swing your "+\$weapon+" at "+Describe(\$target)+"."; 
  second = Describe(\$attacker)+" "+\$adverb+"wildly swings "+\$attacker."base:possessive"+" "+\$weapon+" at "+Describe(\$target, nil, \$defender)+"."; 
  third = Describe(\$attacker)+" "+\$adverb+"wildly swings "+\$attacker."base:possessive"+" "+\$weapon+" at "+Describe(\$target)+"."; 
  break; 
default: 
  first = "You "+\$adverb+" "+oneof("miss", "fail to hit")+" "+Describe(\$target)+"."; 
  second = Describe(\$attacker)+" "+\$adverb+" "+oneof("misses", "fails to hit")+" "+Describe(\$target, nil, \$defender)+"."; 
  third = Describe(\$attacker)+" "+\$adverb+" "+oneof("misses", "fails to hit")+" "+Describe(\$target)+"."; 
  break; 
\} 
/* describe the miss */ 
EmitTo(\$attacker, first); 
EmitTo(\$defender, second); 
EmitIn(\$defender."base:environment", third, \$attacker, \$defender); 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:hilttype">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "hilt");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:type">
         X[M] Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replacenames", \$object: this); 
Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this); 
Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "blade"); 
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1140872729, "tonyd", "E", 1140872996, "tonyd", "E", 1140873128, "tonyd", "E", 1140875923, "tonyd", "P", 1140875994, "tonyd", "P", 1140876143, "tonyd", "P", 1140876183, "tonyd", "P", 1140876321, "tonyd", "P", 1140876676, "tonyd", "P", 1140876838, "tonyd", "P", 1140876858, "tonyd", "P", 1140877037, "tonyd", "P", 1140877141, "tonyd", "P", 1140927000, "tonyd", "E", 1140927119, "tonyd", "E", 1140927156, "tonyd", "E", 1140927273, "tonyd", "E", 1140928801, "tonyd", "E", 1140928963, "tonyd", "E", 1140931408, "tonyd", "E", 1141174280, "tonyd", "E", 1141174438, "tonyd", "E", 1141174652, "tonyd", "E", 1141174767, "tonyd", "E", 1146129178, "tonyd", "E", 1147268298, "tonyd", "E", 1147268326, "tonyd", "E", 1147268342, "tonyd", "E", 1163328519, "tonyd", "E", 1163396011, "tonyd", "P", 1163396062, "tonyd", "P", 1163396330, "tonyd", "P", 1163400358, "tonyd", "P", 1163403116, "tonyd", "P", 1163403198, "tonyd", "P", 1163403227, "tonyd", "P", 1163403293, "tonyd", "P", 1163403359, "tonyd", "P", 1163403421, "tonyd", "P", 1163403495, "tonyd", "P", 1167554876, "tonyd", "R", 1167555812, "tonyd", "R", 1167565456, "tonyd", "E", 1167565815, "tonyd", "E", 1172079196, "tunk_bodin", "E", 1178568157, "tonyd", "E", 1178568327, "tonyd", "E", 1179646790, "tonyd", "E", 1181870972, "rastalabor", "E", 1186771430, "rastalabor", "X", 1198793070, "slurpeeslurp", "E", 1257233773, "rastalabor", "X", 1257233993, "rastalabor", "X", 1257234099, "rastalabor", "X", 1257234130, "rastalabor", "X", 1257234263, "rastalabor", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
