<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="0.6"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stack"/>
            <Base:SName sname="arrows"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stacks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="arrow"/>
          <Base:Adjective adjective="gilded"/>
          <Base:Adjective adjective="silver"/>
          <Base:Adjective adjective="silver-tipped"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a stack of silver-tipped arrows
          </Base:Description>
          <Base:Description type="examine">
             Some silver-tipped arrows lying together. You can count $[Int($this."trait:count")] of them. They have gilded silver heads and red feather tails.
          </Base:Description>
          <Base:Description type="look">
             Some silver-tipped arrows lying together. They have gilded silver heads and red feather tails.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         1000
      </Core:Property>
      <Core:Property property="export:trait:count">
         25
      </Core:Property>
      <Core:Property property="merry:react-pre:grab-dob">
         X[M] if(\$this."trait:count" \<= 0) \{
    Slay(\$this);
\}

/* Remove arrow from stack */
\$this."trait:count" = Int(\$this."trait:count") - 1;
\$arrow = Spawn(\$\{Ironclaw:Props:Weapons:Accessories:Tokens:Sailors:Silver-tippedArrowSingle\});
\$arrow."base:environment" = \$actor;

/* If one arrow left, slay stack and spawn remaining arrows. */
if(\$this."trait:count" == 1) \{
    Slay(\$this);
    \$arrow = Spawn(\$\{Ironclaw:Props:Weapons:Accessories:Tokens:Sailors:Silver-tippedArrowSingle\});
    \$arrow."base:environment" = \$actor;
\}

EmitIn(\$actor."base:environment", Describe(\$actor) + " grabs a silver-tipped arrow from " + Describe(\$this, \$actor) + ".", \$actor);
EmitTo(\$actor, "You grab a silver-tipped arrow from " + Describe(\$this, nil, \$actor) + ".");

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1130804151, "roccon", "X", 1130804269, "roccon", "E", 1130804336, "roccon", "E", 1130804386, "roccon", "E", 1130804403, "roccon", "E", 1130804436, "roccon", "X", 1130804447, "roccon", "E", 1130804536, "roccon", "E", 1130804555, "roccon", "E", 1130804599, "roccon", "E", 1130804647, "roccon", "E", 1130804658, "roccon", "E", 1130804667, "roccon", "E", 1130804679, "roccon", "E", 1130804692, "roccon", "E", 1130804917, "roccon", "E", 1130805002, "roccon", "E", 1130805023, "roccon", "E", 1130805035, "roccon", "E", 1130805047, "roccon", "E", 1130805064, "roccon", "E", 1130805085, "roccon", "E", 1130805173, "roccon", "E", 1130805185, "roccon", "E", 1130805335, "roccon", "E", 1130805426, "roccon", "E", 1130805638, "roccon", "E", 1130805980, "roccon", "E", 1130806001, "roccon", "E", 1130866041, "roccon", "E", 1130866085, "roccon", "E", 1130866111, "roccon", "E", 1167555217, "tonyd", "R", 1172077807, "tunk_bodin", "E", 1236485414, "rastalabor", "X", 1304632416, "slurpeeslurp", "E", 1304632431, "slurpeeslurp", "E", 1304632439, "slurpeeslurp", "E", 1304632509, "slurpeeslurp", "K", 1304632936, "jominey", "K", 1304632960, "jominey", "E", 1304633142, "jominey", "E", 1304633268, "jominey", "E", 1304633274, "jominey", "E", 1304633277, "jominey", "E", 1304633342, "jominey", "K", 1304633354, "jominey", "K", 1304633494, "jominey", "E", 1304633497, "jominey", "E", 1304633501, "jominey", "E", 1304633504, "jominey", "E", 1304633525, "jominey", "K", 1304633921, "jominey", "E", 1304634002, "jominey", "E", 1434229398, "slurpeeslurp", "K", 1434229543, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
