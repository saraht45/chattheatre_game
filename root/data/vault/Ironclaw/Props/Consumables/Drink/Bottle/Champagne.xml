<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bottle"/>
            <Base:SName sname="container"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bottles"/>
            <Base:PName pname="containers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="champagne"/>
          <Base:Adjective adjective="dark"/>
          <Base:Adjective adjective="finest"/>
          <Base:Adjective adjective="green"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             dark, green bottle of champagne
          </Base:Description>
          <Base:Description type="look">
             A bottle of the finest champagne. The dark, green bottle is $[if($this."trait:quantity" == 0) { return "quite"; } else if($this."trait:quantity" <= 0) { return "quite";} else if($this."trait:quantity" >= 1 && $this."trait:quantity" <= 5) { return "nearly emptied of"; } else if($this."trait:quantity" >= 4 && $this."trait:quantity" <= 9) { return "less than half filled with"; } else if($this."trait:quantity" >= 8 && $this."trait:quantity" <= 13) { return "about half filled with"; } else if($this."trait:quantity" >= 12 && $this."trait:quantity" <= 17) { return "nearly filled with"; } else { return "filled to the brim with"; }] $(this.trait:liquid). It is meant to be poured.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="liquid" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="liquid"/>
            <Base:SName sname="champagne"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="liquids"/>
            <Base:PName pname="champagnes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bottled"/>
          <Base:Adjective adjective="finest"/>
          <Base:Adjective adjective="golden"/>
          <Base:Adjective adjective="rich"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             rich, golden champagne
          </Base:Description>
          <Base:Description type="examine">
             The rich, golden champagne can be seen through the dark green bottle. It is meant to be poured.
          </Base:Description>
          <Base:Description type="look">
             The rich, golden champagne can be seen through the dark green bottle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:liquid">
         "champagne"
      </Core:Property>
      <Core:Property property="export:trait:quality">
         12
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         18
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react-pre:pour-dob">
         X[M] /* check there is a drink available */                      
if(\$this."trait:quantity" \< 1) \{                      
  EmitTo(\$actor, "There is nothing in this bottle anymore.");                      
  return FALSE;                      
\}                      
                      
/* reduce the number of drinks */                      
\$this."trait:quantity" -= 1;                      
                      
/* create the drink object and give it to the player */                      
\$object = Spawn(\$\{Ironclaw:Props:Consumables:Drink:Champagne\}); \$object."base:environment" = \$actor;                      
                      
/* emit message to player and room */                      
EmitTo(\$actor, "You pour a glass of " +\$this."trait:liquid"+ ".");                      
EmitIn(\$actor."base:environment", Describe(\$actor)+" pours a glass of " +\$this."trait:liquid"+ ".", \$actor);                      
if(\$this."trait:quantity" == 1) \{   
\$this."trait:quantity" -= 1;   
\} else if(\$this."trait:quantity" == 2) \{   
\$this."trait:quantity" -= 2;   
\} else if(\$this."trait:quantity" == 3) \{   
\$this."trait:quantity" -= 3;   
\} else \{   
\$this."trait:quantity" -= 4;   
\}   
if(\$this."trait:quantity" == 0) \{   
\$this."trait:liquid" = "empty";   
Set(\$this, "details:liquid:hidden", TRUE);   
return FALSE;   
\}   
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1184719139, "tunk_bodin", "X", 1184719201, "tunk_bodin", "X", 1184719248, "tunk_bodin", "X", 1184719599, "tunk_bodin", "X", 1184719709, "tunk_bodin", "X", 1184719911, "tunk_bodin", "X", 1184720037, "tunk_bodin", "X", 1184720376, "tunk_bodin", "X", 1184720391, "tunk_bodin", "X", 1184720561, "tunk_bodin", "X", 1184720658, "tunk_bodin", "X", 1184720855, "tunk_bodin", "X", 1184720897, "tunk_bodin", "X", 1196059883, "slurpeeslurp", "E", 1196059915, "slurpeeslurp", "E", 1196059935, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:liquid">
         "champagne"
      </Core:Property>
      <Core:Property property="trait:quantity">18</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
