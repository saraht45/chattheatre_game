<object clone="/base/obj/thing" owner="abigail">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="blindfold"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="blindfolds"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } blindfold
          </Base:Description>
          <Base:Description type="examine">
             A {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } blindfold, tailored to cover the eyes and constrict the sight when worn.
          </Base:Description>
          <Base:Description type="look">
             A {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } blindfold.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="head-back"/>
      <Base:Covered value="face"/>
      <Base:Covered value="eye-right"/>
      <Base:Covered value="eye-left"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="blind:script">
         X[M] EmitTo(\$actor, "You can't see anything through " +Describe(\$\{Ironclaw:Props:Clothing:Accessories:Blindfold\}, nil, nil, STYLE_NONPOSS)+ ".");     
return FALSE;
      </Core:Property>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "eyepatch"
      </Core:Property>
      <Core:Property property="merry:react-post:unwear">
         X[M] EmitTo(\$actor, "As the blindfold is lifted from your eyes, the sudden flood of light blinds and disorients you momentarily.");
      </Core:Property>
      <Core:Property property="merry:react-post:wear">
         X[M] EmitTo(\$actor, "As the blindfold covers your eyes, the world goes dark and you realize you can no longer see your surroundings.");
      </Core:Property>
      <Core:Property property="merry:react:unwear">
         X[M] Set(\$actor,"merry:act-pre:look",nil);
Set(\$actor,"merry:act-pre:examine",nil);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:wear">
         X[M] Set(\$actor, "trait:blinded", 1);

Set(\$actor, "merry:act-pre:look", Get(\$\{Ironclaw:Props:Clothing:Accessories:Blindfold\},"blind:script"));
Set(\$actor, "merry:act-pre:examine", Get(\$\{Ironclaw:Props:Clothing:Accessories:Blindfold\},"blind:script"));

return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1148011061, "tunk_bodin", "X", 1148011218, "tunk_bodin", "X", 1148011305, "tunk_bodin", "X", 1148011466, "tunk_bodin", "X", 1148011519, "tunk_bodin", "X", 1287791111, "tunk_bodin", "X", 1424201176, "abigail", "E", 1424202154, "abigail", "E", 1424202927, "abigail", "E", 1425326260, "abigail", "E", 1425326346, "abigail", "E", 1425326406, "abigail", "E", 1425326479, "abigail", "E", 1425326541, "abigail", "E", 1425326549, "abigail", "E", 1425326708, "abigail", "E", 1425326790, "abigail", "E", 1425326839, "abigail", "E", 1425326920, "abigail", "E", 1425326980, "abigail", "E", 1425327037, "abigail", "E", 1425327164, "abigail", "E", 1430921046, "slurpeeslurp", "K", 1443564122, "rorschakovacs", "R", 1443564167, "rorschakovacs", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
