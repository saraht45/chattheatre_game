<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ribbon"/>
            <Base:SName sname="bow"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ribbons"/>
            <Base:PName pname="bows"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="head-back"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:create:default:tailor">
         ([ "description":(\{ "You tailor your ribbon into NEW_OBJECT", "tailors a ribbon into NEW_OBJECT" \}), "input-list":(\{ (\{ \<Allegory:Lib:Crafting:Clothing:SeamstressAccessoriesDB\>, "alteration:knowledge:tailoring-ribbon" \}), (\{ \<Allegory:Lib:Crafting:Clothing:SeamstressOtherDB\>, "alteration:knowledge:tailoring-ribbon" \}), (\{ \<Allegory:Lib:Crafting:Clothing:SeamstressHeadDB\>, "alteration:knowledge:tailoring-ribbon" \}), (\{ \<Allegory:Lib:Crafting:Clothing:SeamstressHomeDB\>, "alteration:knowledge:tailoring-ribbon" \}), (\{ \<Allegory:Lib:Crafting:Clothing:SeamstressGuildDB\>, "alteration:knowledge:tailoring-ribbon" \}) \}), "input-list-actor":(\{ "alteration:knowledge:tailoring-ribbon" \}), "newobject-properties":(\{ (\{ "trait:color", "trait:color" \}), (\{ "trait:material", "trait:material" \}) \}), "skill":"tailoring", "stopvalue":(\{ "trait:brief", "ribbon", "This ribbon has already been tailored." \}) ])
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "ribbon"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This thin length of fabric is used for binding things such as the hair, both for decoration and to hold the object in place."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "ribbon"
      </Core:Property>
      <Core:Property property="merry:react-pre:tie-dob">
         X[M] if(!\$this.tied) \{
   \$this.tied = 1;
   \$this."trait:brief" = "bow";
   /* Improvement: Instead of writing it out, should use Describe() */
   EmitTo( \$actor, "You tie your "  + Str(\$this."trait:color") + " " + Str(\$this."trait:material") + " ribbon into a bow." );
   EmitIn( \$actor."base:environment", Describe(\$actor) + " ties a " + Str(\$this."trait:color") + " " + Str(\$this."trait:material") + " ribbon into a bow.", \$actor);
   return FALSE;
\} else \{
   EmitTo(\$actor, Describe(this, nil, \$actor) + " is already tied.");
   return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:untie-dob">
         X[M] if(\$this.tied) \{
   \$this.tied = nil;
   \$this."trait:brief" = "ribbon";
   /* Improvement: Instead of writing it out, should use Describe() */
   EmitTo( \$actor, "You untie your " + Str(\$this."trait:color") + " " + Str(\$this."trait:material") + " bow." );
   EmitIn( \$actor."base:environment", Describe(\$actor)+ " unties a " + Str(\$this."trait:color") + " " + Str(\$this."trait:material") + " bow.", \$actor);
   return FALSE;
\} else \{
   EmitTo(\$actor, Describe(this, nil, \$actor) + " is already untied.");
   return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1102312379, "tonyd", "X", 1102312418, "tonyd", "X", 1102312676, "tonyd", "E", 1102312804, "tonyd", "E", 1102312946, "tonyd", "E", 1102312971, "tonyd", "E", 1102313360, "tonyd", "E", 1102313385, "tonyd", "E", 1102313698, "tonyd", "E", 1102313730, "tonyd", "E", 1102313760, "tonyd", "E", 1102313778, "tonyd", "E", 1102313910, "tonyd", "E", 1102314969, "tonyd", "E", 1102314986, "tonyd", "E", 1102315252, "tonyd", "E", 1102315331, "tonyd", "E", 1102315419, "tonyd", "E", 1102315469, "tonyd", "E", 1102315509, "tonyd", "E", 1102315653, "tonyd", "E", 1102315689, "tonyd", "E", 1102315913, "tonyd", "E", 1102315944, "tonyd", "E", 1102316160, "tonyd", "E", 1102722113, "tonyd", "E", 1102722121, "tonyd", "E", 1102723433, "tonyd", "E", 1102723452, "tonyd", "E", 1102725463, "tonyd", "E", 1102725971, "tonyd", "E", 1102727694, "tonyd", "E", 1102728027, "tonyd", "E", 1102737382, "tonyd", "E", 1102818089, "tonyd", "E", 1102823410, "tonyd", "E", 1102823445, "tonyd", "E", 1102824774, "tonyd", "E", 1102825200, "tonyd", "E", 1102825270, "tonyd", "E", 1102825861, "tonyd", "E", 1103000935, "tonyd", "E", 1103002715, "tonyd", "E", 1103002786, "tonyd", "E", 1103069521, "tonyd", "E", 1103070439, "tonyd", "E", 1103071522, "tonyd", "E", 1103072176, "tonyd", "E", 1103072602, "tonyd", "E", 1103072808, "tonyd", "E", 1103078278, "tonyd", "E", 1103084033, "tonyd", "E", 1103084078, "tonyd", "E", 1103084148, "tonyd", "E", 1103084391, "tonyd", "E", 1103084493, "tonyd", "E", 1103084608, "tonyd", "E", 1103084651, "tonyd", "E", 1103084725, "tonyd", "E", 1103084822, "tonyd", "E", 1103084892, "tonyd", "E", 1103084923, "tonyd", "E", 1103084953, "tonyd", "E", 1103085056, "tonyd", "E", 1103085100, "tonyd", "E", 1103089195, "tonyd", "E", 1103091115, "tonyd", "E", 1103154368, "tonyd", "E", 1103253009, "tonyd", "E", 1103253256, "tonyd", "E", 1103253438, "tonyd", "E", 1103253537, "tonyd", "P", 1103253693, "tonyd", "P", 1103253903, "tonyd", "E", 1103253939, "tonyd", "E", 1103253967, "tonyd", "E", 1103254055, "tonyd", "P", 1107035735, "tonyd", "E", 1107035881, "tonyd", "X", 1107035977, "tonyd", "E", 1107036131, "tonyd", "E", 1107036221, "tonyd", "E", 1107036238, "tonyd", "E", 1107040048, "tonyd", "E", 1107040235, "tonyd", "X", 1107040528, "tonyd", "E", 1107040581, "tonyd", "X", 1107044835, "tonyd", "E", 1107046312, "tonyd", "E", 1107047783, "tonyd", "X", 1107050686, "tonyd", "E", 1107050838, "tonyd", "E", 1107050967, "tonyd", "X", 1107050988, "tonyd", "E", 1107051173, "tonyd", "E", 1109318101, "tonyd", "X", 1119043122, "librarysage", "E", 1119773992, "tonyd", "E", 1123240924, "tonyd", "X", 1123241103, "tonyd", "E", 1123241127, "tonyd", "E", 1123241299, "tonyd", "E", 1123241351, "tonyd", "E", 1136348425, "tonyd", "X", 1136348447, "tonyd", "E", 1136348490, "tonyd", "E", 1136348519, "tonyd", "E", 1136533334, "tunk_bodin", "X", 1142982098, "tonyd", "P", 1142982130, "tonyd", "P", 1188920394, "rorschakovacs", "X", 1189177510, "rorschakovacs", "E", 1189177534, "rorschakovacs", "X", 1189177615, "rorschakovacs", "E", 1189264013, "rorschakovacs", "E", 1189264074, "rorschakovacs", "E", 1196269673, "slurpeeslurp", "E", 1196269694, "slurpeeslurp", "E", 1196270074, "slurpeeslurp", "E", 1196275069, "slurpeeslurp", "X", 1196301101, "slurpeeslurp", "E", 1196301190, "slurpeeslurp", "E", 1196527608, "slurpeeslurp", "E", 1234700247, "balkaar", "E", 1234700256, "balkaar", "E", 1234700263, "balkaar", "E", 1234733569, "balkaar", "E", 1234733581, "balkaar", "E", 1234733598, "balkaar", "E", 1234733600, "balkaar", "E", 1234733603, "balkaar", "E", 1234733606, "balkaar", "E", 1234733609, "balkaar", "E", 1234733631, "balkaar", "E", 1234733651, "balkaar", "E", 1234733671, "balkaar", "E", 1234733682, "balkaar", "E", 1234733753, "balkaar", "E", 1234733757, "balkaar", "E", 1234733760, "balkaar", "E", 1258749549, "jominey", "E", 1305424448, "slurpeeslurp", "E", 1305424457, "slurpeeslurp", "E", 1305424468, "slurpeeslurp", "E", 1305424491, "slurpeeslurp", "E", 1305424499, "slurpeeslurp", "R", 1324177254, "jominey", "E", 1429920845, "slurpeeslurp", "E", 1443291831, "rorschakovacs", "X", 1456869068, "rorschakovacs", "E", 1456869964, "rorschakovacs", "E", 1456870050, "rorschakovacs", "E", 1456870070, "rorschakovacs", "E", 1456870077, "rorschakovacs", "E", 1456870178, "rorschakovacs", "E", 1456870282, "rorschakovacs", "E", 1456870394, "rorschakovacs", "E", 1456870548, "rorschakovacs", "K", 1456870634, "rorschakovacs", "E", 1456870738, "rorschakovacs", "E", 1456870776, "rorschakovacs", "K", 1456870916, "rorschakovacs", "E", 1456870929, "rorschakovacs", "E", 1456870931, "rorschakovacs", "E", 1456870954, "rorschakovacs", "E", 1456870993, "rorschakovacs", "K", 1456871012, "rorschakovacs", "E", 1456871163, "rorschakovacs", "E", 1456871232, "rorschakovacs", "E", 1456871259, "rorschakovacs", "E", 1456871281, "rorschakovacs", "E", 1456871410, "rorschakovacs", "E", 1456871435, "rorschakovacs", "E", 1456871744, "rorschakovacs", "E", 1456871814, "rorschakovacs", "E", 1456871833, "rorschakovacs", "E", 1456871901, "rorschakovacs", "E", 1456871974, "rorschakovacs", "E", 1456872058, "rorschakovacs", "E", 1456872106, "rorschakovacs", "E", 1456872813, "rorschakovacs", "E", 1456873340, "rorschakovacs", "E", 1458178152, "tonyd", "P", 1458178197, "tonyd", "P", 1458178220, "tonyd", "P", 1458178226, "tonyd", "P", 1525622528, "jominey", "E", 1525622570, "jominey", "E", 1525623601, "jominey", "E", 1561917328, "sendnoodlez", "X", 1562420265, "sendnoodlez", "E", 1562420337, "sendnoodlez", "E", 1562420350, "sendnoodlez", "E", 1562420399, "sendnoodlez", "E", 1562767350, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
