<object clone="/base/obj/thing" owner="meandmine">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dye"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="dyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:color) | $(this.trait:color) }
dye
          </Base:Description>
          <Base:Description type="examine">
             Some {? | $(this.trait:color) | $(this.trait:color) }
dye, suitable for dying clothing or other materials.<sbr/>
There seems to be enough dye for another $(this.trait:quantity) uses.
<newly><br/>[Hint: You can try MIXING one dye WITH another to create new colors]</newly>
          </Base:Description>
          <Base:Description type="look">
             Some {? | $(this.trait:color) | $(this.trait:color) } clothes dye.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="trait:quantity">
         10
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         300
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "dye"
      </Core:Property>
      <Core:Property property="export:trait:color">
         "black"
      </Core:Property>
      <Core:Property property="export:trait:colorbase">
         "black"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "dyepot"
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         1
      </Core:Property>
      <Core:Property property="merry:react-post:mix-iob">
         X[M] return Call(\$\{Allegory:Lib:Colors:Mixing\}, "mixing");
      </Core:Property>
      <Core:Property property="merry:react-pre:add-dob">
         X[M] if(\$iob \&\& sizeof(\$iob) == 1 \&\& NRefOb(\$iob[0])."base:environment" == \$actor) \{   
  if(!NRefOb(\$iob[0])."trait:dyeable" \&\& NRefOb(\$iob[0])."trait:objecttype" != "cloth" \&\& NRefOb(\$iob[0])."trait:objecttype" != "hairdye" \&\& NRefOb(\$iob[0])."trait:objecttype" != "nailpolish" ) return TRUE;   
  if(FALSE \&\& NRefOb(\$iob[0])."trait:color" == this."trait:color") \{   
    EmitTo(\$actor, "There's no point dyeing "+Describe(\$iob[0], nil, \$actor)+", as it is already "+this."trait:color"+".");   
    return FALSE;   
\}   
/*  if(!this."trait:quantity" \|\| this."trait:quantity" \< -1) \{   
    EmitTo(\$actor, "There is no dye left in "+Describe(this, nil, \$actor)+".");   
    return FALSE;   
  \}*/   
  this."trait:quantity" = this."trait:quantity" - 1;   
  EmitTo(\$actor, "You dye "+Describe(\$iob[0], nil, \$actor)+" with "+Describe(this, nil, \$actor)+".");   
  EmitIn(\$actor."base:environment", Describe(\$actor)+" dyes "+Describe(\$iob[0], \$actor)+" with "+Describe(this, \$actor)+".", \$actor);   
   
  NRefOb(\$iob[0])."trait:color" = this."trait:color";   
  NRefOb(\$iob[0])."trait:colorbase" = this."trait:colorbase";   
  return FALSE;   
\}   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:mix-dob">
         X[M] if(\$iob \&\& sizeof(\$iob) == 1 \&\& NRefOb(\$iob[0])."base:environment" == \$actor) \{   
  if(!NRefOb(\$iob[0])."trait:dyeable" \&\& NRefOb(\$iob[0])."trait:objecttype" != "cloth" \&\& NRefOb(\$iob[0])."trait:objecttype" != "furdye" ) return TRUE;   
  if(FALSE \&\& NRefOb(\$iob[0])."trait:color" == this."trait:color") \{   
    EmitTo(\$actor, "There's no point dyeing "+Describe(\$iob[0], nil, \$actor)+", as it is already "+this."trait:color"+".");   
    return FALSE;   
\}   
/*  if(!this."trait:quantity" \|\| this."trait:quantity" \< -1) \{   
    EmitTo(\$actor, "There is no dye left in "+Describe(this, nil, \$actor)+".");   
    return FALSE;   
  \}*/   
  this."trait:quantity" = this."trait:quantity" - 1;   
  EmitTo(\$actor, "You dye "+Describe(\$iob[0], nil, \$actor)+" with "+Describe(this, nil, \$actor)+".");   
  EmitIn(\$actor."base:environment", Describe(\$actor)+" dyes "+Describe(\$iob[0], \$actor)+" with "+Describe(this, \$actor)+".", \$actor);   
   
  NRefOb(\$iob[0])."trait:color" = this."trait:color";   
  NRefOb(\$iob[0])."trait:colorbase" = this."trait:colorbase";   
  return FALSE;   
\}   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" == 0 \|\| 0 \>= \$this."trait:quantity") \{            
if(\$this."no:slay" == 1) \{            
return FALSE;            
\} else \{     
EmitTo(\$this."base:environment", "You have squeezed the last drops out of the pot of " +Describe(\$this, nil, \$actor, STYLE_NONPOSS)+ ".");       
Slay(\$this);            
return TRUE;     
\}            
\}
      </Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1123246689, "tonyd", "E", 1143860065, "tonyd", "E", 1146351189, "tunk_bodin", "X", 1146351327, "tunk_bodin", "X", 1146351761, "tunk_bodin", "X", 1146351787, "tunk_bodin", "X", 1146351878, "tunk_bodin", "X", 1146352105, "tunk_bodin", "X", 1146352277, "tunk_bodin", "X", 1146352419, "tunk_bodin", "X", 1146352514, "tunk_bodin", "X", 1146352586, "tunk_bodin", "X", 1146352650, "tunk_bodin", "X", 1146352720, "tunk_bodin", "X", 1146352767, "tunk_bodin", "X", 1146353033, "tunk_bodin", "X", 1146353381, "tunk_bodin", "X", 1146353491, "tunk_bodin", "X", 1199350113, "tonyd", "E", 1199350144, "tonyd", "E", 1199350151, "tonyd", "E", 1199350159, "tonyd", "E", 1199350179, "tonyd", "E", 1199350273, "tonyd", "E", 1199351226, "tonyd", "E", 1199351252, "tonyd", "E", 1199351408, "tonyd", "R", 1199418873, "tonyd", "E", 1204264610, "slurpeeslurp", "E", 1204264683, "slurpeeslurp", "E", 1209563205, "slurpeeslurp", "E", 1209563248, "slurpeeslurp", "E", 1209563276, "slurpeeslurp", "E", 1209565396, "slurpeeslurp", "E", 1209577358, "balkaar", "E", 1209579770, "balkaar", "E", 1209583084, "balkaar", "E", 1209583461, "rastalabor", "X", 1209583771, "rastalabor", "X", 1209583818, "rastalabor", "X", 1213430595, "tonyd", "P", 1213430674, "tonyd", "P", 1239588854, "tonyd", "E", 1239589071, "tonyd", "E", 1251109231, "slurpeeslurp", "E", 1251109297, "slurpeeslurp", "E", 1251109373, "slurpeeslurp", "E", 1251119518, "slurpeeslurp", "E", 1251119561, "slurpeeslurp", "E", 1251119753, "slurpeeslurp", "E", 1251119851, "slurpeeslurp", "E", 1251120009, "slurpeeslurp", "E", 1251120056, "slurpeeslurp", "E", 1315724258, "jominey", "E", 1324135990, "meandmine", "X", 1324136006, "meandmine", "X", 1324136140, "meandmine", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">10</Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
