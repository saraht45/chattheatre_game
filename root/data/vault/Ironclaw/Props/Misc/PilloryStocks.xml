<object clone="/base/obj/thing" owner="lidiab">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="3" density="0.7"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="2" maxweight="2"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stocks"/>
            <Base:SName sname="pillory"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stocks"/>
            <Base:PName pname="pillories"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="locked"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             wooden pillory
          </Base:Description>
          <Base:Description type="examine">
             Similar to the stocks, the pillory consists of hinged wooden boards forming holes through which the head and wrists are inserted. Once the criminal is in place, the boards are locked together to secure the captive. Pillories are commonly used to hold petty criminals in marketplaces, crossroads, and other public places. This device is used for punishment by public humiliation, and has been built upon a platform to increase public visibility of the offender. A placard detailing the crime of the person bound here has been affixed to the front of the platform.
          </Base:Description>
          <Base:Description type="look">
             A device made of wooden framework erected on a thick post, with three holes for securing the head and hands. This device is used for punishment by public humiliation.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hinged-board" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="board"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="boards"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hinged"/>
          <Base:Adjective adjective="top"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             hinged board
          </Base:Description>
          <Base:Description type="examine">
             The top hinged board of the pillory. Three holes for wrists and head have been carved out of the wood where this board meets the lower half.
          </Base:Description>
          <Base:Description type="look">
             The top hinged board of the pillory.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="platform" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="platform"/>
            <Base:SName sname="stage"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="platforms"/>
            <Base:PName pname="stages"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="pillory"/>
          <Base:Adjective adjective="raised"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the raised platform of the pillory
          </Base:Description>
          <Base:Description type="examine">
             The pillory has been built upon this platform to increase public visibility of the offender.
          </Base:Description>
          <Base:Description type="look">
             The raised platform on which the pillory has been constructed.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents>
      <Base:ContentGroup group="placard">
        <Base:ContentItem ix="placard" item="OBJ(Ironclaw:Props:Misc:PilloryPlacard)" wear="false"/>
      </Base:ContentGroup>
    </Base:InitialContents>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:placard:writable">
         "1"
      </Core:Property>
      <Core:Property property="export:writable">"1"</Core:Property>
      <Core:Property property="merry:lib:expired_play">
         X[M] /* player didn't answer in time */             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:no_play">
         X[M] /* decided not to play */             
EmitTo(\$actor, "You opt not to try. Spoil sport.");             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:play_game">
         X[M] \$tokens = Match(\$actor, "token", \$actor, "festival");  
if(sizeof(\$tokens) \< 1) \{  
  EmitTo(\$actor, "You don't have a token. Buy one from the festival attendant.");  
  return TRUE;  
\} else \{  
  EmitTo(\$actor, "You turn a token over to the pillary attendant.");  
  Slay(NRefOb(\$tokens[0]));  
\}  
  
/* skill tester code */  
EmitTo(\$actor, "You aim your pie at the pillory victim.");  
EmitIn(\$actor."base:environment", Describe(\$actor)+"  aims  "+\$actor."base:possessive"+" pie at the pillory victim.", \$actor);  
\$delay(random(10)+4, TRUE, "8e7d");  
\$skill = ironclaw::roll(\$roller: \$actor, \$skills: (\{ \}), \$bonus: (\{ "trait:agility", "trait:luck" \}));  
\$skill += random(5);  
switch(\$skill) \{  
  case 1:  
    EmitTo(\$actor, "You aim carefully at the pillory victim and sadly your pie splats on the ground in front of the pillory. You sadly unshot your aim.");  
    EmitIn(\$actor."base:environment", "The pie splats on the ground well in front of the pillory.", \$actor);  
    break;  
  case 2:  
    EmitTo(\$actor, "You squint and try really hard to imagine your pie in the pillory victims face. You tried to hard and the pie sails over the pillory and hits a nearby audience member!");  
    EmitIn(\$actor."base:environment", "As "+\$actor."base:possessive"+ " pie flies over the pillory, you can't help but to giggle as the pie hits a nearby audience member!", \$actor);  
    break;  
  case 3:  
    EmitTo(\$actor, "Your aim is great, now throw it.");  
    EmitIn(\$actor."base:environment","The aim is perfect and "+\$actor."base:possessive"+ "  about to throw it", \$actor);  
    break;  
  case 4:  
    EmitTo(\$actor, "Your aim is great, now throw it.");  
    EmitIn(\$actor."base:environment", "The aim is perfect and "+\$actor."base:possessive"+ "  about to throw it", \$actor);  
    break;  
  case 5:  
    EmitTo(\$actor, "Your aim is great, now throw ite.");  
    EmitIn(\$actor."base:environment", "The aim is perfect and "+\$actor."base:possessive"+ "  about to throw it", \$actor);  
    break;  
  case 6:  
    EmitTo(\$actor, "Your aim is great, now throw it.");  
    EmitIn(\$actor."base:environment", "The aim is perfect and "+\$actor."base:possessive"+ "  about to throw it", \$actor);  
    break;  
  case 7:  
    EmitTo(\$actor, "Your aim is great, now throw it.");  
    EmitIn(\$actor."base:environment", "The aim is perfect and "+\$actor."base:possessive"+ "  about to throw it", \$actor);  
    break;  
  default:  
    EmitTo(\$actor, "Even with all your careful aiming your pie hits just to the left of the pillory victim.");  
    EmitIn(\$actor."base:environment", "Even after a long time aiming, the pie hits just to the left of the pillory victim. What a shame.", \$actor);  
    break;  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:play-dob">
         X[M] /*             
             
  D=Ask if actor wants to play game.             
             
*/             
             
/* ask if the player wants to play this */             
interaction::question(\$question: "The assistant shows the pillory to you, \\"This person in the pillory really needs a face full of pie. Only one token, what do you say?\\"", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "play_game", \$no_fun: "no_play", \$expire_fun: "expired_play");             
             
return FALSE;
      </Core:Property>
      <Core:Property property="misc:lastdropped">
         "1096502995 Manny[tunk_bodin]"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1348515649, "meandmine", "X", 1348559076, "meandmine", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
