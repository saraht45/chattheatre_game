<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Furniture:UrObject)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fan"/>
            <Base:SName sname="hand fan"/>
            <Base:SName sname="clothing"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fans"/>
            <Base:PName pname="hand fans"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="decorated"/>
          <Base:Adjective adjective="hand"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:engraving) | {? | $(this.trait:engraving:pattern) | $(this.trait:engraving:pattern)} engraved } {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) }{? | $(this.trait:ribbon:material) | beribboned } {? | $(this.trait:gem:type) | {? equal | $(this.trait:gem:type) | impearled | impearled | $(this.trait:gem:material)-accented } } {? | $(this.details:stud:snames) | adorned } {? | $(this.details:bead:snames) | beaded } {? | $(this.details:paillette:snames) | sparkling } {? | $(this.trait:pearl) | impearled } {? | $(this.details:feather:snames) | feathered } {? | $(this.details:trimming:snames) | $(this.trait:trimming:material)-trimmed } {? | $(this.details:overlay:snames) | $(this.trait:overlay:material)-overlaid } {? | $(this.details:ruffle:snames) | ruffled } {? | $(this.details:flower:snames) | flowered } {? | $(this.trait:painting) | painted } {? | $(this.trait:embroidery) | {? | $(this.trait:embroidery:pattern) | $(this.trait:embroidery:pattern)} embroidered } {? equal | $(this.trait:type) | none || $(this.trait:type)} {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material)} $(this.trait:brief)
          </Base:Description>
          <Base:Description type="pbrief">
             {? | $(this.trait:engraving) | {? | $(this.trait:engraving:pattern) | $(this.trait:engraving:pattern)} engraved } {? equal | $(this.trait:fittedto) | $(this.base:worn-by) | $(this.trait:fit) } {? | $(this.trait:ribbon:material) | beribboned } {? | $(this.trait:gem:type) | {? equal | $(this.trait:gem:type) | impearled | impearled | $(this.trait:gem:material)-$(this.trait:gem:type) } } {? equal | $(this.trait:bead:type) | none || $(this.trait:bead:type) } {? | $(this.trait:pearl) | impearled } {? | $(this.details:feather:snames) | feathered } {? | $(this.details:flower:snames) | flowered } {? | $(this.trait:painting) | painted } {? | $(this.details:trimming:snames) | $(this.trait:trimming:material)-trimmed } {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) }  $(this.trait:pbrief) $(this.trait:engraving)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bead" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:bead:color) | none | gaudy | $(this.trait:bead:color) } {? equal | $(this.trait:bead:material) | none | gaudy | $(this.trait:bead:material) } $(this.trait:bead:shape) beads on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             Some {? equal | $(this.trait:bead:color) | none | gaudy | $(this.trait:bead:color) } {? equal | $(this.trait:bead:material) | none | gaudy | $(this.trait:bead:material) } $(this.trait:bead:shape) beads adorn this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="button" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:buttons:color) | none | gaudy | $(this.trait:buttons:color) } {? equal | $(this.trait:buttons:material) | none | gaudy | $(this.trait:buttons:material) } {? equal | $(this.trait:buttons:type) | none | gaudy | $(this.trait:buttons:type) } buttons
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:buttons:color) | none | gaudy | $(this.trait:buttons:color) } $(this.trait:buttons:type){? equal | $(this.trait:buttons:material) | none | gaudy | $(this.trait:buttons:material) } {? equal | $(this.trait:buttons:type) | none | gaudy | $(this.trait:buttons:type) } buttons adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="feather" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:feather:color) $(this.trait:feather:type) feathers of a $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:feather:color) $(this.trait:feather:type) feathers decorate this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flower" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:flower:color) | none | fake | $(this.trait:flower:color) }{? equal | $(this.trait:flower:material) | none | fake | $(this.trait:flower:material) } $(this.trait:flower:brief) flowers
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:flower:color) | none | fake | $(this.trait:flower:color) } {? equal | $(this.trait:flower:material) | none | fake | $(this.trait:flower:material) } $(this.trait:flower:brief) flowers adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fringe" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.details:default:descriptions:brief)'s {? equal | $(this.trait:fringe:color) | none || $(this.trait:fringe:color) } {? equal | $(this.trait:fringe:material) | none || $(this.trait:fringe:material) } fringe
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:fringe:color) | none || $(this.trait:fringe:color) } {? equal | $(this.trait:fringe:material) | none || $(this.trait:fringe:material) } fringe decorating this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gempieces" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) }{? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material)s } adorning the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A fine assortment of {? equal | $(this.trait:gem:color) | none | gaudy | $(this.trait:gem:color) } {? equal | $(this.trait:gem:material) | none | gaudy | $(this.trait:gem:material)s } adorning this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lace" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:lace:color) $(this.trait:lace:material) lace on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:lace:color) $(this.trait:lace:material) lace on the $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lining" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:lining:color) | none | soft | $(this.trait:lining:color) } {? equal | $(this.trait:lining:material) | none | soft | $(this.trait:lining:material) } lining inside the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A length of {? equal | $(this.trait:lining:color) | none | soft | $(this.trait:lining:color) } {? equal | $(this.trait:lining:material) | none | soft | $(this.trait:lining:material) } lining inside the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="overlay" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:overlay:color) | none | soft | $(this.trait:overlay:color) } {? equal | $(this.trait:overlay:material) | none | soft | $(this.trait:overlay:material) } covering the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A length of {? equal | $(this.trait:overlay:color) | none | soft | $(this.trait:overlay:color) } {? equal | $(this.trait:overlay:material) | none | soft | $(this.trait:overlay:material) } covering the $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="paillette" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:paillette:color) $(this.trait:paillette:material) paillettes on the $(this.details:default:descriptions:brief)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ribbon" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:ribbon:color) $(this.trait:ribbon:material) ribbon on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             A ribbon made of {? | $(this.trait:ribbon:color) | $(this.trait:ribbon:color) | flowing } {? | $(this.trait:ribbon:material) | $(this.trait:ribbon:material) | fabric } entwining the $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ruffle" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:ruffle:color) $(this.trait:ruffle:material) ruffles embellish this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="screen" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="true" on="false" inside="false" near="true" over="false" behind="true" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="screen"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="screens"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="decorated"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the screen of the fan
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:color) $(this.trait:material) screen of the fan, designed to spread outward and waft cool air toward the face of the holder. {? | $(this.trait:picture) | It is artfully decorated with $(this.trait:picture).}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stud" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the {? equal | $(this.trait:stud:color) | none | blunt | $(this.trait:stud:color) } {? equal | $(this.trait:stud:material) | none | blunt | $(this.trait:stud:material) } studs on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="new">empty</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="trimming" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:trimming:color) $(this.trait:trimming:material) trimming on the $(this.details:default:descriptions:brief)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:trimming:color) $(this.trait:trimming:material) trimming decorates this $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="right-hand"/>
      <Base:Covered value="left-hand"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:bead">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "bead" \}), (\{ "pname", "beads" \}) \}), "properties":(\{ (\{ "trait:color", "trait:bead:color" \}), (\{ "trait:material", "trait:bead:material" \}), (\{ "trait:brief", "trait:bead:brief" \}), (\{ "trait:type", "trait:bead:shape" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:button">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "button" \}), (\{ "pname", "buttons" \}) \}), "properties":(\{ (\{ "trait:color", "trait:buttons:color" \}), (\{ "trait:material", "trait:buttons:material" \}), (\{ "trait:type", "trait:buttons:type" \}), (\{ "trait:shape", "trait:buttons:shape" \}), (\{ "trait:engraving", "trait:buttons:engraving" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:feather">
         ([ "adj-list-default":(\{ "feathered" \}), "adj-prop":(\{ "trait:color", "trait:type" \}), "names":(\{ (\{ "sname", "feather" \}), (\{ "pname", "feathers" \}) \}), "properties":(\{ (\{ "trait:color", "trait:feather:color" \}), (\{ "trait:type", "trait:feather:type" \}), (\{ "trait:quality", "trait:feather:quality" \}) \}), "skill":"tailoring" ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:flower">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "flower" \}), (\{ "pname", "flowers" \}) \}), "properties":(\{ (\{ "trait:color", "trait:flower:color" \}), (\{ "trait:material", "trait:flower:material" \}), (\{ "trait:brief", "trait:flower:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:fringe">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "fringe" \}), (\{ "pname", "fringes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:fringe:color" \}), (\{ "trait:material", "trait:fringe:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:gempieces">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "gem" \}), (\{ "pname", "gems" \}) \}), "properties":(\{ (\{ "trait:color", "trait:gem:color" \}), (\{ "trait:material", "trait:gem:material" \}), (\{ "trait:gem:type", "trait:gem:type" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lace">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lace" \}), (\{ "pname", "laces" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lace:color" \}), (\{ "trait:material", "trait:lace:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lining">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lining" \}), (\{ "pname", "linings" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lining:color" \}), (\{ "trait:material", "trait:lining:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:overlay">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "overlay" \}), (\{ "pname", "overlays" \}) \}), "properties":(\{ (\{ "trait:color", "trait:overlay:color" \}), (\{ "trait:material", "trait:overlay:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:paillette">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "paillette" \}), (\{ "pname", "paillettes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:paillette:color" \}), (\{ "trait:material", "trait:paillette:material" \}), (\{ "trait:brief", "trait:paillette:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:ribbon">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "ribbon" \}), (\{ "pname", "ribbons" \}) \}), "properties":(\{ (\{ "trait:color", "trait:ribbon:color" \}), (\{ "trait:material", "trait:ribbon:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:ruffle">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "ruffle" \}), (\{ "pname", "ruffles" \}) \}), "properties":(\{ (\{ "trait:color", "trait:ruffle:color" \}), (\{ "trait:material", "trait:ruffle:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:stud">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "stud" \}), (\{ "pname", "studs" \}) \}), "properties":(\{ (\{ "trait:color", "trait:stud:color" \}), (\{ "trait:material", "trait:stud:material" \}), (\{ "trait:brief", "trait:stud:brief" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:trimming">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "trimming" \}), (\{ "pname", "trimmings" \}) \}), "properties":(\{ (\{ "trait:color", "trait:trimming:color" \}), (\{ "trait:material", "trait:trimming:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:basematerial">
         "cloth"
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "fan"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This is an implement of semi-circular cloth or wood designed for waving lightly in the hand to create a cooling current of air about a person."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This is an implement of semi-circular cloth or wood."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "fan"
      </Core:Property>
      <Core:Property property="export:trait:pbrief">
         "fans"
      </Core:Property>
      <Core:Property property="merry:inherit:react-pre:embroider-dob">
         \<Allegory:Lib:Crafting:Custom:Embroider\>
      </Core:Property>
      <Core:Property property="merry:react-post:close-what">
         X[M] /* describe the fan closing */    
EmitIn(\$actor."base:environment", "The surface of the fan easily collapses to fit into the palm of a hand.");     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:open-what">
         X[M] /* describe the fan opening */    
EmitIn(\$actor."base:environment", "The fan stretches open to reveal an artfully decorated screen.");     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:paint-iob">
         X[M] if((sizeof(Match(\$actor, "paint")) == 0) \&\& (sizeof(Match(\$actor, "paintbrush")) == 0)) \{                          
  EmitTo(\$actor, "You need a paintbrush and some paint.");                          
  return FALSE;                          
\} else if(sizeof(Match(\$actor, "paintbrush")) == 0) \{                          
  EmitTo(\$actor, "You need a paintbrush.");                          
  return FALSE;                          
\} else if(sizeof(Match(\$actor, "paint")) == 0) \{                          
  EmitTo(\$actor, "You need some paint.");                          
  return FALSE;                          
\}         
    
if(\$this."base:environment" != \$actor) \{    
  EmitTo(\$actor, "You must be holding " + Describe(\$this, nil, \$actor) + " to paint on it.");    
  return FALSE;    
\}    
    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:fit-dob">
         X[M] /* fitting the clothes to a specific person */           
           
object database;           
database = \$\{Allegory:Lib:Crafting:Clothing:FittingDB\};           
           
/* sanity check */           
if(this."trait:nofit") return TRUE;           
           
if(sizeof(\$dob) != 1) \{           
 EmitTo(\$actor, "Please only attempt to fit one garment at a time.");           
 return FALSE;           
\}           
           
if(!this."base:worn-by") \{           
 EmitTo(\$actor, "How can you fit "+Describe(this, nil, \$actor)+" while nobody is wearing it?");           
 return FALSE;           
\}           
           
if(FALSE \&\& this."base:worn-by" == \$actor) \{           
 EmitTo(\$actor, "You can't fit "+Describe(this, nil, \$actor)+" yourself! You'll need someone else to fit it for you.");           
 return FALSE;           
\}           
           
if(this."trait:fit") \{           
 if(this."base:worn-by" == this."trait:fittedto") \{           
  EmitTo(\$actor, Describe(this, nil, \$actor)+" has already been fitted.");           
  return FALSE;           
 \} else \{           
  this."trait:fittedto" = this."base:worn-by";           
  EmitTo(\$actor, "You adjust the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".");           
  EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, this."base:worn-by")+" to suit you.");           
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts the size of "+Describe(this, nil, \$actor)+" to suit "+Describe(this."base:worn-by")+".", \$actor, this."base:worn-by");           
 \}           
\}           
         
/*         
\$skill1 = Int(\$actor."skill:career:tailor");           
\$skill2 = Int(\$actor."skill:career:seamstress");           
           
if(\$skill1 \>= \$skill2) \{           
    \$skill = \$skill1;           
\} else \{           
    \$skill = \$skill2;           
\}          
*/       
       
if(Str(\$actor."trait:class1") == "seamstress" \|\| Str(\$actor."trait:class2") == "seamstress") \{       
    \$skill = Int(\$actor."skill:alteration:tailoring");        
\} else \{       
    \$skill = 0;       
\}       
           
\$skill *= 2;           
           
/* \$skill = Int(\$actor."skill:alteration:tailoring")+Int(\$actor."career:alteration:tailoring"); */           
           
if(\$(raw-evoke)) \{           
 \$tmp = Get(database, \$(raw-evoke));           
 if(\$tmp) \{           
  /* found a change to make */           
  if(\$tmp["skill"] \&\& \$tmp["skill"] \> \$skill) \{           
   EmitTo(\$actor, "You don't have enough skill to fit "+Describe(this, nil, \$actor)+" in that way.");           
   return FALSE;           
  \}           
  /* no further objections. Make the change. */           
  EmitTo(\$actor, "You adjust "+Describe(this, nil, \$actor)+" to be "+\$(raw-evoke)+".");           
  if (\$actor != this."base:worn-by") \{           
    EmitTo(this."base:worn-by", Describe(\$actor)+" adjusts "+Describe(this, nil, this."base:worn-by")+" to be "+\$(raw-evoke)+".");           
  \}           
  EmitIn(\$actor."base:environment", Describe(\$actor)+" adjusts "+Describe(this, \$actor)+" to be "+\$(raw-evoke)+".", \$actor, this."base:worn-by");           
           
  /* set the new fit */           
  this."trait:fit" = \$(raw-evoke);           
  this."trait:fittedto" = this."base:worn-by";           
           
  /* and set the adjectives */           
  \$words = explode(\$(raw-evoke), " ");           
  for(\$i = 0; \$i \< sizeof(\$words); \$i++)           
   Set(this, "details:default:adjective:" + lower_case(\$words[\$i])+":local", 1);           
           
  return FALSE;           
 \}           
\}           
           
/* list fitted options */           
\$options = (\{ \});           
\$tmp = Get(database, "*");           
\$indices = map_indices(\$tmp);           
\$indices -= (\{ "revisions" \});           
           
for(\$i=0;\$i\<sizeof(\$indices);\$i++) \{           
 if(typeof(\$tmp[\$indices[\$i]]) == T_MAPPING \&\& (!\$tmp[\$indices[\$i]]["skill"] \|\| Int(\$tmp[\$indices[\$i]]["skill"]) \<= \$skill)) \{           
  \$options \|= (\{ \$indices[\$i] \});           
 \}           
\}           
           
if(!sizeof(\$options)) \{           
 EmitTo(\$actor, "You don't know how to fit "+Describe(this, nil, \$actor)+".");           
 return FALSE;           
\}           
           
EmitTo(\$actor, "To fit clothing to someone specific, they must be wearing the clothing. Then the command is:");           
EmitTo(\$actor, "fit "+Describe(this)+" 'STYLE");           
EmitTo(\$actor, "Your fit options are: "+implode(\$options, ", "));           
           
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:paint-iob">
         X[M] if(\$dob \&\& NRefOb(\$dob[0])) \{    
    Call(\$\{Allegory:Lib:Crafting:Custom:Painting\}, "paint", \$item: \$this, \$brief: Describe(\$dob[0]));    
    return TRUE;    
\} else \{    
    Popup(\$actor, \$\{Allegory:Lib:Crafting:Custom:Painting\}, "html:index", \$actor: \$actor, \$action: "paint", \$item: Str(\$this), \$using: Str(NRefOb(\$using[0])));    
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:bead:material">
         X[M] if(!\$this."trait:bead:material") return TRUE;            
Set(\$this, "details:bead:sname:" +Str(\$this."trait:bead:material")+ ":local", 1);            
Set(\$this, "details:bead:sname:gem:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:buttons:material">
         X[M] if(!\$this."trait:buttons:material") return TRUE;            
Set(\$this, "details:button:sname:" +Str(\$this."trait:buttons:material")+ ":local", 1);            
Set(\$this, "details:button:sname:button:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:flower:material">
         X[M] if(!\$this."trait:flower:material") return TRUE;            
Set(\$this, "details:flower:sname:" +Str(\$this."trait:flower:material")+ ":local", 1);            
Set(\$this, "details:flower:sname:flower:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:fringe:material">
         X[M] if(!\$this."trait:fringe:material") return TRUE;            
Set(\$this, "details:fringe:sname:" +Str(\$this."trait:fringe:material")+ ":local", 1);            
Set(\$this, "details:fringe:sname:fringe:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:gem:material">
         X[M] if(!\$this."trait:gem:material") return TRUE;            
Set(\$this, "details:gem:sname:" +Str(\$this."trait:gem:material")+ ":local", 1);            
Set(\$this, "details:gem:sname:gem:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:lace:material">
         X[M] if(!\$this."trait:lace:material") return TRUE;            
Set(\$this, "details:lace:sname:" +Str(\$this."trait:lace:material")+ ":local", 1);            
Set(\$this, "details:lace:sname:lace:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:overlay:material">
         X[M] if(!\$this."trait:overlay:material") return TRUE;            
Set(\$this, "details:overlay:sname:" +Str(\$this."trait:overlay:material")+ ":local", 1);            
Set(\$this, "details:overlay:sname:overlay:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:ruffle:material">
         X[M] if(!\$this."trait:ruffle:material") return TRUE;            
Set(\$this, "details:ruffle:sname:" +Str(\$this."trait:ruffle:material")+ ":local", 1);            
Set(\$this, "details:ruffle:sname:ruffle:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:stud:material">
         X[M] if(!\$this."trait:stud:material") return TRUE;            
Set(\$this, "details:stud:sname:" +Str(\$this."trait:stud:material")+ ":local", 1);            
Set(\$this, "details:stud:sname:stud:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:trimming:material">
         X[M] if(!\$this."trait:trimming:material") return TRUE;            
Set(\$this, "details:trimming:sname:" +Str(\$this."trait:trimming:material")+ ":local", 1);            
Set(\$this, "details:trimming:sname:trimming:local", 1);            
            
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1197281358, "slurpeeslurp", "K", 1197281425, "slurpeeslurp", "E", 1197281452, "slurpeeslurp", "E", 1197281531, "slurpeeslurp", "E", 1197281644, "slurpeeslurp", "E", 1197281874, "slurpeeslurp", "E", 1198424930, "slurpeeslurp", "E", 1198424995, "slurpeeslurp", "E", 1198425064, "slurpeeslurp", "E", 1206909607, "slurpeeslurp", "E", 1206909698, "slurpeeslurp", "E", 1206909734, "slurpeeslurp", "E", 1249019006, "slurpeeslurp", "E", 1249019021, "slurpeeslurp", "E", 1249070531, "slurpeeslurp", "E", 1250318839, "slurpeeslurp", "E", 1250318890, "slurpeeslurp", "E", 1250319893, "slurpeeslurp", "E", 1250319902, "slurpeeslurp", "E", 1250319908, "slurpeeslurp", "E", 1250319925, "slurpeeslurp", "E", 1250319988, "slurpeeslurp", "E", 1250320015, "slurpeeslurp", "E", 1250320056, "slurpeeslurp", "E", 1250320173, "slurpeeslurp", "E", 1250320187, "slurpeeslurp", "E", 1250320447, "slurpeeslurp", "E", 1250320451, "slurpeeslurp", "E", 1250320456, "slurpeeslurp", "E", 1250323387, "slurpeeslurp", "E", 1250323423, "slurpeeslurp", "E", 1250323426, "slurpeeslurp", "E", 1250323580, "slurpeeslurp", "E", 1250323589, "slurpeeslurp", "E", 1250323596, "slurpeeslurp", "E", 1250323611, "slurpeeslurp", "E", 1250323650, "slurpeeslurp", "E", 1251412372, "morwenlorelie", "K", 1251412394, "morwenlorelie", "X", 1251412487, "morwenlorelie", "K", 1267837414, "morwenlorelie", "X", 1267837654, "morwenlorelie", "X", 1267993864, "slurpeeslurp", "E", 1267993927, "slurpeeslurp", "E", 1402715719, "slurpeeslurp", "K", 1477612622, "jominey", "E", 1587007252, "heavenlyheather", "K", 1637867250, "ezralee", "E", 1637867298, "ezralee", "E", 1637867304, "ezralee", "E", 1644214183, "ezralee", "K", 1644214282, "ezralee", "E", 1644214318, "ezralee", "E", 1644214515, "ezralee", "K", 1644214645, "ezralee", "E", 1644214783, "ezralee", "X", 1644214806, "ezralee", "E", 1644214822, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
