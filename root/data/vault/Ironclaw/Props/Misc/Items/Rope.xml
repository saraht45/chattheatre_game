<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rope"/>
            <Base:SName sname="coil"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ropes"/>
            <Base:PName pname="coils"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="coil"/>
          <Base:Adjective adjective="coiled"/>
          <Base:Adjective adjective="long"/>
          <Base:Adjective adjective="rope"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             long coil of $(this.trait:color) $(this.trait:material) rope
          </Base:Description>
          <Base:Description type="examine">
             A long coil of $(this.trait:color) $(this.trait:material) rope. {? | $(this.rope:tied) |One end has been tied to <describe what="$(this.rope:tied)"/>.}
          </Base:Description>
          <Base:Description type="look">
             A long coil of $(this.trait:color) $(this.trait:material) rope. {? | $(this.rope:tied) |One end has been tied to <describe what="$(this.rope:tied)"/>.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="waist"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         2400
      </Core:Property>
      <Core:Property property="export:skyclad">1</Core:Property>
      <Core:Property property="export:trait:material">
         "hemp"
      </Core:Property>
      <Core:Property property="export:trait:rope">1</Core:Property>
      <Core:Property property="merry:react-post:untie-dob">
         X[M] /* untie the rope */ 
\$start = NRefOb(\$this."rope:tied"); 
if(\$start) \{ 
 \$coil =  NewNRef(\$start."rope:tied", "default"); 
 \$props = (\{ "rope:first", "rope:second", "rope:third" \}); 
 while(sizeof(\$props)) \{ 
  \$rope = Get(\$start, \$props[0]); 
  if(\$rope) \{ 
   \$rope.firstend = nil; 
   \$rope.secondend = nil; 
   if(\$rope."base:environment") 
    EmitIn(\$rope."base:environment", Describe(NewNRef(\$rope, "default"))+" retracts, and is gathered back into "+Describe(\$coil)+"."); 
   Slay(\$rope); 
  \} 
  \$props -= (\{ \$props[0] \}); 
 \} 
 \$start."rope:tied"."rope:tied" = nil; 
 \$start."rope:tied" = nil; 
\} 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1250997812, "tonyd", "E", 1250997970, "tonyd", "E", 1250997982, "tonyd", "X", 1250999051, "tonyd", "E", 1250999144, "tonyd", "E", 1250999171, "tonyd", "X", 1251011686, "tonyd", "E", 1251014377, "tonyd", "E", 1251014522, "tonyd", "E", 1251014582, "tonyd", "E", 1251014613, "tonyd", "E", 1251014637, "tonyd", "E", 1251014683, "tonyd", "E", 1251014734, "tonyd", "E", 1251014821, "tonyd", "E", 1251014889, "tonyd", "E", 1251014967, "tonyd", "E", 1251015014, "tonyd", "E", 1251020635, "tonyd", "E", 1251030500, "tonyd", "E", 1251031129, "tonyd", "S", 1251244517, "tonyd", "E", 1253773066, "slurpeeslurp", "E", 1253773082, "slurpeeslurp", "E", 1589902722, "sendnoodlez", "X", 1589902744, "sendnoodlez", "K", 1589902752, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
