<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wrap"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wraps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="proof"/>
          <Base:Adjective adjective="water"/>
          <Base:Adjective adjective="waterproof"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) wraps
          </Base:Description>
          <Base:Description type="examine">
             Some wraps made out of $(this.trait:material).
Wraps of these types are typically used by sailors, who wrap them around valuable items. The wraps them protect the items should they be immersed in water.
          </Base:Description>
          <Base:Description type="look">
             Some wraps made out of $(this.trait:material).
Wraps of these types are typically used by sailors, who wrap them around valuable items. The wraps them protect the items should they be immersed in water.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="hands"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:skyclad">1</Core:Property>
      <Core:Property property="export:trait:material">
         "oilskin"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:material" = "oilskin";
      </Core:Property>
      <Core:Property property="merry:react-post:wrap-dob">
         X[M] /* waterproof something */
if(!\$iob \|\| sizeof(\$iob) != 1) return TRUE;
if(\$this."base:environment" != \$actor) return TRUE;

\$target = NRefOb(\$iob[0]);
if(\$target."base:volition") return TRUE;
if(\$target == \$actor."base:environment") return TRUE;

\$target."last:waterproofed" = time();
EmitTo(\$actor, "You stretch "+Describe(\$this, nil, \$actor)+" over "+Describe(\$target, nil, \$actor)+", carefully protecting it from water while the wraps last.");
Slay(\$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:wrap-iob">
         X[M] /* waterproof something */
if(!\$dob \|\| sizeof(\$dob) != 1) return TRUE;
if(\$this."base:environment" != \$actor) return TRUE;

\$target = NRefOb(\$dob[0]);
if(\$target."base:volition") return TRUE;
if(\$target == \$actor."base:environment") return TRUE;

\$target."last:waterproofed" = time();
EmitTo(\$actor, "You stretch "+Describe(\$this, nil, \$actor)+" over "+Describe(\$target, nil, \$actor)+", carefully protecting it from water while the wraps last.");
Slay(\$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1251032002, "tonyd", "E", 1251032023, "tonyd", "E", 1251032066, "tonyd", "E", 1251032093, "tonyd", "E", 1251032278, "tonyd", "P", 1251032341, "tonyd", "P", 1251032407, "tonyd", "P", 1251032441, "tonyd", "P", 1251032482, "tonyd", "P", 1251032518, "tonyd", "P", 1251032543, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
