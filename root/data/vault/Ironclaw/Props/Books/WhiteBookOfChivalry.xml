<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Writing:Books:FabricBook)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="default"/>
          <Base:Adjective adjective="dyer"/>
          <Base:Adjective adjective="leather"/>
          <Base:Adjective adjective="tailor"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="delivery-to">
             Azrael
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#traits[0]">"3"</Core:Property>
      <Core:Property property="#traits[1]">"binding"</Core:Property>
      <Core:Property property="#traits[2]">"color"</Core:Property>
      <Core:Property property="#traits[3]">"symbol"</Core:Property>
      <Core:Property property="base:initialcontents"/>
      <Core:Property property="bilbo:auto:start:0310">
         "set this.trait:editor to \$brief(actor) [\$date] :: set this.zval to \$obj(this.clone).trait:mastermark :: if \$prop(this.zval) \<\> nil then set this.trait:mastermark to \$prop(this.zval)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0320">
         "rem GENERAL EXIT"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0330">
         "if this.isplain \<\> nil then set this.ztemp to \$sam(\<add-adj adjective=\\"plain\\" obj=\\"\$this\\" detail=\\"default\\"/\>)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0340">
         "call bilbo:react:descsub"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0350">
         "set this.isplain to nil :: set this.clone to nil :: set this.ztrait to nil :: set this.zval to nil :: set this.trait:codeobject to nil :: set this.trait:dataobject to nil :: set this.zcode to nil :: set this.zdata to nil :: set this.zcnt to nil :: set this.zmax to nil :: set this.ztemp to nil :: call this.bilbo:react:exitsub"
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:+clone">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:adorn">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:alter">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:altersub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:bind">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:bookgotsub">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:build">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:burn">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:carve">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:cobble">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:descsub">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:dye">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:embellish">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:emboss">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:embroider">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:engrave">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:erase">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:exitsub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:forge">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:gotsub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:howsub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:inscribe">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:inscribesub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:kiss">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:listsub">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:ornament">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:point">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:read">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:recite">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:reset">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:stain">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:tailor">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:teachsub">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:write">
         \<Ironclaw:Lib:Crafting:Books:BookDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:solo:renamed">
         \<Generic:DB:CodeDB\>
      </Core:Property>
      <Core:Property property="export:trait:basematerial">
         "cloth"
      </Core:Property>
      <Core:Property property="export:trait:page00">
         "The White Book of Chivalry\\n\\nBy\\n\\nDame Katrina Reinhardt\\n"
      </Core:Property>
      <Core:Property property="export:trait:page01">
         "In this treatise, we shall consider the nature, ethics and ideals of Chivalry, a subject often preached, yet far more rarely truly considered. \\n\\n  Perhaps the very first thing to understand is that Chivalry is the core of the ideals of nobility. Yes, a Count is surely the better of a Knight, and the Knight owes respect and deference to the Count, particularly if they are of the same House. Yet, there are no ideals or virtues as such related to being a Count, at least not as opposed to being a Baron or a Duke. There are, however, ideals associated with Knighthood and those are worth striving for, even for nobles of higher station.\\n\\n  In this treatise, we shall consider these ideals. However, we should also understand that not all Knights follow them in the same ways and they do not need to be worse Knights for it. A Knight can be a brave warrior or a gentle courtier. They do not live the path of Chivalry in the same way, and will likely disagree on some details. Yet they recognize each other as Knights and they both follow the ideals to be discussed here - though not in exactly the same way.\\n\\n\\nOOC historical note: One of the most famous stories of the middle ages was the Song of Roland, one of Charlemagne’s Knights. However, Roland’s actual rank was that of Marquis - yet it is still a story about the Knightly ideals, valid for all Knights. It is not the story of Marquisal ideals."
      </Core:Property>
      <Core:Property property="export:trait:page02">
         "We shall present the ideals of Chivalry in the form of a simple list:\\n\\n1) Loyalty\\n2) Forbearance\\n3) Courtesy\\n4) Franchise\\n5) Largess\\n6) Stewardship\\n7) Honour\\n\\n  Then we shall proceed to discuss these ideals and their meaning in some detail, as well as what makes them important to Knighthood.\\n"
      </Core:Property>
      <Core:Property property="export:trait:page03">
         "Loyalty\\n\\nLoyalty is the most important virtue for Chivalry and indeed for nobility. Without loyalty, there can be no Knights. A Knight is someone who serves a Lord and a House. If you do not serve, you are not a Knight. (OOC: The word Knight actually comes from a German word meaning 'boy', referring to someone who serves. Compare to the Japanese word 'Samurai', which also means someone who serves.) \\n\\n  To understand why loyalty is so important, you must understand its role in feudal society. Feudal society rests on a principle of “land for service.” The King gives land to the Duke in return for service. The Duke gives land to the Count in return for service and the Count to his vassal Knights. This land is a permanent thing and can only be trusted to someone whose loyalty is as permanent as the land itself - as opposed to the crass coins of the commoners, which quickly change hands. If you could not expect loyalty to Lord and House in return for the grand of land, feudal society would be impossible. The land would simply be taken without gratitude and as such, there would be no reason to grant it. \\n\\n  This loyalty entails obedience to your House and your Lord. Your Lord is your immediate benefactor and deserves your respect and obedience. Furthermore, your House is ultimately the reason for your Lord’s own gifts to yourself. Thus, all nobles of your House deserve your respect and deference. However, they do not necessarily deserve your obedience. Your Lord deserves it, as does his Lord. The Knight who serves a Baron, who serves a Count, must obey the Count his Baron serves, but not some other Count, unless said Count has some other claim to the obedience of the Knight - such as being their military commander or in some other position of authority. The Knight DOES owe the other Count respect and deference, however, and is disloyal to his own Lord and House if he does not show it. After all, if you can disrespect another Count, others may disrespect your Lord as well. Furthermore, disrespecting another superior noble will likely make that noble an enemy of your Lord, if your Lord does not punish you. As such, attacking a superior is in some ways equivalent to attacking your own Lord.\\n\\nOOC note: There are NO respected rebels in feudal society. Literally none. They are all, without any exception whatsoever, considered to be ungrateful, disrespectful traitors, despised by everyone who is even pretending to be honourable. Rebellion does occur, of course, but being disrespectful of established authority as such is utterly despicable in feudal society. Rebellion would involve replacing an evil authority figure with a good authority figure, but not questioning whether authority is a good thing. The entire society rests on loyalty to higher power and disrespect for power and authority is an attack on everything society is based on.\\n"
      </Core:Property>
      <Core:Property property="export:trait:page04">
         "Forbearance\\n\\nForbearance includes many things. Self-control, patience, mercy and restraint. A Knight is not governed by anger, lust or immediate whims, but by himself. \\n\\n  To understand why this is very important, consider the Knight’s role in service to a higher Lord. Service is not pleasant. When you serve a Lord, it happens on his terms. This entails unpleasantness, sometimes even humiliations. It is often said that a Knight who faithfully serves a wicked Lord is better than the one who serves a Lord who is just and fair. For the Knight who serves a fair Lord has a much easier time doing so than someone who does not. As such, a Knight must be able to stoically bear the burdens of service.\\n\\n  Furthermore, this is a wicked world, where people are called to make harsh sacrifices. A Knight, who is entrusted with authority and command, must be able to do so with self-control and restraint. They must be able to employ the tactics of the scorched earth, when the situation commands it. They must be harsh and without pity, when such is required of their service. As such, they must be able to inflict pain on themselves and others, even those who are innocent, if such is required by duty.\\n\\n  On the other hand, a Knight should not be cruel or act in anger. A Knight must be able to temper their compassion, but they should neither break it or abandon it. A Knight can certainly be merciful. A Knight should be able to restrain themselves, when they feel that they are acting in anger and instead follow the demands of justice. Even when punishing the guilty and fully deserving, a Knight should conduct themselves with restraint. Punishment there should be and no matter how harsh the punishment, it should not be meted out in anger.\\n\\n\\nOOC note: The feudal world placed great importance on the ability to basically suck it up. Everyone knows that the world is a very harsh place and if you are to be a Knight, you must be able to deal with it. Violence and injustice are everywhere. As a Knight, you are at the bottom of a pecking order and you EXPECT it to hurt sometimes. And also, you must be able to inflict greater hurt on other people as part of your duties. In the game world, people are hung or maimed for minor acts of theft caused by starvation and its the job of nobles to enforce this. You can't be thin-skinned and a Knight. You must be able to take and dish out pain. "
      </Core:Property>
      <Core:Property property="export:trait:page05">
         "Courtesy\\n\\nCourtesy is acting in such a way that your deeds give beauty and grace to Knighthood, your Lord, your House and yourself. While a strong and tough warrior is certainly an assent to any Lord, they do not provide grace to the Lord or his House.\\n\\n  The appreciation of beauty is the markings of a higher spirit, as opposed to the rough pleasures of the commoners. Thus, acting in a manner which uplifts yourself and others through grace is of great importance. \\n\\n  It is also very important to act in a graceful and proper manner because your every action reflects on your Lord and your House. If a Knight acts in a boorish manner, it can make enemies for his Lord. It can also disgrace your Lord, who made such a boorish person, whose actions are more suitable for a commoner, into a Knight.\\n\\nOOC note: The IC rules for courtesy are much more Victorian than Renaissance. Actual Renaissance manners would shock a modern sailor. The game is based on a romanticized version of the era. However, courtesy was important, even if they had different standards back then, and constantly stressed in its importance.\\n"
      </Core:Property>
      <Core:Property property="export:trait:page06">
         "Franchise\\n\\nFranchise is the virtue of being free and behaving as a free person. The foolish do not understand how this may be, since Knighthood is service to a Lord and a House. How can service and freedom be combined? In reality, the answer to this should be obvious - the Knight chooses to serve. Because his service comes from his own free will, through the virtue of loyalty, it means that the Knight can be entrusted with far more than a mere commoner.\\n\\n  Those who follow the virtue of franchise are said to be frank. They are unafraid, forthright and dignified. They do not fear to speak the truth and do not bow and scrape before their betters. If a command is barked, they do not jump, cower or cringe as if they were a serf. Note that this does not mean that they should be disrespectful or disobedient - the frank person is respectful, courteous and loyal, but not a servile, cringing toady. The difference between the lowest household Knight and the greatest and most powerful Duke is miniscule compared to the difference between the Knight and the commoner. As such, no true Knight acts in an overly servile manner.\\n\\n  Again, those who do not understand the Knightly virtues may ask what the difference between a freeman commoner and a frank person is. A freeman commoner is free from direct servile bonds, but is certainly not free to behave as a Knight would towards a high noble. Nor will he act with the dignity and self-assurance that a frank Knight would. The closest thing a commoner can be to being free is to be free from bonds, for the services of commoners are obtained through constraints. \\n\\n\\nOOC note: A modern person may be confused at how a social status - that of being free - can be considered a moral virtue. We are used to the idea of an ordinary farmer being able to be a good and honourable man, who could certainly be a more moral person than a Senator. However, for Renaissance people there is morality associated with social status. There is holiness associated with merely BEING a priest and there is honour associated with being of Noble rank. At the same time, there is dishonour and servility(at least as seen from the higher reaches of society) with being a peasant or a hairdresser. In fact, as late as 1790, one of the more progressive members of the British Parliament, Edmund Burke, a man sympathetic to the American Revolution, attacked the idea that being a hairdresser or tallow-maker was an honourable thing - after all, they were servile occupations \\n"
      </Core:Property>
      <Core:Property property="export:trait:page07">
         "Largess\\n\\nA Knight should be a generous person. A miserly Knight who counts every denarii shames himself and his fellows. The meaning behind this is partly that a Knight directs his attention to higher pursuits and shows disdain for the material. And partly, a Knight must be a provider for those beneath him. \\n\\n  Thus, it is unseemly that a Knight should care overmuch for the material. He gives it away when it can cause joy or succor. Again, this is opposed to the baser concerns of common people, who are bound to the material and thus must be motivated through constant reward (pay) or constraint (the legal restrictions on serfs, for instance). A Knight may enjoy luxuries and pleasure, of course, but he should not be truly attached to it. This is the true source of his largess. \\n\\n  Another source of largess is the fact that the Knight is entrusted with the leadership of people whose base condition forces them to be concerned with the material. They are in need of the bounty that a Knight can provide in form of sustenance and aid. Since a Knight is called to provide material goods for others, it is obvious that a Knight cannot be too attached to them himself. \\n\\n\\nOOC note: Part of the reason that nobility should be generous was that they attracted loyalty of others through it. Give someone a gift, and they are indebted to you and you have claims to their loyalty, unless they can give you gifts of equal value. If you give someone gifts and they cannot reciprocate with gifts of equal or greater value, they are admitting their inferiority. Also, in feudal society, the state is far weaker. No-one expects the rule of law and no-one expects wellfare from any institution - they hope for it from specific people. Part of the role of nobility and Church is to provide services we today associate with the state - law, peace, culture, education, hospitals, alms and other forms of help for the poor. In fact, the very words 'Lord' and 'Lady' originate in words for those who give you and make you bread, respectively - ie. your providers.\\n\\n\\n"
      </Core:Property>
      <Core:Property property="export:trait:page08">
         "Stewardship\\n\\nA Knight must stand ready to be entrusted with responsibility over lands and people. They must be good stewards of both. The land must be protected and developed. The people depend on the Knight for justice and guidance. To be aware of these responsibilities is the essence of the virtue of stewardship.\\n\\n  A Knight protects the weak, especially those who are entrusted to him. Thus, a Knight must judge fairly and prudently, when cases are brought before him. A Knight protects the land he is entrusted and its people. He is aware that his higher station and degree of honour gives him the responsibility to protect and guide those who are beneath him. \\n\\n  In short, stewardship combines justice, wisdom, good governance and responsibility to the people and the duties entrusted to the Knight.\\n\\nOOC: Stewardship was not explicitly a virtue of the era. The above was more often clothed in Biblical terms, where the feudal Lord is the provider and shepherd of his people, often compared to King David from the Bible, who was also a shepherd. The religious aspect of Chivalry are difficult to recreate in-game and hence neglected here.\\n"
      </Core:Property>
      <Core:Property property="export:trait:page09">
         "Honour\\n\\nHonour is the commitment and constant striving for all the previously-mentioned ideals. It is magnanimity of soul and scorn for all things base. A true Knight pursues honour and regards the loss of it as worse than anything.\\n\\n  It should be understood that honour can be tarnished, even though the Knight acted as best as he could. For example, loyalty may conflict with forbearance if a Knight, in order to obey his Lord, must perform brutal actions. Different loyalties, such as loyalty to Lord, faith and family, may also conflict. This is the source of many a story of Knightly tragedy, where ideals conflicted and a Knight had to choose. The Knight is emphatically NOT absolved for betraying his Lord for his family or vice-versa. If a Knight MUST choose between such, their honour is tarnished, whatever they do. The same for the Knight who must be cruel in the service to his Lord. This does not mean that such a Knight becomes honourless. Even the greatest of Knights can be forced into such a situation. \\n\\n  Having your honour tarnished is not the same as losing honour. If honour is lost, you are utterly undeserving of being a Knight. But all Knights make mistakes - act in anger, become greedy or neglect their duties. As long as one truly strives to follow the precepts of honour, one is worthy of being a Knight. Some actions, however, such as betraying your Lord for money or any other truly heinous act, is unforgivable, no matter the other actions of the Knight. \\n\\n  In short, honour is the combination of all the other virtues. A true Knight is respectful and deferential to their superiors - the virtue of loyalty, but not servile, the virtue of franchise. Erring too much in either direction would be dishonourable.\\n\\n  It is the responsibility of a Knight to protect his honour. A Knight should act honourably and avoid dishonourable actions. At the same time, he should not accept insults to his honour or to the honour of his Fellow Knights or the Nobility. Forebearance is a virtue, but that is not the same as meekly accepting of insults to their honour or that of his House. Or even, to a lesser degree that of Knights and Nobles of other Houses. When Nobility and honour as such is attacked, all good Knights stand together.\\n\\nOOC note: Note the point about there sometimes not being any choice that doesn't condemn you. Classical and medieval litterature was filled with heroes who had to make a choice between, say, family and social obligations. And no matter what you choose, you must suffer for it, as decreed by fate. This is the basis for the concept of the tragic hero, very popular in the feudal era, since people knew well the meaning of conflicting duties. This is another reason for the importance of being able to suck it up (see foreberance). However, being a doormat who accepts all insults, especially from those of lower rank, is also totally unacceptable.\\n"
      </Core:Property>
      <Core:Property property="export:trait:pagecnt">
         "16"
      </Core:Property>
      <Core:Property property="generic">"true"</Core:Property>
      <Core:Property property="lastwriter">
         "Dame Katrina"
      </Core:Property>
      <Core:Property property="lastwritetime">
         1470566705
      </Core:Property>
      <Core:Property property="misc:lastdropped">
         "1470783845 Dame Katrina[maegovannen]"
      </Core:Property>
      <Core:Property property="nip:courier:timestamp">
         1481296213
      </Core:Property>
      <Core:Property property="nip:delivery:recipient">
         \<Chatters:AE:az:azrael\>
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1488163610, "tonyd", "E", 1488165776, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:binding">"none"</Core:Property>
      <Core:Property property="trait:binding:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:binding:expert">
         "Bookbinder"
      </Core:Property>
      <Core:Property property="trait:brief">
         "white book"
      </Core:Property>
      <Core:Property property="trait:color">"white"</Core:Property>
      <Core:Property property="trait:color:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:color:expert">
         "Dyer"
      </Core:Property>
      <Core:Property property="trait:default-skill">
         "Bookbinder"
      </Core:Property>
      <Core:Property property="trait:default-skillverb">
         "bind"
      </Core:Property>
      <Core:Property property="trait:desc-version">
         "1"
      </Core:Property>
      <Core:Property property="trait:design">"none"</Core:Property>
      <Core:Property property="trait:design:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:design:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:editor">
         "nobody"
      </Core:Property>
      <Core:Property property="trait:examine">
         "A white book of 16 pages."
      </Core:Property>
      <Core:Property property="trait:fit">"none"</Core:Property>
      <Core:Property property="trait:fit:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:fit:expert">
         "Tailor"
      </Core:Property>
      <Core:Property property="trait:inscription">
         "none"
      </Core:Property>
      <Core:Property property="trait:isare">"is"</Core:Property>
      <Core:Property property="trait:look">
         "A white book."
      </Core:Property>
      <Core:Property property="trait:madeby">
         "Katrina"
      </Core:Property>
      <Core:Property property="trait:madeby:account">
         "maegovannen"
      </Core:Property>
      <Core:Property property="trait:madeby:object">
         \<Chatters:AE:ka:katrina\>
      </Core:Property>
      <Core:Property property="trait:material">
         "leather"
      </Core:Property>
      <Core:Property property="trait:material:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:material:expert">
         "Tailor"
      </Core:Property>
      <Core:Property property="trait:metal">"none"</Core:Property>
      <Core:Property property="trait:metal:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:metal:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:quality">5</Core:Property>
      <Core:Property property="trait:shape">"none"</Core:Property>
      <Core:Property property="trait:shape:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:shape:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1470351091
      </Core:Property>
      <Core:Property property="trait:stone">"none"</Core:Property>
      <Core:Property property="trait:stone:detail">
         "default"
      </Core:Property>
      <Core:Property property="trait:stone:expert">
         "Jeweler"
      </Core:Property>
      <Core:Property property="trait:superbrief">
         "book"
      </Core:Property>
      <Core:Property property="trait:symbol">"none"</Core:Property>
      <Core:Property property="trait:symbol:detail">
         "pattern"
      </Core:Property>
      <Core:Property property="trait:symbol:expert">
         "Embosser"
      </Core:Property>
      <Core:Property property="trait:symboladj">
         "embossed"
      </Core:Property>
      <Core:Property property="trait:symboltype">
         "embossing"
      </Core:Property>
      <Core:Property property="trait:textloc">"this"</Core:Property>
      <Core:Property property="writable">"true"</Core:Property>
      <Core:Property property="zdetail">"default"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
