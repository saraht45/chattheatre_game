<object clone="/obj/properties" owner="slurpeeslurp">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="event:start">
         ([ "incidents":(\{ "defend", "luck", "defend", "defend_archers", "maddash", "attack", "attack_1", "attack_2", "attack_3", "attack_1", "attack_2", "attack_3", "attacked_by_boss", "attacked_by_boss" \}), "variables":([ "enemy_pirate_tokens":500, "enemy_tokens":500, "friendly_healer_tokens":0, "friendly_soldier_tokens":500 ]) ])
      </Core:Property>
      <Core:Property property="merry:lib:attack">
         X[M] /* an incident during the event */
string output, response;
if(!\$stage) error("No \$stage data passed for incident.");
if(\$stage == "conditions") \{
  if(\$role != "healer") return TRUE;
  return FALSE;
/* setting up rolls */
\} else if(\$stage == "test") \{
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon, "combat:precision"\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;
  return TRUE;
/* character's success */
\} else if(\$stage == "pass") \{
  \$enemy_tokens -= 50;
 return capitalize(Describe(\$char))+" spots a "+\$Fianna+", who is distanced from "+oneof("her clan", "the other fighters", "her comrades", "her allies")+", and "+oneof("charges", "attacks", "takes advantage of the opportunity")+". "+capitalize(Describe(\$char))+" "+oneof("guts him with ease", "slices - quickly and efficiently, killing her", "strikes true and hard, knocking the "+\$Fianna+" out of the fight", "effectively disposes of the "+\$Fianna, "kills the "+\$Fianna+" "+oneof("swiftly", "with ease", "without difficulty", "without a second thought", "rapidly", "due to some lucky coincidences"), "beats the "+\$Fianna+" "+oneof("half dead", "senseless", "unconscious") )+".\<br/\>";
/* failure of character */
\} else if(\$stage == "fail") \{
/* if there is enough tokens to save the person */
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));
  if(response) \{
    output = capitalize(Describe(\$char))+" "+oneof("pushes forward into the thick of battle", "chases after a "+\$Fianna, "presses forward, fighting with a "+\$Fianna, "fights Phelan left and right", "zealously participates in the battle", "vigorously cuts through masses of enemies", "tries to corner a Phelan", "dashes through the battle to get to the selected enemy")+oneof(", before realizing "+\$char."base:pronoun"+" is cut off from "+\$char."base:possessive"+oneof(" allies", " friends", "associates"), ", unfortunately the ebb and flow of the fight leaves "+\$char."base:objective"+oneof(" stranded amongst enemies"," surrounded by menacing Phelan warriors", " alone amidst a group of enemy fighters", " behind enemy lines", " all alone in the company of bloodthirsty Phelan") )+". "+response;
    return output;
  \}
/* if there is not enough token to save the char */
  output = capitalize(Describe(\$char))+" "+oneof("pushes forward into the thick of battle", "chases after a "+\$Fianna, "presses forward, fighting with a "+\$Fianna, "fights Phelan left and right", "zealously participates in the battle", "vigorously cuts through masses of enemies", "tries to corner a Phelan druid", "dashes through the battle to get to the selected enemy")+" where, surrounded by enemies, a "+\$Fianna+" "+oneof("cuts "+\$char."base:objective"+" down with", "strikes "+\$char."base:objective"+" with", "lands a blow with")+" a "+oneof("cutlass", "dagger", "dirk", "knife", "sword")+oneof(". The weapon pierces", ", leaving a nasty cut across")+" "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+". "+capitalize(Describe(\$char))+" falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";
  ::remove_pc();
  return output;
\}
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_1">
         X[M] /* an incident during the event */
string output, response;
if(!\$stage) error("No \$stage data passed for incident.");
if(\$stage == "conditions") \{
  if(\$role != "healer") return TRUE;
  return FALSE;
/* setting up rolls */
\} else if(\$stage == "test") \{
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon, "combat:precision"\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;
  return TRUE;
/* character's success */
\} else if(\$stage == "pass") \{
  \$enemy_tokens -= 50;
return capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "drives the weapon at")+" a "+\$druid+", who is cut off from "+oneof("his companions", "the other fighters", "his comrades", "his allies", "the other Phelan")+", and "+oneof("charges", "attacks", "takes advantage of the opportunity")+". "+capitalize(Describe(\$char))+" "+oneof("guts him with ease", "slices - quickly and efficiently, and kills the Phelan", "strikes true and hard, knocking the "+\$druid+" out of the fight", "effectively disposes of the "+\$druid, "kills the "+\$druid+" "+oneof("swiftly", "with ease", "without difficulty", "with no hesitation before stepping into battle once more", "rapidly", "due to some lucky coincidences"), "beats the "+\$druid+" "+oneof("half dead", "senseless", "unconscious") )+".\<br/\>";
/* failure of character */
\} else if(\$stage == "fail") \{
/* if there is enough tokens to save the person */
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));
  if(response) \{
    output = capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "barrels toward")+" a "+\$Phelan+". Swinging "+\$char."base:possessive"+" weapon, "+\$char."base:pronoun"+" misses and takes a blow to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "left thigh", "right thigh", "waist", "ribs", "lower back", "back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(Describe(\$char))+"staggers backwardly, clasping a hand to the "+oneof("deep", "massive", "shallow", "ugly", "jagged", "scratch of a", "minor", "gaping", "nasty", "serious", "barely noticeable", "perfunctory")+" wound."+response;
    return output;
  \}
/* if there is not enough token to save the char */
  output = capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "barrels toward")+" a "+\$Phelan+". Swinging "+\$char."base:possessive"+" weapon, "+\$char."base:pronoun"+" misses and takes a blow to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "left thigh", "right thigh", "waist", "ribs", "lower back", "back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(Describe(\$char))+" staggers backwardly, clasping a hand to the "+oneof("deep", "massive", "surprisingly large", "bleeding", "ugly", "jagged", "gaping", "nasty", "serious", "barely noticeable", "perfunctory")+" wound. "+capitalize(Describe(\$char))+" eventually falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";
  ::remove_pc();
  return output;
\}
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_2">
         X[M] /* an incident during the event */
string output, response;
if(!\$stage) error("No \$stage data passed for incident.");
if(\$stage == "conditions") \{
  if(\$role != "healer") return TRUE;
  return FALSE;
/* setting up rolls */
\} else if(\$stage == "test") \{
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon, "combat:precision"\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;
  return TRUE;
/* character's success */
\} else if(\$stage == "pass") \{
  \$enemy_tokens -= 50;
  return capitalize(Describe(\$char))+" "+oneof("scans", "browses", "contemplates", "examines", "glances at", "surveys", "skims", "sizes up", "takes a long gander at", "assesses")+" the "+oneof("group", "assembly", "band", "batch", "bundle", "cluster", "clutch", "collection", "gathering", "party", "pack", "clan")+" of surrounding "+oneof("enemies", "adversaries", "foes", "fiends", "saboteurs", "rivals", "villains")+ " before exclusively singling out a "+\$Fianna+". "+capitalize(Describe(\$char))+" "+oneof("advances", "progresses", "heads", "steps", "quickly moves")+" toward the target, "+oneof("deflecting", "averting", "keeping away from", "evading")+" any side "+oneof("battles", "fights", "skirmishes", "attacks")+"."+capitalize(\$char."base:pronoun")+" "+oneof("swiftly", "quickly", "abruptly", "fleet-footedly", "nimbly", "promptly", "rapidly", "readily", "speedily")+" reaches the enemy and "+oneof("bashes in the "+\$Fianna+"'s face with a single blow", "breaks the "+\$Fianna+"'s ribs with a crushing swing", "disables the "+\$Fianna+"'s legs with severe wounds to both knees", "knocks the "+\$Fianna+" unconscious with a knuckle sandwich", "strikes at pressure points until the "+\$Fianna+" surrenders", "uppercuts the "+\$Fianna+"'s jaw, sending him reeling toward the ground", "blindsides the "+\$Fianna+", sending him toppling to the ground where he hits his head quite roughly", "gouges the "+\$Fianna+"'s neck with a sharp weapon, sending blood spilling forth")+".\<br/\>";

/* failure of character */
\} else if(\$stage == "fail") \{
/* if there is enough tokens to save the person */
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));
  if(response) \{
    output = capitalize(Describe(\$char))+" "+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "failingly")+" "+oneof("attempts", "endeavors", "ventures", "tries")+" to attack a  "+\$druid+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back", "counters the movement")+" casting a "+oneof("powerful ice spell", "minor fire spell", "impressive ice spell", "forceful fireball")+" with "+oneof("chanted words", "fluid hand movements", "a flick of his wrist", "a wiggle of his finger")+" "+oneof("directly at", "aimed at", "against")+capitalize(Describe(\$char))+"'s "+oneof("throat", "chest", "head", "heart", "stomach", "face")+"."+response;
    return output;
  \}
/* if there is not enough token to save the char */
      output = capitalize(Describe(\$char))+" "+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "failingly")+" "+oneof("attempts", "endeavors", "ventures", "tries")+" to attack a  "+\$druid+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back", "counters the movement")+" casting a "+oneof("powerful ice spell", "minor fire spell", "impressive ice spell", "forceful fireball")+" with "+oneof("chanted words", "fluid hand movements", "a flick of his wrist", "a wiggle of his finger")+" "+oneof("directly at", "aimed at", "against")+capitalize(Describe(\$char))+"'s "+oneof("throat", "chest", "head", "heart", "stomach", "face")+"."+capitalize(Describe(\$char))+" slowly falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";
  ::remove_pc();
  return output;
\}
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_3">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
/* setting up rolls */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"mental:observation"\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* character's success */   
\} else if(\$stage == "pass") \{    
  \$enemy_tokens -= 20;    
   
  return capitalize(Describe(\$char))+" "+oneof("spots", "catches sight of", "detects", "discovers", "espies", "locates", "picks out")+" a "+\$Phelan+" who is "+oneof("away from", "cut off from", "disassociated with", "excluded from", "free of", "independent of", "isolated from", "separated from", "to one side of")+" the main "+oneof("group", "batch", "bunch", "bundle", "cluster", "clutch", "company", "gang", "pack")+" and "+oneof("sneaks closer before attacking", "catches the "+\$Phelan+" off guard", "prowls stealthily toward the subject", "aggressively rushes forward", "takes the offensive, ambushing the "+\$Phelan+" from behind", "charges forward thoughtlessly, ramming into the "+\$Phelan+"'s body")+". "+capitalize(Describe(\$char))+" "+oneof(" mercilessly "+oneof("assaults", "beats upon", "strikes", "wallops", "abuses")+" the "+\$Phelan+" to the point of knocking him out cold", " makes a precision attack, "+oneof("cutting", "slicing", "stabbing", "puncturing", "horribly wounding")+" the "+oneof("neck", "heart", "vital organs", "lower back")+" of the "+\$Phelan+" and disabling him from further combat", "manages to "+oneof("overthrow", "overpower", "conquer", "crush", "eradicate", "exterminate", "terminate", "vanquish")+" the "+\$Phelan+" before moving on to the next "+oneof("adversary", "opponent", "enemy", "foe", "rival"), " "+oneof("crashes", "tumbles", "falls", "topples to the ground")+" with the "+\$Phelan+", but quickly gains the upper-hand and "+oneof("strangles", "chokes", "asphyxiates", "throttles")+" the "+\$Phelan+" until no "+oneof("breath", "air", "life", "oxygen")+" remains", " bashes the "+\$Phelan+" upside the head, leaving him "+oneof("unconscious", "lying in the mud", "helpless, in a pool of his own blood", "senseless and dazed", "blabbering about 'Mother'", "half-dead on the side of the road", "with countless broken bones", "in an extreme amount of pain and confusion"))+".\<br/\>";    
   
/* failure of character */   
\} else if(\$stage == "fail") \{    
/* if there is enough tokens to save the person */   
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
   
    output = oneof("A small group", "Three", "A party", "A cluster")+" of "+oneof("Phelan", "druids", "warriors", "Fianna")+" "+oneof("armed with the finest of weapons", "wielding their fists", "avoiding the main of the fight", "preparing to ambush your party")+" is "+oneof("surprised", "pleased", "emboldened")+", when "+capitalize(Describe(\$char))+" unluckily "+oneof("leaps into their midst", "backs into the cluster while trying to catch "+\$char."base:possessive"+" breath", "tries to fight them on solo", "comes running at them with weapon held high")+". "+oneof("Numbers trump skill", "Two of the foes distract "+capitalize(Describe(\$char)), capitalize(Describe(\$char))+" is overwhelmed by the mass of bodies", "Fighting dishonorably two of the them grapple "+capitalize(Describe(\$char))+"'s weapon arm")+" and create an opening for one of the Phelan to strike "+capitalize(Describe(\$char))+" a "+oneof("deep", "shallow", "ugly", "jagged", "scratch of a", "minor", "gaping", "barely noticeable", "perfunctory", "serious", "massive", "sizable", "impressive")+" wound to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "right elbow", "left elbow", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "right knee", "left knee", "left ankle", "right ankle", "left foot", "right foot")+". They are driven off by the press of fighting, but not before they "+oneof("kick "+capitalize(Describe(\$char))+" in the belly", "mock "+capitalize(Describe(\$char))+" with taunts", "tell "+capitalize(Describe(\$char))+" what they plan to do to "+\$char."base:possessive"+" friends", "drive "+capitalize(Describe(\$char))+" to the ground briefly with a solid blow to the jaw")+". "+response;    
    return output;    
  \}    
/* if there is not enough token to save the char */   
    output = oneof("A small group", "Three", "A party", "A cluster")+" of "+oneof("Phelan", "druids", "warriors", "Fianna")+" "+oneof("armed with the finest of weapons", "wielding their fists", "avoiding the main of the fight", "preparing to ambush your party")+" is "+oneof("surprised", "pleased", "emboldened")+", when "+capitalize(Describe(\$char))+" unluckily "+oneof("leaps into their midst", "backs into the cluster while trying to catch "+\$char."base:possessive"+" breath", "tries to fight them on solo", "comes running at them with weapon held high")+". "+oneof("Numbers trump skill", "Two of the foes distract "+capitalize(Describe(\$char)), capitalize(Describe(\$char))+" is overwhelmed by the mass of bodies", "Fighting dishonorably two of the them grapple "+capitalize(Describe(\$char))+"'s weapon arm")+" and create an opening for one of the Phelan to strike "+capitalize(Describe(\$char))+" a "+oneof("deep", "shallow", "ugly", "jagged", "scratch of a", "minor", "gaping", "barely noticeable", "perfunctory", "serious", "massive", "sizable", "impressive")+" wound to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "right elbow", "left elbow", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "right knee", "left knee", "left ankle", "right ankle", "left foot", "right foot")+". They are driven off by the press of fighting, but not before they "+oneof("kick "+capitalize(Describe(\$char))+" in the belly", "mock "+capitalize(Describe(\$char))+" with taunts", "tell "+capitalize(Describe(\$char))+" what they plan to do to "+\$char."base:possessive"+" friends", "drive "+capitalize(Describe(\$char))+" to the ground briefly with a solid blow to the jaw")+". It was too much, "+capitalize(Describe(\$char))+" lands on the ground, and stays there.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attacked_by_boss">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "dueler") return FALSE;    
  return TRUE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:dodge", "combat:parry", "combat:shield"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  \$pirate = "Big Bad Bandit Boss";    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$enemy_tokens -= 60;    
  \$Phelan = "Queen Morfessa's High Guard";    
  return oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with Queen Morfessa's High Guard.", "Nimbly stepping past other combatants, Queen Morfessa's High Guard issues a loud challenge to "+capitalize(Describe(\$char))+".")+" "+oneof("A colossal flurry of attacks commence, but "+capitalize(Describe(\$char))+" is able to fend off the enemy for now.", "Ducking and weaving, "+capitalize(Describe(\$char))+" manages to thwart all attempts to do any bodily harm.", capitalize(Describe(\$char))+" just barely manages to avoid any serious injury at the hands of Queen Morfessa's High Guard.")+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  \$Phelan = "captain";    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with Queen Morfessa's High Guard.", "Nimbly stepping past other combatants, Queen Morfessa's High Guard issues a loud challenge to "+capitalize(Describe(\$char))+".")+" Queen Morfessa's High Guard "+oneof("cuts "+\$char."base:objective"+" down with", "strikes "+\$char."base:objective"+" with", "lands a blow with")+" her hardened steel spear"+oneof(". The weapon precisely pierces its target, leaving a nasty cut across")+" "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+"."+response;    
    return output;    
  \}    
  output = oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with Queen Morfessa's High Guard.", "Nimbly stepping past other combatants, Queen Morfessa's High Guard issues a loud challenge to "+capitalize(Describe(\$char))+".")+" Queen Morfessa's High Guard effortlessly strikes down "+capitalize(Describe(\$char))+".\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defend">
         X[M] /* an incident during the event */
string output, response;
if(!\$stage) error("No \$stage data passed for incident.");
if(\$stage == "conditions") \{
  return TRUE;
/* decide who wins */
\} else if(\$stage == "test") \{
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:dodge", "combat:parry", "combat:shield"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;
  return TRUE;
/* char won */
\} else if(\$stage == "pass") \{
  \$enemy_tokens -= 50;
  return "A "+\$Phelan+" charges at "+Describe(\$char)+", "+oneof("brandishing a", "handling a", "with a raised", "aiming a")+" "+oneof("club", "spear", "gun", "fishing knife", "staff", "arrowhead dagger")+". "+capitalize(Describe(\$char))+" "+oneof("manages to step hurriedly aside", "avoids the attacker, trusting that an ally can cut it down", "sidesteps the attack, then watches in amusement as the "+\$Phelan+" continues charging, and trips over his own feet", "ducks in time to avoid the incoming attack and swiftly returns the favor", "dodges the attack light-footedly")+".\<br/\>";
/* char lost, but enough token to save him */
\} else if(\$stage == "fail") \{
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));
  if(response) \{
    output = "A "+\$Phelan+" charges at "+Describe(\$char)+", "+oneof("brandishing a", "handling a", "with a raised", "aiming a")+" "+oneof("club", "spear", "gun", "fishing knife", "staff", "arrowhead dagger")+oneof(", and backs "+capitalize(Describe(\$char))+" against a nearby building.", "pushes "+capitalize(Describe(\$char))+" into a group of enemies.", ", guides "+capitalize(Describe(\$char))+" from safety.", ", he manages to corner "+capitalize(Describe(\$char))+oneof(" with great ease", " with considerable difficultly", " with guided movements", " with smoothness polished by many years of training", " with quite some amount of luck", ". The gods seem to favor your enemy today."))+response;
    return output;
  \}
/* char lost, not enough token to save him */
  output = "A "+\$Phelan+" charges at "+Describe(\$char)+", "+oneof("brandishing a", "handling a", "with a raised", "aiming a")+" "+oneof("club", "spear", "gun", "fishing knife", "staff", "arrowhead dagger")+", and "+oneof("horribly", "terribly", "mortally")+" wounds "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest", "neck")+". "+capitalize(Describe(\$char))+" falls to the floor, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";
  ::remove_pc();
  return output;
\}
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defend_archers">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  return TRUE;    
/* decide who wins */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:shield"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* char won */   
\} else if(\$stage == "pass") \{    
  \$enemy_tokens -= 50;    
  return capitalize(Describe(\$char))+" "+oneof("half-heartedly", "watchfully", "alertly",  "carefully", "effectively", "smartly", "closely", "skilfully")+" "+oneof("attacks", "struggles with", "wrestles with", "fights", "battles", "brawls with", "clashes with", "assaults", "wrangles")+" a "+\$Phelan+", when something "+oneof("captures", "wakes", "draws", "invites")+\$char."base:possessive"+oneof("attention", "focus", "gaze")+" "+oneof("on the roof of the Academy", "in some distant trees", "in the distant woods", "from behind some buildings", "behind "+\$char."base:possessive"+" opponent", "on the roof of the armory")+". "+capitalize(Describe(\$char))+" "+oneof("spots", "notices", "takes note", "pinpoints", "catches sight of", "detects", "discovers", "espies", "locates", "tracks")+ " a "+oneof("hidden",  "concealed", "hard-to-see", "covert", "camouflaged", "secret")+ " "+oneof("camp of archers", "group of archers", "set of archers", "nest of archers")+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+" the ground, but one manages to strike a "+\$Phelan+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". ";    
   
/* char lost, but enough token to save him */   
\} else if(\$stage == "fail") \{    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "failingly")+" "+oneof("attempts", "endeavors", "ventures", "tries")+" to attack a "+\$Phelan+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+" the ground, but one manages to strike "+(Describe(\$char))+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+response;    
    return output;    
  \}    
/* char lost, not enough token to save him */   
  output =     output = capitalize(Describe(\$char))+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "failingly")+" "+oneof("attempts", "endeavors", "ventures", "tries")+" to attack a "+\$pirate+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+(Describe(\$char))+" the most fatal one manages to strike "+\$char."base:objective"+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(\$char."base:pronoun")+" falls to the floor, bleeding and unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defending">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  /* there needs to be a fighter in the group */    
  \$list = copy(\$battle.pcs);    
  \$newchar = nil;    
  while(!\$newchar \&\& sizeof(\$list)) \{    
    \$i = random(sizeof(\$list));    
    if(\$list[\$i][1] == "fighter" \&\& \$list[\$i][0] != \$char) \{    
      \$newchar = \$list[\$i][0];    
      \$newchar_favorite_weapon = \$list[\$i][2];    
    \} else \{    
      \$list -= (\{ \$list[\$i] \});    
    \}    
  \}    
  if(\$newchar) return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$newchar, \$skills: (\{\$newchar_favorite_weapon, "combat:precision"\}), \$bonus: \$char."trait:body") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  return " "+oneof(capitalize(Describe(\$newchar))+" leaps out of the crowd, to grapple with the "+\$Phelan+".", capitalize(Describe(\$newchar))+" is nearby and, back to back with "+Describe(\$char)+", they fight their way free of the encroaching group.", "The "+\$Phelan+" "+oneof("snarls", "bares its teeth", "growls")+" nastily, when "+Describe(\$newchar)+" hits him from "+oneof("behind", "the side")+".")+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = " "+capitalize(Describe(\$newchar))+" "+oneof("tries to help, but can't make it there in time.", "attacks the "+\$Phelan+", but doesn't take him down.", "rushes to help, but is cut off by enemies.")+" The "+\$Phelan+" "+oneof("slices", "slashes", "rakes")+" a "+oneof("poison-tipped spear", "fishing knife", "sharpened arrowhead")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the heat of battle.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  response = ::run_incident(\$incidents: \$incidents);    
  if(!response) \{    
   ::remove_pc();    
   return output;    
  \} else \{    
   return response;    
  \}    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:describe_enemy">
         X[M] return oneof("bloodthirsty", "chanting", "predatory", "half-crazed", "heavily tattooed", "highly decorated", "focused", "observant", "ridiculously muscled", "highly trained", "super strong", "determined", "monolithic", "gargantuan", "one-eyed", "shifty eyed", "scruffy looking", "robed", "mysterious", "partially shrouded", "masterfully armed", "stout", "poorly fed", "sharp toothed", "dirt covered", "blood spattered", "blood-soaked", "excessively furry", "unibrowed", "mystical", "intimidating")+" "+oneof("Fianna", "druid", "warrior", "soldier", "pillager", "plunderer", "fisherman", "forager") +oneof(" slinging a gun", " chanting a spell", " roaring with rage", " sucking its teeth", " observing the surroundings", " stealing from dead bodies", " dual-wielding fishing knives", " cracking a whip", " twirling a spear", " clad in colorful robes", " with blood-stained claws", " with a matted beard", " cloaked in black", " riddled with tattoos", " decorated in war paint", " wearing a murderous scowl", " snarling viciously", " humming a foreboding tune");
      </Core:Property>
      <Core:Property property="merry:lib:describe_phelan">
         X[M] return oneof("bloodthirsty", "chanting", "predatory", "half-crazed", "heavily tattooed", "highly decorated", "focused", "observant", "ridiculously muscled", "highly trained", "super strong", "determined", "monolithic", "gargantuan", "one-eyed", "shifty eyed", "scruffy looking", "robed", "mysterious", "partially shrouded", "masterfully armed", "stout", "poorly fed", "sharp toothed", "dirt covered", "blood spattered", "blood-soaked", "excessively furry", "unibrowed", "mystical", "intimidating")+" "+oneof("Fianna", "druid", "warrior", "soldier", "pillager", "plunderer", "fisherman", "forager") +oneof(" slinging a gun", " chanting a spell", " roaring with rage", " sucking its teeth", " observing the surroundings", " stealing from dead bodies", " dual-wielding fishing knives", " cracking a whip", " twirling a spear", " clad in colorful robes", " with blood-stained claws", " with a matted beard", " cloaked in black", " riddled with tattoos", " decorated in war paint", " wearing a murderous scowl", " snarling viciously", " humming a foreboding tune");
      </Core:Property>
      <Core:Property property="merry:lib:healed">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(!\$friendly_healer_tokens \|\| \$friendly_healer_tokens \< 50) return FALSE;    
  return TRUE;    
\} else if(\$stage == "test") \{    
  /* always passes */    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$friendly_healer_tokens -= 50;    
  return  oneof("Blood", "Sticky red fluid")+" "+oneof("oozes", "trickles", "drips", "streams", "leaks", "flows")+" from the "+oneof("deep", "shallow", "considerable", "horrid", "sizable", "subtle", "small", "notable", "serious", "gaping", "horrible")+" "+oneof("wound", "injury", "gash", "cut")+" "+Describe(\$char)+" "+oneof("obtained", "suffered", "endured", "gained")+" from a "+\$Phelan+"'s "+oneof("swift", "skilled", "rapid", "precise", "lucky", "professional", "clumsy", "successful", "vicious", "savage", "haphazard")+" "+oneof("hit", "stroke", "motion", "move")+" with his "+oneof("blade", "hand", "fishing knife", "staff", "claws", "arrowhead dagger")+". "+oneof("A passing", "An attentive", "A ready", "An able", "An alert", "An adept", "An observant", "A perceptive", "A vigilant", "A running")+" "+\$ally+" "+oneof("spots", "takes note of", "notices", "sees", "espies", "detects")+" the injury and "+oneof("runs", "struggles", "sneaks", "dashes", "steps")+" to the side of "+Describe(\$char)+". "+capitalize(\$char."base:pronoun")+" "+oneof("swiftly", "agilely", "rapidly", "knowingly", "hurriedly", "haphazardly", "distractedly", "worriedly")+" "+oneof("tends to", "bandages", "applies a hurried dressing", "wraps", "attends", "gently cares for")+" the injury"+oneof(", allowing "+Describe(\$char)+" to rejoin the fight", ". Catching "+\$char."base:possessive"+" breath "+Describe(\$char)+" can finally rejoin the battle", ", making it possible for "+Describe(\$char)+" to continue the fight")+". \<br/\>";    
\} else if(\$stage == "fail") \{    
  /* always passes */    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:healing">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  /* there needs to be a healer in the group */    
  \$list = copy(\$battle.pcs);    
  \$newchar = nil;    
  while(!\$newchar \&\& sizeof(\$list)) \{    
    \$i = random(sizeof(\$list));    
    if(\$list[\$i][1] == "healer" \&\& \$list[\$i][0] != \$char) \{    
      \$newchar = \$list[\$i][0];    
    \} else \{    
      \$list -= (\{ \$list[\$i] \});    
    \}    
  \}    
  if(\$newchar) return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$newchar, \$skills: (\{"mental:first-aid"\}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  return " The "+\$Phelan+" "+oneof("slices", "slashes", "stabs")+" a "+oneof("metal spear", "arrowhead dagger", "curved dirk", "fishing knife", "metal stave")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the heat of battle. "+capitalize(Describe(\$newchar))+" spots the injury, and manages to apply a hasty field dressing, allowing "+Describe(\$char)+" to rejoin the fight.\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = " The "+\$Phelan+" "+oneof("slices", "slashes", "stabs")+" a "+oneof("metal spear", "arrowhead dagger", "curved dirk", "fishing knife", "metal stave")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the press of battle. "+capitalize(Describe(\$newchar))+oneof(" spots the injury, and dashes toward "+Describe(\$char)+", but gets lost in the confusion of the battle, leaving the "+oneof("wound", "gouge", "injury", "sore")+" "+oneof ("unmended", "bleeding"), " rushes over, and hastily bandages the "+oneof("wound", "gouge", "injury", "sore")+", but not before "+Describe(\$char)+" passes out")+".\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  response = ::run_incident(\$incidents: \$incidents);    
  if(!response) \{    
   ::remove_pc();    
   return output;    
  \} else \{    
   return response;    
  \}    
    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:luck">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  return TRUE;    
/* decide who wins */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"career:scout"\}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* char won */   
\} else if(\$stage == "pass") \{    
  \$enemy_tokens -= 50;    
  return capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$Phelan+", however something almost stops "+Str(\$char."base:objective")+". Laughingly "+Str(\$char."base:pronoun")+" watches as a "+\$Phelan+" "+oneof("stumbles upon "+oneof(" an inconvenient", "an unfortunately fallen", "a massive sized", "a recently felled", "a struck-down", "a blood-drenched")+" "+oneof("corpse", "body", "soldier")+" and falls face first to the ground, hitting his head badly.", "experiences the wonders of Langston Academy by meeting a rotating practice dummy face-first. "+oneof("The poor guy starts to jump spastically, clearly startled by the movement.", "The Phelan forcefully holds back tears.", "The lass dizzily falls back on her bum.", "He smacks his face with both hands in a frenzy, trying to swat away the harmless opponent.", "She annoyedly turns to the guilty practice dummy and tries to chop it up into tiny pieces, ignoring you in the meanwhile."), " "+oneof("falls", "topples", "stumbles", "collides")+" into "+oneof("a pile of", "a heap of", "a small collection of", "a large pile of", "an easy to notice collection of", "a small pool of")+" "+oneof("bodies", "corpses")+" "+oneof(" and freezes entirely.", ". He yells out in horror, clawing at his eyes.", ". He swears audibly, seriously considering the bad luck that's found him in this battle.", ". She silently suffers the view.", ". He somehow manages to pull himself together and rejoins the fight with a bit of delay.", ". He now is happy to have worn boots to this fray. He easily continues the fight.", ". He needs a few moments to compose himself."), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "heap")+" of day old "+oneof("corpses", "cadavers")+". "+oneof("He isn't too much bothered by the stench.", "He tries to go on, but slips in the pile further and lands on his rump. Ugh, what horrible luck.", "He starts to kick his feet to get away, but only buries himself further.", "He boggles at the sight, and quickly tries to scurry to his feet.", "He notices too late, and slips into the bloody mass.", "He starts to clean his boots for sanitary reasons.", "He fretfully searches for his wife in the pile, hoping she didn't fall. Aww."), "runs straight into a storage building. Ouch. "+oneof("He starts to jump around holding his foot.", "She cries out loud.", "He senselessly smacks his head against the wall.", "He totally hates the world now.", "He tries to climb up the side to better ambush people.", "He curses at the creator of the building, even though he has no idea who it is.") );   
   
/* char lost, but enough token to save him */   
\} else if(\$stage == "fail") \{    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
   
  return capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$Phelan+", however something almost stops "+Str(\$char."base:objective")+". Laughingly "+Str(\$char."base:pronoun")+" watches as a "+\$Phelan+" "+oneof("stumbles upon "+oneof(" an inconvenient", "an unfortunately fallen", "a massive sized", "a recently felled", "a struck-down", "a blood-drenched")+" "+oneof("corpse", "body", "soldier")+" and falls face first to the ground, hitting his head badly.", "experiences the wonders of Langston Academy by meeting a rotating practice dummy face-first. "+oneof("The poor guy starts to jump spastically, clearly startled by the movement.", "The Phelan forcefully holds back tears.", "The lass dizzily falls back on her bum.", "He smacks his face with both hands in a frenzy, trying to swat away the harmless opponent.", "She annoyedly turns to the guilty practice dummy and tries to chop it up into tiny pieces, ignoring you in the meanwhile."), " "+oneof("falls", "topples", "stumbles", "collides")+" into "+oneof("a pile of", "a heap of", "a small collection of", "a large pile of", "an easy to notice collection of", "a small pool of")+" "+oneof("bodies", "corpses")+" "+oneof(" and freezes entirely.", ". He yells out in horror, clawing at his eyes.", ". He swears audibly, seriously considering the bad luck that's found him in this battle.", ". She silently suffers the view.", ". He somehow manages to pull himself together and rejoins the fight with a bit of delay.", ". He now is happy to have worn boots to this fray. He easily continues the fight.", ". He needs a few moments to compose himself."), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "heap")+" of day old "+oneof("corpses", "cadavers")+". "+oneof("He isn't too much bothered by the stench.", "He tries to go on, but slips in the pile further and lands on his rump. Ugh, what horrible luck.", "He starts to kick his feet to get away, but only buries himself further.", "He boggles at the sight, and quickly tries to scurry to his feet.", "He notices too late, and slips into the bloody mass.", "He starts to clean his boots for sanitary reasons.", "He fretfully searches for his wife in the pile, hoping she didn't fall. Aww."), "runs straight into a storage building. Ouch." )+response;    
    return output;    
  \}    
/* char lost, not enough token to save him */   
  
  return capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$Phelan+", however something almost stops "+Str(\$char."base:objective")+". Laughingly "+Str(\$char."base:pronoun")+" watches as a "+\$Phelan+" "+oneof("stumbles upon "+oneof(" an inconvenient", "an unfortunately fallen", "a massive sized", "a recently felled", "a struck-down", "a blood-drenched")+" "+oneof("corpse", "body", "soldier")+" and falls face first to the ground, hitting his head badly.", "experiences the wonders of Langston Academy by meeting a rotating practice dummy face-first. "+oneof("The poor guy starts to jump spastically, clearly startled by the movement.", "The Phelan forcefully holds back tears.", "The lass dizzily falls back on her bum.", "He smacks his face with both hands in a frenzy, trying to swat away the harmless opponent.", "She annoyedly turns to the guilty practice dummy and tries to chop it up into tiny pieces, ignoring you in the meanwhile."), " "+oneof("falls", "topples", "stumbles", "collides")+" into "+oneof("a pile of", "a heap of", "a small collection of", "a large pile of", "an easy to notice collection of", "a small pool of")+" "+oneof("bodies", "corpses")+" "+oneof(" and freezes entirely.", ". He yells out in horror, clawing at his eyes.", ". He swears audibly, seriously considering the bad luck that's found him in this battle.", ". She silently suffers the view.", ". He somehow manages to pull himself together and rejoins the fight with a bit of delay.", ". He now is happy to have worn boots to this fray. He easily continues the fight.", ". He needs a few moments to compose himself."), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "heap")+" of day old "+oneof("corpses", "cadavers")+". "+oneof("He isn't too much bothered by the stench.", "He tries to go on, but slips in the pile further and lands on his rump. Ugh, what horrible luck.", "He starts to kick his feet to get away, but only buries himself further.", "He boggles at the sight, and quickly tries to scurry to his feet.", "He notices too late, and slips into the bloody mass.", "He starts to clean his boots for sanitary reasons.", "He fretfully searches for his wife in the pile, hoping she didn't fall. Aww."), "runs straight into a storage building. Ouch." )+". "+capitalize(Describe(\$char))+" falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:maddash">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:armor:rating" \}), \$bonus: \$char."trait:body") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* Character's Success */  
\} else if(\$stage == "pass") \{     
  \$enemy_tokens -= 50;     
 return capitalize(Describe(\$char))+" lets out "+oneof("a roar of pure rage", "a shout of excitement", "an inspirational word")+" and "+oneof("charges at", "dashes to", "weaves around a cluster of combatants until reaching a", "careens directly at")+" a "+\$Phelan+" who "+oneof("runs in fear for his life", "runs in fear for her life", "freezes as he is run through", "freezes as she is run through")+".\<br/\>";  
    
/* failure of character */    
\} else if(\$stage == "fail") \{     
/* if there is enough tokens to save the person */    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));     
  if(response) \{     
    output = capitalize(Describe(\$char))+" lets out "+oneof("a pitiful squeak", "a shrill scream", "an ineffective snarl", "a hoarse shout")+" which causes the "+\$Phelan+" to "+oneof("laugh briefly", "stare blankly", "attack with greater ferocity", "double his attack") +" before landing a blow to "+\$char."base:possessive"+" "+oneof("shoulder", "arm", "belly", "leg", "hip", "head")+response;      
    return output;     
  \}     
/* if there is not enough token to save the char */    
    output = capitalize(Describe(\$char))+" lets out "+oneof("a pitiful squeak", "a shrill scream", "an ineffective snarl", "a hoarse shout")+" which causes the "+\$Phelan+" to "+oneof("laugh briefly", "stare blankly", "attack with greater ferocity", "double his attack") +" before landing a blow to "+\$char."base:possessive"+" "+oneof("shoulder", "arm", "belly", "leg", "hip", "head")+". "+capitalize(Describe(\$char))+" falls to the floor, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";     
  ::remove_pc();     
  return output;     
\}     
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:remove_pc">
         X[M] /* remove a PC from the list */    
int i;    
    
if(!this.pcs) return TRUE;    
if(!\$char) return FALSE;    
for(i=0;i\<sizeof(this.pcs);i++) \{    
  if(this.pcs[i][0] == \$char) \{    
    \$tmp = this.pcs[i];    
    this.pcs -= (\{ \$tmp \});    
  \}    
\}    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:rescued">
         X[M] /* an incident during the event */
string output, response;
if(!\$stage) error("No \$stage data passed for incident.");
if(\$stage == "conditions") \{
  if(!\$friendly_soldier_tokens \|\| \$friendly_soldier_tokens \< 50) return FALSE;
  return TRUE;
\} else if(\$stage == "test") \{
  /* always passes */
  return TRUE;
\} else if(\$stage == "pass") \{
  \$friendly_soldier_tokens -= 50;
  return " Before the "+\$Fianna+" can "+oneof("do any serious damage", "attack", "take advantage of the situation")+", "+\$ally+" "+oneof("arrives, and drives the scoundrel away", "rushes past, stabbing the Phelan on the way", "intervenes, dueling the Fianna in "+Describe(\$char)+"'s place", "lands a well-placed hit on the back of the Fianna's head, rendering him unconscious")+".\<br/\>";
\} else if(\$stage == "fail") \{
  /* always passes */
\}
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:run_incident">
         X[M] /* run a second incident, following the first */    
string incident;    
int i;    
    
if(!\$incidents \|\| !sizeof(Arr(\$incidents))) return nil;    
\$incidents = Arr(\$incidents);    
    
while(sizeof(\$incidents)) \{    
  incident = \$incidents[random(sizeof(\$incidents))];    
  \$incidents -= (\{ incident \});    
  if(Call(\$battle, incident, \$stage: "conditions")) \{    
    if(Call(\$battle, incident, \$stage: "test")) \{    
      return Call(\$battle, incident, \$stage: "pass");    
    \} else \{    
      return Call(\$battle, incident, \$stage: "fail");    
    \}    
  \}    
\}    
return nil;
      </Core:Property>
      <Core:Property property="merry:lib:swearing">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"career:pirate", "career:thug", "career:sailor"\}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$enemy_tokens -= 80;    
  return capitalize(Describe(\$char))+" "+oneof("swears fiercely", "lets out a fearsome curse")+", "+oneof("cowing "+\$char."base:possessive"+" enemies.", "scaring a "+\$Phelan+" into "+oneof("running back the way it came.", "retreating from the fight altogether.", "wetting himself."))+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = capitalize(Describe(\$char))+" "+oneof("attempts to swear, but it's clearly not "+\$char."base:possessive"+" forte. "+oneof("A few raised eyebrows", "A ridiculed laughter", "A mocking applaud")+" is the reward.", "yells randomly at the enemies, mimicking the more skilled mouths in the party.", "threatens the enemy, as if being a thug.", "curses the stars, not having any better idea. The enemy isn't overly affected.", "attempts to cow the enemies by "+oneof("letting out a curse", "swearing", "exclaiming")+", "+oneof("Oh, jamberries!", "Fuzzzzlewogggggins!", "..Ratsocks?...", "Sepatagus' nipple!", "Have dinner with the cannibals!", "Be dinner guest with Avo nobles!", "Stumble in your beard, you hag!", "Marry a black cat with a broken mirror!"))+"\<br/\>";    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="pcs">
         (\{ (\{ \<Chatters:AE:mo:mojachi\>, "healer", "combat:dagger" \}), (\{ \<Chatters:IC:vi:virendra\>, "dueler", "combat:unarmed" \}), (\{ \<Chatters:Backup:IC:ai:aiko5\>, "fighter", "combat:polearm" \}), (\{ \<Chatters:AE:or:orla\>, "fighter", "combat:unarmed" \}), (\{ \<Chatters:Backup:IC:et:ethelinda0\>, "dueler", "combat:dagger" \}), (\{ \<Chatters:Backup:IC:sa:sable0\>, "fighter", "combat:sword" \}), (\{ \<Chatters:AE:tr:trevyn\>, "dueler", "combat:sword" \}), (\{ \<Chatters:IC:re:rem\>, "fighter", "combat:dagger" \}) \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1284329517, "balkaar", "E", 1284329524, "balkaar", "E", 1284329718, "balkaar", "E", 1284329971, "balkaar", "E", 1284330110, "balkaar", "E", 1284330655, "balkaar", "E", 1284332617, "balkaar", "E", 1284332642, "balkaar", "E", 1284339087, "balkaar", "E", 1284339333, "balkaar", "E", 1284339697, "balkaar", "E", 1284339772, "balkaar", "E", 1284339795, "balkaar", "E", 1284339979, "balkaar", "E", 1284340012, "balkaar", "E", 1284340060, "balkaar", "E", 1284341084, "balkaar", "E", 1284341525, "balkaar", "E", 1284342322, "balkaar", "E", 1284342931, "balkaar", "E", 1284343455, "balkaar", "E", 1284343708, "balkaar", "E", 1284343842, "balkaar", "E", 1284353549, "balkaar", "E", 1284359645, "balkaar", "E", 1284378431, "balkaar", "E", 1284425441, "balkaar", "E", 1284456112, "balkaar", "E", 1284457223, "balkaar", "E", 1284457706, "balkaar", "E", 1284458477, "balkaar", "E", 1284460321, "balkaar", "E", 1284463834, "balkaar", "E", 1284464700, "balkaar", "E", 1284464743, "balkaar", "E", 1284588060, "balkaar", "E", 1284588645, "balkaar", "E", 1284589396, "balkaar", "E", 1284593715, "balkaar", "E", 1284594857, "balkaar", "E", 1284663991, "balkaar", "E", 1284664084, "balkaar", "E", 1284664319, "balkaar", "E", 1284665213, "balkaar", "E", 1284665266, "balkaar", "E", 1284665305, "balkaar", "E", 1284665623, "balkaar", "E", 1284667221, "balkaar", "E", 1284667719, "balkaar", "E", 1284668063, "balkaar", "E", 1284668964, "balkaar", "E", 1284668980, "balkaar", "E", 1284669641, "balkaar", "E", 1284669737, "balkaar", "E", 1284669777, "balkaar", "E", 1284669801, "balkaar", "E", 1284669841, "balkaar", "E", 1284669907, "balkaar", "E", 1284669937, "balkaar", "E", 1284669993, "balkaar", "E", 1284670048, "balkaar", "E", 1284670372, "balkaar", "E", 1284670628, "balkaar", "E", 1284670647, "jominey", "E", 1284670674, "balkaar", "E", 1284670829, "jominey", "E", 1284670846, "balkaar", "E", 1284670875, "balkaar", "E", 1284671022, "balkaar", "E", 1284677172, "balkaar", "E", 1284678171, "balkaar", "E", 1306605341, "rastalabor", "X", 1306606128, "rastalabor", "X", 1306607086, "rastalabor", "E", 1306608425, "rastalabor", "X", 1306608568, "rastalabor", "X", 1306608637, "rastalabor", "X", 1306608664, "rastalabor", "X", 1306608702, "rastalabor", "E", 1306608825, "rastalabor", "X", 1306608913, "rastalabor", "X", 1306611913, "rastalabor", "X", 1306612482, "jominey", "E", 1306615942, "rastalabor", "X", 1306627623, "rastalabor", "X", 1306632966, "balkaar", "E", 1306633784, "rastalabor", "X", 1339170214, "meandmine", "E", 1339170474, "meandmine", "E", 1339170505, "meandmine", "E", 1399607839, "slurpeeslurp", "E", 1399608206, "slurpeeslurp", "E", 1399608583, "slurpeeslurp", "E", 1399608944, "slurpeeslurp", "E", 1399609864, "slurpeeslurp", "E", 1399610351, "slurpeeslurp", "E", 1399610419, "slurpeeslurp", "E", 1399611302, "jominey", "E", 1399647062, "slurpeeslurp", "E", 1399647177, "slurpeeslurp", "E", 1399648176, "slurpeeslurp", "E", 1399648471, "slurpeeslurp", "E", 1399648553, "slurpeeslurp", "E", 1399648604, "slurpeeslurp", "E", 1399649044, "slurpeeslurp", "E", 1399649475, "slurpeeslurp", "E", 1399650038, "slurpeeslurp", "E", 1399650383, "slurpeeslurp", "E", 1399650424, "slurpeeslurp", "E", 1399650455, "slurpeeslurp", "E", 1399650478, "slurpeeslurp", "E", 1399651048, "slurpeeslurp", "E", 1399651977, "slurpeeslurp", "E", 1399652004, "slurpeeslurp", "E", 1399652138, "slurpeeslurp", "E", 1399652329, "slurpeeslurp", "E", 1399652358, "slurpeeslurp", "E", 1399657387, "slurpeeslurp", "E", 1399657538, "slurpeeslurp", "E", 1399658701, "slurpeeslurp", "E", 1399658908, "slurpeeslurp", "E", 1399659226, "slurpeeslurp", "E", 1399659263, "slurpeeslurp", "E", 1399659690, "slurpeeslurp", "E", 1399659799, "slurpeeslurp", "E", 1399659923, "slurpeeslurp", "E", 1399660411, "slurpeeslurp", "E", 1399666401, "slurpeeslurp", "R", 1399680520, "slurpeeslurp", "E", 1399693842, "jominey", "E", 1399693993, "jominey", "E", 1399695070, "jominey", "P", 1399695148, "jominey", "P", 1399695214, "jominey", "P", 1399695268, "jominey", "E", 1399695289, "jominey", "E", 1399695437, "jominey", "P", 1399695506, "jominey", "P", 1399695542, "jominey", "P", 1399695586, "jominey", "E", 1399695604, "jominey", "E", 1399695659, "jominey", "P", 1432348227, "slurpeeslurp", "E", 1432348317, "slurpeeslurp", "E", 1432348377, "slurpeeslurp", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
