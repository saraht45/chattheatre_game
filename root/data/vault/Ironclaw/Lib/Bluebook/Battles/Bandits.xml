<object clone="/obj/properties" owner="balkaar">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="event:start">
         ([ "incidents":(\{ "defend", "luck", "defend", "defend_archers", "maddash", "attack", "attack_1", "attack_2", "attack_3", "attack_1", "attack_2", "attack_3", "attacked_by_boss", "attacked_by_boss" \}), "variables":([ "enemy_pirate_tokens":750, "friendly_healer_tokens":50, "friendly_soldier_tokens":920 ]) ])
      </Core:Property>
      <Core:Property property="merry:lib:attack">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
/* setting up rolls */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* character's success */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
 return capitalize(Describe(\$char))+" spots a "+\$cannibals+", who is cut off from "+oneof("his companions", "tribe memeber", "his comrades", "his allies")+", and "+oneof("charges", "attacks", "takes advantage of the opportunity")+". "+capitalize(Describe(\$char))+" "+oneof("guts him with ease", "slices - quickly and efficiently, and kills the cannibal", "strikes true and hard, knocking the "+\$cannibals+" out of the fight", "effectively disposes of the "+\$cannibals, "kills the "+\$cannibals+" "+oneof("swiftly", "with ease", "without difficulty", "giving no more thoughts to the poor bastard, stepping into the battle once more", "rapidly", "due to some lucky coincidences"), "beats the "+\$cannibals+" "+oneof("half dead", "senseless", "unconscious") )+".\<br/\>";    
/* failure of character */   
\} else if(\$stage == "fail") \{    
/* if there is enough tokens to save the person */   
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+" "+oneof("pushes forward into the thick of battle", "chases after a "+\$cannibals, "presses forward, fighting with a "+\$cannibals, "fights bandits left and right", "zealously attends the battle", "vigorously cuts through masses of enemies", "tries to corner a cannibal", "dashes through the battle to get to the selected enemy")+oneof(", before realizing "+\$char."base:pronoun"+" is cut off from "+\$char."base:possessive"+oneof(" allies", " friends", "associates"), ", unfortunately the ebb and flow of the fight leaves "+\$char."base:objective"+oneof(" stranded amongst enemies"," surrounded by menacing cannibals", " alone amidst a group of enemy fighters", " behind enemy lines", " all alone in the company of malicious cannibals waving their weapons") )+". "+response;    
    return output;    
  \}    
/* if there is not enough token to save the char */   
  output = capitalize(Describe(\$char))+" "+oneof("pushes forward into the thick of battle", "chases after a "+\$cannibals, "presses forward, fighting with a "+\$cannibals, "fights cannibals left and right", "zealously attends the battle", "vigorously cuts through masses of enemies", "tries to corner a cannibal", "dashes through the battle to get to the selected enemy")+" where, surrounded by enemies, a "+\$cannibals+" "+oneof("cuts "+\$char."base:objective"+" down with", "strikes "+\$char."base:objective"+" with", "lands a blow with")+" a "+oneof("cutlass", "dagger", "dirk", "knife", "sword")+oneof(". The weapon pierces", ", leaving a nasty cut across")+" "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+". "+capitalize(Describe(\$char))+" falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_1">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
/* setting up rolls */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* character's success */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
return capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "drives the weapon at")+" a "+\$pirate+", who is cut off from "+oneof("his companions", "the other bandits", "his comrades", "his allies", "the other brigands")+", and "+oneof("charges", "attacks", "takes advantage of the opportunity")+". "+capitalize(Describe(\$char))+" "+oneof("guts him with ease", "slices - quickly and efficiently, and kills the bandit", "strikes true and hard, knocking the "+\$pirate+" out of the fight", "effectively disposes of the "+\$pirate, "kills the "+\$pirate+" "+oneof("swiftly", "with ease", "without difficulty", "giving no more thoughts to the poor bastard, stepping into the battle once more", "rapidly", "due to some lucky coincidences"), "beats the "+\$pirate+" "+oneof("half dead", "senseless", "unconscious") )+".\<br/\>";    
/* failure of character */   
\} else if(\$stage == "fail") \{    
/* if there is enough tokens to save the person */   
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "drives the weapon at")+" a "+\$pirate+". Swinging "+\$char."base:possessive"+" weapon, "+\$char."base:pronoun"+" misses and takes a blow to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "left thigh", "right thigh", "waist", "ribs", "lower back", "back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(Describe(\$char))+"staggers backwardly, clasping a hand to the "+oneof("deep", "shallow", "ugly", "jagged", "scratch of a", "minor", "gaping", "nasty", "serious", "barely noticeable", "perfunctory")+" wound."+response;    
    return output;    
  \}    
/* if there is not enough token to save the char */   
  output = capitalize(Describe(\$char))+" "+oneof("charges", "yells at and attacks", "drives the weapon at")+" a "+\$pirate+". Swinging "+\$char."base:possessive"+" weapon, "+\$char."base:pronoun"+" misses and takes a blow to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "left thigh", "right thigh", "waist", "ribs", "lower back", "back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(Describe(\$char))+" staggers backwardly, clasping a hand to the "+oneof("deep", "bleeding", "ugly", "jagged", "gaping", "nasty", "serious", "barely noticeable", "perfunctory")+" wound. "+capitalize(Describe(\$char))+" eventually falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_2">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
/* setting up rolls */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{\$favorite_weapon\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* character's success */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
  return capitalize(Describe(\$char))+" "+oneof("scans", "browses", "contemplates", "examines", "glances at", "surveys", "skims", "sizes up", "takes a long gander at")+" the "+oneof("group", "assembly", "band", "batch", "bundle", "cluster", "clutch", "collection", "gathering", "party", "pack")+" of surrounding "+oneof("enemies", "adversaries", "foes", "opposition", "saboteurs", "rivals", "villains")+ " before exclusively singling out a "+\$pirate+". "+capitalize(Describe(\$char))+" "+oneof("advances", "progresses", "heads", "steps")+" toward the target, "+oneof("deflecting", "averting", "keeping away from")+" any side "+oneof("battles", "fights", "skirmishes", "attacks")+"."+capitalize(\$char."base:pronoun")+" "+oneof("swiftly", "quickly", "abruptly", "fleet-footedly", "nimbly", "promptly", "rapidly", "readily", "speedily")+" reaches the enemy and "+oneof("bashes in the "+\$pirate+"'s face with a single blow", "breaks the "+\$pirate+"'s ribs with a crushing swing", "disables the "+\$pirate+"'s legs with severe wounds to both knees", "knocks the "+\$pirate+" unconscious with a knuckle sandwich", "strikes at pressure points until the "+\$pirate+" surrenders", "uppercuts the "+\$pirate+"'s jaw, sending him reeling toward the ground", "blindsides the "+\$pirate+", sending him toppling to the ground where he hits hits his head upon a rock", "swipes the "+\$pirate+"'s neck with a sharp weapon, sending blood spilling forth")+".\<br/\>";    
   
/* failure of character */   
\} else if(\$stage == "fail") \{    
/* if there is enough tokens to save the person */   
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+" "+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "vainly")+" "+oneof("attempts", "endeavours", "ventures", "tries")+" to attack "+\$pirate+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back", "ripostes")+" dashing in from the shadows "+oneof("slashing", "thrusting", "jabbing", "dragging")+" a "+oneof("jagged", "serrated", "sharpened", "dangerous")+" "+oneof("dagger", "dirk", "knife", "stiletto")+" "+oneof("over", "at", "against")+capitalize(Describe(\$char))+"'s "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "nose", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "back", "lower back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+"."+response;    
    return output;    
  \}    
/* if there is not enough token to save the char */   
  output = capitalize(Describe(\$char))+" "+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "vainly")+" "+oneof("attempts", "endeavours", "ventures", "tries")+" to attack "+\$pirate+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back", "ripostes")+" dashing in from the shadows "+oneof("slashing", "thrusting", "jabbing", "dragging")+" a "+oneof("jagged", "serrated", "sharpened", "dangerous")+" "+oneof("dagger", "dirk", "knife", "stiletto")+" "+oneof("over", "at", "against")+capitalize(Describe(\$char))+"'s "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "nose", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "throat", "abdomen", "left hip", "right hip", "left leg", "right leg", "back", "lower back", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(Describe(\$char))+" slowly falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attack_3">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
/* setting up rolls */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"career:scout"\}), \$bonus: \$char."trait:agility") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* character's success */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
   
  return capitalize(Describe(\$char))+" "+oneof("spots", "catches sight of", "detects", "discovers", "espies", "locates", "picks out")+" a "+\$pirate+" who is "+oneof("away from", "cut off from", "disassociated with", "excluded from", "free of", "independent of", "isolated from", "separated from", "to one side of")+" the main "+oneof("group", "batch", "bunch", "bundle", "cluster", "clutch", "company", "gang", "pack")+" and "+oneof("sneaks closer before attacking", "catches the "+\$pirate+" off guard", "prowls stealthily toward the subject", "aggressively rushes forward", "takes the offensive, ambushing the "+\$pirate+" from behind", "charges forward thoughtlessly, ramming into the "+\$pirate+"'s body")+". "+capitalize(Describe(\$char))+" "+oneof(" mercilessly "+oneof("assaults", "beats upon", "strikes", "wallops", "abuses")+" the "+\$pirate+" to the point of knocking him out cold", " makes a precision attack, "+oneof("cutting", "slicing", "stabbing", "puncturing", "horribly wounding")+" the "+oneof("neck", "heart", "vital organs", "lower back")+" of the "+\$pirate+" and disabling him from further combat", "manages to "+oneof("overthrow", "overpower", "conquer", "crush", "eradicate", "exterminate", "terminate", "vanquish")+" the "+\$pirate+" before moving on to the next "+oneof("adversary", "opponent", "enemy", "foe", "rival"), " "+oneof("crashes", "tumbles", "falls", "topples to the ground")+" with the "+\$pirate+", but quickly gains the upper-hand and "+oneof("strangles", "chokes", "asphyxiates", "throttles")+" the "+\$pirate+" until no "+oneof("breath", "air", "life", "oxygen")+" remains", " bashes the "+\$pirate+" upside the head, leaving him "+oneof("unconscious", "lying in the mud", "helpless, in a pool of his's own blood", "senseless and dazed", "blabbering about 'Mother'", "half-dead on the side of the road", "with countless broken bones", "in an extreme amount of pain and confusion"))+".\<br/\>";    
   
/* failure of character */   
\} else if(\$stage == "fail") \{    
/* if there is enough tokens to save the person */   
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
   
    output = oneof("A small group", "Three", "A party", "A cluster")+" of "+oneof("brigands", "cutthroats", "rogues", "disreputable peasants")+" "+oneof("dressed in patchwork armor", "wielding improvised weapons", "avoiding the main of the fight", "preparing to ambush your party")+" is "+oneof("surprised", "pleased", "emboldened")+", when "+capitalize(Describe(\$char))+" unluckily "+oneof("leaps into their midst", "backs into the cluster while trying to catch "+\$char."base:possessive"+" breath", "tries to fight them on solo", "comes running at them with weapon held high")+". "+oneof("Numbers trump skill", "Two of the foes distract "+capitalize(Describe(\$char)), capitalize(Describe(\$char))+" is overwhelmed by the mass of bodies", "Fighting dishonorably two of the them grapple "+capitalize(Describe(\$char))+"'s weapon arm")+" and create an opening for one of the brigands to strike "+capitalize(Describe(\$char))+" a "+oneof("deep", "shallow", "ugly", "jagged", "scratch of a", "minor", "gaping", "barely noticable", "perfunctory", "serious")+" wound to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "right elbow", "left elbow", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "right knee", "left knee", "left ankle", "right ankle", "left foot", "right foot")+". They are driven off by the press of fighting, but not before they "+oneof("kick "+capitalize(Describe(\$char))+" in the belly", "mock "+capitalize(Describe(\$char))+" with taunts", "tell "+capitalize(Describe(\$char))+" what they plan to do to "+\$char."base:possessive"+" friends", "drive "+capitalize(Describe(\$char))+" to the ground briefly with a solid blow to the jaw")+". "+response;    
    return output;    
  \}    
/* if there is not enough token to save the char */   
  output = oneof("A small group", "Three", "A party", "A cluster")+" of "+oneof("brigands", "cutthroats", "rogues", "disreputable peasants")+" "+oneof("dressed in patchwork armor", "wielding improvised weapons", "avoiding the main of the fight", "preparing to ambush your party")+" is "+oneof("surprised", "pleased", "emboldened")+", when "+capitalize(Describe(\$char))+" unluckily "+oneof("leaps into their midst", "backs into the cluster while trying to catch "+\$char."base:possessive"+" breath", "tries to fight them on solo", "comes running at them with weapon held high")+". "+oneof("Numbers trump skill", "Two of the foes distract "+capitalize(Describe(\$char)), capitalize(Describe(\$char))+" is overwhelmed by the mass of bodies", "Fighting dishonorably two of the them grapple "+capitalize(Describe(\$char))+"'s weapon arm")+" and create an opening for one of the brigands to strike "+capitalize(Describe(\$char))+" a "+oneof("deep", "nasty", "ugly", "jagged", "minor", "gaping", "vital", "serious")+" wound to the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "right elbow", "left elbow", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "right knee", "left knee", "left ankle", "right ankle", "left foot", "right foot")+". They are driven off by the press of fighting, but not before they "+oneof("kick "+capitalize(Describe(\$char))+" in the belly", "mock "+capitalize(Describe(\$char))+" with taunts", "tell "+capitalize(Describe(\$char))+" what they plan to do to "+\$char."base:possessive"+" friends", "drive "+capitalize(Describe(\$char))+" to the ground briefly with a solid blow to the jaw")+". It was too much, "+capitalize(Describe(\$char))+" lands on the ground, and stays there.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:attacked_by_boss">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "dueler") return FALSE;    
  return TRUE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:dodge"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  \$pirate = "Big Bad Bandit Boss";    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 60;    
  \$pirate = "Big Bad Bandit Boss";    
  return oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with the Big Bad Bandit Boss.", "Nimbley hopping past other combatants, the Big Bad Bandit Boss bellows a challenge to "+capitalize(Describe(\$char))+".")+" "+oneof("A colossal clashing of blades commences, but "+capitalize(Describe(\$char))+" is able to fend off the attack for now.", "Ducking and weaving, "+capitalize(Describe(\$char))+" manages to thwart all attempts to do any bodily harm.", capitalize(Describe(\$char))+" just barely manages to avoid any serious injury at the hands of the Big Bad Bandit Boss.")+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  \$pirate = "captain";    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with the Big Bad Bandit Boss.", "Nimbley hopping past other combatants, the Big Bad Bandit Boss bellows a challenge to "+capitalize(Describe(\$char))+".")+" The Big Bad Bandit Boss "+oneof("cuts "+\$char."base:objective"+" down with", "strikes "+\$char."base:objective"+" with", "lands a blow with")+" his long sword"+oneof(". The weapon pierces", ", leaving a nasty cut across")+" "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+"."+response;    
    return output;    
  \}    
  output = oneof("Emerging from the swirling combat, "+capitalize(Describe(\$char))+" finds "+\$char."base:objective"+"self face to face with the Big Bad Bandit Boss.", "Nimbley hopping past other combatants, the Big Bad Bandit Bossbellows a challenge to "+capitalize(Describe(\$char))+".")+" The Big Bad Bandit Boss easily cuts down "+capitalize(Describe(\$char))+".\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defend">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  return TRUE;    
/* decide who wins */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:dodge"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* char won */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
  return "A "+\$pirate+" charges at "+Describe(\$char)+", "+oneof("swinging a", "slashing a", "with a raised", "aiming a")+" "+oneof("club", "dagger", "dirk", "knife", "sword", "longsword", "piece of wood", "torch")+". "+capitalize(Describe(\$char))+" "+oneof("manages to keep away", "avoids the attacker, until an ally can cut him down", "sidesteps the attack, then watches in amusement as the "+\$pirate+" continues charging, and stumbles in some roots", "ducks in time to avoid the incoming attack and swiftly returns the favour", "dodges the attack")+".\<br/\>";    
/* char lost, but enough token to save him */   
\} else if(\$stage == "fail") \{    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = "A "+\$pirate+" charges at "+Describe(\$char)+", "+oneof("swinging a", "slashing a", "with a raised", "aiming a")+" "+oneof("club", "dagger", "dirk", "knife", "sword", "longsword", "piece of wood", "torch")+oneof(", and backs "+capitalize(Describe(\$char))+" against a tree.", "pushes "+capitalize(Describe(\$char))+" into a group of enemies.", ", guides "+capitalize(Describe(\$char))+" from safety.", ", he manages to corner "+capitalize(Describe(\$char))+oneof(" with ease", " difficultly", " deceitfully", " with smoothness polished by many years of practice", " with quite some amount of luck", ". The gods seem to favour your enemy today"))+response;    
    return output;    
  \}    
/* char lost, not enough token to save him */   
  output = "A "+\$pirate+" charges at "+Describe(\$char)+", "+oneof("swinging a", "slashing a", "with a raised", "aiming a")+" "+oneof("club", "dagger", "dirk", "knife", "sword", "longsword", "piece of wood")+", and "+oneof("slices", "cuts", "stabs")+" into "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+". "+capitalize(Describe(\$char))+" falls to the floor, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defend_archers">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  return TRUE;    
/* decide who wins */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:shield"\}), \$bonus: \$char."trait:speed") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* char won */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
  return capitalize(Describe(\$char))+" "+oneof("half-heartedly", "watchfully", "alertly",  "carefully", "effectively", "smartly", "closely", "skilfully")+" "+oneof("attacks", "struggles with", "wrestles with", "fights", "battles", "brawls with", "clashes with", "assaults", "wrangles")+" a "+\$pirate+", when something "+oneof("captures", "wakes", "draws", "invites")+\$char."base:possessive"+oneof("attention", "focus", "gaze")+" "+oneof("in the bushes", "in the foliage", "in the woods", "from behind the trees", "behind "+\$char."base:possessive"+" opponent", "in the branches of the trees")+". "+capitalize(Describe(\$char))+" "+oneof("spots", "notices", "takes note", "pinpoints", "catches sight of", "detects", "discovers", "espies", "locates", "tracks")+ " a "+oneof("hidden",  "concealed", "hard-to-see", "covert", "leaf-covered", "secret")+ " "+oneof("hideout", "group of archers", "set of archers", "den", "nest of archers")+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+" the ground, but one manages to strike a "+\$pirate+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". ";    
   
/* char lost, but enough token to save him */   
\} else if(\$stage == "fail") \{    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "vainly")+" "+oneof("attempts", "endeavours", "ventures", "tries")+" to attack a "+\$pirate+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+" the ground, but one manages to strike "+(Describe(\$char))+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+response;    
    return output;    
  \}    
/* char lost, not enough token to save him */   
  output =     output = capitalize(Describe(\$char))+oneof("unsuccessfully", "fruitlessly", "futilely", "ineffectively", "ineffectually", "uselessly", "vainly")+" "+oneof("attempts", "endeavours", "ventures", "tries")+" to attack a "+\$pirate+". The opposition "+oneof("retaliates", "recompenses", "reciprocates", "strikes back")+", sending a "+oneof("spray", "litter", "small clutter", "small cluster", "cascade", "miniature flood")+" of "+oneof("red-tipped", "green-tipped", "black-tipped", "razor-sharp", "ridged", "finely-crafted", "poison-dipped", "fast-flying")+" arrows directly at "+(Describe(\$char))+" from the shadows. "+oneof("Numerous", "Most of the", "The majority of the", "Many of the")+" projectiles "+oneof("hit", "smack into", "veer off toward", "collide with")+(Describe(\$char))+" the most fatal one manages to strike "+\$char."base:objective"+" "+oneof("directly", "point-blank", "precisely", "successfully", "roughly")+" in the "+oneof("right eye", "left eye", "heart", "stomach", "right cheek", "left cheek", "neck", "right shoulder", "left shoulder", "right arm", "left arm", "right wrist", "left wrist", "right hand", "left hand", "chest", "thorax", "abdomen", "left hip", "right hip", "left leg", "right leg", "throat", "buttocks", "left ankle", "right ankle", "left foot", "right foot")+". "+capitalize(\$char."base:pronoun")+" falls to the floor, bleeding and unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:defending">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  /* there needs to be a fighter in the group */    
  \$list = copy(\$battle.pcs);    
  \$newchar = nil;    
  while(!\$newchar \&\& sizeof(\$list)) \{    
    \$i = random(sizeof(\$list));    
    if(\$list[\$i][1] == "fighter" \&\& \$list[\$i][0] != \$char) \{    
      \$newchar = \$list[\$i][0];    
      \$newchar_favorite_weapon = \$list[\$i][2];    
    \} else \{    
      \$list -= (\{ \$list[\$i] \});    
    \}    
  \}    
  if(\$newchar) return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$newchar, \$skills: (\{\$newchar_favorite_weapon\}), \$bonus: \$char."trait:body") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  return " "+oneof(capitalize(Describe(\$newchar))+" leaps out of the crowd, to grapple with the "+\$pirate+".", capitalize(Describe(\$newchar))+" is nearby and, back to back with "+Describe(\$char)+", they fight their way free.", "The "+\$pirate+" "+oneof("smiles", "grins", "leers")+" nastily, when "+Describe(\$newchar)+" hits him from "+oneof("behind", "the side")+".")+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = " "+capitalize(Describe(\$newchar))+" "+oneof("tries to help, but can't make it there in time.", "attacks the "+\$pirate+", but doesn't take him down.", "rushes to help, but is cut off by enemies.")+" The "+\$pirate+" "+oneof("slices", "slashes", "scythes")+" a "+oneof("cutlass", "dagger", "dirk", "knife", "sword")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the press of battle.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  response = ::run_incident(\$incidents: \$incidents);    
  if(!response) \{    
   ::remove_pc();    
   return output;    
  \} else \{    
   return response;    
  \}    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:describe_cannibals">
         X[M] return oneof("avaricious", "", "predative", "camouflaged", "greedy", "vulturine", "dirty", "filthy", "filth-covered", "astute", "slick", "wiley", "bedraggled", "one-armed", "raunchy", "squalid", "unsightly", "smutty", "scuzzy", "begrimed", "poorly armed", "stout", "ill-fed", "gap-toothed", "dirt covered", "blood spattered", "dangerous looking", "", "", "", "")+" "+oneof("brigand", "hooligan", "marauder", "outlaw", "pillager", "plunderer", "raider", "forager") +oneof("", "", "", "", "", "", " dual-wielding swords", " cracking a whip", " clad in dust-laden fineries", " missing two front teeth", " with blood-stained claws", " with a flea-infested beard", " cloaked in black", " riddled with bugs", " decorated in war paint", " wearing a murderous scowl", " snarling viciously", " humming a foreboding tune");
      </Core:Property>
      <Core:Property property="merry:lib:healed">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(!\$friendly_healer_tokens \|\| \$friendly_healer_tokens \< 20) return FALSE;    
  return TRUE;    
\} else if(\$stage == "test") \{    
  /* always passes */    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$friendly_healer_tokens -= 20;    
  return  oneof("Blood", "Red fluid")+" "+oneof("oozes", "trickles", "drips", "streams", "leaks", "flows")+" from the "+oneof("deep", "shallow", "considerable", "horrid", "perfunctorily", "subtle", "small", "notable", "serious", "gaping", "horrible")+" "+oneof("wound", "injury", "gash", "cut")+" "+Describe(\$char)+" "+oneof("obtained", "suffered", "endured", "gained")+" from a "+\$pirate+"'s "+oneof("swift", "skilled", "rapid", "precise", "lucky", "professional", "clumsy", "successful", "vicious", "savage", "haphazard")+" "+oneof("hit", "stroke", "motion", "move")+" with his "+oneof("blade", "hand", "dagger", "dirk", "knife", "longsword", "pitchfork", "torch", "log", "primitive club")+". "+oneof("A passing", "An attentive", "A ready", "An able", "An alert", "An adept", "An observant", "A perceptive", "A vigilant", "A running")+" "+\$ally+" "+oneof("spots", "takes note of", "notices", "sees", "espies", "detects")+" the injury and "+oneof("runs", "struggles", "sneaks", "dashes", "steps")+" to the side of "+Describe(\$char)+". "+capitalize(\$char."base:pronoun")+" "+oneof("swiftly", "agilely", "rapidly", "knowingly", "hurriedly", "haphazardly", "distractedly", "worriedly")+" "+oneof("tends to", "bandages", "applies a field dressing", "wraps", "attends")+" the injury"+oneof(", allowing "+Describe(\$char)+" to rejoin the fight", ". Catching "+\$char."base:possessive"+" breath "+Describe(\$char)+" can finally rejoin the battle", ", making it possible for "+Describe(\$char)+" to continue the fight")+". \<br/\>";    
\} else if(\$stage == "fail") \{    
  /* always passes */    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:healing">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  /* there needs to be a healer in the group */    
  \$list = copy(\$battle.pcs);    
  \$newchar = nil;    
  while(!\$newchar \&\& sizeof(\$list)) \{    
    \$i = random(sizeof(\$list));    
    if(\$list[\$i][1] == "healer" \&\& \$list[\$i][0] != \$char) \{    
      \$newchar = \$list[\$i][0];    
    \} else \{    
      \$list -= (\{ \$list[\$i] \});    
    \}    
  \}    
  if(\$newchar) return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$newchar, \$skills: (\{"mental:first-aid"\}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  return " The "+\$pirate+" "+oneof("slices", "slashes", "scythes")+" a "+oneof("cutlass", "dagger", "dirk", "knife", "sword")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the press of battle. "+capitalize(Describe(\$newchar))+" spots the injury, and manages to apply a hasty field dressing, allowing "+Describe(\$char)+" to rejoin the fight.\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = " The "+\$pirate+" "+oneof("slices", "slashes", "scythes")+" a "+oneof("cutlass", "dagger", "dirk", "knife", "sword")+" across "+Describe(\$char)+"'s "+oneof("stomach", "shoulder", "face", "leg", "arm", "gut", "chest")+" before moving off in the press of battle. "+capitalize(Describe(\$newchar))+oneof(" spots the injury, and dashes toward "+Describe(\$char)+", but gets lost in the fury of the battle, leaving the "+oneof("wound", "gouge", "injury", "slice")+" "+oneof ("unmended", "bleeding"), " rushes over, and hastily bandages the "+oneof("wound", "gouge", "injury", "slice")+", but not before "+Describe(\$char)+" passes out")+".\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  response = ::run_incident(\$incidents: \$incidents);    
  if(!response) \{    
   ::remove_pc();    
   return output;    
  \} else \{    
   return response;    
  \}    
    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:luck">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  return TRUE;    
/* decide who wins */   
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"career:scout"\}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* char won */   
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 20;    
  return capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$pirate+", however something almost stops "+Str(\$char."base:objective")+". Laughingly "+Str(\$char."base:pronoun")+" watches as a "+\$pirate+" "+oneof("stumbles in "+oneof(" an inconvenient", "a sneaky", "a covert", "a helpful", "a hidden", "a tactically placed")+" "+oneof("rock", "root", "pebble", "stone", "log", "branch")+" and falls face first into the ground, hitting his head badly.", "experiences the wonders of the woodland by meeting a swinging branch face-first. "+oneof("The poor guy starts to jump around yelling in pain.", "The bandit cries you a river.", "The lass (who said women can't be bandits, ha?) dizzily sits back on her derriere.", "He smacks his face with both hands trying to claw the excess leaves from his eyes. They have nothing to do there anyway.", "She annoyedly turns to the guilty tree and tries to chop it up for firewood, ignoring you in the meanwhile."), " "+oneof("falls", "steps", "stumbles", "trips")+" straight into "+oneof("a shallow", "a deep", "a perfunctory", "an inconvenient", "a hard to notice", "a hidden")+" "+oneof("hole", "leak")+" "+oneof(" and moves no more.", ". He yells out in pain, grabbing his injury.", ". He presents are feasible curse, considering the bad luck factors he had to endure in this battle.", ". She silently suffers.", ". He somehow manages to pull himself together and rejoins the fight with a bit of delay.", ". He now is happy to have bought that reinforced boots. He easily continues the fight.", ". He needs a few moments to compose himself."), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "hoop")+" of raptor "+oneof("dung", "droppings")+". "+oneof("He isn't too much bothered by the stench.", "He tries to go on, but slips in the pile further and lands on his rump. Ugh, I ain't gonna wash his clothes.", "He starts to kick his feet to remove most of the residuum.", "He boggles at his lack of attention.", "He notices too late, and slips in the substance.", "He starts to clean his boots for safety reasons.", "He fretfully searches for his wife in the battle, hoping she didn't notice. Darn."), "kicks straight into a metal bucket. Ouch. "+oneof("He starts to jump around holding his foot.", "She cries out loud.", "He just kicks into the innocent bucket again.", "He totally hates the world now.", "He tries to aim at you with the bucket while at it.", "He curses at any living creatures who invented buckets and metals.") );   
   
/* char lost, but enough token to save him */   
\} else if(\$stage == "fail") \{    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));    
  if(response) \{    
    output = capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$pirate+". Laughingly "+\$pirate+" watches as "+capitalize(Describe(\$char))+" "+oneof("stumbles in "+oneof(" an inconvenient", "a sneaky", "a covert", "a helpful", "a hidden", "a tactically placed")+" "+oneof("rock", "root", "pebble", "stone", "log", "branch")+" and falls face first into the ground.", "experiences the wonders of the woodland by meeting a swinging branch face-first. ", " "+oneof("falls", "steps", "stumbles", "trips")+" straight into "+oneof("a shallow", "a deep", "a perfunctory", "an inconvenient", "a hard to notice", "a hidden")+" "+oneof("hole", "leak"), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "hoop")+" of raptor "+oneof("dung", "droppings"), "kicks straight into a metal bucket. Ouch" )+response;    
    return output;    
  \}    
/* char lost, not enough token to save him */   
  output = capitalize(Describe(\$char))+" "+oneof("slowly", "carefully", "attentively", "smartly", "covertly", "attemptingly", "hopefully", "paranoidly", "swiftly", "hurriedly", "overconfidently", "zealously")+" "+oneof("tries to sneak by", "dashes at", "circles", "proceeds to", "sneaks around", "shadows", "attacks")+" a "+\$pirate+". Laughingly "+\$pirate+" watches as "+capitalize(Describe(\$char))+" "+oneof("stumbles in "+oneof(" an inconvenient", "a sneaky", "a covert", "a helpful", "a hidden", "a tactically placed")+" "+oneof("rock", "root", "pebble", "stone", "log", "branch")+" and falls face first into the ground.", "experiences the wonders of the woodland by meeting a swinging branch face-first. ", " "+oneof("falls", "steps", "stumbles", "trips")+" straight into "+oneof("a shallow", "a deep", "a perfunctory", "an inconvenient", "a hard to notice", "a hidden")+" "+oneof("hole", "leak"), " "+oneof("steps", "falls", "kneels", "stumbles", "trips", "sets a foot")+" into a big "+oneof("pile", "hoop")+" of raptor "+oneof("dung", "droppings"), "kicks straight into a metal bucket. Ouch" )+". "+capitalize(Describe(\$char))+" falls to the ground, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";    
  ::remove_pc();    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:maddash">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"combat:armor:rating" \}), \$bonus: \$char."trait:body") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
/* Character's Success */  
\} else if(\$stage == "pass") \{     
  \$enemy_pirate_tokens -= 20;     
 return capitalize(Describe(\$char))+" lets out "+oneof("a roar of pure rage", "a shout of exitment", "a ribald bit of song")+" and "+oneof("charges at", "dashes to", "weaves around a cluster of combat until reaching a", "careens directly at")+" a "+\$pirate+" who "+oneof("runs in fear for his life", "runs in fear for her life", "freezes as he is run through", "freezes as she is run through")+".\<br/\>";  
    
/* failure of character */    
\} else if(\$stage == "fail") \{     
/* if there is enough tokens to save the person */    
  response = ::run_incident(\$incidents: (\{ "rescued", "healed", "healing", "defending" \}));     
  if(response) \{     
    output = capitalize(Describe(\$char))+" lets out "+oneof("a pitiful squeak", "a shrill scream", "an ineffective mewl", "a hoarse shout")+" which causes "+\$pirate+" to "+oneof("laugh briefly", "stare blankly", "attack with greater ferocity", "double his attack") +" before landing a blow to "+\$char."base:possessive"+" "+oneof("shoulder", "arm", "belly", "leg", "hip", "head")+response;      
    return output;     
  \}     
/* if there is not enough token to save the char */    
    output = capitalize(Describe(\$char))+" lets out "+oneof("a pitiful squeak", "a shrill scream", "an ineffective mewl", "a hoarse shout")+" which causes "+\$pirate+" to "+oneof("laugh briefly", "stare blankly", "attack with greater ferocity", "double his attack") +" before landing a blow to "+\$char."base:possessive"+" "+oneof("shoulder", "arm", "belly", "leg", "hip", "head")+". "+capitalize(Describe(\$char))+" falls to the floor, unconscious.\<br/\>\<font color='red'\>["+capitalize(Describe(\$char))+" has been removed from the combat]\</font\>\<BR/\>";     
  ::remove_pc();     
  return output;     
\}     
return "nothing";
      </Core:Property>
      <Core:Property property="merry:lib:remove_pc">
         X[M] /* remove a PC from the list */    
int i;    
    
if(!this.pcs) return TRUE;    
if(!\$char) return FALSE;    
for(i=0;i\<sizeof(this.pcs);i++) \{    
  if(this.pcs[i][0] == \$char) \{    
    \$tmp = this.pcs[i];    
    this.pcs -= (\{ \$tmp \});    
  \}    
\}    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:rescued">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(!\$friendly_soldier_tokens \|\| \$friendly_soldier_tokens \< 20) return FALSE;    
  return TRUE;    
\} else if(\$stage == "test") \{    
  /* always passes */    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$friendly_soldier_tokens -= 20;    
  return " Before the "+\$pirate+" can "+oneof("do any serious damage", "attack", "take advantage of the situation")+", a "+\$ally+" "+oneof("arrives, and drives the scoundrel away", "rushes past, stabbing the bandit on the way", "intervenes, dueling the bandit in "+Describe(\$char)+"'s place", "lands a well-placed hit on the back of the bandit's head, rendering him unconscious")+".\<br/\>";    
\} else if(\$stage == "fail") \{    
  /* always passes */    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:run_incident">
         X[M] /* run a second incident, following the first */    
string incident;    
int i;    
    
if(!\$incidents \|\| !sizeof(Arr(\$incidents))) return nil;    
\$incidents = Arr(\$incidents);    
    
while(sizeof(\$incidents)) \{    
  incident = \$incidents[random(sizeof(\$incidents))];    
  \$incidents -= (\{ incident \});    
  if(Call(\$battle, incident, \$stage: "conditions")) \{    
    if(Call(\$battle, incident, \$stage: "test")) \{    
      return Call(\$battle, incident, \$stage: "pass");    
    \} else \{    
      return Call(\$battle, incident, \$stage: "fail");    
    \}    
  \}    
\}    
return nil;
      </Core:Property>
      <Core:Property property="merry:lib:swearing">
         X[M] /* an incident during the event */    
string output, response;    
if(!\$stage) error("No \$stage data passed for incident.");    
if(\$stage == "conditions") \{    
  if(\$role != "healer") return TRUE;    
  return FALSE;    
\} else if(\$stage == "test") \{    
  if(ironclaw::roll(\$roller: \$char, \$skills: (\{"career:thug" \}), \$bonus: \$char."trait:mind") \< ironclaw::roll(\$bonus: 24)) return FALSE;    
  return TRUE;    
\} else if(\$stage == "pass") \{    
  \$enemy_pirate_tokens -= 40;    
  return capitalize(Describe(\$char))+" "+oneof("swears fiercely", "lets out a fiersome curse")+", "+oneof("cowing "+\$char."base:possessive"+" enemies.", "scaring a "+\$pirate+" into "+oneof("running back to the woods.", "retreating from the fight altogether.", "wetting himself."))+"\<br/\>";    
\} else if(\$stage == "fail") \{    
  output = capitalize(Describe(\$char))+" "+oneof("attempts to swear, but it's clearly not "+\$char."base:possessive"+" table. "+oneof("A few raised eyebrows", "A ridiculed laughter", "An unconvinced applaud")+" is the reward.", "yells randomly at the enemies, mimicking the more skilled thugs in the party.", "screams at the enemy, as if being a thug.", "curses the stars, not having any better idea. The enemy isn't overly affected.", "attempts to cow the enemies by "+oneof("letting out a curse", "swearing", "exclaiming")+", \\""+oneof("Oh, fiddlesticks.", "Well, darn.", "Phooey.", "Voldemort's nipple!", "Have dinner with the Phelans!", "Be dinner guest with Avo nobles!", "Stumble in your beard, you hag!", "Marry a black cat with a broken mirror!")+"\\"")+"\<BR/\>";    
  return output;    
\}    
return "nothing";
      </Core:Property>
      <Core:Property property="pcs">
         (\{ (\{ \<Chatters:IC:cl:clover\>, "fighter", "combat:polearm" \}), (\{ \<Chatters:AE:gu:gus\>, "fighter", "combat:dagger" \}), (\{ \<Chatters:Backup:IC:cu:cullan0\>, "fighter", "combat:fencing" \}), (\{ \<Chatters:IC:ei:eiryk\>, "fighter", "combat:dagger" \}), (\{ \<Chatters:Backup:IC:il:ilo0\>, "fighter", "combat:dagger" \}), (\{ nil, "fighter", "combat:dagger" \}), (\{ \<Chatters:Backup:IC:al:alvaro0\>, "fighter", "combat:fencing" \}), (\{ \<Chatters:Backup:IC:no:noe0\>, "fighter", "combat:fencing" \}), (\{ nil, "fighter", "combat:polearm" \}), (\{ \<Chatters:Backup:IC:ch:chesh0\>, "fighter", "combat:fencing" \}), (\{ \<Chatters:Backup:IC:sa:sabastien0\>, "fighter", "combat:fencing" \}), (\{ \<Chatters:AE:ka:kaine\>, "fighter", "combat:fencing" \}), (\{ \<Chatters:IC:hu:hush\>, "healer", "combat:dagger" \}) \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1284329517, "balkaar", "E", 1284329524, "balkaar", "E", 1284329718, "balkaar", "E", 1284329971, "balkaar", "E", 1284330110, "balkaar", "E", 1284330655, "balkaar", "E", 1284332617, "balkaar", "E", 1284332642, "balkaar", "E", 1284339087, "balkaar", "E", 1284339333, "balkaar", "E", 1284339697, "balkaar", "E", 1284339772, "balkaar", "E", 1284339795, "balkaar", "E", 1284339979, "balkaar", "E", 1284340012, "balkaar", "E", 1284340060, "balkaar", "E", 1284341084, "balkaar", "E", 1284341525, "balkaar", "E", 1284342322, "balkaar", "E", 1284342931, "balkaar", "E", 1284343455, "balkaar", "E", 1284343708, "balkaar", "E", 1284343842, "balkaar", "E", 1284353549, "balkaar", "E", 1284359645, "balkaar", "E", 1284378431, "balkaar", "E", 1284425441, "balkaar", "E", 1284456112, "balkaar", "E", 1284457223, "balkaar", "E", 1284457706, "balkaar", "E", 1284458477, "balkaar", "E", 1284460321, "balkaar", "E", 1284463834, "balkaar", "E", 1284464700, "balkaar", "E", 1284464743, "balkaar", "E", 1284588060, "balkaar", "E", 1284588645, "balkaar", "E", 1284589396, "balkaar", "E", 1284593715, "balkaar", "E", 1284594857, "balkaar", "E", 1284663991, "balkaar", "E", 1284664084, "balkaar", "E", 1284664319, "balkaar", "E", 1284665213, "balkaar", "E", 1284665266, "balkaar", "E", 1284665305, "balkaar", "E", 1284665623, "balkaar", "E", 1284667221, "balkaar", "E", 1284667719, "balkaar", "E", 1284668063, "balkaar", "E", 1284668964, "balkaar", "E", 1284668980, "balkaar", "E", 1284669641, "balkaar", "E", 1284669737, "balkaar", "E", 1284669777, "balkaar", "E", 1284669801, "balkaar", "E", 1284669841, "balkaar", "E", 1284669907, "balkaar", "E", 1284669937, "balkaar", "E", 1284669993, "balkaar", "E", 1284670048, "balkaar", "E", 1284670372, "balkaar", "E", 1284670628, "balkaar", "E", 1284670647, "jominey", "E", 1284670674, "balkaar", "E", 1284670829, "jominey", "E", 1284670846, "balkaar", "E", 1284670875, "balkaar", "E", 1284671022, "balkaar", "E", 1284677172, "balkaar", "E", 1284678171, "balkaar", "E", 1306605341, "rastalabor", "X", 1306606128, "rastalabor", "X", 1306607086, "rastalabor", "E", 1306608425, "rastalabor", "X", 1306608568, "rastalabor", "X", 1306608637, "rastalabor", "X", 1306608664, "rastalabor", "X", 1306608702, "rastalabor", "E", 1306608825, "rastalabor", "X", 1306608913, "rastalabor", "X", 1306611913, "rastalabor", "X", 1306612482, "jominey", "E", 1306615942, "rastalabor", "X", 1306627623, "rastalabor", "X", 1306632966, "balkaar", "E", 1306633784, "rastalabor", "X", 1339170214, "meandmine", "E", 1339170474, "meandmine", "E", 1339170505, "meandmine", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
