<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="armorsmith:apprentice">
         (\{ ([ "a cast iron breastplate":(\{ \<Ironclaw:Props:Armorsmith:Plate:Torso:Breastplate\>, ([ "cost":0.0, "trait:material":"cast iron" ]) \}) ]), ([ "a soft brass bead":(\{ \<IronClaw:Props:Crafting:Parts:Bead\>, ([ "cost":0.2, "trait:material":"soft brass" ]) \}) ]), ([ "an empty red brass spittoon":(\{ \<Ironclaw:Props:Food/Drink:Containers:Spittoon\>, ([ "cost":0.0, "trait:material":"red brass" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="armorsmith:journeyman">
         (\{ ([ "a pair of pewter spaulders":(\{ \<Ironclaw:Props:Armorsmith:Plate:Arms:Spaulders\>, ([ "cost":0.0, "trait:material":"pewter" ]) \}) ]), ([ "a pair of bronze couters":(\{ \<Ironclaw:Props:Armorsmith:Plate:Arms:Couters\>, ([ "cost":0.18, "trait:material":"bronze" ]) \}) ]), ([ "a tin metal locker":(\{ \<IronClaw:Props:Crafting:Metals:UrMetalLocker\>, ([ "cost":0.0, "trait:material":"tin" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="armorsmith:master">
         (\{ ([ "an iron chastity belt":(\{ \<Ironclaw:Props:Armorsmith:Plate:Legs:ChastityBelt\>, ([ "cost":0.2, "trait:material":"iron" ]) \}) ]), ([ "a blackened bronze helmet":(\{ \<Ironclaw:Animals:Swamp:Loot:GatorSkullHelmet\>, ([ "cost":0.0, "trait:material":"blackened bronze" ]) \}) ]), ([ "a lit iron brazier":(\{ \<IronClaw:Props:Lighting:Source:Furniture:Brazier\>, ([ "cost":0.3, "trait:material":"iron" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="carpenter:apprentice">
         (\{ ([ "a juniper spoon":(\{ \<IronClaw:Props:Cooking:Utensils:WoodenSpoon\>, ([ "cost":0.13, "trait:material":"juniper" ]) \}) ]), ([ "a pair of black-tinted ash hairsticks":(\{ \<IronClaw:Props:Furniture:Misc:Hairsticks:Main\>, ([ "cost":0.1, "trait:color":"black-tinted", "trait:material":"ash" ]) \}) ]), ([ "a juniper hoop-and-stick":(\{ \<Ironclaw:Staff:Cersei:Props:Toys:HoopandStick\>, ([ "cost":0.26, "trait:material":"juniper" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="carpenter:journeyman">
         (\{ ([ "a three-drawer white-tinted spruce burl dresser":(\{ \<IronClaw:Props:Furniture:Storage:Dresser:3Drawer:Main\>, ([ "cost":0.75, "trait:color":"white-tinted", "trait:material":"spruce" ]) \}) ]), ([ "a yew hat rack":(\{ \<Allegory:Props:Furniture:Storage:Racks:RackHat\>, ([ "cost":0.45, "trait:material":"yew" ]) \}) ]), ([ "an empty large white-tinted yew barrel":(\{ \<Ironclaw:Props:Food/Drink:Containers:BarrelLarge\>, ([ "cost":0.75, "trait:color":"white-tinted", "trait:material":"yew" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="carpenter:master">
         (\{ ([ "a honey ash dovetail vanity":(\{ \<IronClaw:Props:Furniture:Storage:Vanity:Dovetail:3Drawer:Main\>, ([ "cost":0.5, "trait:color":"honey", "trait:material":"ash" ]) \}) ]), ([ "a willow display case":(\{ \<IronClaw:Props:Furniture:Storage:DisplayCase\>, ([ "cost":0.85, "trait:material":"willow" ]) \}) ]), ([ "an alder dowry chest":(\{ \<IronClaw:Props:Furniture:Storage:Chests:Dowry\>, ([ "cost":0.3, "trait:material":"alder" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="jeweler:apprentice">
         (\{ ([ "a pair of dark iron aquatic stud earrings":(\{ \<Allegory:Props:Jewelry:Earrings:AquaticStudGeneric\>, ([ "cost":0.0, "trait:material":"dark iron" ]) \}) ]), ([ "a pair of soft bronze posts":(\{ \<Allegory:Props:Jewelry:Earrings:UrPosts\>, ([ "cost":0.4, "trait:material":"soft bronze" ]) \}) ]), ([ "a bright tin tail ring":(\{ \<Ironclaw:Props:Jewelry:Rings:TailRing\>, ([ "cost":0.0, "trait:material":"bright tin" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="jeweler:journeyman">
         (\{ ([ "a soft bronze lace boardered ring":(\{ \<Allegory:Props:Jewelry:Rings:LaceBordered\>, ([ "cost":0.4, "trait:material":"soft bronze" ]) \}) ]), ([ "a helm stud earring":(\{ \<IronClaw:Props:Jewelry:Earrings:Aquatic:HelmStud\>, ([ "cost":0.0, "trait:material":"polished pewter" ]) \}) ]), ([ "a pewter cameo necklace":(\{ \<Allegory:Props:Jewelry:Necklace:Cameo\>, ([ "cost":0.0, "trait:material":"pewter" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="jeweler:master">
         (\{ ([ "an etched, poplin pocket chain":(\{ \<Allegory:Props:Jewelry:Belts:PocketChain\>, ([ "cost":0.8, "trait:color":"blue", "trait:material":"poplin" ]) \}) ]), ([ "a green wool motif anklet":(\{ \<Allegory:Props:Jewelry:Anklets:ShapedMotif\>, ([ "cost":1.4, "trait:color":"green", "trait:material":"wool" ]) \}) ]), ([ "a white cotton motif anklet":(\{ \<Allegory:Props:Jewelry:Anklets:ShapedMotif\>, ([ "cost":1.6, "trait:color":"white", "trait:material":"cotton" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="merry:lib:generate_orders">
         X[M] int i, j, k;

\$careers = \$this."trade:careers";
\$databases = \$this."trade:databases";
\$levels = map_indices(\$this."trade:levels");

for(i = 0; i \< sizeof(\$careers); i++) \{
    if(\$dbg) EmitTo(\$debugger, dump_value(\$careers[i]));
    for(k = 0; k \< sizeof(\$levels); k++) \{
        \$t = (\{ \});
        for(j = 0; j \< sizeof(\$databases); j++) \{
            \$param = (\{ \$databases[j], \$careers[i], \$levels[k] \});
            \$t \|= ::get_trade_list();
        \}

        \$order1 = \$t[random(sizeof(\$t))];
        \$data1 = ::randomize_properties(\$ob: \$order1);
        \$tmp = Spawn(\$order1);
        Set(\$tmp, "trait:material", \$data1["trait:material"]);
        if(\$data1["trait:color"]) Set(\$tmp, "trait:color", \$data1["trait:color"]);
        \$d1 = ([ ]);
        \$d1[Describe(\$tmp)] = (\{ \$order1, \$data1 \});
        Slay(\$tmp);

        \$order2 = \$t[random(sizeof(\$t))];
        \$data2 = ::randomize_properties(\$ob: \$order2);
        \$tmp = Spawn(\$order2);
        Set(\$tmp, "trait:material", \$data2["trait:material"]);
        if(\$data2["trait:color"]) Set(\$tmp, "trait:color", \$data2["trait:color"]);
        \$d2 = ([ ]);
        \$d2[Describe(\$tmp)] = (\{ \$order2, \$data2 \});
        Slay(\$tmp);

        \$order3 = \$t[random(sizeof(\$t))];
        \$data3 = ::randomize_properties(\$ob: \$order3);
        \$tmp = Spawn(\$order3);
        Set(\$tmp, "trait:material", \$data3["trait:material"]);
        if(\$data3["trait:color"]) Set(\$tmp, "trait:color", \$data3["trait:color"]);
        \$d3 = ([ ]);
        \$d3[Describe(\$tmp)] = (\{ \$order3, \$data3 \});
        Slay(\$tmp);

        Set(\$this, \$careers[i] + ":" + \$levels[k], (\{ \$d1, \$d2, \$d3 \}));
    \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:get_material_cost">
         X[M] \$tradingLists = \$this."trade:merchants"[\$type];

/* Look for material */
for(\$i = 0; \$i \< sizeof(\$tradingLists) \&\& !\$found; \$i++) \{
    \$list = copy(\$tradingLists[\$i]."*");
    \$temp = map_indices(\$list);
    for(\$j = 0; \$j \< sizeof(\$temp); \$j++) \{
        \$temp2 = \$list[\$temp[\$j]];
        if(typeof(\$temp2) == 6) \{
            if(\$temp2["object"]) \{
                \$ob = \$temp2["object"];
                if(\$ob."trait:material" == \$material) \{
                    \$materialCost = Flt(Flt(\$ob."nip:item:cost")/100.0)/Flt(\$ob."trait:quantity");
                    \$found = 1;
                \}
            \}
        \}
    \}
\}

if(!\$found) \$materialCost = 0;

\$found = 0;
/* Look for color */
for(\$i = 0; \$color \&\& \$i \< sizeof(\$tradingLists) \&\& !\$found; \$i++) \{
    \$list = copy(\$tradingLists[\$i]."*");
    \$temp = map_indices(\$list);
    for(\$j = 0; \$j \< sizeof(\$temp); \$j++) \{
        \$temp2 = \$list[\$temp[\$j]];
        if(typeof(\$temp2) == 6) \{
            if(\$temp2["object"]) \{
                \$ob = \$temp2["object"];
                if(\$ob."trait:color" == \$color) \{
                    \$colorCost = Flt(Flt(\$ob."nip:item:cost")/100.0)/10.0;
                    \$found = 1;
                \}
            \}
        \}
    \}
\}

if(!\$found \&\& \$color) \$colorCost = 0;

return Flt(\$colorCost) + Flt(\$materialCost);
      </Core:Property>
      <Core:Property property="merry:lib:get_trade_list">
         X[M] \$db = structure_propmap(copy(\$param[0]."*"))["alteration"]["knowledge"];
\$db2 = map_indices(\$db);

\$lowerLimit = \$this."trade:levels"[\$param[2]][0];
\$upperLimit = \$this."trade:levels"[\$param[2]][1];

\$allThings = (\{ \});

\$restricted = (\{ "postsaq", "postscr" \});

for(\$i = 0; \$i \< sizeof(\$db2); \$i++) \{
  if(\$db[\$db2[\$i]][\$param[1]]) \{
    \$temp = \$db[\$db2[\$i]][\$param[1]];
    \$temp2 = map_indices(\$temp);
    for(\$j = 0; \$j \< sizeof(\$temp2); \$j++) \{
        if(Int(\$temp2[\$j]) \>= \$lowerLimit \&\& Int(\$temp2[\$j]) \<= \$upperLimit) \{
            \$things = \$temp[\$temp2[\$j]];
            \$things2 = map_indices(\$things);
            for(\$k = 0; \$k \< sizeof(\$things2); \$k++) \{
                \$tada = \$things[\$things2[\$k]];
                \$tada2 = explode(\$db2[\$i], "-");
                if(!member(\$tada2[1], \$restricted)) \{
                  if(\$tada["newobject"]) \{
                    \$allThings \|= (\{ \$tada["newobject"] \});
                  \}
                \}
            \}
        \}
    \}
  \}
\}

/*
\$delay(0.01, FALSE, "7712");
*/

return \$allThings;
      </Core:Property>
      <Core:Property property="merry:lib:get_unit_cost">
         X[M] \$units = ::get_units(\$ob: \$ob);
\$words = explode(\$units[1], " ");
\$type = replace_strings(\$words[sizeof(\$words)-1], "s", "", ".", "");

switch(\$type) \{
    case "cord":
    \{
        \$cost = Flt(\$units[0]/10);
        \$base = "lumber";
        break;
    \}
    case "feet":
    \{
        if(contains("Jewelry", Str(\$ob))) \{
            \$cost = Flt(0.3*\$units[0]);
            \$base = "bar";
        \} else \{
            \$cost = Flt(\$units[0]/10);
            \$base = "rod";
        \}
        break;
    \}
    case "gram":
    \{
        \$cost = Flt(\$units[0]/5);
        \$base = "bar";
        break;
    \}
    case "yard":
    \{
        \$cost = Flt(\$units[0]/10);
        \$base = "fabric";
        break;
    \}
    case "pound":
    \{
        \$cost = Flt(\$units[0]/100);
        \$base = "stone";
        break;
    \}
\}

return (\{ \$cost, \$base \});
      </Core:Property>
      <Core:Property property="merry:lib:get_units">
         X[M] /* item is inherited */

int i, j, x, k, z;
mixed db, temp, temp2, temp3, temp4, temp5, item, ob, found, material, list, type, costToMake, final, brief, thing, cost;
mixed* craftingLists;

/* List all the crafting lists here */
craftingLists = this."trade:databases";

/* Does the item exist on one of the crafting lists? */
found = 0;
for(i = 0; i \< sizeof(craftingLists) \&\& !found; i++) \{
    db = structure_propmap(copy(craftingLists[i]."*"))["alteration"]["knowledge"];
    temp = map_indices(db);
    for(j = 0; j \< sizeof(temp); j++) \{
        temp2 = map_indices(db[temp[j]]);
        for(k = 0; k \< sizeof(temp2); k++) \{
            temp3 = map_indices(db[temp[j]][temp2[k]]);
            for(x = 0; x \< sizeof(temp3); x++) \{
                temp4 = map_indices(db[temp[j]][temp2[k]][temp3[x]]);
                for(z = 0; z \< sizeof(temp4); z++) \{
                    temp5 = db[temp[j]][temp2[k]][temp3[x]][temp4[z]];
                    if(temp5["newobject"] \&\& temp5["newobject"] == \$ob) \{
                        if(temp5["cost"]) \{
                            return temp5["cost"];
                        \} else \{
                            item = explode(temp[j], "-")[1];
                            found = 1;
                        \}
                    \}
                \}
            \}
        \}
    \}
\}

if(item == "hats") item = "hat";
if(item == "shirts") item = "shirt";
if(item == "jackets") item = "jacket";
if(item == "gowns") item = "gown";
if(item == "scarfs") item = "scarf";
if(item == "flowers") item = "flower";
if(item == "belts") item = "belt";
if(item == "dresses") item = "dress";
if(item == "skirts") item = "skirt";
if(item == "pouches") item = "pouch";
if(item == "feathers") item = "feather";
if(item == "generictiles") item = "tiles";
if(item == "posts") item = "post-pair";
if(item == "post") item = "post-single";

type = \$ob."trait:objecttype";
brief = \$ob."trait:brief";

/* Does the item exist on one of the crafting lists? */
found = 0;
for(i = 0; i \< sizeof(craftingLists) \&\& !found; i++) \{
    db = copy(craftingLists[i]."*");
    temp = map_indices(db);
    for(j = 0; j \< sizeof(temp); j++) \{
        if(typeof(db[temp[j]]) == 6) \{
            temp2 = db[temp[j]];
            if(temp2[item]) \{
                if(temp2[item]["cost"]) \{
                    return temp2[item]["cost"];
                \}
            \} else if(temp2[type]) \{
                if(temp2[type]["cost"]) \{
                    return temp2[type]["cost"];
                \}
            \} else if(temp2[brief]) \{
                if(temp2[brief]["cost"]) \{
                    return temp2[brief]["cost"];
                \}
            \}
        \}
    \}
\}

EmitTo(nil /* defunct */, TAG(Str(\$ob) + " (" + Str(item) + ") not found", "imp"));

return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:randomize_properties">
         X[M] \$unitCost = ::get_unit_cost(\$ob: \$ob);

\$type = \$unitCost[1];

switch(\$type) \{
    case "lumber":
    \{
        \$material = (\{ "cedar", "elm", "mahogany", "maple", "oak", "willow", "alder", "ash", "beech", "birch", "hickory", "juniper", "myrtle", "pine", "poplar", "spruce", "teak", "yew" \});
        \$color = (\{ "red", nil, "green", nil, "blue", nil, "violet", nil, "dark", nil, "honey", nil, "black-tinted", nil, "clear", nil, "white-tinted", nil \});
        break;
    \}
    case "rod":
    \{
        \$material = (\{ "blackened bronze", "cast iron", "pewter", "red brass", "tin", "wrought iron", "iron", "bronze", "copper", "brass" \});
        \$color = (\{ nil \});
        break;
    \}
    case "fabric":
    \{
        \$material = (\{ "damask", "muslin", "samite", "silk", "batiste", "faux fur", "poplin", "suede", "velvet", "whipcord", "barras", "brocade", "calico", "cotton", "felt", "flannel", "gingham", "linen", "satin", "tweed", "broadcloth", "burlap", "canvas", "hemp", "leather", "sackcloth", "wool", "woolsey" \});
        \$color = (\{ "black", "blue", "brown", "gray", "green", "orange", "pink", "purple", "red", "white", "yellow" \});
        break;
    \}
    case "stone":
    \{
        \$material = (\{ "granite", "limestone", "sandstone", "slate" \});
        \$color = (\{ nil \});
        break;
    \}
    case "bar":
    \{
        \$material = (\{ "bright tin", "dark iron", "lead", "polished pewter", "copper", "soft brass", "soft bronze" \});
        \$color = (\{ nil \});
        break;
    \}
\}

\$randomMaterial = \$material[random(sizeof(\$material))];
\$randomColor = \$color[random(sizeof(\$color))];
\$materialCost = ::get_material_cost(\$type: \$type, \$material: \$randomMaterial, \$color: \$randomColor);
\$totalCost = \$materialCost * Flt(\$unitCost[0]);

return ([ "trait:material":\$randomMaterial, "trait:color":\$randomColor, "cost":\$totalCost ]);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1480987176, "jominey", "E", 1480987299, "jominey", "E", 1480987395, "jominey", "E", 1480987423, "jominey", "E", 1480987809, "jominey", "E", 1480987992, "jominey", "E", 1480988194, "jominey", "E", 1480988356, "jominey", "E", 1480988525, "jominey", "E", 1480988602, "jominey", "E", 1480988684, "jominey", "E", 1480988895, "jominey", "E", 1480989143, "jominey", "E", 1480989230, "jominey", "E", 1480989330, "jominey", "E", 1480989547, "jominey", "E", 1480989701, "jominey", "E", 1480990065, "jominey", "E", 1480990162, "jominey", "E", 1480990203, "jominey", "E", 1480990236, "jominey", "E", 1480990260, "jominey", "E", 1480990328, "jominey", "E", 1480990385, "jominey", "E", 1480990398, "jominey", "E", 1480990795, "jominey", "E", 1480990892, "jominey", "E", 1480990899, "jominey", "E", 1480991116, "jominey", "E", 1480991277, "jominey", "E", 1480992832, "jominey", "E", 1480993003, "jominey", "E", 1480993032, "jominey", "E", 1480993715, "jominey", "E", 1480993740, "jominey", "E", 1480994152, "jominey", "E", 1480994341, "jominey", "E", 1480994433, "jominey", "E", 1480994588, "jominey", "E", 1480994626, "jominey", "E", 1480994698, "jominey", "E", 1480995334, "jominey", "E", 1480995416, "jominey", "E", 1480995651, "jominey", "E", 1480995721, "jominey", "E", 1480995871, "jominey", "E", 1480996095, "jominey", "E", 1480996321, "jominey", "E", 1480996518, "jominey", "E", 1480996568, "jominey", "E", 1480996732, "jominey", "E", 1480997065, "jominey", "E", 1480997140, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="seamstress:apprentice">
         (\{ ([ "a blue hemp nebulae headdress":(\{ \<Ironclaw:Props:Clothing:Remove:HatNebulae\>, ([ "cost":3.92, "trait:color":"blue", "trait:material":"hemp" ]) \}) ]), ([ "a gray damask ribbon":(\{ \<Ironclaw:Props:Clothing:Accessories:Ribbon\>, ([ "cost":0.0, "trait:color":"gray", "trait:material":"damask" ]) \}) ]), ([ "a green whipcord shirt":(\{ \<Allegory:Props:Clothing:Shirts:Shirts:Generic\>, ([ "cost":9.64, "trait:color":"green", "trait:material":"whipcord" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="seamstress:journeyman">
         (\{ ([ "a red muslin ankle-length kilt":(\{ \<Allegory:Props:Clothing:Skirts:KiltAnkleLength\>, ([ "cost":10.84, "trait:color":"red", "trait:material":"muslin" ]) \}) ]), ([ "an orange velvet hooded lacerna cloak":(\{ \<Allegory:Props:Clothing:Cloaks:CloakLacernaHooded\>, ([ "cost":11.44, "trait:color":"orange", "trait:material":"velvet" ]) \}) ]), ([ "a blue silk overgown":(\{ \<Ironclaw:Props:Clothing:Gowns:Overgown\>, ([ "cost":37.92, "trait:color":"blue", "trait:material":"silk" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="seamstress:master">
         (\{ ([ "a purple canvas cathedral-length train":(\{ \<Allegory:Props:Clothing:Accessories:Trains:Cathedral\>, ([ "cost":34.6, "trait:color":"purple", "trait:material":"canvas" ]) \}) ]), ([ "a purple velvet strapless, split-front dress":(\{ \<Ironclaw:Props:Clothing:Remove:DressSplitFrontStrapless\>, ([ "cost":30.08, "trait:color":"purple", "trait:material":"velvet" ]) \}) ]), ([ "a blue woolsey sideless surcoat":(\{ \<Allegory:Props:Clothing:Coats:SurcoatSideless\>, ([ "cost":32.48, "trait:color":"blue", "trait:material":"woolsey" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="stonemason:apprentice">
         (\{ ([ "a granite ash tray":(\{ \<IronClaw:Props:Stonemason:Ashtray\>, ([ "cost":0.0075, "trait:material":"granite" ]) \}) ]), ([ "a limestone whetstone":(\{ \<IronClaw:Props:Stonemason:Whetstone\>, ([ "cost":0.002, "trait:material":"limestone" ]) \}) ]), ([ "a stack of tiles":(\{ \<Ironclaw:Props:Crafting:Room:Tiles:UrTile\>, ([ "cost":0.15, "trait:material":"slate" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="stonemason:journeyman">
         (\{ ([ "a slate lilypad-shaped plate":(\{ \<IronClaw:Props:Stonemason:Plates:Lilypad-Shaped\>, ([ "cost":0.15, "trait:material":"slate" ]) \}) ]), ([ "a sandstone lilypad-shaped saucer":(\{ \<IronClaw:Props:Stonemason:Saucers:Lilypad-Shaped\>, ([ "cost":0.012, "trait:material":"sandstone" ]) \}) ]), ([ "a stack of small sandstone mosaic tiles":(\{ \<Ironclaw:Props:Crafting:Room:Tiles:TileMosaic\>, ([ "cost":0.24, "trait:material":"sandstone" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="stonemason:master">
         (\{ ([ "a limestone oval shaped bathing tub":(\{ \<IronClaw:Props:Stonemason:Bathtub\>, ([ "cost":0.12, "trait:material":"limestone" ]) \}) ]), ([ "a slate ruffle-edged saucer":(\{ \<IronClaw:Props:Stonemason:Saucers:Ruffle-Edged\>, ([ "cost":0.0075, "trait:material":"slate" ]) \}) ]), ([ "a granite oval shaped bathing tub":(\{ \<IronClaw:Props:Stonemason:Bathtub\>, ([ "cost":0.09, "trait:material":"granite" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="tailor:apprentice">
         (\{ ([ "a red linen scarf":(\{ \<Ironclaw:Props:Clothing:Accessories:Scarfs:Generic\>, ([ "cost":0.62, "trait:color":"red", "trait:material":"linen" ]) \}) ]), ([ "a black broadcloth slit-neck shirt":(\{ \<Allegory:Props:Clothing:Shirts:Shirts:SlitNeck\>, ([ "cost":1.64, "trait:color":"black", "trait:material":"broadcloth" ]) \}) ]), ([ "a blue sackcloth pouch":(\{ \<Allegory:Props:Clothing:Containers:Pouch\>, ([ "cost":1.42, "trait:color":"blue", "trait:material":"sackcloth" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="tailor:journeyman">
         (\{ ([ "yellow broadcloth wallpaper":(\{ \<Ironclaw:Props:Crafting:Room:Wallpaper:UrWallpaper\>, ([ "cost":17.2, "trait:color":"yellow", "trait:material":"broadcloth" ]) \}) ]), ([ "a pink linen ascot":(\{ \<Ironclaw:Props:Clothing:Accessories:Scarfs:Ascot\>, ([ "cost":2.02, "trait:color":"pink", "trait:material":"linen" ]) \}) ]), ([ "a black muslin padded shirt":(\{ \<Allegory:Props:Clothing:Shirts:Shirts:Padded\>, ([ "cost":4.44, "trait:color":"black", "trait:material":"muslin" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="tailor:master">
         (\{ ([ "an orange felt double-wrap belt":(\{ \<Allegory:Props:Clothing:Belts:BeltDoubleWrap\>, ([ "cost":2.52, "trait:color":"orange", "trait:material":"felt" ]) \}) ]), ([ "a white batiste buttoned long coat":(\{ \<Allegory:Props:Clothing:Coats:ButtonedLong\>, ([ "cost":10.88, "trait:color":"white", "trait:material":"batiste" ]) \}) ]), ([ "a red batiste tebenna":(\{ \<Allegory:Props:Clothing:Cloaks:Tebenna\>, ([ "cost":6.64, "trait:color":"red", "trait:material":"batiste" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="trade:careers">
         (\{ "tailor", "seamstress", "weaponsmith", "armorsmith", "carpenter", "stonemason", "jeweler" \})
      </Core:Property>
      <Core:Property property="trade:databases">
         (\{ \<Ironclaw:Lib:Crafting:Clothing:Old:SeamstressDB\>, \<Ironclaw:Lib:Crafting:Clothing:Old:TailorDB\>, \<Allegory:Lib:Crafting:Blacksmith:ArmourDB\>, \<Ironclaw:Lib:Crafting:Jeweler:Old:JeweleryDB\>, \<Allegory:Lib:Crafting:Blacksmith:MetalRodDB\>, \<Allegory:Lib:Crafting:Blacksmith:WeaponsDB\>, \<Ironclaw:Lib:Crafting:Stone:Backup:StoneDB\>, \<Ironclaw:Lib:Crafting:Wood:Backups:LumberDB\>, \<Ironclaw:Lib:Crafting:Wood:Backups:MiscDB\>, \<Ironclaw:Lib:Crafting:Wood:Backups:RoomMod\> \})
      </Core:Property>
      <Core:Property property="trade:levels">
         ([ "apprentice":(\{ 1, 8 \}), "journeyman":(\{ 9, 16 \}), "master":(\{ 17, 24 \}) ])
      </Core:Property>
      <Core:Property property="trade:merchants">
         ([ "bar":(\{ \<Ironclaw:NPCs:Traders:TradingLists:JewelerNewtown\>, \<Allegory:NPCs:NIPs:TradingLists:Northeast:Smithy:Jeweler\> \}), "fabric":(\{ \<Ironclaw:NPCs:Traders:TradingLists:ClothMerchant\>, \<Allegory:NPCs:NIPs:TradingLists:Northeast:Tailors:FabricBasic\>, \<Allegory:NPCs:NIPs:TradingLists:Northeast:Tailors:Dyes\> \}), "lumber":(\{ \<Allegory:NPCs:NIPs:TradingLists:Northeast:Carpenter:LumberBasic\>, \<Allegory:NPCs:NIPs:TradingLists:Northeast:Carpenter:LumberLuxury\> \}), "rod":(\{ \<Allegory:NPCs:NIPs:TradingLists:Northeast:Smithy:Blacksmith\>, \<Ironclaw:NPCs:Traders:TradingLists:BlacksmithNewtown\> \}), "stone":(\{ \<Allegory:NPCs:NIPs:TradingLists:Northeast:Stonemason:Mason\>, \<Ironclaw:NPCs:Traders:TradingLists:StonemasonNewtown\> \}) ])
      </Core:Property>
      <Core:Property property="weaponsmith:apprentice">
         (\{ ([ "a brass sword scabbard":(\{ \<Ironclaw:Props:Weapons:Sheaths:Scabbards:Shortsword\>, ([ "cost":43.6, "trait:material":"brass" ]) \}) ]), ([ "a bronze sword scabbard":(\{ \<Ironclaw:Props:Weapons:Sheaths:Scabbards:Shortsword\>, ([ "cost":3.3, "trait:material":"bronze" ]) \}) ]), ([ "a pair of cast iron scissors":(\{ \<IronClaw:Props:Barber:Craftable:Scissors\>, ([ "cost":3.0, "trait:material":"cast iron" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="weaponsmith:journeyman">
         (\{ ([ "a red brass drawknife":(\{ \<IronClaw:Props:Tools:Blacksmith:Drawknife\>, ([ "cost":1.2, "trait:material":"red brass" ]) \}) ]), ([ "a copper drawknife":(\{ \<IronClaw:Props:Tools:Blacksmith:Drawknife\>, ([ "cost":1.3, "trait:material":"copper" ]) \}) ]), ([ "a pewter spatula probe":(\{ \<IronClaw:Props:Medic:Tools:SpatulaProbe\>, ([ "cost":1.2, "trait:material":"pewter" ]) \}) ]) \})
      </Core:Property>
      <Core:Property property="weaponsmith:master">
         (\{ ([ "a brass cultivator":(\{ \<IronClaw:Props:Blacksmith:Gardening:Cultivator\>, ([ "cost":3.0, "trait:material":"brass" ]) \}) ]), ([ "a red alder longbow":(\{ \<Allegory:Props:Weapons:Ranged:Medium:Bow\>, ([ "cost":0.3, "trait:color":"red", "trait:material":"alder" ]) \}) ]), ([ "a green maple short bow":(\{ \<Allegory:Props:Weapons:Ranged:Medium:ShortBow\>, ([ "cost":0.51, "trait:color":"green", "trait:material":"maple" ]) \}) ]) \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
