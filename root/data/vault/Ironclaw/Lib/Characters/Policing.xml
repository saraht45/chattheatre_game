<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:act-pre:command%logging">
         X[M] /* record the actions of this PC */
string name, record;
object log;
mixed *my_arr;

/* get character name */
name = name(\$actor)[15..];
/* does the logging whatsit exist? */
if(!Obj("Ironclaw:Lib:Characters:Logs:"+name))
  catch(Call(\$\{Lib:objects\}, "create_of_type", \$name: "Ironclaw:Lib:Characters:Logs:"+name, \$type: "propcontainer"));

log = Obj("Ironclaw:Lib:Characters:Logs:"+name);

/* do we have a current record to add to in the log? */
if(\$actor."logging:record") \{
  record = Str(\$actor."logging:record");
\} else \{
  \$actor."logging:record" = time();
  record = Str(\$actor."logging:record");
\}
if(!Get(log, record))
  Set(log, record, (\{ \}) );

my_arr = Get(log, Str(record));
my_arr += (\{ (\{ args, dump_value(args) \}) \});
Set(log, record, my_arr );

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:command%logging">
         X[M] /* record the actions of this PC */
string name, record;
object log;
mixed *my_arr;

/* get character name */
name = name(this)[15..];
/* does the logging whatsit exist? */
if(!Obj("Ironclaw:Lib:Characters:Policing:Logs:"+name)) \{
  catch(Call(\$\{Lib:objects\}, "create_of_type", \$name: "Ironclaw:Lib:Characters:Policing:Logs:"+name, \$type: "propcontainer"));
\}

log = Obj("Ironclaw:Lib:Characters:Logs:"+name);

/* do we have a current record to add to in the log? */
if(this."logging:record") \{
  record = Str(this."logging:record");
\} else \{
  this."logging:record" = time();
  record = Str(this."logging:record");
\}
if(!Get(log, record))
  Set(log, record, (\{ \}) );

my_arr = Get(log, Str(record));
my_arr += (\{ (\{ args, dump_value(args) \}) \});
Set(log, record, my_arr );

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052088, "-", "SYNC", 1217299836, "tonyd", "P", 1217299988, "tonyd", "P", 1217300074, "tonyd", "P", 1217300174, "tonyd", "P", 1217300232, "tonyd", "P", 1217300409, "tonyd", "P", 1217300504, "tonyd", "P", 1217300527, "tonyd", "P", 1217300559, "tonyd", "P", 1217301001, "tonyd", "P", 1217301049, "tonyd", "P", 1217301246, "tonyd", "P", 1217301378, "tonyd", "P", 1217301494, "tonyd", "P", 1217301547, "tonyd", "P", 1217301568, "tonyd", "P", 1217301602, "tonyd", "P", 1217301620, "tonyd", "P", 1217301672, "tonyd", "P", 1217301682, "tonyd", "P", 1217301776, "tonyd", "P", 1217304830, "tonyd", "P", 1217304852, "tonyd", "P", 1217306524, "tonyd", "P", 1275480424, "tonyd", "P", 1468716986, "tonyd", "P", 1468717008, "tonyd", "P" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
