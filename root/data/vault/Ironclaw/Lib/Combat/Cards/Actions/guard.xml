<object clone="/usr/SkotOS/obj/meracha" owner="SkotOS">
  <SkotOS:MerAcHa action_id="guard">
    <Core:PCProperties>
      <Core:Property property="gimli:global:action">
         "E[G]\\n// Allow one PC to protect another during combat\\n\\n// No target, or target is \$actor, just emote\\nif(!\$target) return TRUE;\\nif(NRefOb(\$target) == \$actor) return TRUE;\\n\\n// Neither are in combat, just emote\\nif(!\$actor.combat \&\& !NRefOb(\$target).combat) return TRUE;\\n\\n// Target isn't in combat, don't need to be defended\\nif(!NRefOb(\$target).combat) \{\\n  EmitTo(\$actor, TAG(Describe(NRefOb(\$target))+\\" is not in combat.\\", \\"imp\\"));\\n  return TRUE;\\n\}\\n\\n// \$actor needs to be in combat before defending\\nif(!\$actor.combat) \{\\n  ccombat::start_fight_joinfight(\$target:nil);\\n  EmitTo(\$actor, TAG(\\"You have joined the combat.\\", \\"imp\\"));\\n\}\\n\\nif(\$actor.combat) \{\\n  // Actor was (or now is) in a fight\\n  if(\$actor.combat[\\"guarding\\"] == NRefOb(\$target)) \{\\n    EmitTo(\$actor, \\"You are already guarding \\"+Describe(NRefOb(\$target))+\\".\\");\\n    return TRUE;\\n  \}\\n  \\n  if(\$actor.combat[\\"actions\\"] \&\& \$actor.combat[\\"actions\\"] \>= 1) \{\\n    // Got some spare actions.\\n    \$delay(0.01, TRUE);\\n    \\n    // Remove the previous PC that you were guarding\\n    if(\$actor.combat[\\"guarding\\"]\\n    \&\& \$actor.combat[\\"guarding\\"].combat\\n    \&\& \$actor.combat[\\"guarding\\"].combat[\\"guarded_by\\"]) \{\\n      \$actor.combat[\\"guarding\\"].combat[\\"guarded_by\\"] -= (\{ \$actor \});\\n    \}\\n    \\n    \$actor.combat[\\"guarding\\"] = NRefOb(\$target);\\n    if(!NRefOb(\$target).combat[\\"guarded_by\\"]) NRefOb(\$target).combat[\\"guarded_by\\"] = (\{ \});\\n    NRefOb(\$target).combat[\\"guarded_by\\"] \|= (\{ \$actor \});\\n    \\n    \$actor.combat[\\"target\\"] = nil;\\n    \\n    ccombat::charge_action(\$char:\$actor);\\n  \} else \{\\n    EmitTo(\$actor, \\"You shift yourself, trying to get into position to protect \\"+Describe(NRefOb(\$target))+\\".\\");\\n    \$actor.combat[\\"to_guard\\"] = NRefOb(\$target);\\n    return FALSE;\\n  \}\\n\}\\n\\nreturn TRUE;"
      </Core:Property>
      <Core:Property property="merry:global:action">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:global:action instead! */
/* Allow one PC to protect another during combat */

/* No target, or target is \$actor, just emote */
if(!\$target) return TRUE;
if(NRefOb(\$target) == \$actor) return TRUE;

/* Neither are in combat, just emote */
if(!\$actor.combat \&\& !NRefOb(\$target).combat) return TRUE;

/* Target isn't in combat, don't need to be defended */
if(!NRefOb(\$target).combat) \{
  EmitTo(\$actor, TAG(Describe(NRefOb(\$target))+" is not in combat.", "imp"));
  return TRUE;
\}

/* \$actor needs to be in combat before defending */
if(!\$actor.combat) \{
  ccombat::start_fight_joinfight(\$target: nil);
  EmitTo(\$actor, TAG("You have joined the combat.", "imp"));
\}

if(\$actor.combat) \{
  /* Actor was (or now is) in a fight */
  if(\$actor.combat["guarding"] == NRefOb(\$target)) \{
    EmitTo(\$actor, "You are already guarding "+Describe(NRefOb(\$target))+".");
    return TRUE;
  \}
  
  if(\$actor.combat["actions"] \&\& \$actor.combat["actions"] \>= 1) \{
    /* Got some spare actions. */
    \$delay(0.01, TRUE, "76f1");
    
    /* Remove the previous PC that you were guarding */
    if(\$actor.combat["guarding"]
    \&\& \$actor.combat["guarding"].combat
    \&\& \$actor.combat["guarding"].combat["guarded_by"]) \{
      \$actor.combat["guarding"].combat["guarded_by"] -= (\{ \$actor \});
    \}
    
    \$actor.combat["guarding"] = NRefOb(\$target);
    if(!NRefOb(\$target).combat["guarded_by"]) NRefOb(\$target).combat["guarded_by"] = (\{ \});
    NRefOb(\$target).combat["guarded_by"] \|= (\{ \$actor \});
    
    \$actor.combat["target"] = nil;
    
    ccombat::charge_action(\$char: \$actor);
  \} else \{
    EmitTo(\$actor, "You shift yourself, trying to get into position to protect "+Describe(NRefOb(\$target))+".");
    \$actor.combat["to_guard"] = NRefOb(\$target);
    return FALSE;
  \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052081, "-", "SYNC", 1221752477, "???", "R", 1469249309, "tonyd", "R", 1469249344, "tonyd", "E", 1469249382, "tonyd", "P", 1469249401, "tonyd", "P", 1469249445, "tonyd", "P", 1469249490, "tonyd", "P", 1469249506, "tonyd", "P", 1469249654, "tonyd", "P", 1469249672, "tonyd", "P", 1469249678, "tonyd", "P", 1469249716, "tonyd", "P", 1469249758, "tonyd", "P", 1469249803, "tonyd", "P", 1469249825, "tonyd", "P", 1469249910, "tonyd", "P", 1469249992, "tonyd", "P", 1469250609, "tonyd", "P", 1469250675, "tonyd", "P", 1469250813, "tonyd", "P", 1469251466, "tonyd", "P", 1469257659, "tonyd", "P", 1469258036, "tonyd", "P", 1469258077, "tonyd", "P", 1469258085, "tonyd", "P", 1469258912, "tonyd", "P", 1469260063, "tonyd", "P", 1469260087, "tonyd", "P", 1469260125, "tonyd", "P", 1469260378, "tonyd", "P", 1469260793, "tonyd", "P", 1469260814, "tonyd", "P", 1469260891, "tonyd", "P", 1469260930, "tonyd", "P", 1469261025, "tonyd", "P", 1469261147, "tonyd", "P", 1469262246, "tonyd", "P", 1469262622, "tonyd", "P", 1469262662, "tonyd", "P", 1469262673, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
    </Core:PCProperties>
  </SkotOS:MerAcHa>
</object>
