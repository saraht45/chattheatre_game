<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="figure"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="figures"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hidden"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:act-post:logout">
         X[M] /* if they logged out while hidden... */
EmitTo(\$\{Chatters:IC:re:rectitude\}, "LOGGING OUT!");

/* record which room they logged out from */
this."base:possessor"."base:disconnectroom" = this."base:disconnectroom";

Slay(this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:logout%unhide">
         X[M] /* if they logged out while hidden... */
EmitTo(\$\{Chatters:IC:re:rectitude\}, "LOGGING OUT!");

/* record which room they logged out from */
this."base:possessor"."base:disconnectroom" = this."base:disconnectroom";

Slay(this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-pre:command%unhide">
         X[M] /* if they do something, return them to their normal body */

if(member(\$imperative, (\{ "look" \}))) return TRUE;

this."base:possessor"."base:environment" = this."base:environment";
this."base:possessor"."base:proximity" = this."base:proximity";
this."base:possessor"."base:stance" = this."base:stance";

if(!\$roles \|\| !sizeof(\$roles)) \{
 Social(this."base:possessor", \$imperative, \$adverb, \$evoke);
\} else if(sizeof(\$roles) == 1) \{
 Social(this."base:possessor", \$imperative, \$adverb, \$evoke, args[\$roles[0]+":preposition"], args[\$roles[0]]);
\} else if(sizeof(\$roles) == 2) \{
 Social(this."base:possessor", \$imperative, \$adverb, \$evoke, args[\$roles[0]+":preposition"], args[\$roles[0]], args[\$roles[1]+":preposition"], args[\$roles[1]]);
\} else if(sizeof(\$roles) == 3) \{
 Social(this."base:possessor", \$imperative, \$adverb, \$evoke, args[\$roles[0]+":preposition"], args[\$roles[0]], args[\$roles[1]+":preposition"], args[\$roles[1]], args[\$roles[2]+":preposition"], args[\$roles[2]]);
\} else \{
 Social(this."base:possessor", \$imperative, \$adverb, \$evoke, args[\$roles[0]+":preposition"], args[\$roles[0]], args[\$roles[1]+":preposition"], args[\$roles[1]], args[\$roles[2]+":preposition"], args[\$roles[2]], args[\$roles[3]+":preposition"], args[\$roles[3]]);
\}

this."base:possessor" = nil;
\$delay(2, FALSE, "b45e");
Slay(this);
return FALSE;
      </Core:Property>
      <Core:Property property="merry:act-pre:logout">
         X[M] /* if they logged out while hidden... */
EmitTo(\$\{Chatters:IC:re:rectitude\}, "LOGGING OUT!");

/* record which room they logged out from */
this."base:possessor"."base:disconnectroom" = this."base:disconnectroom";

Slay(this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:logout">
         X[M] /* if they logged out while hidden... */
EmitTo(\$\{Chatters:IC:re:rectitude\}, "LOGGING OUT!");

/* record which room they logged out from */
this."base:possessor"."base:disconnectroom" = this."base:disconnectroom";

Slay(this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:logout%unhide">
         X[M] /* if they logged out while hidden... */
EmitTo(\$\{Chatters:IC:re:rectitude\}, "LOGGING OUT!");

/* record which room they logged out from */
this."base:possessor"."base:disconnectroom" = this."base:disconnectroom";

Slay(this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:poke-dob">
         X[M] Slay(\$this);
EmitTo(\$actor, "This explodes");
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1226571154, "tonyd", "P", 1226571270, "tonyd", "P", 1226571287, "tonyd", "P", 1226571490, "tonyd", "P", 1226571567, "tonyd", "P", 1226571839, "tonyd", "P", 1226571960, "tonyd", "P", 1226572025, "tonyd", "P", 1226572055, "tonyd", "E", 1226572073, "tonyd", "E", 1226572076, "tonyd", "E", 1226572091, "tonyd", "E", 1226572203, "tonyd", "P", 1226572227, "tonyd", "P", 1226572242, "tonyd", "P", 1226572260, "tonyd", "P", 1226572296, "tonyd", "E", 1226572310, "tonyd", "E", 1226572326, "tonyd", "E", 1226572343, "tonyd", "E", 1226572363, "tonyd", "E", 1226572721, "tonyd", "P", 1226572775, "tonyd", "P", 1226573035, "tonyd", "P", 1226573079, "tonyd", "P", 1226573156, "tonyd", "P", 1226573546, "tonyd", "P", 1226573826, "tonyd", "P", 1226573838, "tonyd", "P", 1226573856, "tonyd", "P", 1226574425, "tonyd", "P", 1226574512, "tonyd", "P", 1226574622, "tonyd", "P", 1226574722, "tonyd", "P", 1226574816, "tonyd", "P", 1226578967, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
