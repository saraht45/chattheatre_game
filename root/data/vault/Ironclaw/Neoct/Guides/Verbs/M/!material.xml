<object clone="/usr/SkotOS/obj/verb" owner="tonyd">
  <Socials:Verb imp="!material" second="just changed the material of" third="changes the material of" evoke="required" audible="false" private="true" secret="true" obscured="false" target-abstracts="false" disabled="false" ooc="true" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="dob" direct="true" single="false" raw="false" requirement="required" distance="far">
        <Socials:SocObPreps/>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="merry:global:command">
         X[M] if(!\$evoke) \{
  EmitTo(\$actor, "What material do you want to set?");
  return TRUE;
\}
if(!\$dob) \{
  EmitTo(\$actor, "What do you want to set the material in?");
  return TRUE;
\}
for(\$i=0;\$i\<sizeof(\$dob);\$i++) \{
  NRefOb(\$dob[\$i])."trait:material" = \$(raw-evoke);
  if(!NRefOb(\$dob[\$i]).revisions) NRefOb(\$dob[\$i]).revisions = (\{ \});
  NRefOb(\$dob[\$i]).revisions += (\{ time(), "!material", \$actor."udat:name" \});
\}
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1199455983, "tonyd", "E", 1199456039, "tonyd", "E", 1199456126, "tonyd", "E", 1199456160, "tonyd", "E", 1199456276, "tonyd", "E", "bleh", 1199456347, "tonyd", "E", 1199456452, "tonyd", "E", 1309202003, "tunk_bodin", "R" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
