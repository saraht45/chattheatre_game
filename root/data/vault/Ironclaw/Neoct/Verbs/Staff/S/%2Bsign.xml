<object clone="/usr/SkotOS/obj/verb" owner="tunk_bodin">
  <Socials:Verb imp="+sign" second="sign" third="signs" evoke="optional" audible="false" private="true" secret="false" obscured="false" target-abstracts="false" disabled="false" ooc="false" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="what" direct="true" single="false" raw="false" requirement="required" distance="far">
        <Socials:SocObPreps/>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="merry:global-pre:command">
         X[M] if(\$what) return Call(nil /* defunct */, "check"); 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:global:command">
         X[M] object scroll;    
string evoke;    
    
if(\$what \&\& \$evoke)    
\{    
    
scroll = NRefOb(\$what[0]);    
\$evoke = capitalize(\$evoke[1..strlen(\$evoke)-2]);   
Set(scroll,    
    "lastsigner:object",    
    \$actor);    
Set(scroll,    
    "details:objskin:descriptions:delivery-from",    
    \$evoke);    
EmitTo(\$actor, "Done!");  
\} else if(!\$what \|\| !\$evoke) \{    
EmitTo(\$actor, "Usage: +sign my ITEM 'NAME");    
\}    
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1184614942, "tunk_bodin", "X", 1184615183, "tunk_bodin", "X", 1184615293, "tunk_bodin", "X", 1184615328, "tunk_bodin", "X", 1184615456, "tunk_bodin", "X" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
