<object clone="/usr/SkotOS/obj/meracha" owner="tonyd">
  <SkotOS:MerAcHa action_id="pickpocket" verb="OBJ(Ironclaw:Neoct:Verbs:Skills:P:pickpocket)">
    <Core:PCProperties>
      <Core:Property property="exploiters">
         ([ "Chatters:IC:ad:ada":2, "Chatters:IC:be:berenice":1, "Chatters:IC:br:breeze":1, "Chatters:IC:ch:chesh":2, "Chatters:IC:cr:crina":1, "Chatters:IC:da:dazrene":1, "Chatters:IC:do:dove":1, "Chatters:IC:el:elgin":1, "Chatters:IC:el:elizabeth":1, "Chatters:IC:he:henera":1, "Chatters:IC:hu:hush":1, "Chatters:IC:ir:irene":1, "Chatters:IC:ja:jackie":1, "Chatters:IC:ka:kaitlyn":1, "Chatters:IC:lo:loki":1, "Chatters:IC:ma:madalina":1, "Chatters:IC:ma:marcus":1, "Chatters:IC:mi:minerva":1, "Chatters:IC:na:nan":3, "Chatters:IC:ra:rankin":1, "Chatters:IC:re:resi":1, "Chatters:IC:sa:sade":1, "Chatters:IC:sh:shyam":2, "Chatters:IC:vi:vixxen":1, "Chatters:IC:wy:wynter":1 ])
      </Core:Property>
      <Core:Property property="merry:global-desc:action">
         X[M] NRef *arr;

/* We are trying to pickpocket someone */

/* Check if we're allowed to pickpocket again this soon */
if(\$actor.lastpickpocket)\{
  if(\$actor.lastpickpocket+30 \> time()) \{
    EmitTo(\$actor, "It's too risky to pickpocket again so soon.");
    return FALSE;
  \}
\}

/* Check we are only trying to pickpocket one thing */
if(!\$dob \|\| sizeof(\$dob) != 1)\{
  EmitTo(\$actor, "You may only pickpocket one thing at a time.");
  return FALSE;
\}

\$target = NRefOb(\$dob[0]);

/* set the owner */
\$owner = nil;
\$tmp = \$target;
while(!\$owner \&\& \$tmp."base:environment") \{
  if(\$tmp."base:volition") \$owner = \$tmp;
  else \$tmp = \$tmp."base:environment";
\}

if(\$owner) \{
  if(\$actor == \$owner) \{
    EmitTo(\$actor, "You manage to get your hands on "+Describe(\$target, nil, \$actor)+", but you spot yourself.");
    return FALSE;
  \}

  if(\$actor."udat:object" \&\& \$owner."udat:object" \&\& \$actor."udat:object" == \$owner."udat:object") \{
    EmitTo(\$actor, "You cannot pickpocket an alternate character on the same account as yours.");
    return FALSE;
  \}

  /* check when the last time they stole from this target was */
  if(\$owner \&\& Get(\$owner, "pickpocketed:"+name(\$actor)) \&\& (Get(\$owner, "pickpocketed:"+name(\$actor))+60*60*6 \> time()))\{
    EmitTo(\$actor, "It's not smart to pickpocket again from the same person in under six hours.");
    return FALSE;
  \}
\}

/* Check that the object is a money purse */
if(\$target."trait:objecttype" != "moneypouch" \&\& !\$target."udat:possessed")\{
  EmitTo(\$actor, "You may only pickpocket from purses and money pouches.");
  return FALSE;
\}

if(\$owner \&\& !\$owner."udat:possessed" \&\& Str(\$owner."trait:type") != "traveler" \&\& Str(\$owner."trait:type") != "guard") \{
    EmitTo(\$actor, Describe(\$target) + " is not accessible.");
    return FALSE;
\}

/* How much do we steal? */
\$amount = ironclaw::roll(\$dicearray: (\{ \$actor."trait:agility", \$actor."skill:thief:pickpocketing", \$actor."career:thief:pickpocketing" \}), \$bonus: Int(\$actor."pickpocket:bonus"));
/*\$amount = ironclaw::roll(\$roller: \$actor, \$skills:(\{ "thief:pickpocketing" \}), \$bonus: "trait:agility");*/
\$amount = \$amount*100;

/* EmitTo(\$actor, "Amount is "+Str(\$amount)); 
EmitTo(\$actor, "Pouch holds "+Str(\$target."cash:balance"));
*/

/* Always take from bank accounts */
if(\$amount \> Int(\$owner."trait:money"))
    \$amount = Int(\$owner."trait:money");
/* EmitTo(\$actor, "Amount is "+Str(\$amount)); */
/* one denar minimum, until the code is updated */
if(\$amount \< 100) \$amount = 0;

/* EmitTo(\$actor, "Amount is now "+Str(\$amount)); */

/* Tell the actor how much they stole */
if(\$amount \> 100)
  \$amount_string = desc_cardinal(\$amount/100)+" florins";
else if(\$amount == 100)
  \$amount_string = "one florin";
else
  \$amount_string = "nothing";

if(\$owner)
  EmitTo(\$actor, "You pickpocket "+\$amount_string+" from "+Describe(\$owner)+".");
else
  EmitTo(\$actor, "You pickpocket "+\$amount_string+" from "+Describe(\$dob[0])+".");


/* Did anyone see? */
\$witnesses = Match(\$actor."base:environment", "pc") \| Match(\$actor."base:environment", "npc");
for(\$i = 0; \$i \< sizeof(\$witnesses); \$i++) \{
    \$witnesses[\$i] = NRefOb(\$witnesses[\$i]);
\}
\$witnesses -= (\{ \$actor \});

\$witness_count = sizeof(\$witnesses) - 1;
if(\$witness_count \< 0) \$witness_count = 0; /* Sanity check */

\$stealth = ironclaw::roll(\$dicearray: (\{ \$actor."trait:agility", \$actor."trait:speed", \$actor."skill:thief:stealth", \$actor."career:thief:stealth" \}), \$bonus: (\{\$witness_count*4, "luck"\}));

/* EmitTo(\$actor, "Stealth - "+Str(\$stealth));*/
for(\$i=0;\$i\<sizeof(\$witnesses);\$i++) \{
  \$spot = ironclaw::roll(\$dicearray: (\{ NRefOb(\$witnesses[\$i])."trait:mind", NRefOb(\$witnesses[\$i])."skill:mental:observation", NRefOb(\$witnesses[\$i])."career:mental:observation" \}), \$bonus: (\{"luck"\}));

  /*EmitTo(\$actor, Describe(\$witnesses[\$i])+" - "+Str(\$spot));*/

  if((\$spot \> \$stealth) \&\& (NRefOb(\$witnesses[\$i]) != \$actor)) \{
    if(\$owner) \{
      EmitTo(NRefOb(\$witnesses[\$i]), "You notice "+Describe(\$actor)+" pickpocket from "+Describe(\$owner, nil, NRefOb(\$witnesses[\$i]))+".");
    \} else \{
      EmitTo(NRefOb(\$witnesses[\$i]), "You notice "+Describe(\$actor)+" pickpocket from "+Describe(\$dob[0])+".");
    \}

    if(FindMerry(\$witnesses[\$i], "lib", "pickpocket_alert")) \{
        Call(\$witnesses[\$i], "pickpocket_alert", \$thief: \$actor, \$victim: \$owner);
    \}
  \}

\}

/* Take the money */
if(\$amount) \{
  \$owner."trait:money" -= \$amount;
\}

/* Mark when owner was stolen from */
if(\$owner)
  Set(\$owner, "pickpocketed:"+name(\$actor), time());

/* Give money to the pickpocketer */
\$actor."trait:money" = Int(\$actor."trait:money") + \$amount;


/* Mark when we last pickpocketed */
\$actor.lastpickpocket = time();
if(\$amount) \$actor.lastSuccessfulPickpocket = time();


return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1081941890, "tangerine", "X", 1127694535, "tonyd", "E", 1127698284, "tonyd", "P", 1127698577, "tonyd", "P", 1127698646, "tonyd", "P", 1127698839, "tonyd", "P", 1127699054, "tonyd", "P", 1127699115, "tonyd", "P", 1127699256, "tonyd", "P", 1127699279, "tonyd", "P", 1127700048, "tonyd", "E", 1127701060, "tonyd", "E", 1127701092, "tonyd", "P", 1127701131, "tonyd", "P", 1127701180, "tonyd", "P", 1127701203, "tonyd", "P", 1127701266, "tonyd", "P", 1127701300, "tonyd", "P", 1131860618, "tonyd", "P", 1131860722, "tonyd", "P", 1131860849, "tonyd", "P", 1131861148, "tonyd", "P", 1131861275, "tonyd", "P", 1131861880, "tonyd", "P", 1131862037, "tonyd", "P", 1131862072, "tonyd", "P", 1131862169, "tonyd", "P", 1131862345, "tonyd", "P", 1131862365, "tonyd", "P", 1131862449, "tonyd", "P", 1131862507, "tonyd", "P", 1131862630, "tonyd", "P", 1131862681, "tonyd", "P", 1131862691, "tonyd", "P", 1131862803, "tonyd", "P", 1131864813, "tonyd", "P", 1131864873, "tonyd", "P", 1131864916, "tonyd", "P", 1131865237, "tonyd", "P", 1131865285, "tonyd", "P", 1131865330, "tonyd", "P", 1131865576, "tonyd", "P", 1131865744, "tonyd", "P", 1131865960, "tonyd", "P", 1131866116, "tonyd", "P", 1131866282, "tonyd", "P", 1131866372, "tonyd", "P", 1131867715, "tonyd", "P", 1131867927, "tonyd", "P", 1131868084, "tonyd", "P", 1131868362, "tonyd", "P", 1131869030, "tonyd", "P", 1131869110, "tonyd", "P", 1131869132, "tonyd", "P", 1131869650, "tonyd", "P", 1131869844, "tonyd", "P", 1131869982, "tonyd", "P", 1131870036, "tonyd", "P", 1131870219, "tonyd", "P", 1131870545, "tonyd", "P", 1132004888, "tonyd", "E", 1136769859, "tonyd", "P", 1136769906, "tonyd", "P", 1136769950, "tonyd", "E", 1136769971, "tonyd", "E", 1136770019, "tonyd", "P", 1136770037, "tonyd", "P", 1136770066, "tonyd", "P", 1136770131, "tonyd", "P", 1136770269, "tonyd", "P", 1136770284, "tonyd", "P", 1136770296, "tonyd", "P", 1136770314, "tonyd", "P", 1136770333, "tonyd", "P", 1136770406, "tonyd", "P", 1136770433, "tonyd", "P", 1136770484, "tonyd", "P", 1136770493, "tonyd", "P", 1136770501, "tonyd", "P", 1136770557, "tonyd", "P", 1136770588, "tonyd", "P", 1141027341, "tonyd", "P", 1141027366, "tonyd", "P", 1146380637, "tunk_bodin", "X", 1146381478, "tonyd", "P", 1146381567, "tonyd", "P", 1146381630, "tonyd", "P", 1173189151, "librarysage", "R", 1209427711, "tonyd", "P", 1209427722, "tonyd", "P", 1209427813, "tonyd", "P", 1271656464, "jominey", "E", 1271656581, "jominey", "E", 1272588816, "jominey", "E", 1306034842, "tonyd", "P", 1306034878, "tonyd", "P", 1306034892, "tonyd", "P", 1306034923, "tonyd", "P", 1306034931, "tonyd", "P", 1306034943, "tonyd", "P", 1306035271, "tonyd", "P", 1306035392, "tonyd", "P", 1306035849, "tonyd", "P", 1306035864, "tonyd", "P", 1306035919, "tonyd", "P", 1306037486, "tonyd", "P", 1306037502, "tonyd", "P", 1306037531, "tonyd", "P", 1306038157, "tonyd", "P", 1306038233, "tonyd", "P", 1306038260, "tonyd", "P", 1306038279, "tonyd", "P", 1306038593, "tonyd", "P", 1306038628, "tonyd", "P", 1306038727, "tonyd", "P", 1306038968, "tonyd", "P", 1306039000, "tonyd", "P", 1306039026, "tonyd", "P", 1306039218, "tonyd", "P", 1306039281, "tonyd", "P", 1306039324, "tonyd", "P", 1306039343, "tonyd", "P", 1306040769, "tonyd", "P", 1328658754, "tonyd", "P", 1328658920, "tonyd", "P", 1328659151, "tonyd", "P", 1328659220, "tonyd", "P", 1328659355, "tonyd", "P", 1328659446, "tonyd", "P", 1328659559, "tonyd", "P", 1328659623, "tonyd", "P", 1361163323, "tonyd", "P", 1361163412, "tonyd", "P", 1361163483, "tonyd", "P", 1361163518, "tonyd", "P", 1361163583, "tonyd", "P", 1361163731, "tonyd", "P", 1361163744, "tonyd", "P", 1361163821, "tonyd", "P", 1361163835, "tonyd", "P", 1361163922, "tonyd", "P", 1361163973, "tonyd", "P", 1361164097, "tonyd", "P", 1361164119, "tonyd", "P", 1361164152, "tonyd", "P", 1361164218, "tonyd", "P", 1361164302, "tonyd", "P", 1361164392, "tonyd", "P", 1361166022, "tonyd", "P", 1361166189, "tonyd", "P", 1361166235, "tonyd", "P", 1412541134, "jominey", "E", 1412541236, "jominey", "E", 1412561706, "jominey", "E", 1412561744, "jominey", "E", 1412561771, "jominey", "E", 1412561814, "jominey", "E", 1412562588, "jominey", "E", 1412562640, "jominey", "E", 1412562692, "jominey", "E", 1412562725, "jominey", "E", 1412562879, "jominey", "E", 1412563377, "jominey", "E", 1412563689, "jominey", "E", 1412563806, "jominey", "E", 1412563864, "jominey", "E", 1412564050, "jominey", "E", 1412564582, "jominey", "E", 1412564793, "jominey", "E", 1412565321, "jominey", "E", 1412565516, "jominey", "E", 1412565618, "jominey", "E", 1412565642, "jominey", "E", 1507935326, "jominey", "E", 1507935657, "jominey", "E", 1575918590, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
  </SkotOS:MerAcHa>
</object>
