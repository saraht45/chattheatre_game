<object clone="/usr/SkotOS/obj/verb" owner="SkotOS">
  <Socials:Verb imp="@spawn" evoke="required" audible="false" private="false" secret="true" obscured="false" target-abstracts="false" disabled="false" ooc="true" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects/>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="gimli:global:command">
         "E[G]\\n// Allows a PC to spawn objects if they know the woe name\\nint i;\\n\\nif(!\$actor.\\"staff:power:spawn\\" \&\& !\$actor.\\"udat:host\\") \{\\n  EmitTo(\$actor, \\"You are not authorized to use this command. Sorry!\\");\\n  return FALSE;\\n\}\\n\\nif(!\$(raw-evoke)) \{\\n  EmitTo(\$actor, \\"What is the woe name of the item you want to spawn?\\");\\n  return FALSE;\\n\}\\n\\nEmitTo(\$actor, dump_value(args));\\n\\n    if(!Obj(\$(raw-evoke))) \{\\n      EmitTo(\$actor, dump_value(\$(raw-evoke))+\\" is not a valid WOE name.\\");\\n    \} else \{\\n      \$item = Spawn(Obj(\$(raw-evoke)));\\n      \\n      if(!\$item) \{\\n        EmitTo(\$actor, \\"Could not spawn \\"+dump_value(\$(raw-evoke))+\\"!\\");\\n      \}\\n      \$item.\\"base:environment\\" = \$actor;\\n      if(\$item.\\"base:environment\\" != \$actor)\\n        \$item.\\"base:environment\\" = \$actor.\\"base:environment\\";\\n      if(!\$item.\\"base:environment\\") \{\\n        EmitTo(\$actor, \\"Could not move \\"+dump_value(\$(raw-evoke))+\\" to your location!\\");\\n        Slay(\$item);\\n      \} else \{\\n        EmitTo(\$actor, dump_value(\$(raw-evoke))+\\" (\\"+Describe(\$item)+\\") created.\\");\\n      \}\\n    \}\\n\\n\\nreturn FALSE;"
      </Core:Property>
      <Core:Property property="merry:global:command">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:global:command instead! */
/* Allows a PC to spawn objects if they know the woe name */
int i;

if(!\$actor."staff:power:spawn" \&\& !\$actor."udat:host") \{
  EmitTo(\$actor, "You are not authorized to use this command. Sorry!");
  return FALSE;
\}

if(!\$(raw-evoke)) \{
  EmitTo(\$actor, "What is the woe name of the item you want to spawn?");
  return FALSE;
\}

EmitTo(\$actor, dump_value(args));

    if(!Obj(\$(raw-evoke))) \{
      EmitTo(\$actor, dump_value(\$(raw-evoke))+" is not a valid WOE name.");
    \} else \{
      \$item = Spawn(Obj(\$(raw-evoke)));
      
      if(!\$item) \{
        EmitTo(\$actor, "Could not spawn "+dump_value(\$(raw-evoke))+"!");
      \}
      \$item."base:environment" = \$actor;
      if(\$item."base:environment" != \$actor)
        \$item."base:environment" = \$actor."base:environment";
      if(!\$item."base:environment") \{
        EmitTo(\$actor, "Could not move "+dump_value(\$(raw-evoke))+" to your location!");
        Slay(\$item);
      \} else \{
        EmitTo(\$actor, dump_value(\$(raw-evoke))+" ("+Describe(\$item)+") created.");
      \}
    \}


return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052091, "-", "SYNC", 1221752477, "???", "R", 1469169797, "tonyd", "E", 1469169817, "tonyd", "E", 1469169874, "tonyd", "P", 1469169900, "tonyd", "P", 1469169927, "tonyd", "E", 1469169943, "tonyd", "E", 1469169960, "tonyd", "E", 1469169971, "tonyd", "E", 1469170062, "tonyd", "E", 1469170075, "tonyd", "E", 1469170101, "tonyd", "P", 1469170164, "tonyd", "P", 1469170404, "tonyd", "P", 1469170440, "tonyd", "P", 1469170464, "tonyd", "P", 1469170501, "tonyd", "P", 1469170601, "tonyd", "P", 1469170652, "tonyd", "P", 1469170701, "tonyd", "E", 1469170722, "tonyd", "E", 1469170782, "tonyd", "P", 1469170861, "tonyd", "P", 1469170933, "tonyd", "P", 1469170998, "tonyd", "P", 1469171035, "tonyd", "P", 1469171051, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
