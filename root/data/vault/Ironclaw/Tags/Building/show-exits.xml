<object clone="/usr/SkotOS/obj/mersamtag" owner="jominey">
  <SkotOS:MerSAMTag tag_name="show-exits">
    <Core:PCProperties>
      <Core:Property property="merry:global:tag">
         X[M] \$west = (     \$target."details:exit-west:hidden" \|\|
             (\$target."details:exit-west:obvious-when-open" \&\& \$target."details:exit-west:closed") \|\|
             (\$target."details:exit-west:hidden-when-closed" \&\& \$target."details:exit-west:closed") \|\|
              \$target."details:exit-west:never-obvious"    ) ? nil : \$target."details:exit-west:exit:dest";
\$northwest = (     \$target."details:exit-northwest:hidden" \|\|
                  (\$target."details:exit-northwest:obvious-when-open" \&\& \$target."details:exit-northwest:closed") \|\|
                  (\$target."details:exit-northwest:hidden-when-closed" \&\& \$target."details:exit-northwest:closed") \|\|
                   \$target."details:exit-northwest:never-obvious"    ) ? nil : \$target."details:exit-northwest:exit:dest";
\$north = (     \$target."details:exit-north:hidden" \|\|
              (\$target."details:exit-north:obvious-when-open" \&\& \$target."details:exit-north:closed") \|\|
              (\$target."details:exit-north:hidden-when-closed" \&\& \$target."details:exit-north:closed") \|\|
               \$target."details:exit-north:never-obvious"    ) ? nil : \$target."details:exit-north:exit:dest";
\$northeast = (     \$target."details:exit-northeast:hidden" \|\|
                  (\$target."details:exit-northeast:obvious-when-open" \&\& \$target."details:exit-northeast:closed") \|\|
                  (\$target."details:exit-northeast:hidden-when-closed" \&\& \$target."details:exit-northeast:closed") \|\|
                   \$target."details:exit-northeast:never-obvious"    ) ? nil : \$target."details:exit-northeast:exit:dest";
\$east = (     \$target."details:exit-east:hidden" \|\|
             (\$target."details:exit-east:obvious-when-open" \&\& \$target."details:exit-east:closed") \|\|
             (\$target."details:exit-east:hidden-when-closed" \&\& \$target."details:exit-east:closed") \|\|
              \$target."details:exit-east:never-obvious"    ) ? nil : \$target."details:exit-east:exit:dest";
\$southeast = (     \$target."details:exit-southeast:hidden" \|\|
                  (\$target."details:exit-southeast:obvious-when-open" \&\& \$target."details:exit-southeast:closed") \|\|
                  (\$target."details:exit-southeast:hidden-when-closed" \&\& \$target."details:exit-southeast:closed") \|\|
                   \$target."details:exit-southeast:never-obvious"    ) ? nil : \$target."details:exit-southeast:exit:dest";
\$south = (     \$target."details:exit-south:hidden" \|\|
              (\$target."details:exit-south:obvious-when-open" \&\& \$target."details:exit-south:closed") \|\|
              (\$target."details:exit-south:hidden-when-closed" \&\& \$target."details:exit-south:closed") \|\|
               \$target."details:exit-south:never-obvious"    ) ? nil : \$target."details:exit-south:exit:dest";
\$southwest = (     \$target."details:exit-southwest:hidden" \|\|
                  (\$target."details:exit-southwest:obvious-when-open" \&\& \$target."details:exit-southwest:closed") \|\|
                  (\$target."details:exit-southwest:hidden-when-closed" \&\& \$target."details:exit-southwest:closed") \|\|
                   \$target."details:exit-southwest:never-obvious"    ) ? nil : \$target."details:exit-southwest:exit:dest";
\$up = (     \$target."details:exit-up:hidden" \|\|
           (\$target."details:exit-up:obvious-when-open" \&\& \$target."details:exit-up:closed") \|\|
           (\$target."details:exit-up:hidden-when-closed" \&\& \$target."details:exit-up:closed") \|\|
            \$target."details:exit-up:never-obvious"    ) ? nil : \$target."details:exit-up:exit:dest";
\$down = (     \$target."details:exit-down:hidden" \|\|
             (\$target."details:exit-down:obvious-when-open" \&\& \$target."details:exit-down:closed") \|\|
             (\$target."details:exit-down:hidden-when-closed" \&\& \$target."details:exit-down:closed") \|\|
              \$target."details:exit-down:never-obvious"    ) ? nil : \$target."details:exit-down:exit:dest";

\$desc = ([ ]);


if(\$west) \{
    \$loc = Describe(NRefOb(\$west));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "west" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$west)):(\{ "west" \}) ]);
    \}
\}

if(\$northwest) \{
    \$loc = Describe(NRefOb(\$northwest));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "northwest" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$northwest)):(\{ "northwest" \}) ]);
    \}
\}

if(\$north) \{
    \$loc = Describe(NRefOb(\$north));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "north" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$north)):(\{ "north" \}) ]);
    \}
\}

if(\$northeast) \{
    \$loc = Describe(NRefOb(\$northeast));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "northeast" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$northeast)):(\{ "northeast" \}) ]);
    \}
\}

if(\$east) \{
    \$loc = Describe(NRefOb(\$east));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "east" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$east)):(\{ "east" \}) ]);
    \}
\}

if(\$southeast) \{
    \$loc = Describe(NRefOb(\$southeast));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "southeast" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$southeast)):(\{ "southeast" \}) ]);
    \}
\}

if(\$south) \{
    \$loc = Describe(NRefOb(\$south));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "south" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$south)):(\{ "south" \}) ]);
    \}
\}

if(\$southwest) \{
    \$loc = Describe(NRefOb(\$southwest));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "southwest" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$southwest)):(\{ "southwest" \}) ]);
    \}
\}

if(\$up) \{
    \$loc = Describe(NRefOb(\$up));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "up" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$up)):(\{ "up" \}) ]);
    \}
\}

if(\$down) \{
    \$loc = Describe(NRefOb(\$down));
 
    if(\$desc[\$loc]) \{
        \$desc[\$loc] += (\{ "down" \});
    \} else \{
        \$desc += ([ Describe(NRefOb(\$down)):(\{ "down" \}) ]);
    \}
\}

\$str = "You see ";

\$t = map_indices(\$desc);

if(\$desc[\$t[0]][0] == "up" \|\| \$desc[\$t[0]][0] == "down") \{
    \$str += TAG(\$t[0], "assist-alert") + " leading ";
\} else \{
    \$str += TAG(\$t[0], "assist-alert") + " to the ";
\}

\$dirs = \$desc[\$t[0]];
for(\$j = 0; \$j \< sizeof(\$dirs); \$j++) \{
    \$str += "\<acmd tag='command' cmd='" + \$dirs[\$j] + "'\>" + \$dirs[\$j] + "\</acmd\>";

    if(sizeof(\$dirs) \>= 3 \&\& \$j == (sizeof(\$dirs) - 2)) \{
        \$str += " and ";
    \} else if(sizeof(\$dirs) \>= 3 \&\& \$j \< (sizeof(\$dirs) - 1))\{
        \$str += ", ";
    \}

    if(sizeof(\$dirs) ==  2 \&\& \$j == 0) \{
        \$str += " and ";
    \}
\}

for(\$i = 1; \$i \< sizeof(\$t); \$i++) \{
    if(\$i == (sizeof(\$t) - 1)) \{
        \$str += "; and ";
    \} else \{
        \$str += "; ";
    \}
    if(\$desc[\$t[\$i]][0] == "up" \|\| \$desc[\$t[\$i]][0] == "down") \{
        \$str += TAG(\$t[\$i], "assist-alert") + " leading ";
    \} else \{
        \$str += TAG(\$t[\$i], "assist-alert") + " to the ";
    \}

    \$dirs = \$desc[\$t[\$i]];
    for(\$j = 0; \$j \< sizeof(\$dirs); \$j++) \{
        \$str += "\<acmd tag='command' cmd='" + \$dirs[\$j] + "'\>" + \$dirs[\$j] + "\</acmd\>";

        if(sizeof(\$dirs) \>= 3 \&\& \$j == (sizeof(\$dirs) - 2)) \{
            \$str += " and ";
        \} else if(sizeof(\$dirs) \>= 3 \&\& \$j \< (sizeof(\$dirs) - 1))\{
            \$str += ", ";
        \}

        if(sizeof(\$dirs) ==  2 \&\& \$j == 0) \{
            \$str += " and ";
        \}
    \}
\}

\$str += ".";

return ParseXML(\$str);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1307486063, "tunk_bodin", "E", 1374862282, "jominey", "E", 1374862305, "jominey", "E", 1374862327, "jominey", "E", 1374862372, "jominey", "E", 1374862407, "jominey", "E", 1374862409, "jominey", "E", 1374862430, "jominey", "E", 1374862468, "jominey", "E", 1374862526, "jominey", "E", 1374862584, "jominey", "E", 1374862611, "jominey", "E", 1374862650, "jominey", "E", 1374863115, "jominey", "E", 1374863222, "jominey", "E", 1374863538, "jominey", "E", 1374864245, "jominey", "E", 1374864524, "jominey", "E", 1374864599, "jominey", "E", 1374864756, "jominey", "E", 1374864854, "jominey", "E", 1374864903, "jominey", "E", 1374865201, "jominey", "E", 1374865244, "jominey", "E", 1374865879, "jominey", "E", 1375031892, "jominey", "E", 1375031912, "jominey", "E", 1375031937, "jominey", "E", 1375031977, "jominey", "E", 1375032024, "jominey", "E", 1375036874, "jominey", "E", 1375036912, "jominey", "E", 1375036972, "jominey", "E", 1375037032, "jominey", "E", 1564103701, "jominey", "E", 1564103894, "jominey", "E", 1564103975, "jominey", "E", 1572752053, "jominey", "E", 1572752327, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
  </SkotOS:MerSAMTag>
</object>
