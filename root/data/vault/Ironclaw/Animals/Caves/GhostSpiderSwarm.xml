<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="npc"/>
            <Base:SName sname="swarm"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="npcs"/>
            <Base:PName pname="swarms"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ghost"/>
          <Base:Adjective adjective="mutant"/>
          <Base:Adjective adjective="poison-laced"/>
          <Base:Adjective adjective="sizable"/>
          <Base:Adjective adjective="spider"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             swarm of mutant ghost spiders
          </Base:Description>
          <Base:Description type="examine">
             A sizable swarm of mutant ghost spiders ranging in weight from twenty to forty pounds. Each has somewhere in the vicinity of eight to ten legs, six to twelve eyes, and bears a menacing maw with exposed poison-laced fangs. They skitter to-and-fro as a group making it impossible to single any out in combat. Once felled, their eyes can be plucked.
          </Base:Description>
          <Base:Description type="look">
             A sizable swarm of mutant ghost spiders ranging in weight from twenty to forty pounds.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="multitude"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="pair"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             multitude of spider eyes
          </Base:Description>
          <Base:Description type="examine">
             A multitude of eyes in different shades and with varying degrees of sight stare in your general direction.
          </Base:Description>
          <Base:Description type="look">
             A multitude of eyes in different shades and with varying degrees of sight stare in your general direction.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fangs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="teeth"/>
            <Base:SName sname="fang"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="teeth"/>
            <Base:PName pname="fangs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="oozing"/>
          <Base:Adjective adjective="poison-laced"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             jawfuls of poison-laced spider fangs
          </Base:Description>
          <Base:Description type="examine">
             An overwhelming amount of fangs are bared and oozing with what you assume is a toxic green substance.
          </Base:Description>
          <Base:Description type="look">
             An overwhelming amount of fangs are bared and oozing with what you assume is a toxic green substance.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             numerous amount of spider heads
          </Base:Description>
          <Base:Description type="examine">
             A numerous amount of heads covered in super-sensitive fuzz rest on the bodies of the ghost spiders.
          </Base:Description>
          <Base:Description type="look">
             A numerous amount of heads covered in super-sensitive fuzz rest on the bodies of the ghost spiders.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="stubby"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             blinding number of spider legs
          </Base:Description>
          <Base:Description type="examine">
             There are so many legs betwixt the creatures that you can't even count them. Don't bother trying, because you'll fail.
          </Base:Description>
          <Base:Description type="look">
             There are so many legs betwixt the creatures that you can't even count them. Don't bother trying, because you'll fail.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:combat:armor:rating">
         22
      </Core:Property>
      <Core:Property property="export:skill:combat:dodge">
         18
      </Core:Property>
      <Core:Property property="export:skill:combat:endurance">
         18
      </Core:Property>
      <Core:Property property="export:skill:combat:unarmed">
         22
      </Core:Property>
      <Core:Property property="export:trait:agility">
         16
      </Core:Property>
      <Core:Property property="export:trait:body">20</Core:Property>
      <Core:Property property="export:trait:mind">12</Core:Property>
      <Core:Property property="export:trait:speed">
         20
      </Core:Property>
      <Core:Property property="merry:lib:fight_outcome_kill">
         X[M] if(!\$par["char"]) return TRUE;

EmitTo(\$par["char"], "You kill " + Describe(\$this) + ".");
EmitIn(this."base:environment", Describe(\$par["char"]) + " kills " + Describe(this) + ".", \$par["char"]);

this."status:hurt" = nil;
this."savedprop:status:hurt" = nil;
this."status:afraid" = nil;
this."savedprop:status:afraid" = nil;
this."status:recently_afraid" = nil;
this."savedprop:status:recently_afraid" = nil;
this."status:injured" = nil;
this."savedprop:status:injured" = nil;

this."base:urparent" = \$\{Ironclaw:Animals:Caves:GhostSpiderSwarmCorpse\};
this."base:stancestring" = "lying";
this."base:proximity" = NewNRef(\$this."base:environment", "ground");
this."base:prepositionstring" = "near";

\$par["char"]."tmp:combat:spider:kill" = Int(\$par["char"]."tmp:combat:spider:kill")+1;

\$delay(60*60*24*2, TRUE, "46b3");

/* Decay code necessary? */

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:fight_outcome_release">
         X[M] if(!\$par["char"]) return TRUE;

EmitTo(\$par["char"], "You release "+Describe(this)+".");
EmitIn(this."base:environment", Describe(\$par["char"])+" releases "+Describe(this)+".", \$par["char"]);

\$delay(3, FALSE, "59d2");

EmitIn(this."base:environment", Describe(\$this) + " skitters away into the depths of the cave.");

this."status:hurt" = nil;
this."savedprop:status:hurt" = nil;
this."status:afraid" = nil;
this."savedprop:status:afraid" = nil;
this."status:recently_afraid" = nil;
this."savedprop:status:recently_afraid" = nil;
this."status:injured" = nil;
this."savedprop:status:injured" = nil;

\$par["char"]."tmp:combat:spider:release" = Int(\$par["char"]."tmp:combat:spider:release")+1;

Slay(\$this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:find_target">
         X[M] /* When the NPC is looking for a target */
int i;

/* In this example, we want to target PCs */
\$options = Match(this."base:environment", "pc");
\$preferred_options = (\{ \});

/* We need to convert the NRef's from the PC list into objects */
for(i=0; i\<sizeof(\$options); i++)
  \$options[i] = NRefOb(\$options[i]);

/* We prefer to target PCs that are already attacking us */
for(i=0; i\<sizeof(\$options); i++) \{
  if(\$options[i]."udat:object" \&\& \$options[i].combat \&\& \$options[i].combat["target"] == this) \$preferred_options += (\{ \$options[i] \});
\}
if(sizeof(\$preferred_options)) return \$preferred_options[random(sizeof(\$preferred_options))];

/* Next prefer to target PCs that are already in combat with us */
for(i=0; i\<sizeof(\$options); i++) \{
  if(\$options[i]."udat:object" \&\& \$options[i].combat) \$preferred_options += (\{ \$options[i] \});
\}
if(sizeof(\$preferred_options)) return \$preferred_options[random(sizeof(\$preferred_options))];

/* Next prefer to target PCs that aren't dying or dead or injured */
for(i=0; i\<sizeof(\$options); i++) \{
  if(\$options[i]."udat:object" \&\& !\$options[i]."status:injured" \&\& !\$options[i]."status:dying" \&\& !\$options[i]."status:dead") \$preferred_options += (\{ \$options[i] \});
\}
if(sizeof(\$preferred_options)) return \$preferred_options[random(sizeof(\$preferred_options))];

return nil;
      </Core:Property>
      <Core:Property property="merry:lib:give_combat_damage">
         X[M] if(\$damage \>= 4) \{
  ccombat::remove_from_combat(\$fighter: \$target);
  \$delay(0.5, TRUE, "30de");
  \$target."tmp:combat:spider:defeated" = Int(\$target."tmp:combat:spider:defeated")+1;
  EmitIn(\$char."base:environment", TAG(Describe(\$char) + " hisses at " + Describe(\$target) + " in smug victory.", "social:third"));
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:take_combat_actions">
         X[M] /* When the NPC is given a turn in combat, this is the script where they decide what to do */
int i;

/* \$az = \$\{Chatters:IC:az:azrael\};
EmitTo(\$az, "Taking an action"); */

switch(random(3)) \{
  case 2:
    EmitIn(\$this."base:environment", TAG(Describe(\$this) + " hisses menacingly, signifying they're ready to attack.", "social:third"));
  case 1:
    EmitIn(\$this."base:environment", TAG(Describe(\$this) + " ferociously rumbles before collectively opening their maws and baring their fangs.", "social:third"));
  default:
    EmitIn(\$this."base:environment", TAG(Describe(\$this) + " snaps their poison-laced fangs aggressively.", "social:third"));
\}
\$delay(2, TRUE, "52ac");

\$actions = copy(this.combat["options"]);
\$actions -= (\{ nil \});

/* Do we need a new target? */
if(!this.combat["target"])
  this.combat["target"] = ::find_target();

if(!this.combat["target"]) \{
  /* We couldn't find a target. Remove ourselves from the fight. */
  ccombat::remove_from_combat(\$fighter: this);
  ccombat::end_turn(\$char: this);
  return TRUE;
\}

if(!this.combat["target"].combat) \{
  ccombat::start_fight(\$attacker: this, \$target: this.combat["target"]);
  \$delay(0.1, TRUE, "64a5");
\}

\$turn_id = random(1000000000);
\$params = ([ "char":this, "taking_action":TRUE, "turn_id":\$turn_id ]);


/* Can we attack? */
for(i=0;i\<sizeof(\$actions);i++) \{
  if(\$actions[i][0] == "attack") \{
    if( Call(\$actions[i][1], \$actions[i][0], \$char: \$char, \$par: nil, \$check_valid: TRUE) ) \{
      return Call(\$actions[i][1], \$actions[i][0], \$par: \$params);
    \}
  \}
\}

/* Couldn't attack. Can we do another action? */
for(i=0;i\<sizeof(\$actions);i++) \{
  if(\$actions[i][0] == "aim" \|\| \$actions[i][0] == "guard") \{
    if( Call(\$actions[i][1], \$actions[i][0], \$char: \$char, \$par: nil, \$check_valid: TRUE) ) \{

      if(\$actions[i][0] == "aim") \{
        EmitIn(this."base:environment", TAG(Describe(this) + " pauses intentionally, fixing their reflective eyes upon you.", "social:third"));
      \} else if(\$actions[i][0] == "guard") \{
        EmitIn(this."base:environment", TAG(Describe(this) + " slips into the depths of the cave in an attempt to conceal themselves from your view.", "social:third"));
      \}

      return Call(\$actions[i][1], \$actions[i][0], \$par: \$params);
    \}
  \}
\}

/* Couldn't do anything. End the turn */
ccombat::end_turn(\$char: this); /* Because we return TRUE above during the delay, the script won't pass for us. So we need to tell it to pass */
return FALSE; /* This means we didn't complete our action, so the script will need to pass for us */
      </Core:Property>
      <Core:Property property="merry:lib:take_combat_damage_dying">
         X[M] /* Script run when the NPC takes enough damage to be dying */
\$char."tmp:combat:spider:won" = Int(\$char."tmp:combat:spider:won")+1;

EmitTo(\$char, "With hate-filled rage, you completely decimate "+Describe(this)+"!");
EmitIn(\$char."base:environment", "With hate-filled rage, "+Describe(\$char)+" completely decimates "+Describe(this)+"!", \$char);
ccombat::remove_from_combat(\$fighter: this);

\$delay(0.5, FALSE, "b561");

/* Ask the PC what they want to do, having beaten the NPC */
interaction::question(\$actor: \$char, \$question: "What do you want to do with this swarm of spiders??", \$expires: 60, \$env: "FALSE", \$a: "Kill them! Kill them all!.", \$a_ob: this, \$a_fun: "fight_outcome_kill", \$b: "Let it go. Let it go! Let the storm rage oooooon!", \$b_ob: this, \$b_fun: "fight_outcome_release", \$expire_ob: this, \$expire_fun: "fight_outcome_release", \$par: ([ "char":\$char ]));


return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:fight-dob">
         X[M] /* Poke the skeleton to start a fight */

Social(this, "turn", nil, nil, "to", \$actor);

\$target = ::find_target();
\$target = \$actor;

if(!\$target) return TRUE;

/* Set them up for new combat */
\$target."merry:inherit:act-pre:breakcombat" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};
\$target."merry:inherit:act-pre:fight" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};
\$target."merry:inherit:act-pre:pass" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};
ccombat::start_fight(\$attacker: this, \$target: \$target);

return FALSE;
      </Core:Property>
      <Core:Property property="merry:witness-post:enter-from">
         X[M] if(this.combat) return TRUE;
if(!\$actor."udat:object") return TRUE;
if(this."base:environment" == nil /* defunct */) return TRUE;
if(this."tmp:starting_fight") return TRUE;
this."tmp:starting_fight" = TRUE;

\$delay(3, TRUE, "e14b");

Social(this, "gobble", "loudly");
\$delay(3, TRUE, "ac64");

\$target = ::find_target();

this."tmp:starting_fight" = nil;

if(!\$target \|\| \$target."base:environment" != this."base:environment") return TRUE;
EmitIn(\$this."base:environment", TAG(Describe(\$this) + " promptly bares their poison-laced fangs at " + Describe(\$target) + ".", "social:third"), \$target);
EmitTo(\$target, TAG(Describe(\$this) + " promptly bares their poison-laced fangs at you.", "social:second"));

this."tmp:starting_fight" = TRUE;
\$delay(3, TRUE, "94df");
this."tmp:starting_fight" = nil;

if(!\$target \|\| \$target."base:environment" != this."base:environment")
  return TRUE;

/* Set them up for new combat */
\$target."merry:inherit:act-pre:breakcombat" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};
\$target."merry:inherit:act-pre:fight" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};
\$target."merry:inherit:act-pre:pass" = \$\{Ironclaw:Lib:Combat:Cards:Combat\};

/* Start the fight */
ccombat::start_fight(\$attacker: \$target, \$target: this);

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1403644594, "jominey", "K", 1403644632, "jominey", "E", 1403644799, "jominey", "K", 1403646457, "jominey", "K", 1403648316, "jominey", "E", 1403648354, "jominey", "K", 1403648372, "jominey", "E", 1403648794, "jominey", "E", 1403648884, "jominey", "E", 1403649254, "jominey", "E", 1403649519, "jominey", "E", 1403649984, "jominey", "E", 1403650100, "jominey", "E", 1403650108, "jominey", "E", 1403650167, "jominey", "E", 1403650538, "jominey", "E", 1403650652, "jominey", "E", 1403650682, "jominey", "E", 1403654377, "jominey", "E", 1403656626, "jominey", "E", 1403656823, "jominey", "E", 1403656860, "jominey", "E", 1403669138, "jominey", "E", 1403669173, "jominey", "E", 1403669179, "jominey", "E", 1403669190, "jominey", "E", 1403669204, "jominey", "E", 1403669212, "jominey", "E", 1403669221, "jominey", "E", 1403669232, "jominey", "E", 1403729311, "slurpeeslurp", "E", 1417117833, "rorschakovacs", "E", 1422665369, "slurpeeslurp", "K", 1422665373, "slurpeeslurp", "E", 1422665643, "slurpeeslurp", "E", 1422667398, "slurpeeslurp", "E", 1422667409, "slurpeeslurp", "E", 1422667448, "slurpeeslurp", "E", 1422667568, "slurpeeslurp", "K", 1422667569, "slurpeeslurp", "K", 1422669412, "slurpeeslurp", "E", 1422670302, "slurpeeslurp", "E", 1422735594, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
