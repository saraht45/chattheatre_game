<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:UrFood)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="slab"/>
            <Base:SName sname="steak"/>
            <Base:SName sname="meat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="steaks"/>
            <Base:PName pname="slabs"/>
            <Base:PName pname="meats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="gator"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             $(this.trait:examine){? | $(this.trait:eaten) | Someone appears to have <eaten what="$(this)"/>it.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:brief">
         "raw slab of gator meat"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "A sizable slab of raw gator flesh. Firm muscles build up the otherwise tender meat, which is soft to the touch."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "A sizable slab of raw gator flesh."
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "lean protein"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "a mild aroma"
      </Core:Property>
      <Core:Property property="merry:react-post:roast-dob">
         X[M] /* check if the meat is roasted already */
if(\$this."trait:brief" == "roasted slab of gator meat") \{
   EmitTo(\$actor, "The gator meat is already roasted."); 
   return FALSE;
   \}

/* check if fire is present and used */
if(!\$using) \{
 EmitTo(\$actor, "You need some manner of fire to roast the gator meat with.");
 return FALSE;
\}
if(sizeof(\$using) != 1) \{
 EmitTo(\$actor, "One fire is more than enough for roasting.");
 return FALSE;
\}

\$light = (\$using[0]);
if(NRefDetail(\$light) != "fire" \&\& NRefOb(\$light)."base:urparent" != \$\{IronClaw:Props:Lighting:Source:Misc:Bonfire\}) \{
if(sizeof(\$using) != 1) return TRUE;
   EmitTo(\$actor, "You need some manner of fire to roast this with.");
   return FALSE;
   \}

/* emit the roasting */
 EmitTo(\$actor, Describe(\$this, nil, \$actor)+" slowly roasts over the fire, sending wafts of mouthwatering scents into the air.");
 EmitIn(\$actor."base:environment", Describe(\$this)+" slowly roasts over the fire, sending wafts of mouthwatering scents into the air. "+ Describe(\$actor)+" gradually turns the slab of gator meat to allow the fire to mark all sides of it.", \$actor);

/* roast the meat */
\$this."trait:brief" = "roasted slab of gator meat";
\$this."trait:look" = "An expertly roasted slab of lean gator meat.";
\$this."trait:examine" = "A sizable slab of gator meat roasted in earthy seasonings and fall-apart tender.";
\$this."trait:smell" = "mild, earthy aromas";
\$this."trait:taste" = "similar to chicken with a lean, steak-like texture that falls apart in your mouth. The flavor is quite mild, but enhanced by the addition of herbal seasonings";


if(\$this."base:environment" != \$actor) \{
 EmitTo(\$actor, Describe(\$this, nil, \$actor)+" slips out of your hands, and onto the ground. Oops.");
 EmitIn(\$actor."base:environment", Describe(\$this)+" slips out of "+Describe(\$actor)+"'s hands, and onto the ground. Oops.", \$actor);
 Slay(\$this);
 return FALSE;
\}

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1264611636, "balkaar", "E", 1264611868, "balkaar", "E", 1264611877, "balkaar", "E", 1264611978, "balkaar", "E", 1264612017, "balkaar", "E", 1264612589, "balkaar", "E", 1264612609, "balkaar", "E", 1264614011, "balkaar", "E", 1264614044, "balkaar", "E", 1264614053, "balkaar", "E", 1264614088, "balkaar", "E", 1264614096, "balkaar", "E", 1264614241, "balkaar", "E", 1264614249, "balkaar", "E", 1264614275, "balkaar", "E", 1264614285, "balkaar", "E", 1264614378, "balkaar", "E", 1264614389, "balkaar", "E", 1264616169, "balkaar", "E", 1264616372, "balkaar", "E", 1264616379, "balkaar", "E", 1264616381, "balkaar", "E", 1264616393, "balkaar", "E", 1264616506, "balkaar", "E", 1264616881, "balkaar", "E", 1264617099, "balkaar", "E", 1264617349, "balkaar", "E", 1264617392, "balkaar", "E", 1272780976, "slurpeeslurp", "E", 1272784672, "slurpeeslurp", "E", 1373234390, "jominey", "E", 1440736927, "slurpeeslurp", "K", 1440736934, "slurpeeslurp", "E", 1440736953, "slurpeeslurp", "E", 1440736967, "slurpeeslurp", "E", 1440736972, "slurpeeslurp", "E", 1440737209, "slurpeeslurp", "E", 1440739172, "slurpeeslurp", "E", 1507850256, "jominey", "E", 1507850283, "jominey", "E", 1507850306, "jominey", "E", 1507850349, "jominey", "E", 1507850359, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:brief">
         "raw slab of gator meat"
      </Core:Property>
      <Core:Property property="trait:examine">
         "A sizable slab of raw gator flesh. Firm muscles build up the otherwise tender meat, which is soft to the touch."
      </Core:Property>
      <Core:Property property="trait:look">
         "A sizable slab of raw gator flesh."
      </Core:Property>
      <Core:Property property="trait:smell">
         "lean protein"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
