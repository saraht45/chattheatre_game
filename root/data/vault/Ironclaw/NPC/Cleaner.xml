<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPC:UrNPC)"/>
    <Base:Bulk immobile="false" mass="58" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="10" maxweight="1"/>
    <Base:Misc gender="female" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cleaner"/>
            <Base:SName sname="npc"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cleaners"/>
            <Base:PName pname="npcs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">cleaner</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="ordinary"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="none"/>
          <Base:Adjective adjective="ordinary"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="error">
         "Libraries are needed: \<Lib:NIP:lib:asking\>"
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:(\{ "lib:handler:ask-for" \}), \<MOVED:20080918-114107:Lib:NIP:lib:asking\>:(\{ "react:npcask-dob" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:asking\>, \<MOVED:20080918-114107:Lib:NIP:lib:presents\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:present:objects">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         33
      </Core:Property>
      <Core:Property property="export:nip:trait:present:objects">
         ([ \<IronClaw:Props:Lighting:Source:Misc:Lantern\>:(\{ "lantern" \}) ])
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] this.stopcleaning = nil;
Call(\$\{IronClaw:Lib:UrPeople:Cleaning\}, "cleaning_start", \$cleaner: \$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:add_present">
         \<MOVED:20080918-114107:Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sub_present">
         \<MOVED:20080918-114107:Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask">
         \<MOVED:20080918-114107:Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:ask-for">
         \<MOVED:20080918-114107:Lib:NIP:lib:presents\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<MOVED:20080918-114107:Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:npcask-dob">
         \<MOVED:20080918-114107:Lib:NIP:lib:asking\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:login%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:lib:startcleaning">
         X[M] EmitTo(\$actor, "Started cleaning");
if(!\$cleaner) \{
  EmitTo(\$actor, "Didn't get \$cleaner");
  return FALSE;
\}
if(\$cleaner.stopcleaning) \{
  EmitIn(\$cleaner."base:environment", "Cleaner was not to clean.");
  return FALSE;
\}

EmitIn(\$cleaner."base:environment", "Setting clock");
\$cleaner.cleaning_delay = 10;
EmitIn(\$cleaner."base:environment", "clock set");

while(!\$cleaner.stopcleaning)
\{
  EmitIn(\$cleaner."base:environment", "Going to do an action");
  \$things = \$cleaner."base:environment"."base:inventory";
  if(sizeof(\$things))
  \{
    EmitIn(\$cleaner."base:environment", "There are things in this room");
    for(\$i = 0; \$i \< sizeof(\$things); \$i++)
    \{
/*      EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]));
      if(\$things[\$i]."base:volition") EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]) +" is alive.");
      if(\$things[\$i]."base:integration") EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]) +" is part of the room.");
      if(\$things[\$i]."base:immobile") EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]) +" is fixed in place.");

      if(\$things[\$i]."misc:lastdropped")
      \{
        \$idleness = time()-Int(\$things[\$i]."misc:lastdropped");
        EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]) +" was last dropped " + \$idleness + " seconds ago.");
      \}*/

      if(!(\$things[\$i]."base:volition") \&\& !(\$things[\$i]."base:integration") \&\& !(\$things[\$i]."base:immobile") \&\& (\$things[\$i]."misc:lastdropped") \&\& !(\$things[\$i].nottrash))
      \{
        if((time()-Int(\$things[\$i]."misc:lastdropped")) \> 30)
        \{
          EmitIn(\$cleaner."base:environment", Describe(\$things[\$i]) +" has been cleaned up.");
          \$things[\$i]."base:environment" = \$\{Ironclaw:World:DockTown:Commons:Props:DonationBox\};
        \}
      \}


    \}
  \}
  EmitIn(\$cleaner."base:environment", "delaying for "+Str(\$cleaner.cleaning_delay));
  \$delay(\$cleaner.cleaning_delay, TRUE, "0657");
\}

EmitIn(\$cleaner."base:environment", "Cleaner has stopped");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:evoke-dob">
         X[M] if(sscanf(\$evoke, "%*ssilk%*s"))
\{
  Social(\$this, "tell", nil, "Oh, I have no silk right now. It's in very high demand.", nil, \$actor);
\} else if(sscanf(\$evoke, "%*scloth%*s") \|\| sscanf(\$evoke, "%*syes%*s"))
\{
  Social(\$this, "tell", nil, "I have lots of cloth. I've got plenty of spare cotton, would you like some?", nil, \$actor);
  \$object = Spawn( \$\{Ironclaw:Props:Crafting:Dyes:UrDye\} );
  \$object."base:environment" = \$this;

interaction::question(\$question: "Do you want to take the cloth?", \$yes_ob: \$this, \$yes_fun: "give_object", \$par: \$object, \$no: "Okay!", \$expires: 15, \$expire: "You don't want the cloth? OK.");

  \$delay(20, TRUE, "e18e");
  if(\$object."base:environment" == \$this)
  \{
    Slay(\$object);
  \}
\} else \{
  Social(\$this, "ask", nil, "What? Huh? I'm a cloth merchant. Are you looking for cloth?", nil, \$actor);
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:poke-dob">
         X[M] this.stopcleaning = nil;
Call(\$\{IronClaw:Lib:UrPeople:Cleaning\}, "cleaning_start", \$cleaner: \$this);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:prod-dob">
         X[M] \$this.stopcleaning = 1;
return TRUE;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:lib:presents\>:(\{ "lib:handler:ask-for", "lib:handler:ask", "lib:core:add_present", "lib:core:sub_present" \}), \<MOVED:20080918-114107:Lib:NIP:lib:asking\>:(\{ "react:npcask-dob" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:asking\>, \<MOVED:20080918-114107:Lib:NIP:lib:presents\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:present:objects">
         ([ 6:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         33
      </Core:Property>
      <Core:Property property="nip:trait:present:objects">
         ([ \<IronClaw:Props:Lighting:Source:Misc:Lantern\>:(\{ "lantern" \}) ])
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1619581965
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1119234451
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1109374866, "tonyd", "E", 1109374945, "tonyd", "P", 1109374985, "tonyd", "P", 1109375037, "tonyd", "P", 1109375070, "tonyd", "P", 1109375095, "tonyd", "P", 1109375129, "tonyd", "E", 1109375150, "tonyd", "P", 1109375177, "tonyd", "P", 1109375211, "tonyd", "P", 1109375251, "tonyd", "P", 1109375311, "tonyd", "P", 1109375358, "tonyd", "P", 1109375408, "tonyd", "P", 1109375436, "tonyd", "P", 1109375493, "tonyd", "E", 1109375556, "tonyd", "P", 1109376149, "tonyd", "P", 1109376187, "tonyd", "P", 1109376237, "tonyd", "P", 1109376249, "tonyd", "P", 1109376314, "tonyd", "P", 1109376342, "tonyd", "P", 1109376503, "tonyd", "P", 1109376524, "tonyd", "P", 1109376552, "tonyd", "P", 1109394113, "tonyd", "P", 1109394211, "tonyd", "P", 1109394382, "tonyd", "P", 1109394456, "tonyd", "P", 1109394530, "tonyd", "P", 1109394581, "tonyd", "P", 1109394612, "tonyd", "P", 1109394642, "tonyd", "P", 1109394673, "tonyd", "P", 1109394698, "tonyd", "P", 1109394822, "tonyd", "P", 1109394933, "tonyd", "P", 1109395872, "tonyd", "P", 1109396172, "tonyd", "P", 1109396209, "tonyd", "P", 1109396430, "tonyd", "P", 1109397090, "tonyd", "P", 1109466885, "tonyd", "P", 1109467107, "tonyd", "E", 1109467165, "tonyd", "E", 1109467554, "tonyd", "P", 1109467622, "tonyd", "P", 1109471120, "tonyd", "P", 1109471175, "tonyd", "P", 1109471191, "tonyd", "P", 1109471212, "tonyd", "P", 1109471297, "tonyd", "P", 1110079263, "tonyd", "P", 1110079383, "tonyd", "P", 1119234421, "tonyd", "E", 1119234479, "tonyd", "S", 1119234484, "tonyd", "S", 1119234735, "tonyd", "E", 1132202666, "roccon", "E", 1132202693, "roccon", "E", 1132202730, "roccon", "E", 1132202742, "roccon", "E", 1132202776, "roccon", "E", 1132203081, "roccon", "E", 1132203106, "roccon", "E", 1132203124, "roccon", "E", 1309488986, "rorschakovacs", "R", 1309504571, "rorschakovacs", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:animal">"fox"</Core:Property>
      <Core:Property property="trait:animaltype">
         "fox"
      </Core:Property>
      <Core:Property property="trait:examine">
         "Cleaner is a fox, with dusky red fur. He has cunning black eyes."
      </Core:Property>
      <Core:Property property="trait:look">
         "Cleaner is a fox, with dusky red fur."
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
