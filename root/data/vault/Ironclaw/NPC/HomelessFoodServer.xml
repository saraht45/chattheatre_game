<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPC:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="food"/>
            <Base:SName sname="ape"/>
            <Base:SName sname="server"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="servers"/>
            <Base:PName pname="foods"/>
            <Base:PName pname="apes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="food"/>
          <Base:Adjective adjective="gawky"/>
          <Base:Adjective adjective="haggard"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="examine">
             $(this.trait:examine) You notice he is wheeling a cart behind him.
          </Base:Description>
          <Base:Description type="look">
             $(this.trait:look) You notice he is wheeling a cart behind him.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cart" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cart"/>
            <Base:SName sname="wagon"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="carts"/>
            <Base:PName pname="wagons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="oak"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             simple oak food cart
          </Base:Description>
          <Base:Description type="examine">
             A simple cart made out of oak and filled to the brim with fresh food. Along the sides the words 'Welcome to the City' have bee engraved in bold print.
          </Base:Description>
          <Base:Description type="look">
             A simple cart made of oak and filled to the brim with fresh food.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="facialhair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="facialhair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="food" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="food"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fresh"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the fresh food in the simple oak cart
          </Base:Description>
          <Base:Description type="examine">
             A myriad of fresh food ranging from bread to soups fills the inside of the cart. You can ask Snortil what he has to offer and he'll give you a list.
          </Base:Description>
          <Base:Description type="look">
             A myriad of fresh food ranging from bread to soups fills the inside of the cart. You can ask Snortil what he has to offer and he'll give you a list.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="drab"/>
          <Base:Adjective adjective="matted"/>
          <Base:Adjective adjective="short"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mullet"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="mullet"/>
          <Base:Adjective adjective="scraggly"/>
          <Base:Adjective adjective="short"/>
          <Base:Adjective adjective="sooty black"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tail" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tail"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tails"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="flour-dusted"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="appearance:anterlength">
         (\{ "short" \})
      </Core:Property>
      <Core:Property property="appearance:antlertype">
         (\{ "curved" \})
      </Core:Property>
      <Core:Property property="appearance:build">
         "haggard"
      </Core:Property>
      <Core:Property property="appearance:cheeks">
         "gaunt"
      </Core:Property>
      <Core:Property property="appearance:chin">
         "bony"
      </Core:Property>
      <Core:Property property="appearance:clawapp">
         "dirt-ridden"
      </Core:Property>
      <Core:Property property="appearance:clawlength">
         "long"
      </Core:Property>
      <Core:Property property="appearance:earshape">
         "tattered"
      </Core:Property>
      <Core:Property property="appearance:eyebrows">
         "wild"
      </Core:Property>
      <Core:Property property="appearance:eyecolor">
         "warm brown"
      </Core:Property>
      <Core:Property property="appearance:eyeshape">
         "sober"
      </Core:Property>
      <Core:Property property="appearance:feet">
         "ragged"
      </Core:Property>
      <Core:Property property="appearance:furcolor">
         "drab"
      </Core:Property>
      <Core:Property property="appearance:furlength">
         "short"
      </Core:Property>
      <Core:Property property="appearance:furtexture">
         "matted"
      </Core:Property>
      <Core:Property property="appearance:haircolor">
         "sooty black"
      </Core:Property>
      <Core:Property property="appearance:hairlength">
         "short"
      </Core:Property>
      <Core:Property property="appearance:hairstyle">
         "mullet"
      </Core:Property>
      <Core:Property property="appearance:hairstyle_examinedescription">
         "Hair which is short on top and left long in the back."
      </Core:Property>
      <Core:Property property="appearance:hairstyle_examinestring">
         ", worn in a mullet"
      </Core:Property>
      <Core:Property property="appearance:hairstyle_lookdescription">
         "Hair which is short on top and left long in the back."
      </Core:Property>
      <Core:Property property="appearance:hairstyle_string">
         ", worn in a mullet"
      </Core:Property>
      <Core:Property property="appearance:hairtexture">
         "scraggly"
      </Core:Property>
      <Core:Property property="appearance:hairtype">
         "scraggly"
      </Core:Property>
      <Core:Property property="appearance:hands">
         "bedraggled"
      </Core:Property>
      <Core:Property property="appearance:height">
         "gawky"
      </Core:Property>
      <Core:Property property="appearance:left-cheek">
         "gaunt"
      </Core:Property>
      <Core:Property property="appearance:lipshape">
         "thin, parched"
      </Core:Property>
      <Core:Property property="appearance:mouth">
         "slanted"
      </Core:Property>
      <Core:Property property="appearance:mouthshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="appearance:muzzleshape">
         "ordinary"
      </Core:Property>
      <Core:Property property="appearance:noseshape">
         "flat"
      </Core:Property>
      <Core:Property property="appearance:right-cheek">
         "gaunt"
      </Core:Property>
      <Core:Property property="appearance:stomach">
         "sunk-in"
      </Core:Property>
      <Core:Property property="appearance:taillength">
         "long"
      </Core:Property>
      <Core:Property property="appearance:tailtexture">
         "scuzzy"
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Shared:Systems:Quest:NIP:lib:quest-giver\>:(\{ "react-post:evoke-iob%quest_giver", "react-post:evoke-dob%quest_giver", "lib:check_dest", "lib:quest_query", "lib:quest_init", "lib:do_quest_yes", "lib:do_quest_no", "lib:do_quest_expire", "lib:modify_quests", "setprop-post:addquest", "setprop-post:delquest", "lib:quest_config", "lib:quest_show_emits" \}), \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Shared:Systems:Quest:NIP:lib:quest-giver\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="export:nip:quest:list">
         (\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \})
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:trading:lists">
         (\{ \<Allegory:NPCs:NIPs:TradingLists:Southwest:SoupKitchen:Server\> \})
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "food server named Snoftil"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This food server is a gawky haggard ape, with short, matted drab fur, and short scraggly sooty black hair, worn in a mullet. Sober warm brown eyes are set above a flat nose and thin, parched lips. Long dirt-ridden nails, on bedraggled hands, and ragged feet are also visible. You also note his tattered  ears."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This food server is a gawky haggard ape, with short, matted drab fur, and short scraggly sooty black hair, worn in a mullet."
      </Core:Property>
      <Core:Property property="export:trait:nominative">
         "he"
      </Core:Property>
      <Core:Property property="export:trait:objective">
         "his"
      </Core:Property>
      <Core:Property property="export:trait:possessive">
         "his"
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:check_dest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_expire">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_no">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_yes">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify_quests">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_config">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_init">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_query">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_show_emits">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-dob%quest_giver">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-iob%quest_giver">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:ask-dob%trading">
         \<Allegory:Lib:Economy:TradingLib\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:addquest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delquest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness-post:login%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:lib:get_paid">
         X[M] /* For every 5 denarii the server is paid, he will restock 1 item in his inventory list */

/* Check how much change he is holding */
\$funds = Int(\$this."trait:money");

/* For every five denarii, restock a dish */
/* Find out how many dishes we can restock with current funds */
\$num = Int(floor(Flt(\$funds/500)));

/* Restock the dishes */
\$dishesRestocked = 0;
for(\$i = 0; \$i \< \$num; \$i++) \{
    \$lowest = ([ ]);
    /* Scan through all the trading lists */
    \$lists = \$this."trading:lists";
    for(\$j = 0; \$j \< sizeof(\$lists); \$j++) \{
        \$items = Get(\$lists[\$j], "*");
        \$items = map_indices(prefixed_map(\$items, "tradingitem"));
        for(\$k = 0; \$k \< sizeof(\$items); \$k++) \{
            \$stock = Get(\$lists[\$j], \$items[\$k])["stock"];
            if(\$stock \> -1 \&\& \$stock \< 30) \{
                if(!map_sizeof(\$lowest) \|\| \$stock \< map_values(\$lowest)[0][1]) \{
                    \$lowest = ([ \$items[\$k]:(\{ \$lists[\$j], \$stock \}) ]);
                \} else if(\$stock == map_values(\$lowest)[0][1])\{
                    if(map_sizeof(\$lowest) \&\& map_values(\$lowest)[0][1]) \{
                        if(!\$lowest[\$items[\$k]]) \{
                            \$lowest += ([ \$items[\$k]:(\{ \$lists[\$j], \$stock \}) ]);
                        \}
                    \}
                \}
            \}
        \}
    \}
    if(map_sizeof(\$lowest)) \{
        if(map_sizeof(\$lowest) \> 1) \{
            \$itemToStock = map_indices(\$lowest)[random(sizeof(map_indices(\$lowest)))];
        \} else \{
            \$itemToStock = map_indices(\$lowest)[0];
        \}

        \$stockList = \$lowest[\$itemToStock][0];
        \$stockNum = Int(\$lowest[\$itemToStock][1]) + 1;

        \$temp = Get(\$stockList, \$itemToStock);
        \$temp["stock"] = \$stockNum;

        Set(\$stockList, \$itemToStock, \$temp);

        \$dishesRestocked++;
    \}
\}

if(\$dishesRestocked == \$num \&\& \$num \> 0) \{
    /* We were able to use all the money */
    Social(\$this, "smile", "happily", "This help lot. Thanks!", "at", \$actor );

    /* Give remaining change back to the server */
    \$this."trait:money" = \$funds - (\$num*500);
\}

if(\$dishesRestocked == 0 \&\& \$total \> 0) \{
    /* We were not able to use any money */
    /* Nothing else to stock. Give the money back because we don't need it. */
    Social(\$this, "smile", "gratefully", "No need donation now. Have plenty food.", "at", \$actor );
    EmitTo(\$actor, TAG(Describe(\$this) + " pays you " + Str(\$total/100) + " denarii.", "imp"));
    \$this."trait:money" -= \$total;
    \$actor."trait:money" += \$total;
    return FALSE;
\}

if(\$dishesRestocked \> 0 \&\& \$dishesRestocked \< \$num) \{
    /* We were able to use some of the money but not all */
    /* Return any money that can't be used */
    \$refund = (\$num - \$dishesRestocked) * 500;
    Social(\$this, "smile", "gratefully", "Very helpful! Only need " + desc_cardinal(\$dishesRestocked*5) + " denarii to stock supplies though. You keep rest.", "at", \$actor );
    \$actor."trait:money" += \$refund;
    \$this."trait:money" -= \$refund;
    \$this."trait:money" = \$funds - (\$num*500);
\}

return FALSE;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Shared:Systems:Quest:NIP:lib:quest-giver\>:(\{ "react-post:evoke-iob%quest_giver", "react-post:evoke-dob%quest_giver", "lib:check_dest", "lib:quest_query", "lib:quest_init", "lib:do_quest_yes", "lib:do_quest_no", "lib:do_quest_expire", "lib:modify_quests", "setprop-post:addquest", "setprop-post:delquest", "lib:quest_config", "lib:quest_show_emits" \}), \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Shared:Systems:Quest:NIP:lib:quest-giver\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="nip:quest:list">
         (\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \})
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1410897980
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1411741567
      </Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="quest:pending">
         ([ \<Chatters:AE:ta:tara\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:Backup:AE:pi:pier0\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:Backup:IC:un:una0\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:IC:si:sirazad\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:IC:vi:virendra\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:IC:na:nan\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}), \<Chatters:IC:hu:hush\>:(\{ \<Ironclaw:Quest:Quests:MarshandMellowsoup\> \}) ])
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1319073687, "meandmine", "X", 1389635335, "vandringar", "E", 1389635425, "vandringar", "E", 1389635531, "vandringar", "E", 1389635691, "vandringar", "E", 1389635808, "vandringar", "E", 1389635912, "vandringar", "E", 1389637588, "vandringar", "E", 1389640924, "vandringar", "K", 1389641141, "vandringar", "E", 1389641901, "vandringar", "E", 1411741612, "slurpeeslurp", "K", 1411741623, "slurpeeslurp", "E", 1411741738, "slurpeeslurp", "E", 1411742180, "slurpeeslurp", "E", 1411742462, "slurpeeslurp", "E", 1411742511, "slurpeeslurp", "K", 1411742548, "slurpeeslurp", "E", 1411742565, "slurpeeslurp", "E", 1411742669, "slurpeeslurp", "E", 1411742731, "slurpeeslurp", "E", 1411742788, "slurpeeslurp", "E", 1411742829, "slurpeeslurp", "K", 1411743134, "slurpeeslurp", "K", 1411743143, "slurpeeslurp", "E", 1411743233, "slurpeeslurp", "K", 1411743311, "slurpeeslurp", "E", 1411743415, "slurpeeslurp", "E", 1411743470, "slurpeeslurp", "E", 1413556660, "slurpeeslurp", "E", 1413556698, "slurpeeslurp", "E", 1413556763, "slurpeeslurp", "E", 1413557864, "slurpeeslurp", "E", 1421207721, "jominey", "K", 1421207730, "jominey", "K", 1427520179, "jominey", "E", 1427520817, "jominey", "E", 1427520914, "jominey", "E", 1427522062, "jominey", "E", 1427522588, "jominey", "E", 1427522656, "jominey", "E", 1427522709, "jominey", "E", 1427522733, "jominey", "E", 1427522764, "jominey", "E", 1427522971, "jominey", "E", 1427523032, "jominey", "E", 1427523650, "jominey", "E", 1427523686, "jominey", "E", 1427523732, "jominey", "E", 1427523804, "jominey", "E", 1427523873, "jominey", "E", 1427523891, "jominey", "E", 1427523946, "jominey", "E", 1427523983, "jominey", "E", 1427524017, "jominey", "E", 1427524515, "jominey", "E", 1427524702, "jominey", "E", 1427524843, "jominey", "E", 1427524949, "jominey", "E", 1427524971, "jominey", "E", 1427525036, "jominey", "E", 1427525267, "jominey", "E", 1427525408, "jominey", "E", 1427525481, "jominey", "E", 1427525636, "jominey", "E", 1427525705, "jominey", "E", 1427526247, "jominey", "E", 1427526478, "jominey", "E", 1427526603, "jominey", "E", 1427526744, "jominey", "E", 1427526799, "jominey", "E", 1427527156, "jominey", "E", 1427527414, "jominey", "E", 1427527552, "jominey", "E", 1427527714, "jominey", "E", 1427527833, "jominey", "E", 1427527941, "jominey", "E", 1427528063, "jominey", "E", 1427528176, "jominey", "E", 1427528247, "jominey", "E", 1427552563, "jominey", "E", 1427600834, "jominey", "E", 1563755281, "heavenlyheather", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="spawn:creator">
         (\{ "slurpeeslurp", 1251961367 \})
      </Core:Property>
      <Core:Property property="student:learningpoints">
         32
      </Core:Property>
      <Core:Property property="student:todayspoints">
         2
      </Core:Property>
      <Core:Property property="theatre:notwhobody">1</Core:Property>
      <Core:Property property="trait:animal">"ape"</Core:Property>
      <Core:Property property="trait:brief">
         "food server"
      </Core:Property>
      <Core:Property property="trait:examine">
         "This food server is a gawky haggard ape, with short, matted drab fur, and short scraggly sooty black hair, worn in a mullet. Sober warm brown eyes are set above a flat nose and thin, parched lips. Long dirt-ridden nails, on bedraggled hands, and ragged feet are also visible. You also note his tattered  ears."
      </Core:Property>
      <Core:Property property="trait:look">
         "This food server is a gawky haggard ape, with short, matted drab fur, and short scraggly sooty black hair, worn in a mullet."
      </Core:Property>
      <Core:Property property="trait:nominative">
         "he"
      </Core:Property>
      <Core:Property property="trait:objective">
         "his"
      </Core:Property>
      <Core:Property property="trait:possessive">
         "his"
      </Core:Property>
      <Core:Property property="trait:sex">"man"</Core:Property>
      <Core:Property property="trait:smell">
         "the streets"
      </Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1341077963
      </Core:Property>
      <Core:Property property="trait:title">
         "Food Server"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
