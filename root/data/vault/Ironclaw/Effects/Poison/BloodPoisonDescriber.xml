<object clone="/obj/properties" owner="jominey">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="#list#">
         X[M] /*

-----------------------------------
 LIBRARY CONTENT (Merry/SAM)

 Object:        Effects:Extensions:Describer
 Maintainer:    Kalle Alm
 Email:         kalle@mortalis.skotos.net
 Revision:      1.1
 Generated:     Sun Nov 16 02:49:03 2008 on Castle Marrach
 Last revision: Fri Feb  3 16:30:45 2006 by ??? (P)



(Do not modify #list# -- it is automatically constructed.)


--------------------------------------------------------------------------------------------
 lib:acquired          (M) Acquired signal for the 'describer' effects extension.
 lib:cured             (M) Cured signal for the 'describer' effects extension.
 lib:describe          (M) Describe a particular signal.
 lib:expired           (M) Expired signal for the 'describer' effects extension.
 lib:resisted          (M) Resisted signal for the 'describer' effects extension.
 lib:severity-decrease (M) Decrease-severity signal for the 'describer' effects extension.
 lib:severity-increase (M) Increase-severity signal for the 'describer' effects extension.
 lib:spontaneous       (M) Spontaneous signal for the 'describer' effects extension.
--------------------------------------------------------------------------------------------

*/
      </Core:Property>
      <Core:Property property="effect:extension">
         \<Ironclaw:Effects:Disease:SpiderItchDescriber\>
      </Core:Property>
      <Core:Property property="merry:lib:acquired">
         X[M] ::describe(\$what: "acquire");
      </Core:Property>
      <Core:Property property="merry:lib:cured">
         X[M] ::describe(\$what: "cure");
      </Core:Property>
      <Core:Property property="merry:lib:describe">
         X[M] mixed e;

int severity;
string degree;

severity = Int( Get( \$who, "effect:" + \$effect."effect:name" + ":severity" ));
degree   = Str( Call( \$effect, "generate_degree", \$severity: severity ));
\$person  = Describe( \$who );
\$their   = \$who."base:possessive";
\$them    = \$who."base:objective";
\$they    = \$who."base:pronoun";

if (!Get(\$effect, "effect:" + \$what + "-actor-chance") \|\|
    !random(Get(\$effect, "effect:" + \$what + "-actor-chance"))) \{
  if      (e = Get( \$effect, "effect:" + \$what + "-actor-" + degree))
    EmitTo(\$who, UnSAM(e));
  else if (e = Get( \$effect, "effect:" + \$what + "-actor"))
    EmitTo(\$who, UnSAM(e));
\}

if (!Get(\$effect, "effect:" + \$what + "-audience-chance") \|\|
    !random(Get(\$effect, "effect:" + \$what + "-audience-chance"))) \{
  if      (e = Get( \$effect, "effect:" + \$what + "-audience-" + degree))
    EmitIn(\$who."base:environment", UnSAM(e), \$who);
  else if (e = Get( \$effect, "effect:" + \$what + "-audience"))
    EmitIn(\$who."base:environment", UnSAM(e), \$who);
\}
      </Core:Property>
      <Core:Property property="merry:lib:expired">
         X[M] /*

  D=Expired signal for the 'describer' effects extension.

*/

::describe(\$what: "expire");
      </Core:Property>
      <Core:Property property="merry:lib:resisted">
         X[M] /*

  D=Resisted signal for the 'describer' effects extension.

  This script checks for the SAM strings "effect:resist-actor"
  and "effect:resist-audience". If either exists, it is evaluated
  and emitted to the appropriate parties.

*/

::describe(\$what: "resist");
      </Core:Property>
      <Core:Property property="merry:lib:severity-capped">
         X[M] /*

  D=Severity reached "climax", so now we die.

*/

EmitIn(\$who."base:environment", Describe(\$who) + " spasms violently.");
Call(\$\{Ironclaw:Lib:Characters:Death\}, "die", \$victim: \$who);
      </Core:Property>
      <Core:Property property="merry:lib:severity-decrease">
         X[M] /*

  D=Decrease-severity signal for the 'describer' effects extension.

  This script checks for the SAM strings "effect:decrease-severity-actor"
  and "effect:decrease-severity-audience". If either exists, it is evaluated
  and emitted to the appropriate parties.

*/

::describe(\$what: "severity-decrease");
      </Core:Property>
      <Core:Property property="merry:lib:severity-increase">
         X[M] /*

  D=Increase-severity signal for the 'describer' effects extension.

  This script checks for the SAM strings "effect:increase-severity-actor"
  and "effect:increase-severity-audience". If either exists, it is evaluated
  and emitted to the appropriate parties.

*/

if(Int(\$who."effect:bloodpoison:severity") \> \$who."effect:bloodpoison:concentration:cap") \{
    \$who."effect:bloodpoison:severity" = \$who."effect:bloodpoison:concentration:cap";
\} else \{
    ::describe(\$what: "severity-increase");
\}
      </Core:Property>
      <Core:Property property="merry:lib:spontaneous">
         X[M] /*

  D=Spontaneous signal for the 'describer' effects extension.

*/

::describe(\$what: "spontaneous");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1096579507, "zwoc", "P", 1096579525, "zwoc", "P", 1096579578, "zwoc", "P", 1096579666, "zwoc", "P", 1096579758, "zwoc", "P", 1096579846, "zwoc", "P", 1096579944, "zwoc", "P", 1096579987, "zwoc", "P", 1096580048, "zwoc", "P", 1096581409, "zwoc", "P", 1096581720, "zwoc", "P", 1096581810, "zwoc", "P", 1096581861, "zwoc", "P", 1096583249, "zwoc", "P", 1096586831, "zwoc", "P", 1097802085, "zwoc", "P", 1097892976, "zwoc", "P", 1097892993, "zwoc", "P", 1097893003, "zwoc", "P", 1097893028, "zwoc", "P", 1097893048, "zwoc", "P", 1097893065, "zwoc", "P", 1098140495, "zwoc", "P", 1139002245, "???", "P", 1250085768, "balkaar", "E", 1250085780, "balkaar", "E", 1250085793, "balkaar", "E", 1250085842, "balkaar", "E", 1250085860, "balkaar", "E", 1250086059, "balkaar", "E", 1250086204, "balkaar", "E", 1250166769, "tonyd", "E", 1250166783, "tonyd", "E", 1250166850, "tonyd", "E", 1250166946, "tonyd", "E", 1250167172, "tonyd", "E", 1250167359, "tonyd", "E", 1250167389, "tonyd", "E", 1250167828, "tonyd", "E", 1250167916, "tonyd", "E", 1250168086, "tonyd", "E", 1250168158, "tonyd", "E", 1250170612, "tonyd", "E", 1294705763, "jominey", "E", 1294705781, "jominey", "E", 1294705806, "jominey", "E", 1294706249, "jominey", "E", 1294706493, "jominey", "E", 1294706766, "jominey", "E", 1294706887, "jominey", "E", 1294706905, "jominey", "E", 1294707087, "jominey", "E", 1294707163, "jominey", "E", 1294707323, "jominey", "E", 1294707358, "jominey", "E", 1294708283, "jominey", "E", 1294708665, "jominey", "E", 1294712160, "jominey", "E", 1294712243, "jominey", "E", 1294712605, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="{author}">"Kalle Alm"</Core:Property>
      <Core:Property property="{email}">
         "kalle@mortalis.skotos.net"
      </Core:Property>
      <Core:Property property="{rev}">1</Core:Property>
      <Core:Property property="{sub_rev_stamp}">
         1139002245
      </Core:Property>
      <Core:Property property="{sub_rev}">1</Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
