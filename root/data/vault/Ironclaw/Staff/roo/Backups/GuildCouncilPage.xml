<object clone="/obj/properties" owner="jominey">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="councilcomplaints">
         \<Ironclaw:Data:GuildCouncil:Complaints\>
      </Core:Property>
      <Core:Property property="html:index">
         X[S] \<z dat="\$(UDat.Dat)" name="\$(UDat.Name)"\>
    \$[/* run some initial code */   
        ::popup_initialize();   
        return nil;]
\</z\>
\$["\<!DOCTYPE HTML PUBLIC \\"-//W3C//DTD HTML 4.01 Transitional//EN\\" \\"http://www.w3.org/TR/html4/loose.dtd\\"/\>"]
\<html lang="en"\>
    \<head\>
        \<title\>The Triskellian Guild Council\</title\>
        \<style\>.clickable \\\{ cursor: pointer; color: #0000FF;\\\}\</style\>
        \<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/\>
        \$(this.html:stylesheet)
        \$(this.html:javascript)
    \</head\>
    \<body style="background-color: black;"\>
    \<div style="text-align: center; border: 1px solid black; margin-left: 1.5%; height: 95%; position: fixed; overflow: hidden; width: 95%; background-color: white; background-size: 100% 100%; background-repeat: no-repeat;"\>\<br/\>
    \<center\>\<table\>
        \<tr\>
            \<td\>\<img src="http://anam.massagetherapy.com/Triple%20Spiral%20symbol%20--%20three%20filled%20double%20Archimedean%20spirals%20(triskelion).png" width="50px"/\>\</td\>
            \<td\>\<font size="7"\>\<bold\>The Triskellian Guild Council\</bold\>\</font\>\</td\>
            \<td\>\<img src="http://anam.massagetherapy.com/Triple%20Spiral%20symbol%20--%20three%20filled%20double%20Archimedean%20spirals%20(triskelion).png" width="50px"/\>\</td\>
        \</tr\>
        \<tr\>
            \<td colspan="3"\>\<center\>\<font color="gray" size="5"\>\<i\>"We the people, For the people."\</i\>\</font\>\</center\>\</td\>
        \</tr\>
        \<tr\>
            \<td colspan="3"\>\<hr style="width:100%; height:1px;"/\>\</td\>
        \</tr\>
        \<tr\>\<td colspan="3"\>\<font color="red"\>\<b\>NEXT MEETING DATE: COMING SOON\</b\>\</font\>\</td\>\</tr\>
        \<tr\>
            \<td colspan="3"\>\<hr style="width:100%; height:1px;"/\>\</td\>
        \</tr\>
    \</table\>\</center\>
    \<center\>\<div width="700px"\>
        \<table width="700px"\>
            \<tr\>
                \<td width="50%"\>
                    \<div style="overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>New Membership Applications\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\\\&nbsp;\\\&nbsp;\\\&nbsp;\<i\>No pending applicants\</i\>\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
                \<td width="50%"\>
                    \<div style="overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>Building Requests\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\\\&nbsp;\\\&nbsp;\\\&nbsp;\<i\>No pending requests\</i\>\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
            \</tr\>
            \<tr\>
                \<td width="50%"\>
                    \<div style="top: 320px; overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>Current Members\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\\\&nbsp;\\\&nbsp;\\\&nbsp;\<i\>Coming Soon\</i\>\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
                \<td width="50%"\>
                    \<div style="top: 320px; overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>Suggestion Box\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\$[::retrieve_complaints()]\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
            \</tr\>
            \<tr\>
                \<td width="50%"\>
                    \<div style="top: 420px; overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>Financial Reports\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\\\&nbsp;\\\&nbsp;\\\&nbsp;\<i\>Bling bling\</i\>\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
                \<td width="50%"\>
                    \<div style="top: 420px; overflow:scroll; width: 350px; position: fixed; height: 100px"\>
                        \<table width="100%"\>
                            \<tr\>\<td\>\<b\>Archives\</b\>\</td\>\</tr\>
                            \<tr\>\<td\>\\\&nbsp;\\\&nbsp;\\\&nbsp;\<i\>Coming Soon\</i\>\</td\>\</tr\>
                        \</table\>
                    \</div\>
                \</td\>
            \</tr\>
        \</table\>
    \</div\>\</center\>
    \</div\>
    \</body\>
\</html\>
      </Core:Property>
      <Core:Property property="merry:lib:file_complaint">
         X[M] \$db = \$this.councilcomplaints;

\$title = \$complaint."complaint:title";
\$guild = \$complaint."complaint:guild";
\$body = \$complaint."details:default:description:writing";
\$filedby = \$complaint.lastwriter;

\$property = ([ "tite":\$title, "guild": \$guild, "body":\$body, "filedby":\$filedby ]);

Set(\$db, Str(time()), \$property);

Slay(\$complaint);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:popup_initialize">
         X[M] /* checks the player isn't trying anything funny, and that we have all the information we need */
/* returns the page we should look up */
object *bodies;
int i, sz;

/* first basic sanity checks -- these should never happen */
if (\$dat == nil) \{
    error("page reached without a udat");
\}
if (\$name == nil) \{
    error("page reached without a name");
\}

/* what is the character? */
if(\$actor \&\& typeof(\$actor) == 3) \{
    /* \$actor is a string. make it an object */
    if(Obj(\$actor)) \{
        \$actor = Obj(\$actor);
    \} else \{
        \$actor = Obj("Chatters:IC:"+\$actor[0..1]+":"+\$actor);
    \}
\}

if(\$char \&\& typeof(\$char) == 3) \{
    /* \$char is a string. make it an object */
    if(Obj(\$char)) \{
        \$char = Obj(\$char);
    \} else \{
        \$char = Obj("Chatters:IC:"+\$char[0..1]+":"+\$char);
    \}
\}

if(!\$char \&\& \$actor) \$char = \$actor;
if(!\$actor \&\& \$char) \$actor = \$char;
if (!\$char) error("No character specified");

\$charname = name(\$char)[15..strlen(name(\$char))-1];


/* what is the guild? */
if(\$guild \&\& typeof(\$guild) == 3 \&\& Obj("Ironclaw:Guilds:"+\$guild)) \{
  \$guildob = Obj("Ironclaw:Guilds:"+\$guild);
\} else if(Get(\$char, "guild")) \{
  \$guildob = \$char.guild;
\} else \{
  \$guildob = nil;
\}

if(\$guildob) \{
  \$guildname = name(\$guildob)[16..strlen(name(\$guildob))-1];
  \$guildpages = Obj("Ironclaw:Guilds:Pages:new:"+\$guildname);
  if(!\$guildpages) \{
    \$guildpages = Duplicate(\$\{Allegory:Guilds:Pages:new:default_page\});
    \$guildpages."core:objectname" = "Ironclaw:Guilds:Pages:new:"+\$guildname;
  \}
\}


/* Check the player isn't trying to access someone elses body */
/* Check if the players roster of characters */
bodies = Udat::query_bodies_in_roster(\$user: \$name);

for(i = 0; i \< sizeof(bodies);) \{
    if(bodies[i]."theatre:id" != "IC") \{
        bodies -= (\{ \$bodies[i] \});
    \} else \{
        i++;
    \}
\}

bodies \&= (\{ \$char \});

if(sizeof(bodies) \< 1 \&\& \$name != "tonyd") \{
  error("Body "+dump_value(\$char)+" for account "+dump_value(\$name)+" not found in character roster");
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:retrieve_complaints">
         X[M] \$db = \$\{Ironclaw:Data:GuildCouncil:Complaints\};

\$data = copy(\$db)."*";

EmitTo(nil /* defunct */, dump_value(\$data));

return "yayayayy";
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052088, "-", "SYNC", 1221752477, "???", "R", 1479253655, "jominey", "E", 1479253695, "jominey", "E", 1479253724, "jominey", "E", 1479253740, "jominey", "E", 1479253756, "jominey", "E", 1479253903, "jominey", "E", 1479254025, "jominey", "E", 1479254109, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
