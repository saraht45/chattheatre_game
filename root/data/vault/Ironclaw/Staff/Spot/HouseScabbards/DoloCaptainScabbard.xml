<object clone="/base/obj/thing" owner="rastalabor">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="default"/>
            <Base:SName sname="scabbard"/>
            <Base:SName sname="sheath"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scabbards"/>
            <Base:PName pname="sheaths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="gem-adorned"/>
          <Base:Adjective adjective="leather"/>
          <Base:Adjective adjective="orichalcum"/>
          <Base:Adjective adjective="sheathed"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             gem-adorned green leather scabbard
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.sheathed) |
You see <describe what="$[NewNRef($this.sheathed, "hilt")]"/> protruding from a gem adorned scabbard. The green leather of the scabbard is traced with light catching gems in the form of a castle tower, the symbol of the Doloreaux. On closer inspection, you can see the orichalcum throat of the scabbard is engraved with some writing. <sbr/>
    You can make out
    <describe-view view="$[NewNRef($this.sheathed, "hilt")]" uncap="1"/>
|
    You see a gem adorned green leather scabbard. The green leather of the scabbard is traced with light catching gems in the form of a castle tower, the symbol of the Doloreaux. On closer inspection, you can see the orichalcum throat of the scabbard is engraved with some writing.
}
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.sheathed) |
You see <describe what="$[NewNRef($this.sheathed, "hilt")]"/> protruding from a gem adorned scabbard. The green leather of the scabbard is traced with light catching gems in the form of a castle tower, the symbol of the Doloreaux.  <sbr/>
    You can make out
    <describe-view view="$[NewNRef($this.sheathed, "hilt")]" uncap="1"/>
|
    You see a gem adorned green leather scabbard. The green leather of the scabbard is traced with light catching gems in the form of a castle tower, the symbol of the Doloreaux.
}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scabbard" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scabbard"/>
            <Base:SName sname="sheath"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scabbards"/>
            <Base:PName pname="sheaths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="gem-adorned"/>
          <Base:Adjective adjective="gem-encrusted"/>
          <Base:Adjective adjective="glittering"/>
          <Base:Adjective adjective="leather"/>
          <Base:Adjective adjective="orichalcum"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">sheath</Base:Description>
          <Base:Description type="look">
             A sheath.
{? | $(this.sheathed) |
<br/><describe what="$[NewNRef($this.sheathed, "hilt")]"/> protrudes from <describe what="$(this)" detail="scabbard"/>.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="throat" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="throat"/>
            <Base:SName sname="engraving"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="throats"/>
            <Base:PName pname="engravings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="engraved"/>
          <Base:Adjective adjective="orichalcum"/>
          <Base:Adjective adjective="scabbard"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             orichalcum scabbard throat
          </Base:Description>
          <Base:Description type="examine">
             The throat of the scabbard is formed of exceptionally rare orichalcum. You can make out the following: <sbr/>As the mountains, and stone walls of the Doloreaux castles stand, so must a Rittmeister be unflinching to uphold and defend that which is Doloreaux.<sbr/>Carried steadfast by $(this.trait:engraving).
          </Base:Description>
          <Base:Description type="look">
             The throat of the scabbard is formed of orichalcum. It has writing on it if you look closer.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="unsheathed" prime="false" def="true" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">sheath</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="hip-left"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:engraving">
         "Mister Khalon"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "scabbard"
      </Core:Property>
      <Core:Property property="export:trait:sheathaccepts">
         (\{ "sword", "two-handed sword" \})
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] string *names;      
int i;      
      
/* set names for the default to be the scabbard */      
/* hide the scabbard detail */      
\$this."details:scabbard:hidden:local" = 1;      
/* remove scabbard names from the detail */      
names = \$this."details:scabbard:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", 1);      
names = \$this."details:scabbard:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", 1);      
names = \$this."details:scabbard:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", 1);
      </Core:Property>
      <Core:Property property="merry:act:stop">
         X[M] /* if there is a sheathed weapon in this, slay it */      
if(this.sheathed \&\& !this.sheathed.noslay)      
  Slay(this.sheathed);      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:sheathe-iob">
         X[M] string *names;      
int i;      
      
/* check they aren't still wielding the weapon */      
if(NRefOb(\$dob[0])."base:wielded-by") \{      
  \$delay(0.5, TRUE, "7dda");      
  if(NRefOb(\$dob[0])."base:wielded-by") \{      
    EmitTo(\$actor, "You can't sheathe "+Describe(\$dob[0], nil, \$actor)+" while you are wielding it.");      
    return FALSE;      
  \}      
\}      
      
/* unhide the scabbard detail */      
\$this."details:scabbard:hidden:local" = nil;      
/* remove scabbard names from the detail */      
names = \$this."details:scabbard:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", nil);      
names = \$this."details:scabbard:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", nil);      
names = \$this."details:scabbard:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", nil);      
      
/* describe the sheathed weapon */      
if(NRefOb(\$dob[0])."details:default:definite:local" == 1) \{      
  \$this."trait:brief" = "sheathed "+Describe(NRefOb(\$dob[0]));      
\} else \{      
  NRefOb(\$dob[0])."details:default:definite:local" = 1;      
  \$this."trait:brief" = "sheathed "+Describe(NRefOb(\$dob[0]));      
  NRefOb(\$dob[0])."details:default:definite:local" = nil;      
\}      
      
/* set description of sheathed weapon hilt */      
names = NRefOb(\$dob[0])."details:hilt:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:hilt:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:hilt:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", 1);      
      
/* set description of sheathed weapon (default) */      
names = NRefOb(\$dob[0])."details:default:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:default:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:default:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", 1);      
      
/* set description of sheathed weapon */      
/* this seems like a repeat of above */      
/*      
names = NRefOb(\$dob[0])."details:hilt:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:hilt:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", 1);      
names = NRefOb(\$dob[0])."details:hilt:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", 1);      
*/      
      
/* remove the unsheathed adjective */      
\$this."details:default:adjective:unsheathed:local" = nil;      
      
/* illuminate the sheathed weapon */      
NRefOb(\$dob[0])."details:default:luminosity:local" = 100.0;      
      
/* move the actual weapon to the void */      
\$this.sheathed = NRefOb(\$dob[0]);      
NRefOb(\$dob[0])."base:environment" = nil;      
      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drop%shiftdetail">
         X[M] /* if they try to drop the scabbard, make them instead target the default detail */      
if(NRefDetail(\$target) == "scabbard") \{      
  Act(\$actor, "drop", \$what: (\{ NewNRef(NRefOb(\$target), "default") \}));      
  return FALSE;      
\}      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drop-what%shiftdetail">
         X[M] /* if they try to drop the scabbard, make them instead target the default detail */      
if(NRefDetail(\$target) == "scabbard") \{      
  Social( \$actor, "drop", \$adverb, \$evoke, nil, NewNRef(NRefOb(\$target), "default") );      
  return FALSE;      
\}      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:sheathe-iob">
         X[M] if(\$this.sheathed) \{      
  EmitTo(\$actor, Describe(\$this, nil, \$actor)+" already contains "+Describe(\$this.sheathed)+".");      
  return FALSE;      
\}      
      
if(sizeof(\$dob) \> 1) \{      
  EmitTo(\$actor, "You can only sheathe one thing in "+Describe(\$this, nil, \$actor)+".");      
  return FALSE;      
\}      
      
/* unwield the sword if it's wielded */      
if(NRefOb(\$dob[0])."base:wielded-by") \{      
  Act(\$actor, "unwield", \$article: NRefOb(\$dob[0]));      
\}      
      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:take%shiftdetail">
         X[M] /* if they try to take the scabbard, make them instead target the default detail */      
if(NRefDetail(\$target) == "scabbard") \{      
  Act(\$actor, "take", \$what: (\{ NewNRef(NRefOb(\$target), "default") \}));      
  return FALSE;      
\}      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:unsheathe-dob">
         X[M] string *names;      
int i;      
      
if(!\$this.sheathed) return TRUE;      
      
/* give the weapon to the player */      
\$weapon = \$this.sheathed;      
\$weapon."base:environment" = \$actor;      
\$this.sheathed = nil;      
\$this."trait:brief" = "decorated purple lizard-skin scabbard";      
      
/* remove names in sheath */      
names = \$this."details:default:snames:local";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", nil);      
names = \$this."details:default:pnames:local";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", nil);      
names = \$this."details:default:adjectives:local";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", nil);      
      
/* set names for the default to be the scabbard */      
/* hide the scabbard detail */      
\$this."details:scabbard:hidden:local" = 1;      
/* remove scabbard names from the detail */      
names = \$this."details:scabbard:snames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:sname:"+names[i]+":local", 1);      
names = \$this."details:scabbard:pnames";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:pname:"+names[i]+":local", 1);      
names = \$this."details:scabbard:adjectives";      
for(i=0;i\<sizeof(names);i++)      
  Set(\$this, "details:default:adjective:"+names[i]+":local", 1);      
      
/* de-illuminate the sheathed weapon */      
NRefOb(\$dob[0])."details:default:luminosity:local" = 0.0;      
      
      
/* display the player unsheathing the weapon */      
\$(adverb:position) = "pv";      
Social( \$actor, "unsheathe", \$adverb, \$evoke, nil, \$weapon, "from", \$this);      
      
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:sheathe-iob">
         X[M] if(\$this."trait:sheathaccepts") \{      
  \$accepts = Arr(\$this."trait:sheathaccepts");      
  /* easier way to write this code      
  for(\$i=0;\$i\<sizeof(\$accepts);\$i++) \{      
    if(NRefOb(\$dob[0])."trait:sheathtype" == \$accepts[\$i])      
      return TRUE;      
  \}*/      
  if(member(NRefOb(\$dob[0])."trait:sheathtype", \$accepts))      
    return TRUE;      
  \$message = "";      
  if(sizeof(\$accepts) == 1) \{      
    \$message = " a "+\$accepts[0];      
  \} else if(sizeof(\$accepts) == 2) \{      
    \$message = " a "+\$accepts[0]+" or a "+\$accepts[1];      
  \} else \{      
    for(\$i=0;\$i\<sizeof(\$accepts);\$i++) \{      
      if(\$i == sizeof(\$accepts)-1) \{      
        \$message += " or a ";      
      \} else \{      
        \$message += " a ";      
      \}      
      \$message += \$accepts[\$i];      
      if(\$i \< sizeof(\$accepts)-2)      
        \$message += ",";      
    \}      
  \}      
\} else \{      
  return TRUE;      
\}      
EmitTo(\$actor, "You can only sheathe"+\$message+" in "+Describe(\$this, nil, \$actor)+".");      
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1125392426, "roccon", "E", 1125392722, "roccon", "E", 1125393185, "tonyd", "E", 1125393193, "roccon", "E", 1127011205, "tonyd", "E", 1127011225, "tonyd", "E", 1127011238, "tonyd", "E", 1136534364, "sinistrelle", "X", 1136534374, "sinistrelle", "X", 1136573289, "tunk_bodin", "X", 1136573342, "tunk_bodin", "X", 1136573422, "tunk_bodin", "X", 1136576170, "roccon", "E", 1136608620, "tonyd", "E", 1136610295, "sinistrelle", "E", 1138473942, "sinistrelle", "X", 1146128914, "tonyd", "E", 1146129083, "tonyd", "E", 1146129345, "tonyd", "P", 1146129378, "tonyd", "P", 1146129492, "tonyd", "P", 1146129541, "tonyd", "P", 1146210345, "sinistrelle", "E", 1146210522, "sinistrelle", "E", 1146368032, "tonyd", "P", 1146369211, "tonyd", "P", 1146369850, "tonyd", "P", 1146370017, "tonyd", "P", 1146370126, "tonyd", "P", 1146370157, "tonyd", "P", 1146370280, "tonyd", "E", 1146370340, "tonyd", "E", 1146370500, "tonyd", "P", 1146370534, "tonyd", "P", 1146370554, "tonyd", "P", 1146370614, "tonyd", "P", 1146371020, "tonyd", "P", 1146371094, "tonyd", "P", 1146371204, "tonyd", "P", 1146371286, "tonyd", "P", 1146371352, "tonyd", "P", 1146371395, "tonyd", "P", 1146371502, "tonyd", "P", 1146371546, "tonyd", "P", 1146371569, "tonyd", "P", 1146371581, "tonyd", "P", 1146371706, "tonyd", "P", 1146371765, "tonyd", "P", 1146371794, "tonyd", "P", 1146371909, "tonyd", "P", 1146371961, "tonyd", "P", 1146372012, "tonyd", "P", 1146372040, "tonyd", "P", 1146372096, "tonyd", "P", 1146372292, "tonyd", "P", 1146372332, "tonyd", "P", 1146372366, "tonyd", "P", 1146372390, "tonyd", "P", 1146372468, "tonyd", "P", 1146372524, "tonyd", "P", 1146373750, "tonyd", "E", 1146373797, "tonyd", "E", 1146373838, "tonyd", "E", 1146373894, "tonyd", "E", 1146374147, "tonyd", "E", 1146374508, "tonyd", "P", 1146374987, "tonyd", "P", 1146375075, "tonyd", "P", 1146375159, "tonyd", "P", 1146376563, "tonyd", "P", 1146376723, "tonyd", "E", 1146376766, "tonyd", "P", 1146376895, "tonyd", "E", 1146376939, "tonyd", "E", 1146377492, "tonyd", "E", 1146377549, "tonyd", "E", 1146377586, "tonyd", "E", 1146377653, "tonyd", "E", 1146377699, "tonyd", "E", 1146377755, "tonyd", "E", 1146377809, "tonyd", "E", 1146377966, "tonyd", "E", 1146378077, "tonyd", "E", 1146378204, "tonyd", "E", 1146378262, "tonyd", "E", 1146378319, "tonyd", "E", 1146378620, "tonyd", "P", 1146378891, "tonyd", "P", 1146378974, "tonyd", "P", 1146379078, "tonyd", "P", 1146379177, "tonyd", "P", 1146379330, "tonyd", "P", 1146379423, "tonyd", "P", 1146379525, "tonyd", "E", 1146379546, "tonyd", "E", 1146440008, "tonyd", "E", 1146440074, "tonyd", "E", 1146440225, "tonyd", "E", 1146440298, "tonyd", "E", 1146440340, "tonyd", "E", 1146440405, "tonyd", "E", 1146440464, "tonyd", "E", 1146440512, "tonyd", "E", 1146440687, "tonyd", "E", 1146440794, "tonyd", "E", 1146440916, "tonyd", "E", 1146441125, "tonyd", "E", 1146441180, "tonyd", "E", 1146441547, "tonyd", "E", 1146441633, "tonyd", "E", 1146441846, "tonyd", "E", 1146441922, "tonyd", "E", 1146442056, "tonyd", "E", 1146442380, "tonyd", "E", 1146442464, "tonyd", "X", 1146442556, "tonyd", "E", 1146442572, "tonyd", "E", 1146442637, "tonyd", "P", 1146442684, "tonyd", "P", 1146442717, "tonyd", "E", 1146442733, "tonyd", "E", 1146443056, "tonyd", "E", 1146443069, "tonyd", "E", 1146444051, "tonyd", "E", 1146444084, "tonyd", "E", 1146444200, "tonyd", "E", 1146444211, "tonyd", "P", 1146444248, "tonyd", "P", 1146556582, "tonyd", "P", 1146556706, "tonyd", "P", 1146557022, "tonyd", "P", 1146557689, "tonyd", "P", 1146557836, "tonyd", "P", 1146558186, "tonyd", "P", 1146558301, "tonyd", "E", 1146558320, "tonyd", "E", 1146558355, "tonyd", "E", 1146558425, "tonyd", "P", 1146558514, "tonyd", "E", 1146558550, "tonyd", "E", 1146558687, "tonyd", "E", 1146558752, "tonyd", "E", 1146558816, "tonyd", "E", 1146558879, "tonyd", "P", 1146558936, "tonyd", "P", 1146558965, "tonyd", "P", 1146559015, "tonyd", "P", 1146559088, "tonyd", "P", 1146559109, "tonyd", "P", 1146559124, "tonyd", "P", 1146559161, "tonyd", "P", 1146559216, "tonyd", "P", 1146559541, "tonyd", "E", 1146559737, "tonyd", "E", 1146559890, "tonyd", "E", 1146559922, "tonyd", "E", 1146559948, "tonyd", "E", 1146560065, "tonyd", "E", 1146560131, "tonyd", "E", 1146560271, "tonyd", "E", 1146560352, "tonyd", "E", 1146560403, "tonyd", "E", 1146560562, "tonyd", "P", 1146953587, "sinistrelle", "E", 1146953646, "sinistrelle", "E", 1147267822, "tonyd", "P", 1147267866, "tonyd", "P", 1147267910, "tonyd", "P", 1147268385, "tonyd", "P", 1147268601, "tonyd", "P", 1147268642, "tonyd", "P", 1147268705, "tonyd", "P", 1147268719, "tonyd", "P", 1149370915, "sinistrelle", "X", 1149371104, "sinistrelle", "X", 1149993248, "tonyd", "E", 1150163509, "tonyd", "E", 1167554152, "tonyd", "R", 1171368779, "tonyd", "P", 1171368861, "tonyd", "P", 1171368875, "tonyd", "P", 1171368926, "tonyd", "P", 1171368955, "tonyd", "P", 1171368987, "tonyd", "P", 1171369364, "tonyd", "P", 1171369394, "tonyd", "P", 1171369552, "tonyd", "P", 1171369627, "tonyd", "P", 1171369663, "tonyd", "P", 1171369687, "tonyd", "P", 1171369706, "tonyd", "P", 1171370713, "tonyd", "P", 1171370783, "tonyd", "P", 1171370821, "tonyd", "P", 1171373013, "tonyd", "P", 1171373533, "tonyd", "E", 1171884151, "tonyd", "E", 1171884539, "tonyd", "P", 1171884711, "tonyd", "P", 1171884746, "tonyd", "P", 1171884832, "tonyd", "P", 1171885041, "tonyd", "P", 1171885056, "tonyd", "P", 1171886242, "tonyd", "P", 1171886581, "tonyd", "P", 1171886982, "tonyd", "P", 1171887022, "tonyd", "P", 1171887066, "tonyd", "P", 1171887124, "tonyd", "P", 1171887219, "tonyd", "P", 1171887245, "tonyd", "P", 1171887307, "tonyd", "P", 1171887452, "tonyd", "P", 1171887486, "tonyd", "P", 1171887532, "tonyd", "P", 1171887563, "tonyd", "P", 1171887587, "tonyd", "P", 1171887608, "tonyd", "P", 1171887753, "tonyd", "P", 1171887778, "tonyd", "P", 1171891858, "tonyd", "E", 1171891890, "tonyd", "E", 1171973207, "tonyd", "E", 1171973314, "tonyd", "E", 1171973342, "tonyd", "E", 1172078852, "tunk_bodin", "E", 1174828094, "tonyd", "P", 1174828113, "tonyd", "P", 1174828129, "tonyd", "P", 1174828216, "tonyd", "P", 1174828243, "tonyd", "P", 1174828295, "tonyd", "P", 1174828318, "tonyd", "P", 1174828414, "tonyd", "P", 1174828471, "tonyd", "P", 1174828483, "tonyd", "P", 1174828530, "tonyd", "P", 1174828584, "tonyd", "P", 1175318185, "sinistrelle", "X", 1176863181, "tonyd", "E", 1176863199, "tonyd", "E", 1176863308, "tonyd", "E", 1184274523, "rastalabor", "E", 1184274665, "rastalabor", "E", 1184275028, "rastalabor", "E", 1184275263, "rastalabor", "E", 1184275530, "rastalabor", "E", 1184275575, "rastalabor", "E", 1184277810, "rastalabor", "E", 1184278073, "rastalabor", "E", 1184278153, "rastalabor", "X", 1184278336, "rastalabor", "E", 1184278935, "rastalabor", "E", 1184278959, "rastalabor", "E", 1184279531, "rastalabor", "X", 1184279801, "rastalabor", "X", 1184280187, "rastalabor", "X", 1184280874, "rastalabor", "E", 1184280887, "rastalabor", "E", 1187202351, "rastalabor", "X", 1187203055, "rastalabor", "X", 1187203602, "rastalabor", "X", 1187203715, "rastalabor", "E", 1187204723, "rastalabor", "X", 1187204764, "rastalabor", "X", 1187204780, "rastalabor", "X", 1187204962, "rastalabor", "X", 1187205072, "rastalabor", "X", 1187205388, "rastalabor", "X", 1187205671, "rastalabor", "X", 1187205845, "rastalabor", "X", 1187205919, "rastalabor", "X", 1187205964, "rastalabor", "X", 1187206018, "rastalabor", "X", 1187206053, "rastalabor", "X", 1187206161, "rastalabor", "X", 1187210837, "rastalabor", "X", 1201747240, "rastalabor", "R", 1201748372, "rastalabor", "X", 1201748407, "rastalabor", "E", 1201748420, "rastalabor", "X", 1201748452, "rastalabor", "X", 1201748635, "rastalabor", "X", 1201748700, "rastalabor", "X", 1201748726, "rastalabor", "X", 1201748774, "rastalabor", "X", 1201748900, "rastalabor", "X", 1201748916, "rastalabor", "X", 1201748928, "rastalabor", "E", 1201749117, "rastalabor", "X", 1201749189, "rastalabor", "X", 1201801786, "rastalabor", "X", 1201801801, "rastalabor", "X", 1201801966, "rastalabor", "X", 1201802289, "rastalabor", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
