<object clone="/base/obj/thing" owner="rastalabor">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.001" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="true" tight="true" capacity="3" maxweight="30"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="true" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cart"/>
            <Base:SName sname="handcart"/>
            <Base:SName sname="pushcart"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="carts"/>
            <Base:PName pname="pushcarts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="peddler"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             worn, wooden pushcart
          </Base:Description>
          <Base:Description type="examine">
             A large well worn, wooden pushcart, painted a bright green with a colorful ribbon pattern trailing along both sides.  The cart is equipped with two long wooden handles at one end, two lumbering wheels near the other end, a fold out stand to level the cart and a tiered set of trays to show its wares. A string of bells are fastened to the end of the cart, announcing its presence wherever it goes.
          </Base:Description>
          <Base:Description type="look">
             A large worn, wooden pushcart with two handles, two large wheels, a stand and a tiered display.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bells" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="true" on="false" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bell"/>
            <Base:SName sname="string"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bells"/>
            <Base:PName pname="strings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brass"/>
          <Base:Adjective adjective="jingling"/>
          <Base:Adjective adjective="large"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             string of bells
          </Base:Description>
          <Base:Description type="examine">
             The front of the cart is adorned with a long heavy string onto which have been tied a number of large brass bells that jingle as the cart moves.
          </Base:Description>
          <Base:Description type="look">
             a wide string of large jingling bells
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="frame" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="frame"/>
            <Base:SName sname="post"/>
            <Base:SName sname="canopy"/>
            <Base:SName sname="flag"/>
            <Base:SName sname="streamer"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="frames"/>
            <Base:PName pname="canopies"/>
            <Base:PName pname="posts"/>
            <Base:PName pname="flags"/>
            <Base:PName pname="streamers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             canopy frame
          </Base:Description>
          <Base:Description type="examine">
             a wooden canopy frame supported by four wooden posts rising from each corner of the cart.  Flags and streamers decorate the canopy, bringing the eye to the wares hanging from the frame.
          </Base:Description>
          <Base:Description type="look">
             a canopy frame spanning the length of the cart
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="handles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="false" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="handles"/>
            <Base:SName sname="hand-grips"/>
            <Base:SName sname="grip"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="handles"/>
            <Base:PName pname="hand-grips"/>
            <Base:PName pname="grips"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hand"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">handles</Base:Description>
          <Base:Description type="examine">
             A pair of long wooden well-worn handles used to push the peddler's cart along.
          </Base:Description>
          <Base:Description type="look">
             A pair of long wooden handles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stand" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stand"/>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stands"/>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">stand</Base:Description>
          <Base:Description type="examine">
             A pair of wooden legs with a bar fastened between them forming an H, pulled down to level the cart when standing.
          </Base:Description>
          <Base:Description type="look">
             A pair of folding wooden legs with a crossbar.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tray" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="true" near="false" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tray"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trays"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             a tiered set of trays
          </Base:Description>
          <Base:Description type="examine">
             A wooden set of trays trays spanning the length of the cart with a number of tiers that hold the cart's wares.
          </Base:Description>
          <Base:Description type="look">
             A tiered set of trays for the cart's wares.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wheels" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wheel"/>
            <Base:SName sname="wheels"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wheels"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="large"/>
          <Base:Adjective adjective="lumbering"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             large pair of wheels
          </Base:Description>
          <Base:Description type="examine">
             A pair of large lumbering wheels set at the front of the cart, sturdy enough to move the cart around.
          </Base:Description>
          <Base:Description type="look">
             A pair of large lumbering wheels
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:emitaction">
         X[M] /* We want to emit about the torch doing something cool */       
       
/* Are we being held by someone, or are we in a room on our own? */       
if(\$this."base:environment"."base:volition")       
\{       
  /* We are being held */       
  \$actor = \$this."base:environment";       
  switch(random(3))       
  \{       
    case 2:       
      EmitIn( \$actor."base:environment", "The decorative cart's bells jingle merrily as it is jostled by " +Describe(\$actor)+ "." );       
    break;       
    case 1:       
      EmitIn( \$actor."base:environment", Describe(\$actor)+ " leans against the cart lightly, causing it to creak on its axle." );       
    break;       
    case 0:       
      EmitIn( \$actor."base:environment", "The cart shifts slightly, settling back almost familiarly against " +Describe(\$actor)+ "'s hip." );       
    break;       
    default:       
    break;       
  \}       
\} else if(\$this."base:environment")       
\{       
  /* We are in a room */       
  \$room = \$this."base:environment";       
  switch(random(3))       
  \{       
    case 2:       
      EmitIn( \$room, "The cart slips forward a scant inch, its wheels settling into a groove." );       
    break;       
    case 1:       
      EmitIn( \$room, "The bells on the cart jingle lightly, perhaps bounced by a passing stranger or maybe just a happy breeze." );       
    break;       
    case 0:       
      EmitIn( \$room, "The cart, complaining like a favorite grandparent about their knees, creaks as it shifts." );       
    break;       
    default:       
    break;       
  \}       
\}       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makeaction">
         X[M] /* When this library is called, first reset the stoptimer to NIL. When the stoptimer is */
 /* 1, the script stops. Securing the cart sets it to 1, so now we need to reset it to */
 /* start things again */
\$this.stoptimer = nil;        
/* Lets check to see if the script is already running. Within this script we set emitter to */
/* 1 to note its running. When the script ends it gets reset to NIL. Thus if Emitter is */
/* anything other than NIL the script is running. if(\$this.emitter) checks to see if */
/* emitter has any value at all.. ie, is no longer NIL */
if(\$this.emitter)        
\{        
  /* the script is already running, so we exit (All the functions in Merry have a boolean */
/* True/False element. So when you return TRUE. You are essentially saying 'Done'. */        
  return TRUE;        
\}        
/* Set emitter to 1, so if someone tries to trigger this again, we'll know the script is being used */
\$this.emitter = 1;        
/* delay once before first emote  (the code after TRUE isn't important, its just an */
/* identifier for the system */        
\$delay(random(90)+10, TRUE, "c8a1");        
/* ! is logical notation for 'not'. The following translates to: white there is some */
/* value for emitter (ie the script is still running) and there is not a value for */
/* stoptimer (ie, we're not being told to stop running the script) do the following */
while(\$this.emitter \&\& !\$this.stoptimer)        
\{        
  /* while we are turned on, and not told to stop */        
  Call(\$this, "emitaction");
  /* Call the library emit action to actually pick the random emits to be done */        
  \$delay(random(90)+10, TRUE, "6fce");
  /* Wait a random interval of 10 seconds + 1-90 more seconds before doing the while() */
/* check again. It'll keep doing this until someone locks down the cart which changes */
/* the stoptimer value. Thus ending the script */        
\}        
\$this.emitter = nil;        
\$this.stoptimer = nil;        
        
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:free-dob">
         X[M] return Call(\$this, "makeaction");
      </Core:Property>
      <Core:Property property="merry:react:secure-dob">
         X[M] \$this.stoptimer = 1; return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1140285673, "tunk_bodin", "X", 1140458443, "abiwan", "E", 1140458473, "abiwan", "E", 1140459037, "abiwan", "E", 1140460436, "abiwan", "K", 1140461381, "abiwan", "E", 1140461474, "abiwan", "E", 1200258523, "rastalabor", "X", 1200258590, "rastalabor", "X", 1200258961, "rastalabor", "E", 1200259029, "rastalabor", "E", 1200259215, "rastalabor", "X", 1200259285, "rastalabor", "X", 1200261195, "rastalabor", "E", 1201736523, "rastalabor", "E", 1201736639, "rastalabor", "E", 1201736745, "rastalabor", "E", 1306143713, "rastalabor", "E", 1306143718, "rastalabor", "E", 1306143818, "meandmine", "E", 1306143944, "meandmine", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:gait">
         "jingles merrily as it rumbles"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
