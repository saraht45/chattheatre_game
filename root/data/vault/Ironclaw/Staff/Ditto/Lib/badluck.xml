<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:react:examine-what%badluck">
         X[M] \$id = random(10000);     
      
\$actor."tmp:curseemits" = \$id;     
\$emit_delay = 1200;     
do \{      
    \$delay(random(\$emit_delay), TRUE, "bfa4");     
    
    /* check we are ready to emit */      
    if(!\$actor) return TRUE;    
  
    /* If the item has been destroyed (even if the object still exists) stop emitting bad luck */      
    if(\$this.destroyed) return TRUE;      
    
      
    /* Give them a little touch of bad luck */      
    if(\$actor."base:environment") \{      
      switch(random(14)) \{      
      case 13:      
          EmitTo(\$actor, "Most would think a breeze through the hair is mysterious. You? You just got hair in your eye.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" unsuccessfully tries to get a strand of hair out of "+\$actor."base:possessive"+" eye.", \$actor);      
          break;      
      case 12:      
          EmitTo(\$actor, "You squirm, an itch has lodged itself in the most inappropriate of places.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" squirms oddly and has a worried look upon "+\$actor."base:possessive"+" face.", \$actor);      
          break;      
      case 11:      
          EmitTo(\$actor, "Glimpsing at your claws you notice a tragic occurrence - you broke a nail!");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" frowns disappointedly at "+\$actor."base:possessive"+" broken claw.", \$actor);      
          break;      
      case 10:      
          EmitTo(\$actor, "You accidentally bite your tongue. Ouch!");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" bites "+\$actor."base:possessive"+" tongue and yelps in pain.", \$actor);      
          break;      
      case 9:      
          EmitTo(\$actor, "You think you're having a bad hair day, that quirk just won't stay down.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" fiddles with "+\$actor."base:possessive"+" hair obsessively.", \$actor);      
          break;      
      case 8:      
          EmitTo(\$actor, "You falter after you trip, just barely catching yourself from falling.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" falters after tripping and barely manages to keep from falling.", \$actor);      
          break;      
      case 7:      
          EmitTo(\$actor, "A bee just stung the back of your hand. Ouch!");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" suddenly jerks "+\$actor."base:possessive"+" hand in pain.", \$actor);      
          break;      
      case 6:      
          EmitTo(\$actor, "Apparently, you didn't see that pothole and twist your ankle.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" steps in a pothole and twists "+\$actor."base:possessive"+" ankle.", \$actor);      
          break;      
      case 5:      
          EmitTo(\$actor, "Uh oh! You are having a wardrobe malfunction. You may want to check that you  are properly covered.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" is showing some flesh as "+\$actor."base:possessive"+" wardrobe malfunctions.", \$actor);      
          break;      
      case 4:      
          EmitTo(\$actor, "Dang it! Did you just step in something squishy?");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" grimaces and looks down at "+\$actor."base:possessive"+" shoe.", \$actor);      
          break;      
      case 3:      
          EmitTo(\$actor, "You stub your "+oneof( "big toe.", "little toe.", "foot.")+" Ouch!");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" stubs "+\$actor."base:possessive"+" toe.", \$actor);      
          break;      
      case 2:      
          EmitTo(\$actor, "You stumble slightly.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" stumbles slightly.", \$actor);      
          break;      
      case 1:      
          EmitTo(\$actor, "A fly somehow finds its way into your mouth.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+" gags helpless at the fly in "+\$actor."base:possessive"+" mouth.", \$actor);      
          break;      
      default:      
          EmitTo(\$actor, "You bend over and loudly fart. Ha how embarrassing.");      
          EmitIn(\$actor."base:environment", Describe(\$actor)+"  farts loudly.", \$actor);      
          break;      
      \}      
    \}      
\} while(\$actor."tmp:curseemits" == \$id);      
    
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1311908122, "meandmine", "X", 1311908390, "meandmine", "R", 1311914216, "tonyd", "P", 1311915374, "meandmine", "X", 1311915563, "meandmine", "X", 1311915613, "meandmine", "X", 1311915717, "meandmine", "X", 1311915872, "meandmine", "X", 1311916029, "meandmine", "X", 1311917421, "meandmine", "E", 1311917558, "meandmine", "X", 1311917749, "meandmine", "X", 1322778491, "meandmine", "E", 1322779778, "meandmine", "E", 1322950551, "slurpeeslurp", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1311917421" state="Open" user="meandmine">
           Because examine-what is special two scripts have to be written in the same object.  First put in merry:react:examine-what.  Don't put any value with it. It just needs to be there to tell the script to run.  Then you put in merry:react:examine-what%badluck. The value is the woe name of the library.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Core:PropertyContainer>
</object>
