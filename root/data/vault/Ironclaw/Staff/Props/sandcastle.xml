<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="castle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="castles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="sand"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:variation) sand castle
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:variation) sand castle. $(this.trait:examine)
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:variation) sand castle. $(this.trait:examine)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:objecttype">
         "sandcastle"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."base:immobilize" = TRUE;

\$delay(60*60*24, TRUE, "650d");

EmitIn(\$this."base:environment", Describe(\$this) + " crumbles into nothing.");
Slay(\$this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:kick-dob">
         X[M] \$delay(0.1, TRUE, "21e9");

EmitIn(\$this."base:environment", Describe(\$this) + " crumbles into nothing.");

Slay(\$this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:alter-dob">
         X[M] \$variations = (\{ "impressive", "halfway-constructed", "tiered", "dilapidated", "shapeless", "lumpy", "detailed", "statuesque", "towering", "short", "squat", "bland", "half-hearted" \});

if(!\$(into:words)) \{
    EmitTo(\$actor, "How did you want to alter the sand castle?\\nOptions inclue: " + implode(\$variations, ", "));
    return FALSE;
\}

if(!member(\$(into:words)[0], \$variations)) \{
    EmitTo(\$actor, "How did you want to alter the sand castle?\\nOptions inclue: " + implode(\$variations, ", "));
    return FALSE;
\}

EmitTo(\$actor, "You pat " + Describe(\$this) + " here and there giving it a generally " + Str(\$(into:words)[0]) + " appearance.");
EmitIn(\$actor."base:environment", Describe(\$actor) + " pats " + Describe(\$this) + " here and there giving it a generally " + Str(\$(into:words)[0]) + " appearance.", \$actor);

\$this."trait:variation" = \$(into:words)[0];

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:form-dob">
         X[M] if(\$this."trait:examine") \{
    EmitTo(\$actor, "If you want to change " + Describe(\$this) + " you would be better off kicking it down and starting all over.");
    return FALSE;
\}

if(!\$evoke) \{
    EmitTo(\$actor, "OOC Syntax: form castle 'A two-story sand castle with towers at each of its four corners.'");
    return FALSE;
\}

\$this."trait:examine" = replace_strings(\$evoke, "\\"", "");

EmitTo(\$actor, "You put the finishing touches on " + Describe(\$this) + ".");
EmitIn(\$actor."base:environment", Describe(\$actor) + " puts the finishing touches on " + Describe(\$this) + ".", \$actor);

\$this.builder = \$actor;

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1431148810, "jominey", "E", 1431149106, "jominey", "E", 1431149192, "jominey", "E", 1431149274, "jominey", "E", 1431149342, "jominey", "E", 1501656625, "pp74", "K", 1501658605, "pp74", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
