<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="hold" verb3="holds"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="box"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="boxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ballot"/>
          <Base:Adjective adjective="black-ball"/>
          <Base:Adjective adjective="blackball"/>
          <Base:Adjective adjective="vote"/>
          <Base:Adjective adjective="voting"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) blackball ballot box
          </Base:Description>
          <Base:Description type="examine">
             The $(this.trait:material) blackball ballot box is of traditional design which allows votes to be cast anonymously. Voters may choose a white marble to signify support or a black marble to signify opposition by dropping them through the center hole. <opencontainer>The center compartment currently holds  $[desc_cardinal($this."trait:count:black")] black $[if(Int($this."trait:count:black") == 1) { return "marble"; } else { return "marbles"; }] and $[desc_cardinal($this."trait:count:white")] white $[if(Int($this."trait:count:black") == 1) { return "marble"; } else { return "marbles"; }]. The vote can be reset by simply <acmd tag="command" cmd="gather ballot box">gathering</acmd>  the marbles from the inside compartment.</opencontainer> <closedcontainer>$[if(sizeof($this."base:proximates")) { return "It is currently occupied by " + Describe($this."base:proximates") + "."; } else { return ParseXML("The ballot box is avalaible for \<acmd tag=\"command\" cmd=\"use ballot box\"\>use\<\/acmd\>."); }]</closedcontainer>
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:material) blackball ballot box is supplied with a large collection of black and white marbles. <opencontainer>The center compartment currently holds  $[desc_cardinal($this."trait:count:black")] black $[if(Int($this."trait:count:black") == 1) { return "marble"; } else { return "marbles"; }] and $[desc_cardinal($this."trait:count:white")] white $[if(Int($this."trait:count:black") == 1) { return "marble"; } else { return "marbles"; }]. The vote can be reset by simply <acmd tag="command" cmd="gather ballot box">gathering</acmd> the marbles from the inside compartment.</opencontainer> <closedcontainer>$[if(sizeof($this."base:proximates")) { return "It is currently occupied by " + Describe($this."base:proximates") + "."; } else { return ParseXML("The ballot box is avalaible for \<acmd tag=\"command\" cmd=\"use ballot box\"\>use\<\/acmd\>."); }]</closedcontainer>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="marbles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="marble"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="marbles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             ballot box's large supply of white and black marbles
          </Base:Description>
          <Base:Description type="look">
             The marbles are used to cast votes anonymously by dropping them through the ballot box's center hole. A white marble signifies support while a black marble signifies opposition.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:cyoa:vote">
         X[S] \<cyoa:begin name="start" title="You step up to the ballot box."\>
    \<cyoa:choice key="a" label="drop a white marble into the box" to="choosewhite"/\>
    \<cyoa:choice key="b" label="drop a black marble into the box" to="chooseblack"/\>
    \<cyoa:choice key="c" label="replace a white marble with a black marble [stealth]" to="swapwhiteforblack"/\>
    \<cyoa:choice key="d" label="replace a black marble with a white marble [stealth]" to="swapblackforwhite"/\>
    \<cyoa:choice key="e" label="finish without casting a vote" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="choosewhite" title="You choose to drop a white marble into the ballot box."\>
    \<cyoa:choice key="a" label="make your vote visible" to="choosewhitepublic"/\>
    \<cyoa:choice key="b" label="hide your vote" to="choosewhiteprivate"/\>
    \<cyoa:choice key="c" label="finish without casting a vote" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="chooseblack" title="You choose to drop a black marble into the ballot box."\>
    \<cyoa:choice key="a" label="make your vote visible" to="chooseblackpublic"/\>
    \<cyoa:choice key="b" label="hide your vote from others" to="chooseblackprivate"/\>
    \<cyoa:choice key="c" label="finish without casting a vote" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="choosewhitepublic" title="You drop a white marble into the ballot box."\>
    \<cyoa:content for="audience"\>
        \$(main) drops a white marble into the ballot box.
    \</cyoa:content\>
    \<cyoa:action type="increment" what="\$(from) trait:count:white"/\>
    \<cyoa:choice key="a" label="finish" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="choosewhiteprivate" title="You drop a white marble into the ballot box."\>
    \<cyoa:content for="audience"\>
        A muffled thud can be heard as \$(main) drops a marble into the ballot box.
    \</cyoa:content\>
    \<cyoa:action type="increment" what="\$(from) trait:count:white"/\>
    \<cyoa:choice key="a" label="finish" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="chooseblackpublic" title="You drop a black marble into the ballot box."\>
    \<cyoa:content for="audience"\>
        \$(main) drops a black marble into the ballot box.
    \</cyoa:content\>
    \<cyoa:action type="increment" what="\$(from) trait:count:black"/\>
    \<cyoa:choice key="a" label="finish" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="chooseblackprivate" title="You drop a black marble into the ballot box."\>
    \<cyoa:content for="audience"\>
        A muffled thud can be heard as \$(main) drops a marble into the ballot box.
    \</cyoa:content\>
    \<cyoa:action type="increment" what="\$(from) trait:count:black"/\>
    \<cyoa:choice key="a" label="finish" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="swapwhiteforblack" title="You quietly open the ballot box and attempt to swap a white marble for a black marble."\>
    \<cyoa:action type="roll" what="thief:stealth mental:observation \$(from) whitetoblack"/\>
    \<cyoa:choice key="a" label="drop a white marble into the ballot box" to="choosewhite"/\>
    \<cyoa:choice key="b" label="drop a black marble into the ballot box" to="chooseblack"/\>
    \<cyoa:choice key="c" label="finish without casting a vote" to="end"/\>
\</cyoa:begin\>
\<cyoa:begin name="swapblackforwhite" title="You quietly open the ballot box and attempt to swap a black marble for a white marble."\>
    \<cyoa:action type="roll" what="thief:stealth mental:observation \$(from) blacktowhite"/\>
    \<cyoa:choice key="a" label="drop a white marble into the box" to="choosewhite"/\>
    \<cyoa:choice key="b" label="drop a black marble into the box" to="chooseblack"/\>
    \<cyoa:choice key="c" label="finish without casting a vote" to="end"/\>
\</cyoa:begin\>
      </Core:Property>
      <Core:Property property="export:trait:material">
         "wooden"
      </Core:Property>
      <Core:Property property="merry:react-pre:approach">
         X[M] if(sizeof(\$this."base:proximates")) \{ 
    EmitTo(\$actor, Describe(\$this) + " is already being occupied by " + Describe(\$this."base:proximates") + "."); 
    return FALSE; 
\} 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:gather-dob">
         X[M] if(\$this."base:environment" != \$actor) \{ 
    EmitTo(\$actor, "You must be holding it to do that."); 
    return FALSE; 
\} 
 
if(\$this."details:default:exit:closed") \{ 
    EmitTo(\$actor, "You should open it first."); 
    return FALSE; 
\} 
 
if((Int(\$this."trait:count:black") + Int(\$this."trait:count:white")) \> 0) \{ 
    EmitTo(\$actor, "You retrieve the marbles from inside " + Describe(\$this, \$actor) + " and place them in their appropriate storage compartments."); 
    EmitIn(\$actor."base:environment", Describe(\$actor) + " retrieves the marbles from inside " + Describe(\$this, nil, \$actor) + " and places them in their appropriate storage compartments."); 
\} else \{ 
    EmitTo(\$actor, "The ballot box is already empty."); 
\} 
 
Set(\$this, "trait:count:black", 0); 
Set(\$this, "trait:count:white", 0); 
 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:use-dob">
         X[M] if(\$this."base:environment" != \$actor."base:environment") \{ 
    EmitTo(\$actor, "You cannot use that while " + Describe(\$this."base:environment") + " is holding it."); 
    return FALSE; 
\} 
 
if(!\$this."details:default:exit:closed") \{ 
    EmitTo(\$actor, "You should close it first."); 
    return FALSE; 
\} 
 
cyoa::start(\$from: \$this, \$name: "vote", \$chance: 1);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1280699528, "jominey", "E", 1280700230, "jominey", "E", 1280700273, "jominey", "K", 1280700283, "jominey", "R", 1280700385, "jominey", "E", 1280700472, "jominey", "K", 1280700946, "jominey", "K", 1280700964, "jominey", "E", 1280701003, "jominey", "E", 1280701014, "jominey", "E", 1280701036, "jominey", "E", 1280701053, "jominey", "E", 1280701084, "jominey", "K", 1280701179, "jominey", "E", 1280701718, "jominey", "K", 1280701801, "jominey", "E", 1280701811, "jominey", "E", 1280702406, "jominey", "E", 1280702542, "jominey", "K", 1280702580, "jominey", "K", 1280702845, "jominey", "E", 1280702853, "jominey", "E", 1280702872, "jominey", "E", 1280702881, "jominey", "E", 1280703062, "jominey", "E", 1280703267, "jominey", "E", 1280703444, "jominey", "E", 1280703568, "jominey", "E", 1280703684, "jominey", "E", 1280703701, "jominey", "E", 1280703948, "jominey", "K", 1280704107, "jominey", "K", 1280704208, "jominey", "K", 1280704293, "jominey", "K", 1280704477, "jominey", "K", 1280704543, "jominey", "K", 1280704611, "jominey", "E", 1280705906, "jominey", "K", 1280706392, "jominey", "K", 1280706406, "jominey", "E", 1280706476, "jominey", "K", 1280706606, "jominey", "K", 1280706741, "jominey", "K", 1280706886, "jominey", "K", 1280706965, "jominey", "K", 1280707361, "jominey", "K", 1280707366, "jominey", "K", 1280707387, "jominey", "K", 1280707410, "jominey", "K", 1280707465, "jominey", "K", 1280707585, "jominey", "K", 1345248123, "rastalabor", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
