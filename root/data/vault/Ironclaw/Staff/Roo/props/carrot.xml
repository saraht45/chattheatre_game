<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Food:UrFood)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="carrot"/>
            <Base:SName sname="legume"/>
            <Base:SName sname="food"/>
            <Base:SName sname="vegetable"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="carrots"/>
            <Base:PName pname="legume"/>
            <Base:PName pname="foods"/>
            <Base:PName pname="vegetabless"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="orange"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:carved) | $(this.trait:carving:quality) | crisp } orange carrot
          </Base:Description>
          <Base:Description type="brief:fresh">
             {? | $(this.trait:carved) | $(this.trait:carving:quality) | crisp } orange carrot
          </Base:Description>
          <Base:Description type="brief:old">
             {? | $(this.trait:carved) | $(this.trait:carving:quality) |} rotting orange carrot
          </Base:Description>
          <Base:Description type="look">
             A carrot, crisp and orange. It has a rosette of leaves with a tapering taproot. {? | $(this.trait:carved) | It has been $(this.trait:carving:quality) into $(this.trait:carvinglook). | }
          </Base:Description>
          <Base:Description type="look:fresh">
             A carrot, crisp and orange. It has a rosette of leaves with a tapering taproot. {? | $(this.trait:carved) | It has been $(this.trait:carving:quality) into $(this.trait:carvinglook). | }
          </Base:Description>
          <Base:Description type="look:old">
             A carrot that appears to be rotting. It has a rosette of dulled leaves with a tapering taproot strewn with darkened patches. {? | $(this.trait:carved) | It has been $(this.trait:carving:quality) into $(this.trait:carvinglook). | }
          </Base:Description>
          <Base:Description type="pbrief">
             crisp orange carrots
          </Base:Description>
          <Base:Description type="pbrief:fresh">
             crisp orange carrots
          </Base:Description>
          <Base:Description type="pbrief:old">
             rotting orange carrots
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="alteration:knowledge:carrotcarving">
         ([ "bunny":([ "properties":(\{ (\{ "trait:carvingtype", "bunny" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a bunny" \}) \}) ]), "dwarf rabbit":([ "properties":(\{ (\{ "trait:carvingtype", "dwarf rabbit" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a dwarf rabbit" \}) \}) ]), "fuzzy lop":([ "properties":(\{ (\{ "trait:carvingtype", "fuzzy lop" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a fuzzy lop" \}) \}) ]), "hare":([ "properties":(\{ (\{ "trait:carvingtype", "hare" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a hare" \}) \}) ]), "jackrabbit":([ "properties":(\{ (\{ "trait:carvingtype", "jackrabbit" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a jackrabbit" \}) \}) ]), "rabbit":([ "properties":(\{ (\{ "trait:carvingtype", "rabbit" \}), (\{ "trait:carved", "true" \}), (\{ "trait:carving:quality", "carved" \}), (\{ "trait:carvinglook", "a rabbit" \}) \}) ]) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:default:carve">
         ([ "description":(\{ "You carve ORIGINAL_OBJECT into NEW_OBJECT", "carves ORIGINAL_OBJECT into NEW_OBJECT" \}), "input-list":(\{ (\{ \<Ironclaw:Staff:Roo:props:carrot\>, "alteration:knowledge:carrotcarving" \}) \}), "input-list-actor":(\{ "alteration:knowledge:carrotcarving" \}), "requiredtools":(\{ "a knife", (\{ "knife" \}) \}), "skill":"", "stopvalue":(\{ "trait:carved", nil, "That carrot  has already been carved." \}) ])
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         200
      </Core:Property>
      <Core:Property property="export:trait:age:fresh">
         2880
      </Core:Property>
      <Core:Property property="export:trait:age:old">
         5760
      </Core:Property>
      <Core:Property property="export:trait:age:slay">
         20160
      </Core:Property>
      <Core:Property property="export:trait:brief">
         X[S] \{? \| \$(this.trait:carved) \| \$(this.trait:carving:quality) \| crisp \} orange carrot
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         6
      </Core:Property>
      <Core:Property property="export:trait:setprop">
         (\{ (\{ "details:default:adjective:orangecarrot", nil \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:fresh">
         (\{ (\{ "details:default:adjective:orangecarrot", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:setprop:old">
         (\{ (\{ "trait:smell", "pungent decaying mush" \}), (\{ "trait:taste", "bitter and foul" \}), (\{ "details:default:adjective:rotten", 1 \}) \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "an earthy aroma mixed with the fresh carrot scent"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "carrot"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "fresh and crisp"
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:carved">
         X[M] object carver;
int agility, skill, roll1, roll2, roll;
\$delay(1, FALSE, "15ae");
carver = this."base:environment";

agility = Int(carver."trait:agility");
skill = Int(carver."skill:career:carpenter");

roll1 = random(agility);
roll2 = random(skill);

if(roll1 \>= roll2) \{
    roll = roll1;
\} else \{
    roll = roll2;
\}

if(roll == 0) \{
    /* Ruined the carrot */
    this."trait:carving:quality" = oneof("awkwardly carved", "butchered");
    this."trait:carvinglook" = oneof("something you do not even recognize");
\} else if(roll \< 6) \{
    /* Bad carving */
    this."trait:carving:quality" = oneof("awkwardly carved", "butchered");
    this."trait:carvinglook" = "something that resembles " + this."trait:carvinglook";
\} else if(roll \< 12) \{
    /* Average carving */
    this."trait:carving:quality" = oneof("carved");
\} else if(roll \< 18) \{
    /* Good carving */
    this."trait:carving:quality" = oneof("skillfully carved");
\} else \{
    /* Masterful carving */
    this."trait:carving:quality" = oneof("masterfully carved");
\}

Set(this, "details:default:adjective:carved", TRUE);
Set(this, "details:default:description:pbrief", "carved orange carrots");
Set(this, "details:default:description:pbrief:fresh", "carved orange carrots");
Set(this, "details:default:description:pbrief:old", "carved rotting carrots");

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1233780673, "jominey", "E", 1233780755, "jominey", "E", 1233780798, "jominey", "E", 1233780821, "jominey", "E", 1233780844, "jominey", "E", 1233780866, "jominey", "E", 1233780884, "jominey", "E", 1233780915, "jominey", "E", 1233780934, "jominey", "E", 1233780952, "jominey", "E", 1233780971, "jominey", "E", 1233781011, "jominey", "E", 1233781031, "jominey", "E", 1233781074, "jominey", "E", 1233781087, "jominey", "E", 1233781103, "jominey", "E", 1233781114, "jominey", "E", 1233781124, "jominey", "E", 1233834138, "jominey", "E", 1233834264, "jominey", "K", 1233835263, "jominey", "E", 1233835466, "jominey", "E", 1233835611, "jominey", "E", 1233835731, "jominey", "E", 1233835813, "jominey", "E", 1233835860, "jominey", "E", 1233835882, "jominey", "E", 1233835909, "jominey", "E", 1233835943, "jominey", "E", 1233835993, "jominey", "E", 1233836015, "jominey", "E", 1233836029, "jominey", "E", 1233836147, "jominey", "E", 1233836163, "jominey", "E", 1233836307, "jominey", "K", 1233836401, "jominey", "K", 1233836560, "jominey", "E", 1233837315, "jominey", "E", 1233837378, "jominey", "E", 1233837397, "jominey", "E", 1233837419, "jominey", "E", 1233837518, "jominey", "E", 1233837553, "jominey", "E", 1233837588, "jominey", "E", 1233837636, "jominey", "E", 1233837758, "jominey", "E", 1233837828, "jominey", "E", 1233838013, "jominey", "E", 1233838070, "jominey", "E", 1233838119, "jominey", "E", 1233838139, "jominey", "E", 1233838152, "jominey", "E", 1233838178, "jominey", "E", 1233838196, "jominey", "E", 1233838212, "jominey", "E", 1233838214, "jominey", "E", 1233838429, "jominey", "E", 1233838458, "jominey", "E", 1233838533, "jominey", "E", 1233839105, "jominey", "E", 1233839159, "jominey", "E", 1233839225, "jominey", "E", 1233839329, "jominey", "K", 1233839351, "jominey", "E", 1233839423, "jominey", "E", 1233839449, "jominey", "E", 1233839480, "jominey", "E", 1233839507, "jominey", "E", 1233839585, "jominey", "E", 1233839626, "jominey", "E", 1233839653, "jominey", "E", 1233839741, "jominey", "E", 1233839783, "jominey", "E", 1233839847, "jominey", "E", 1233839883, "jominey", "E", 1233839932, "jominey", "E", 1233839993, "jominey", "E", 1233840078, "jominey", "E", 1233840144, "jominey", "E", 1233840176, "jominey", "E", 1233840204, "jominey", "K", 1233840310, "jominey", "E", 1233840352, "jominey", "E", 1233840520, "jominey", "E", 1233840542, "jominey", "E", 1233840566, "jominey", "E", 1233840595, "jominey", "E", 1233841012, "morwenlorelie", "E", 1233841646, "jominey", "K", 1233841693, "jominey", "K", 1233841795, "jominey", "K", 1233841808, "jominey", "K", 1233841985, "jominey", "K", 1233842034, "jominey", "K", 1233842070, "jominey", "K", 1233842137, "jominey", "K", 1233842158, "jominey", "K", 1233842353, "jominey", "E", 1233842443, "jominey", "E", 1233843776, "jominey", "E", 1233843960, "jominey", "K", 1233843984, "jominey", "K", 1233844163, "jominey", "E", 1233844208, "jominey", "E", 1233844511, "jominey", "E", 1233844952, "jominey", "E", 1233845244, "jominey", "E", 1242436179, "morwenlorelie", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:old:brief">
         "rotten orange carrot"
      </Core:Property>
      <Core:Property property="trait:old:examine">
         "A rotten orange carrot, soft and unappetizing."
      </Core:Property>
      <Core:Property property="trait:old:look">
         "A rotten orange carrot."
      </Core:Property>
      <Core:Property property="trait:old:variant">
         "rotten"
      </Core:Property>
      <Core:Property property="trait:smell">
         "pungent decaying mush"
      </Core:Property>
      <Core:Property property="trait:taste">
         "bitter and foul"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
