<object clone="/base/obj/thing" owner="abigail">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="5" verb2="are carrying in your mouth" verb3="is carrying in its mouth"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="crouching" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="roach"/>
            <Base:SName sname="cockroach"/>
            <Base:SName sname="insect"/>
            <Base:SName sname="bug"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="roaches"/>
            <Base:PName pname="cockroaches"/>
            <Base:PName pname="insects"/>
            <Base:PName pname="bugs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="dark-brown"/>
          <Base:Adjective adjective="tiny"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:build) $(this.trait:color) cockroach
          </Base:Description>
          <Base:Description type="examine">
             A small $(this.trait:build) $(this.trait:color) insect with 6 legs and long antennae.
          </Base:Description>
          <Base:Description type="look">
             A small $(this.trait:build) $(this.trait:color) insect with 6 legs and long antennae.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="NEW" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             NEW detail
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="antennae" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="antenna"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="antennae"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">antennae</Base:Description>
          <Base:Description type="look">
             A pair of antennae.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:theatre:id">
         "IC"
      </Core:Property>
      <Core:Property property="export:trait:corpse">
         \<Allegory:Props:Animals:City:RatCorpse\>
      </Core:Property>
      <Core:Property property="export:trait:emoting:frequency">
         6
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "earth and tree sap"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "cockroach"
      </Core:Property>
      <Core:Property property="merry:act-post:combat_getattacked%flee">
         X[M] /* make the skink flee away */      
\$delay(5 + random(10), TRUE, "3f81");      
if(\$this.dead) return TRUE;      
      
switch(random(5)) \{      
  case 4:      
    EmitIn(\$this."base:environment", Describe(\$this)+" flees.");      
    break;      
  case 3:      
    EmitIn(\$this."base:environment", Describe(\$this)+" scurries away.");      
    break;      
  case 2:      
    EmitIn(\$this."base:environment", Describe(\$this)+" ducks into a crack.");      
    break;      
  case 1:      
    EmitIn(\$this."base:environment", Describe(\$this)+" vanishes into a shadow.");      
    break;      
  default:      
    EmitIn(\$this."base:environment", Describe(\$this)+" dives down a small hole.");      
    break;      
\}      
Slay(\$this);      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:combat_getdamaged">
         X[M] if(\$this.dead) return TRUE;      
if(Int(\$damage) == 0) return TRUE;      
\$this.dead = 1;      
      
  EmitTo(\$attacker, \$attackdesc[0]+\$defencedesc[0]+".");      
  EmitTo(\$this, \$attackdesc[1]+\$defencedesc[1]+".");      
  EmitIn(\$this."base:environment", \$attackdesc[2]+\$defencedesc[2]+".", \$attacker, \$this);      
      
      
\$delay(0.5, TRUE, "6944");      
      
EmitIn(\$this."base:environment", Describe(\$this)+" dies from its wounds.");      
      
::die();   
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$kh = \$\{Chatters:IC:kh:khalim\};  
  
EmitTo(\$kh, "Roach Created!"); 
 
Call(this, "handler:roach-start");
      </Core:Property>
      <Core:Property property="merry:inherit:act:stop">
         \<Lib:NIP:lib:spawn-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:start:death">
         \<Lib:NIP:lib:death\>
      </Core:Property>
      <Core:Property property="merry:lib:die">
         X[M] \$corpse = Spawn(\$\{Allegory:Props:Animals:City:RatCorpse\});      
\$corpse."base:environment" = \$this."base:environment";      
\$corpse."trait:build" = \$this."trait:build";      
\$corpse."trait:color" = \$this."trait:color";      
\$corpse."trait:linecolor" = \$this."trait:linecolor";      
\$corpse."base:proximity" = \$this."base:proximity";      
      
Slay(\$this);    
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:handler:roach-start">
         X[M] /* Set a starting colour and build for the skink */       
  
\$kh = \$\{Chatters:IC:kh:khalim\};  
  
EmitTo(\$kh, "Roach Start Entered!");  
       
/* Here's a list of valid colours */       
\$color = (\{ nil, nil, nil, nil, "black", "black", "black", "black", "brown", "brown", "brown", "brown", "bluish-grey", "bluish-grey", "silver", "dark-brown", "dark-brown", "dark-brown", "gold" \});       
/* ...and builds */       
\$build = (\{ nil, nil, nil, "tiny", "tiny", "small", "small", "miniscule" \});       
/* ...and stripes */       
\$stripes = (\{ nil, nil, nil, "yellow", "gold", "red", "orange", nil \});       
       
/* set the traits to be one from the list */       
\$this."trait:color" = \$color[random(sizeof(\$color))];       
\$this."trait:build" = \$build[random(sizeof(\$build))];       
\$this."trait:linecolor" = \$stripes[random(sizeof(\$stripes))];       
       
/* After a while this object should destroy itself (in case it got trapped), so a new one can take its place */       
\$delay(60*60*24*3, TRUE, "e6fc");       
       
if(\$this."base:environment") EmitIn(\$this."base:environment", Describe(\$this)+" vanishes into a crack in the ground.");       
Slay(\$this);       
       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:build">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="nip-core:consent:allow-all">
         1
      </Core:Property>
      <Core:Property property="nip:trait:emoting:frequency">
         6
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:frequency">
         20
      </Core:Property>
      <Core:Property property="nip:trait:movement:frequency">
         6
      </Core:Property>
      <Core:Property property="nip:trait:spawn:maxpop">
         5
      </Core:Property>
      <Core:Property property="old:merry:act-post:combat_getattacked%flee">
         X[M] /* make the skink flee away */      
\$delay(0.5, TRUE, "3f81");      
if(\$this.dead) return TRUE;      
      
switch(random(5)) \{      
  case 4:      
    EmitIn(\$this."base:environment", Describe(\$this)+" flees.");      
    break;      
  case 3:      
    EmitIn(\$this."base:environment", Describe(\$this)+" scurries away.");      
    break;      
  case 2:      
    EmitIn(\$this."base:environment", Describe(\$this)+" ducks into a crack.");      
    break;      
  case 1:      
    EmitIn(\$this."base:environment", Describe(\$this)+" vanishes into a shadow.");      
    break;      
  default:      
    EmitIn(\$this."base:environment", Describe(\$this)+" dives down a small hole.");      
    break;      
\}      
Slay(\$this);      
return TRUE;
      </Core:Property>
      <Core:Property property="old:merry:act:combat_getdamaged">
         X[M] if(\$this.dead) return TRUE;      
if(\$this."combat:damage" == 0) return TRUE;      
\$this.dead = 1;      
      
  EmitTo(\$attacker, \$attackdesc[0]+\$defencedesc[0]+".");      
  EmitTo(\$this, \$attackdesc[1]+\$defencedesc[1]+".");      
  EmitIn(\$this."base:environment", \$attackdesc[2]+\$defencedesc[2]+".", \$attacker, \$this);      
      
      
\$delay(0.5, TRUE, "6944");      
      
EmitIn(\$this."base:environment", Describe(\$this)+" dies from its wounds.");      
      
\$corpse = Spawn(\$\{Allegory:Props:Animals:City:RatCorpse\});      
\$corpse."base:environment" = \$this."base:environment";      
\$corpse."trait:build" = \$this."trait:build";      
\$corpse."trait:color" = \$this."trait:color";      
\$corpse."trait:linecolor" = \$this."trait:linecolor";      
\$corpse."base:proximity" = \$this."base:proximity";      
      
Slay(\$this);      
return TRUE;
      </Core:Property>
      <Core:Property property="old:merry:lib:combat:got_hit">
         X[M] /* assign actions with this script rather than using the normal combat system */      
\$az = nil /* defunct */;      
      
/*EmitTo(\$az, "Checking damage");*/      
      
if(Int(\$this."combat:damage") \<= 1) return TRUE;      
      
/* high damage. Kill the NPC */      
      
/* is the skink already dead? */      
/*if(\$this."death:dead") return TRUE;*/      
      
Social(\$this, "twitch", "spasmodically", nil);      
EmitIn(\$this."base:environment", Describe(this)+" dies from its wounds.");      
      
Call(\$\{Ironclaw:Lib:Combat:New:Combat\}, "remove_from_combat", \$fighter: \$this);      
      
\$this."death:dead" = 1;      
\$corpse = Spawn(\$\{Allegory:Props:Animals:City:RatCorpse\});      
\$corpse."base:environment" = \$this."base:environment";      
\$corpse."trait:build" = \$this."trait:build";      
\$corpse."trait:color" = \$this."trait:color";      
\$corpse."trait:linecolor" = \$this."trait:linecolor";      
\$corpse."base:proximity" = \$this."base:proximity";      
      
\$inv = \$this."base:inventory";      
      
for(\$i = 0; \$i \< sizeof(\$inv); \$i++) \{      
    \$inv[\$i]."base:environment" = \$corpse;      
\}      
      
Slay(\$this);      
      
return FALSE;
      </Core:Property>
      <Core:Property property="old:merry:lib:combat:perform_actions">
         X[M] /* assign actions with this script rather than using the normal combat system */      
int i;      
\$az = \$\{Chatters:AE:az:azrael\};      
      
/* skinks really just run away */      
/* give a chance to hit them, though */      
if(!random(3)) \{      
 /* 1 in 3 chance it flees successfully */      
 if(this."base:environment")      
  EmitIn(this."base:environment", Describe(this)+" vanishes into a small crack between the cobblestones.");      
 Slay(this);      
 Act(this, "pass");      
\}      
      
/* otherwise, just pass, giving the PCs another chance to hit */      
Act(this, "pass");      
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1421685488, "abigail", "X", 1421685536, "abigail", "E", 1421685538, "abigail", "E", 1421685539, "abigail", "E", 1421685541, "abigail", "E", 1421685554, "abigail", "E", 1421685581, "abigail", "E", 1421685691, "abigail", "E", 1421685706, "abigail", "E", 1421685717, "abigail", "E", 1421685731, "abigail", "E", 1421685910, "abigail", "E", 1421685920, "abigail", "E", 1421685940, "abigail", "E", 1421685956, "abigail", "E", 1421685959, "abigail", "E", 1421685961, "abigail", "E", 1421685963, "abigail", "E", 1421685964, "abigail", "E", 1421685969, "abigail", "E", 1421685971, "abigail", "E", 1421686028, "abigail", "E", 1421686035, "abigail", "E", 1421686036, "abigail", "E", 1421686039, "abigail", "E", 1421686042, "abigail", "E", 1421686043, "abigail", "E", 1421686046, "abigail", "E", 1421686047, "abigail", "E", 1421686049, "abigail", "E", 1421686050, "abigail", "E", 1421686052, "abigail", "E", 1421686053, "abigail", "E", 1421686055, "abigail", "E", 1421686058, "abigail", "E", 1421686059, "abigail", "E", 1421686060, "abigail", "E", 1421686132, "abigail", "E", 1421686377, "abigail", "E", 1421686560, "abigail", "E", 1421686573, "abigail", "E", 1421686595, "abigail", "E", 1421686605, "abigail", "E", 1421686615, "abigail", "E", 1421686625, "abigail", "E", 1421686638, "abigail", "E", 1421686642, "abigail", "E", 1421686648, "abigail", "E", 1421686655, "abigail", "E", 1421686679, "abigail", "E", 1421686685, "abigail", "E", 1421686701, "abigail", "E", 1421686732, "abigail", "E", 1421686773, "abigail", "E", 1421686791, "abigail", "E", 1421686863, "abigail", "E", 1421686867, "abigail", "E", 1421686880, "abigail", "E", 1421687171, "abigail", "E", 1421687377, "abigail", "E", 1421687430, "abigail", "E", 1421687513, "abigail", "E", 1421687551, "abigail", "E", 1421687690, "abigail", "X", 1421688031, "abigail", "E", 1421688162, "abigail", "E", 1421688182, "abigail", "E", 1421688285, "abigail", "E", 1421688296, "abigail", "E", 1421688308, "abigail", "E", 1421719946, "abigail", "E", 1421719954, "abigail", "E", 1421719957, "abigail", "E", 1421719960, "abigail", "E", 1421719962, "abigail", "E", 1421719965, "abigail", "E", 1421719967, "abigail", "E", 1421719976, "abigail", "E", 1421720004, "abigail", "E", 1421720016, "abigail", "E", 1421720023, "abigail", "E", 1421720054, "abigail", "E", 1421720106, "abigail", "X", 1421722460, "rorschakovacs", "E", 1421722484, "rorschakovacs", "E", 1421722491, "rorschakovacs", "E", 1421722504, "rorschakovacs", "E", 1421722511, "rorschakovacs", "E", 1421722536, "rorschakovacs", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="theatre:id">"IC"</Core:Property>
      <Core:Property property="trait:build">"tiny"</Core:Property>
      <Core:Property property="trait:color">
         "dark-brown"
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
