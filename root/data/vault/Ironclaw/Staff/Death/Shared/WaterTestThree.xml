<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="15" density="1.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="true"/>
      <Base:DrinkMessageFirst>
         You drank disgusting water from the basin of a fountain.
      </Base:DrinkMessageFirst>
      <Base:DrinkMessageThird>
         They actually drank water from the basin of a fountain.
      </Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="water" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="water"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="splashing"/>
          <Base:Adjective adjective="wet"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the water
          </Base:Description>
          <Base:Description type="examine">
             Its just water. What did you expect?
          </Base:Description>
          <Base:Description type="look">
             This is water. Duh.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react:caress-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your caress as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the caress of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:drink">
         X[M] switch(random(3))\{         
case 0:         
  EmitTo(\$actor, "You don't like water.");         
  break;         
case 1:         
  EmitTo(\$actor, "You love water.");         
  break;         
case 2:         
  EmitTo(\$actor, "You don't care about water.");         
  break;         
default:         
  EmitTo(\$actor, "What is water?");         
\}         
EmitTo( \$actor, "The water actually retreats from you and escapes your foolish attempt to drink of it." );         
EmitIn( \$actor."base:environment", "The water in a fountain retreats from "+Describe(\$actor)+" in response to their attempt at drinking it.", \$actor );         
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:examine">
         X[M] \$delay(1.0, TRUE, "4a48");       
EmitTo( \$actor, "You are reflected in the flowing water and barely recognizable." );       
\$room = \$actor."base:environment";       
EmitIn( \$room, Describe( \$actor ) + " is reflected in the flowing water and barely recognizable.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:lick-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your tongue as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the tongue of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:look">
         X[M] \$delay(1.0, TRUE, "4a48");       
EmitTo( \$actor, "You are reflected in the flowing water and barely recognizable.");       
\$room = \$actor."base:environment";       
EmitIn( \$room, Describe( \$actor ) + " is reflected in the flowing water and barely recognizable.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:pet-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your pet as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the pet of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:poke-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your poking finger as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the poking finger of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:prod-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your prodding as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the prodding of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:sip">
         X[M] switch(random(3))\{         
case 0:         
  EmitTo(\$actor, "You don't like water.");         
  break;         
case 1:         
  EmitTo(\$actor, "You love water.");         
  break;         
case 2:         
  EmitTo(\$actor, "You don't care about water.");         
  break;         
default:         
  EmitTo(\$actor, "What is water?");         
\}         
EmitTo( \$actor, "The water actually retreats from you and escapes your foolish attempt to sip of it." );         
EmitIn( \$actor."base:environment", "The water in a fountain retreats from "+Describe(\$actor)+" in response to their attempt at sipping it.", \$actor );         
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:splash-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your attempt to splash as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the touch of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:touch-dob">
         X[M] \$delay(1, FALSE, "030f");                              
EmitTo( \$actor, "The water parts and avoids your touch as it continues to spray from the fountain." );                             
EmitIn( \$actor."base:environment", "The water parts and avoids the touch of "+Describe(\$actor)+" as it continues to spray from the fountain.", \$actor );
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1099335788, "tunk_bodin", "E", 1099336278, "tunk_bodin", "X", 1100225495, "tunk_bodin", "E", 1100225665, "tunk_bodin", "X", 1100225766, "tunk_bodin", "X", 1100226018, "tunk_bodin", "X", 1100226148, "tunk_bodin", "X", 1100226256, "tunk_bodin", "E", 1100226505, "tunk_bodin", "X", 1100226720, "tunk_bodin", "X", 1100226773, "tunk_bodin", "X", 1100229103, "tunk_bodin", "X", 1100229980, "tunk_bodin", "X", 1100230698, "tonyd", "P", 1100230924, "tonyd", "P", 1100231028, "tunk_bodin", "X", 1100231547, "tonyd", "P", 1100231584, "tonyd", "P", 1100231611, "tonyd", "P", 1100492781, "tunk_bodin", "X", 1100492952, "tunk_bodin", "X", 1100493472, "tunk_bodin", "X", 1100494008, "tunk_bodin", "X", 1100494627, "tunk_bodin", "X", 1100671181, "tunk_bodin", "X", 1100721403, "tunk_bodin", "X", 1105927840, "tunk_bodin", "X", 1106247655, "tunk_bodin", "X", 1309207397, "tunk_bodin", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
