<object clone="/base/obj/thing" owner="vandringar">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="plant"/>
            <Base:SName sname="tree"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="plants"/>
            <Base:PName pname="trees"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="gnarled"/>
          <Base:Adjective adjective="massive"/>
          <Base:Adjective adjective="tall"/>
          <Base:Adjective adjective="towering"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             gnarled tree of death
          </Base:Description>
          <Base:Description type="examine">
             <sbr/> A gnarled black tree bearing $[if($this."trait:quantity" == 0) { return "no death fruit"; } else if ($this."trait:quantity" == 1) { return "one death fruit"; } else { return desc_cardinal($this."trait:quantity")+ " death fruit"; }] ready to be harvested. Looking closer at the trunk of the tree you can't help but notice the bark and oozing purple sap is twisted throughout the tree's height into the shapes of twisted, agonized faces. Mouths stretched open, you can almost imagine you hear their screams. The tree of death stands at a towering 85 feet in height, it's girth is a massive 10 feet around. The demonic looking tree's bent and twisted branches are covered with deepest-death black, thorny leaves.
          </Base:Description>
          <Base:Description type="look">
             A gnarled tree of death stands at a towering 85 feet in height, it's girth is a massive 10 feet around.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:quantity">
         25
      </Core:Property>
      <Core:Property property="merry:react:harvest-dob">
         X[M] /* check there are peaches available */               
if(\$this."trait:quantity" \< 1) \{               
  EmitTo(\$actor, "There are no harvestable peaches on "+Describe(\$this)+".");               
  return FALSE;               
\}               
               
/* reduce the number of peaches on the plant */               
\$this."trait:quantity" -= 1;               
               
/* create the peach object and give it to the player */               
\$object = Spawn(\$\{Ironclaw:Staff:Ditto:Props:DeathFruit\}); \$object."base:environment" = \$actor;               
               
/* emit message to player and room */               
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");               
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);               
               
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pick-dob">
         X[M] /* check there are peaches available */               
if(\$this."trait:quantity" \< 1) \{               
  EmitTo(\$actor, "There are no harvestable death fruits on "+Describe(\$this)+".");               
  return FALSE;               
\}               
               
/* reduce the number of peaches on the plant */               
\$this."trait:quantity" -= 1;               
               
/* create the peach object and give it to the player */               
\$object = Spawn(\$\{Ironclaw:Staff:Ditto:Props:DeathFruit\}); \$object."base:environment" = \$actor;               
               
/* emit message to player and room */               
EmitTo(\$actor, "You harvest "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".");               
EmitIn(\$actor."base:environment", Describe(\$actor)+" harvests "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from "+Describe(\$this, nil, nil, STYLE_NONPOSS)+".", \$actor);               
               
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:smell-dob">
         X[M] EmitTo( \$actor, "" );                         
                         
\$room = \$actor."base:environment";                         
EmitTo( \$actor, "The tree of death smells of rotten decay." );                         
EmitIn( \$room, Describe ( \$actor ) + " smells " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:sniff-dob">
         X[M] EmitTo( \$actor, "" );                         
                         
\$room = \$actor."base:environment";                         
EmitTo( \$actor, "The tree of death smells of rotten decay." );                         
EmitIn( \$room, Describe ( \$actor ) + " sniffs " + Describe( \$target ) + ".", \$actor );
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] /* stop when we hit 25 peaches on the plant */               
if(\$this."trait:quantity" \>= 12) return TRUE;               
               
/* wait a while, then add a peach */               
\$delay((2*24*60), TRUE, "9d85");               
if(\$this."trait:quantity" \< 6)               
  \$this."trait:quantity" += 1;               
               
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127066338, "tunk_bodin", "X", 1127066796, "tunk_bodin", "X", 1127066933, "tunk_bodin", "X", 1127066998, "tunk_bodin", "X", 1127070096, "tunk_bodin", "X", 1127070349, "tunk_bodin", "X", 1127677331, "tunk_bodin", "X", 1127677752, "tunk_bodin", "X", 1127678161, "tunk_bodin", "X", 1127678415, "tunk_bodin", "X", 1127678803, "tunk_bodin", "X", 1127678849, "tunk_bodin", "X", 1127678871, "tunk_bodin", "E", 1128697418, "tunk_bodin", "X", 1128701343, "tunk_bodin", "X", 1128712701, "tunk_bodin", "X", 1128712882, "tunk_bodin", "X", 1128895782, "tunk_bodin", "X", 1132028668, "tunk_bodin", "X", 1133114402, "tunk_bodin", "X", 1133115051, "tunk_bodin", "X", 1133126405, "tunk_bodin", "X", 1133126453, "tunk_bodin", "X", 1133127448, "tunk_bodin", "X", 1133127911, "tunk_bodin", "X", 1137670493, "rhenn", "E", 1168399003, "tunk_bodin", "X", 1168599641, "tonyd", "E", 1175838309, "necate", "E", 1198115147, "slurpeeslurp", "E", 1198115290, "slurpeeslurp", "E", 1198116255, "slurpeeslurp", "E", 1198116340, "slurpeeslurp", "E", 1199596278, "slurpeeslurp", "E", 1253113217, "slurpeeslurp", "E", 1315423849, "morwenlorelie", "R", 1327973159, "jominey", "R", 1334482320, "meandmine", "K", 1334483666, "lidiab", "K", 1334483795, "lidiab", "E", 1334483824, "lidiab", "E", 1334483905, "lidiab", "K", 1334483929, "lidiab", "K", 1334483983, "lidiab", "K", 1334485696, "meandmine", "X", 1334485818, "meandmine", "K", 1334485970, "lidiab", "K", 1375902603, "vandringar", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
