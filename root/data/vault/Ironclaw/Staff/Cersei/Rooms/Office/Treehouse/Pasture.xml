<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Staff:Cersei:Rooms:UrOutside)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="true"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="100" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="field"/>
            <Base:SName sname="pasture"/>
            <Base:SName sname="land"/>
            <Base:SName sname="meadow"/>
            <Base:SName sname="room"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rooms"/>
            <Base:PName pname="fields"/>
            <Base:PName pname="pastures"/>
            <Base:PName pname="lands"/>
            <Base:PName pname="meadows"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="grazing"/>
          <Base:Adjective adjective="section"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             section of {grazing land|pasture|meadow|field}
          </Base:Description>
          <Base:Description type="examine">
             A section of {grazing land|pasture|meadow|field}. The {sprawling|vast|gentle|rolling} hills stretch out before you. In the far distance you can see a rocky cliff-side and forests, a starkly beautiful landscape. Occasionally you spot a few scatterings of rabbit droppings. In the center of the {grazing land|pasture|meadow|field} sits an aged oak tree with a tire swing hanging below it and a treehouse propped between the plentiful branches. A {winding|meandering|trickling|flowing} river curves behind the aged oak tree and runs from west to east. A <acmd tag="command" cmd="go up">crevice</acmd> is cut into the face of the oak tree.
          </Base:Description>
          <Base:Description type="glance">
             A section of {grazing land|pasture|meadow|field}. The {sprawling|vast|gentle|rolling} hills stretch out before you. A <acmd tag="command" cmd="go up">crevice</acmd> is cut into the face of the oak tree.
          </Base:Description>
          <Base:Description type="look">
             A section of {grazing land|pasture|meadow|field}. The {sprawling|vast|gentle|rolling} hills stretch out before you. In the far distance you can see a rocky cliff-side and forests, a starkly beautiful landscape. Occasionally you spot a few scatterings of rabbit droppings. In the center of the {grazing land|pasture|meadow|field} sits an aged oak tree with a tire swing hanging below it and a treehouse propped between the plentiful branches. A <acmd tag="command" cmd="go up">crevice</acmd> is cut into the face of the oak tree.
          </Base:Description>
          <Base:Description type="mapurl">
             http://i100.photobucket.com/albums/m20/Morwen_Lorelie/Regents%20Fate/Treehouse.jpg
          </Base:Description>
          <Base:Description type="react-post:sense/smell-dob">
             The {grazing land|pasture|meadow|field} smells of {sweet earthy scents|fresh spring flowers|moist grass}.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-up" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
            <Base:SName sname="crevice"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
            <Base:PName pname="crevices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hewn"/>
          <Base:Adjective adjective="roughly"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             roughly hewn crevice
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:Staff:Cersei:Rooms:Office:Treehouse:Fort|exit-down)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="up"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="branch" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="branch"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aged"/>
          <Base:Adjective adjective="oak"/>
          <Base:Adjective adjective="tree"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the branch of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             A branch that hangs lower than the other graceful tree branches up above. A tire swing is roughly tied here.
          </Base:Description>
          <Base:Description type="look">
             A branch that hangs lower than the other graceful tree branches up above.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="branches" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="branches"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aged"/>
          <Base:Adjective adjective="oak"/>
          <Base:Adjective adjective="tree"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the branches of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             The branches that arc gracefully and hang with a beautiful sweeping foliage. On one of the branches hangs a roughly tied tire swing. A treehouse appears to have been fitted between the branches.
          </Base:Description>
          <Base:Description type="look">
             The branches that arc gracefully and hang with a beautiful sweeping foliage. A treehouse appears to have been fitted between the branches.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="corner" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="corner"/>
            <Base:SName sname="juncture"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="corners"/>
            <Base:PName pname="junctures"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="southeast"/>
          <Base:Adjective adjective="southeastern"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the corner of the pasture
          </Base:Description>
          <Base:Description type="look">
             The fence's meet to create a juncture in the southeastern corner of the pasture.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="droppings" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dropping"/>
            <Base:SName sname="dung"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="droppings"/>
            <Base:PName pname="dungs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             a few rabbit droppings
          </Base:Description>
          <Base:Description type="examine">
             A few dry, round rabbit droppings are littered on the ground, a signal of life in these pastures.
          </Base:Description>
          <Base:Description type="look">
             A few dried rabbit droppings are littered about.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="floor" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ground"/>
            <Base:SName sname="floor"/>
            <Base:SName sname="grass"/>
            <Base:SName sname="earth"/>
            <Base:SName sname="terrain"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="grounds"/>
            <Base:PName pname="floors"/>
            <Base:PName pname="grasses"/>
            <Base:PName pname="terrains"/>
            <Base:PName pname="earths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the rolling, sloping ground
          </Base:Description>
          <Base:Description type="examine">
             The grassy ground rolls and dips in gentle slopes.
          </Base:Description>
          <Base:Description type="look">
             The ground rolls and dips in gentle slopes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flower" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lily"/>
            <Base:SName sname="flower"/>
            <Base:SName sname="plant"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="azure"/>
          <Base:Adjective adjective="single"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             single azure lily
          </Base:Description>
          <Base:Description type="look">
             One of the azure lilies that sprinkle the {grazing land|pasture|meadow|field}.
          </Base:Description>
          <Base:Description type="react-post:sense/smell-dob">
             The azure lily smells of sweet scents.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flowers" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="lilies"/>
            <Base:PName pname="flowers"/>
            <Base:PName pname="plants"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="azure"/>
          <Base:Adjective adjective="cluster"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             cluster of azure lilies
          </Base:Description>
          <Base:Description type="look">
             One of the clusters of azure lilies that scatter the {grazing land|pasture|meadow|field}.
          </Base:Description>
          <Base:Description type="react-post:sense/smell-dob">
             The azure lilies smell of sweet scents.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="foliage" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leaf"/>
            <Base:SName sname="shade"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foliage"/>
            <Base:PName pname="leaves"/>
            <Base:PName pname="shades"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="green"/>
          <Base:Adjective adjective="leafy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the leafy foliage of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             The leafy foliage that tumbles and cascades gracefully from an aged oak tree's branches. The perfect place to shade yourself from the hot rays of the sun.
          </Base:Description>
          <Base:Description type="look">
             The green leafy foliage that tumbles and cascades gracefully from an aged oak tree's branches.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="grass" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="grass"/>
            <Base:SName sname="blade"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="grasses"/>
            <Base:PName pname="blades"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             single blade of grass
          </Base:Description>
          <Base:Description type="examine">
             You focus on a single blade of green grass amongst the many that surrounds you.
          </Base:Description>
          <Base:Description type="look">
             A single blade of grass.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="river" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="river"/>
            <Base:SName sname="water"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rivers"/>
            <Base:PName pname="waters"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="flowing"/>
          <Base:Adjective adjective="meandering"/>
          <Base:Adjective adjective="trickling"/>
          <Base:Adjective adjective="winding"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {winding|meandering|trickling|flowing} river
          </Base:Description>
          <Base:Description type="examine">
             A {winding|meandering|trickling|flowing} river curves behind the aged oak tree and runs from west to east. Upon closer inspection you spy fish jumping in the spray of the water.
          </Base:Description>
          <Base:Description type="look">
             A {winding|meandering|trickling|flowing} river curves behind the aged oak tree and runs from west to east.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="root" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="root"/>
            <Base:SName sname="chair"/>
            <Base:SName sname="seat"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aged"/>
          <Base:Adjective adjective="oak"/>
          <Base:Adjective adjective="tree"/>
          <Base:Adjective adjective="trunk"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the root of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             A root that curls and twists from the aged oak tree, coincidentally you can perch comfortably on it as if it were made to be a chair.
          </Base:Description>
          <Base:Description type="look">
             A root that curls and twists from the aged oak tree.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="roots" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames>
            <Base:PName pname="roots"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aged"/>
          <Base:Adjective adjective="oak"/>
          <Base:Adjective adjective="tree"/>
          <Base:Adjective adjective="trunk"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the roots of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             A root that curls and twists from the aged oak tree, coincidentally you can perch comfortably on one of the plentiful roots as if it were made to be a chair.
          </Base:Description>
          <Base:Description type="look">
             The roots that curl and twist from the aged oak tree.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rope" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rope"/>
            <Base:SName sname="cord"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ropes"/>
            <Base:PName pname="cords"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rough"/>
          <Base:Adjective adjective="swing"/>
          <Base:Adjective adjective="tire"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             tire swing's length of rope
          </Base:Description>
          <Base:Description type="examine">
             A length of rope that firmly ties the dirty tractor tire to a branch of an aged oak tree.
          </Base:Description>
          <Base:Description type="look">
             A length of rough rope on the tire swing.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="swing" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="swing"/>
            <Base:SName sname="tire"/>
            <Base:SName sname="chair"/>
            <Base:SName sname="seat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="swings"/>
            <Base:PName pname="tires"/>
            <Base:PName pname="chairs"/>
            <Base:PName pname="seats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="secure"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             secure tire swing
          </Base:Description>
          <Base:Description type="look">
             The secure tire swing that is made up of a length of rough rope and a dirty old tractor tire.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tire" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tire"/>
            <Base:SName sname="wheel"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tires"/>
            <Base:PName pname="wheels"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rubber"/>
          <Base:Adjective adjective="swing"/>
          <Base:Adjective adjective="tractor"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             dirty tractor tire
          </Base:Description>
          <Base:Description type="look">
             A dirty tractor tire hanging from a branch on the aged oak tree.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="treehouse" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="house"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="houses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="tree"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             wooden treehouse
          </Base:Description>
          <Base:Description type="look">
             A treehouse that has been fitted into the branches of the aged oak tree using drift wood. You see no immediate means of entering the oak tree.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="trunk" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trunk"/>
            <Base:SName sname="base"/>
            <Base:SName sname="tree"/>
            <Base:SName sname="wood"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trunks"/>
            <Base:PName pname="bases"/>
            <Base:PName pname="tress"/>
            <Base:PName pname="woods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="aged"/>
          <Base:Adjective adjective="oak"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the trunk of an aged oak tree
          </Base:Description>
          <Base:Description type="examine">
             The lower section of an aged oak tree, the roots of the tree curl and twist fascinatingly into the springy grass of the ground. The trunk of the tree holds up the entire bulk of a wooden treehouse.
          </Base:Description>
          <Base:Description type="look">
             The lower section of an aged oak tree the appears to hole up a wooden treehouse.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="emit:hot:day">
         "\{You feel the heat rise up from the hard dry \{ground\|earth\}.\| The \{hot\|burning\|sweltering\} sun beats down on your back.\| The \{heat\|warmth\} of the sun brings out the worst \{smells\|scents\|odors\} of \{the city\|docktown\}.\}"
      </Core:Property>
      <Core:Property property="emit:storm">
         "\{Rain \{pours\|falls\} down from \{over head\|above\|the sky\}.\|Several lightning bolts lance down from \{over head\|above\|the sky\} striking in the distance.\| A loud clap of thunder sounds, sending vibrations through the ground, shaking you.\|\{A series of lightning\|A lightning bolt\} streaks across \{over head\|above\|the sky\} spreading out like fingers on a hand.\| Lightning emblazons the sky spreading a \{eerie\|ominous\} white glow on everything around you.\| The rain \{lightens\|calms\|weakens\} for a moment before a \{clap\|shock\|boom\} of thunder ushers it's heavy return.\| The dark clouds billow ominously \{over head\|above\|through the sky\}, sending rain falling down in waves.\| The wind blows the rain harshly \{against your face\|in your eyes\}.\|A heavy blast of rain forces you to \{close your eyes.\|turn your face\}.\}"
      </Core:Property>
      <Core:Property property="export:backup:fishing:river:fisharray">
         (\{ \<Allegory:Props:Animals:Fish:OddCatches:Seaweed\>, \<Allegory:Props:Animals:Fish:OddCatches:BrokenShell\>, \<Allegory:Props:Animals:Fish:OddCatches:Driftwood\>, \<Allegory:Props:Animals:Fish:OddCatches:EmptyContainer\>, \<Allegory:Props:Animals:Fish:OddCatches:FishingLine\>, \<Allegory:Props:Animals:Fish:OddCatches:SoggyScroll\>, \<Allegory:Props:Animals:Fish:OddCatches:Boots\>, \<Allegory:Props:Animals:Fish:OddCatches:RustyBucket\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\> \})
      </Core:Property>
      <Core:Property property="export:fishing:river:fisharray">
         (\{ \<Allegory:Props:Animals:Fish:OddCatches:Seaweed\>, \<Allegory:Props:Animals:Fish:OddCatches:BrokenShell\>, \<Allegory:Props:Animals:Fish:OddCatches:Driftwood\>, \<Allegory:Props:Animals:Fish:OddCatches:EmptyContainer\>, \<Allegory:Props:Animals:Fish:OddCatches:FishingLine\>, \<Allegory:Props:Animals:Fish:OddCatches:SoggyScroll\>, \<Allegory:Props:Animals:Fish:OddCatches:Boots\>, \<Allegory:Props:Animals:Fish:OddCatches:RustyBucket\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\> \})
      </Core:Property>
      <Core:Property property="export:fishing:stock">
         10
      </Core:Property>
      <Core:Property property="export:float:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "float_on_water");
      </Core:Property>
      <Core:Property property="export:place:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "place_in_water");
      </Core:Property>
      <Core:Property property="export:swimming:waterdetails">
         (\{ "river" \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "fish with a salty tang"
      </Core:Property>
      <Core:Property property="fishing:stock">3</Core:Property>
      <Core:Property property="float:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "float_on_water");
      </Core:Property>
      <Core:Property property="merry:react-post:enter-from">
         X[M] \$actor."merry:act-post:stance" = \$this."float:script";      
\$actor."merry:act-post:approach" = \$this."float:script";      
\$actor."merry:act-post:leave" = \$this."float:script";      
\$actor."merry:act-post:place" = \$this."place:script";      
\$actor."merry:act-post:zthrow" = \$this."place:script";      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:fill-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react-post:refill-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react-post:tap-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react:enter-into">
         X[M] /* remove the scripts when the actor leaves the water area */      
\$actor."merry:act-post:stance" = nil;      
\$actor."merry:act-post:approach" = nil;      
\$actor."merry:act-post:leave" = nil;      
\$actor."merry:act-post:place" = nil;      
\$actor."merry:act-post:zthrow" = nil;      
      
/* and, just in case anyone still has these scripts */      
\$actor."merry:act-pre:place" = nil;      
\$actor."merry:act-pre:zthrow" = nil;      
return TRUE;
      </Core:Property>
      <Core:Property property="place:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "place_in_water");
      </Core:Property>
      <Core:Property property="react:enter-from">
         X[M] if (NRefDetail (\$target) == "exit-up")    
\{    
  EmitIn (\$actor."base:environment",    
    Describe (\$actor) + " crawls into the crevice and disappears from sight."    
  );    
\}    
         
return TRUE;
      </Core:Property>
      <Core:Property property="react:enter-into">
         X[M] if (NRefDetail (\$target) == "exit-up")    
\{    
  EmitTo ( \$actor, "You crawl into the crevice and disappear from sight.");    
\}    
         
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1289052971, "morwenlorelie", "E", 1289053353, "morwenlorelie", "K", 1289053574, "morwenlorelie", "E", 1289053625, "morwenlorelie", "E", 1289053638, "morwenlorelie", "E", 1289067645, "morwenlorelie", "X", 1289127925, "morwenlorelie", "E", 1289237951, "morwenlorelie", "E", 1306884154, "morwenlorelie", "R", 1309498039, "morwenlorelie", "R", 1309499159, "morwenlorelie", "E", 1309499204, "morwenlorelie", "X", 1312596371, "morwenlorelie", "K", 1312596395, "morwenlorelie", "E", 1312596617, "morwenlorelie", "X", 1312596945, "morwenlorelie", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:smell">
         "fish with a salty tang"
      </Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1309499689
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
