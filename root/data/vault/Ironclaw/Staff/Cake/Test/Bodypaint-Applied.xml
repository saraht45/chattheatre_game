<object clone="/base/obj/thing" owner="arrianna">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Makeup:Applied:UrAppliedMakeup)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bodypaint"/>
            <Base:SName sname="paint"/>
            <Base:SName sname="color"/>
            <Base:SName sname="makeup"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodypaints"/>
            <Base:PName pname="paints"/>
            <Base:PName pname="colors"/>
            <Base:PName pname="makeups"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="body"/>
          <Base:Adjective adjective="skin"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:adverb) |$(this.trait:adverb) applied} $(this.trait:material) $(this.trait:color) bodypaint
          </Base:Description>
          <Base:Description type="look">
             Some $(this.trait:material) $(this.trait:color) bodypaint{? | $(this.trait:adverb) | that has been $(this.trait:adverb) applied}. A dye or paint applied to various parts of the body for costume purposes. Vibrant and thick, this paint can be smeared upon the body in any number of patterns with your fingertips or a sponge.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="fur"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:makeup:setprops">
         (\{ (\{ "appearance:skin", "trait:color" \}) \})
      </Core:Property>
      <Core:Property property="merry:lib:autodestroy">
         X[M] /* destroy this after some time */   
int time;   
/* if no time is set, destroy in two days */   
if(!this."makeup:duration") \{   
  this."makeup:duration" = time()+60*60*24*2;   
\}   
   
while(this."makeup:duration" \&\& this."makeup:duration" != -1) \{   
  time = this."makeup:duration" - time();   
  if(time \< 0) \{   
    this."trait:material" = "running";   
    this."trait:adverb" = nil;   
    \$delay(60*60*48, TRUE, "6644");   
    ::remove_makeup(\$makeup: this);   
    return TRUE;   
  \} else \{   
    \$delay(time, TRUE, "457c");   
  \}   
\}   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:remove_makeup">
         X[M] /* removing makeup - destroy it */   
   
if(!\$makeup) \$makeup = this;   
   
/* reset any body descriptions caused by the makeup */   
if(\$makeup."makeup:changed_properties" \&\& \$makeup."base:environment") \{   
  for(\$i=0;\$i\<sizeof(\$makeup."makeup:changed_properties");\$i++) \{   
    ironclaw::unset_prop(\$obj: \$makeup."base:environment", \$prop: \$makeup."makeup:changed_properties"[\$i][0], \$id: \$makeup."makeup:changed_properties"[\$i][1]);   
  \}   
\}   
   
/* destroy the makeup */   
Slay(\$makeup);   
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:unwear%makeup">
         X[M] /* removing makeup - destroy it */   
::remove_makeup(\$makeup: this);   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] this."trait:colorshape" = this."trait:color"+"-painted";   
return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1202388713, "tonyd", "E", 1202388850, "tonyd", "P", 1202389023, "tonyd", "P", 1202389064, "tonyd", "P", 1213427229, "tonyd", "P", 1213427303, "tonyd", "P", 1213427578, "tonyd", "P", 1213430175, "tonyd", "P", 1219726259, "tonyd", "P", 1219726347, "tonyd", "P", 1219726383, "tonyd", "P", 1219726463, "tonyd", "P", 1219726932, "tonyd", "P", 1219727271, "tonyd", "P", 1219727327, "tonyd", "P", 1219727390, "tonyd", "P", 1219727454, "tonyd", "P", 1219727689, "tonyd", "P", 1219727709, "tonyd", "P", 1219727867, "tonyd", "P", 1219727988, "tonyd", "P", 1219728040, "tonyd", "P", 1304784048, "arrianna", "R", 1304788730, "arrianna", "X", 1304788794, "arrianna", "X", 1304789158, "arrianna", "X", 1304789772, "arrianna", "X", 1304789979, "arrianna", "X", 1304790250, "arrianna", "X", 1304790310, "arrianna", "X", 1304790456, "arrianna", "X", 1304790537, "arrianna", "X", 1306990559, "arrianna", "E", 1306990675, "arrianna", "E", 1306990824, "arrianna", "E", 1573096526, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
