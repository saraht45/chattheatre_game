<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nut"/>
            <Base:SName sname="coconut"/>
            <Base:SName sname="fruit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="nuts"/>
            <Base:PName pname="coconuts"/>
            <Base:PName pname="fruits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="NEW">empty</Base:Description>
          <Base:Description type="brief">coconut</Base:Description>
          <Base:Description type="examine">
             A full coconut in its brown hairy shell. It takes a sharp and thick head to open it, maybe a hatchet? You can provide the muscle for it.
          </Base:Description>
          <Base:Description type="look">
             A full coconut in its brown hairy shell.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="NEW" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             NEW detail
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="brief">"coconut"</Core:Property>
      <Core:Property property="export:trait:smell">
         "rich coconut"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "faintly of coconut. The brown hairs of the shell are rather dull and tasteless."
      </Core:Property>
      <Core:Property property="look">
         "A full coconut in its brown hairy shell."
      </Core:Property>
      <Core:Property property="merry:react-post:crack-dob">
         X[M] /*check if actor has 1 item only*/
 if(!\$using) \{
        EmitTo(\$actor, "You need a weapon of some sorts to break open "+Describe(this, nil, \$actor)+".");
        EmitIn(\$actor."base:environment", Describe(\$actor)+ " tries to open the nut, but something is not done right.", \$actor);
        return FALSE;
  \}
  if(sizeof(\$using) != 1) \{
     EmitTo(\$actor, "Please only use one tool in cracking the "+Describe(\$this)+" open.");
        EmitIn(\$actor."base:environment", Describe(\$actor)+ " tries to open the nut, but uses too many tools. More is not always better.", \$actor);
     return FALSE;
  \}

/*check if actor has proper weapon*/
  \$item = NRefOb(\$using[0]);
  /* get the snames for \$item */
  \$snames = Arr(\$item."details:default:snames");
  /* use member() to check if one of the snames is "axe" */
  if(!member("axe", \$snames) ) \{
    EmitTo(\$actor, "That won't do, either not sharp enough or not strong enough. Come on, this is a coconut, try some manner of axe.");
    EmitIn(\$actor."base:environment", Describe(\$actor)+ " tries to open the nut, but picks the wrong tool.", \$actor);
    return FALSE;
  \}

/*make roll for strength*/
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ \$actor."trait:body"\}));

/*emit according to roll*/
if(\$result \< 5) \{
  EmitTo(\$actor, "You can not manage to crack the "+Describe(\$target)+".");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" does not manage to crack the "+Describe(\$this)+" open.", \$actor);
\} else if(\$result \> 4) \{
  EmitTo(\$actor, "You manage to cause minor harm in the shell, but do not manage to open the coconut.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" manages to cause minor injuries to the coconut, but it remains unopened.", \$actor);
\}

return TRUE;



return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:knock-dflt">
         X[M] /*knock ON the coconut*/
EmitTo(\$actor, "The sound of your knock is echoed with a muffled sound in the hollow inside of the coconut. You can distinguish some fluid splashing also.");
EmitIn(\$actor."base:environemnt", "The muffled sound is echoed in the hollow inside of the coconut as " +Describe(\$actor)+ "knocks on the hard shell. You can distinguish some fluid splashing also.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:knock-iob">
         X[M] /*knock AT the coconut*/
EmitTo(\$actor, "The sound of your knock is echoed with a muffled sound in the hollow inside of the coconut. You can distinguish some fluid splashing also.");
EmitIn(\$actor."base:environemnt", "The muffled sound is echoed in the hollow inside of the coconut as " +Describe(\$actor)+ "knocks on the hard shell. You can distinguish some fluid splashing also.");
return TRUE;
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1206532138, "balkaar", "E", 1206532162, "balkaar", "E", 1206532587, "balkaar", "E", 1206532623, "balkaar", "E", 1206532642, "balkaar", "E", 1206532650, "balkaar", "E", 1206532661, "balkaar", "E", 1206532678, "balkaar", "E", 1206561800, "balkaar", "E", 1206561815, "balkaar", "E", 1206561834, "balkaar", "E", 1206562399, "balkaar", "E", 1206562907, "balkaar", "E", 1206562946, "balkaar", "E", 1206562958, "balkaar", "E", 1206563042, "balkaar", "E", 1206563243, "balkaar", "E", 1206567069, "balkaar", "E", 1206567132, "balkaar", "E", 1206567190, "balkaar", "E", 1206567665, "balkaar", "E", 1206567795, "balkaar", "E", 1206567890, "balkaar", "E", 1206568336, "balkaar", "E", 1206568388, "balkaar", "E", 1206568544, "balkaar", "E", 1206568671, "balkaar", "E", 1206568730, "balkaar", "E", 1206568752, "balkaar", "E", 1206568809, "balkaar", "E", 1206568862, "balkaar", "E", 1206626325, "balkaar", "E", 1206626572, "balkaar", "E", 1206627133, "balkaar", "E", 1206627433, "balkaar", "E", 1206627525, "balkaar", "E", 1206627667, "balkaar", "E", 1206627863, "balkaar", "E", 1206627904, "balkaar", "E", 1206627954, "balkaar", "E", 1206628014, "balkaar", "E", 1206628094, "balkaar", "E", 1206628256, "balkaar", "E", 1206628353, "balkaar", "E", 1206628433, "balkaar", "E", 1206628496, "balkaar", "E", 1206628611, "balkaar", "E", 1206628664, "balkaar", "E", 1206629511, "balkaar", "E", 1206629641, "balkaar", "E", 1206629780, "balkaar", "E", 1206659661, "balkaar", "E", 1206664832, "balkaar", "E", 1206666791, "tonyd", "P", 1206671477, "balkaar", "E", 1206671587, "balkaar", "E", 1206671976, "balkaar", "E", 1206682674, "balkaar", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
