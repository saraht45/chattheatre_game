<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Lib:Combat:Cards:NPCs:UrGuard)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wolf"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wolves"/>
            <Base:PName pname="wolfs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="buff"/>
          <Base:Adjective adjective="stern-looking"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="facialhair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="facialhair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cinnamon"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tousled"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="feral"/>
          <Base:Adjective adjective="inky black"/>
          <Base:Adjective adjective="shoulder-length"/>
          <Base:Adjective adjective="tousled"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="addquest">
         \<Ironclaw:Quest:Quests:Halloween\>
      </Core:Property>
      <Core:Property property="appearance:build">
         "stern-looking"
      </Core:Property>
      <Core:Property property="appearance:chest">
         "masculine, hairy"
      </Core:Property>
      <Core:Property property="appearance:eyecolor">
         "midnight blue"
      </Core:Property>
      <Core:Property property="appearance:eyeshape">
         "dark"
      </Core:Property>
      <Core:Property property="appearance:furcolor">
         "cinnamon"
      </Core:Property>
      <Core:Property property="appearance:haircolor">
         "inky black"
      </Core:Property>
      <Core:Property property="appearance:hairlength">
         "shoulder-length"
      </Core:Property>
      <Core:Property property="appearance:hairstyle">
         "tousled"
      </Core:Property>
      <Core:Property property="appearance:hairstyle_examinedescription">
         " Hair which hangs loose and appears to be in disarray."
      </Core:Property>
      <Core:Property property="appearance:hairstyle_examinestring">
         " which is tousled"
      </Core:Property>
      <Core:Property property="appearance:hairstyle_lookdescription">
         " Hair which hangs loose and appears to be in disarray."
      </Core:Property>
      <Core:Property property="appearance:hairstyle_string">
         " which is tousled"
      </Core:Property>
      <Core:Property property="appearance:hairtype">
         "feral"
      </Core:Property>
      <Core:Property property="appearance:height">
         "buff"
      </Core:Property>
      <Core:Property property="base:combat:weapon">
         \<[Allegory:Props:Weapons:Bladed:Swords:Heavy:Longsword]#248971\>
      </Core:Property>
      <Core:Property property="base:initialcontents">
         (\{ nil \})
      </Core:Property>
      <Core:Property property="combat:actions">250</Core:Property>
      <Core:Property property="combat:actions:current">
         250
      </Core:Property>
      <Core:Property property="combat:actions:queue"/>
      <Core:Property property="combat:weapon">
         \<[Allegory:Props:Weapons:Bladed:Swords:Heavy:Longsword]#248971\>
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave" \}), \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:(\{ "witness:enter-into%nip:core", "lib:handler:request-authority" \}), \<Shared:Systems:Quest:NIP:lib:quest-giver\>:(\{ "react-post:evoke-iob%quest_giver", "react-post:evoke-dob%quest_giver", "lib:check_dest", "lib:quest_query", "lib:quest_init", "lib:do_quest_yes", "lib:do_quest_no", "lib:do_quest_expire", "lib:modify_quests", "setprop-post:addquest", "setprop-post:delquest", "lib:quest_config", "lib:quest_show_emits" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, \<Shared:Systems:Quest:NIP:lib:quest-giver\> \})
      </Core:Property>
      <Core:Property property="export:nip:quest:list">
         (\{ \<Ironclaw:Quest:Quests:Halloween\> \})
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This guard is a buff stern-looking wolf, with cinnamon fur, and shoulder-length feral inky black hair which is tousled. It has dark midnight blue eyes."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This guard is a buff stern-looking wolf, with cinnamon fur, and shoulder-length feral inky black hair which is tousled."
      </Core:Property>
      <Core:Property property="guarding:access:allowed:individuals">
         ([ "abel":"Sheriff Joshua", "adriana":"Lia", "anna":"Doctor Jahren", "chinco":"Sheriff Joshua", "donatella":"Lia", "dylan":"Doctor Jahren", "fyros":"Doctor Jahren", "hush":"Doctor Jahren", "jahren":"Sheriff Joshua", "lia":"Lia", "meepers":"Lia", "meerclar":"StoryBuilder Nyx", "miya":"Lia", "nyx":"Sheriff Joshua", "temperance":"Lia", "virendra":"Doctor Jahren", "xena":"Doctor Jahren" ])
      </Core:Property>
      <Core:Property property="guarding:access:denied:individuals">
         ([ "flinx":"Sheriff Joshua", "milli":"Sheriff Joshua", "valdus":"Sheriff Joshua" ])
      </Core:Property>
      <Core:Property property="guarding:access:listkeepers">
         (\{ \<Chatters:IC:jo:joshua\>, \<Chatters:AE:gr:grace\>, nil, nil \})
      </Core:Property>
      <Core:Property property="merry:inherit:lib:check_dest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_expire">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_no">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:do_quest_yes">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify_quests">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_config">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_init">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_query">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:quest_show_emits">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-dob%quest_giver">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:evoke-iob%quest_giver">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:addquest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delquest">
         \<Shared:Systems:Quest:NIP:lib:quest-giver\>
      </Core:Property>
      <Core:Property property="merry:react-post:evoke-dob%guarding">
         X[M] /* are we able to give instructions */
if(!member(\$actor, Arr(\$this."guarding:access:listkeepers"))) \{
 EmitIn(\$actor."base:environment", "A guard grunts, \\"You can't tell me what to do.\\"" );
 return TRUE ;
\}


/* allow questions and instructions about blocking the exit */
\$input = \$evoke;
\$input = \$input[1..strlen(\$input)-3];
\$input = explode(\$input," ");

if(sizeof(\$input) \> 1) \{
  \$character = lower_case(\$input[1]);
\} else \{
  \$character = nil;
\}

switch(\$input[0]) \{
  case "allow":
    if(\$character) \{
      \$this."guarding:access:allowed:individuals"[\$character] = Describe(\$actor);
      \$this."guarding:access:denied:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will allow "+\$character+" to pass.");
    \} else \{
      EmitTo(\$actor, "Format: allow NAME");
    \}
    break;
  case "remove":
    if(\$character) \{
      \$this."guarding:access:allowed:individuals"[\$character] = nil;
      \$this."guarding:access:denied:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will not treat "+\$character+" any differently to other people.");
    \} else \{
      EmitTo(\$actor, "Format: remove NAME");
    \}
    break;
  case "block":
  case "deny":
  case "bar":
    if(\$character) \{
      \$this."guarding:access:denied:individuals"[\$character] = Describe(\$actor);
      \$this."guarding:access:allowed:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will not allow "+\$character+" to pass.");
    \} else \{
      EmitTo(\$actor, "Format: block NAME");
    \}
    break;
  case "ask":
    if(\$this."guarding:access:allowed:individuals"[\$character]) \{
      EmitTo(\$actor, Describe(\$this)+" tells you that "+\$character+" is allowed through by order of "+\$this."guarding:access:allowed:individuals"[\$character]+".");
    \} else if (\$this."guarding:access:denied:individuals"[\$character]) \{
      EmitTo(\$actor, Describe(\$this)+" tells you that "+\$character+" is barred through by order of "+\$this."guarding:access:denied:individuals"[\$character]+".");
    \} else \{
      EmitTo(\$actor, Describe(\$this)+" tells you that there are no special orders about "+\$character+".");
    \}
    break;
  case "list":
    EmitTo(\$actor, Describe(\$this)+" lists who is allowed through:");
    if(sizeof(map_indices(\$this."guarding:access:allowed:individuals"))) \{
      EmitTo(\$actor, implode(map_indices(\$this."guarding:access:allowed:individuals"), " "));
    \} else \{
      EmitTo(\$actor, "No specific individuals.");
    \}
    if(sizeof(Arr(\$this."guarding:access:allowed:guilds"))) \{
      \$tmp = (\{ \});
      for(\$i=0;\$i\<sizeof(Arr(\$this."guarding:access:allowed:guilds"));\$i++) \{
        \$tmp += (\{ \$this."guarding:access:allowed:guilds"[\$i].shortname \});
      \}
      EmitTo(\$actor, "Guilds of "+implode(\$tmp, " "));
    \} else \{
      EmitTo(\$actor, "No specific guilds.");
    \}

    EmitTo(\$actor, Describe(\$this)+" lists who is banned from passing:");
    if(sizeof(map_indices(\$this."guarding:access:denied:individuals"))) \{
      EmitTo(\$actor, implode(map_indices(\$this."guarding:access:denied:individuals"), " "));
    \} else \{
      EmitTo(\$actor, "No specific individuals.");
    \}
    if(sizeof(Arr(\$this."guarding:access:denied:guilds"))) \{
      \$tmp = (\{ \});
      for(\$i=0;\$i\<sizeof(Arr(\$this."guarding:access:denied:guilds"));\$i++) \{
        \$tmp += (\{ \$this."guarding:access:denied:guilds"[\$i].shortname \});
      \}
      EmitTo(\$actor, "Guilds of "+implode(\$tmp, " "));
    \} else \{
      EmitTo(\$actor, "No specific guilds.");
    \}
    break;
  default:
    EmitTo(\$actor, "[OOC: Valid instructions for the guard are: \\"allow\\", \\"block\\", \\"remove\\", \\"ask\\" and \\"list\\" - all followed by the name of the character you are asking about. Except list, of course. That just lists them.]");
    break;
\}


return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:evoke-iob%guarding">
         X[M] /* are we able to give instructions */
if(!member(\$actor, Arr(\$this."guarding:access:listkeepers"))) return TRUE;
else \{EmitIn(\$actor."base:environment", "A guard grunts, \\"You can't tell me what to do.\\"" ); \}


/* allow questions and instructions about blocking the exit */
\$input = \$evoke;
\$input = \$input[1..strlen(\$input)-3];
\$input = explode(\$input," ");

if(sizeof(\$input) \> 1) \{
  \$character = lower_case(\$input[1]);
\} else \{
  \$character = nil;
\}

switch(\$input[0]) \{
  case "allow":
    if(\$character) \{
      \$this."guarding:access:allowed:individuals"[\$character] = Describe(\$actor);
      \$this."guarding:access:denied:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will allow "+\$character+" to pass.");
    \} else \{
      EmitTo(\$actor, "Format: allow NAME");
    \}
    break;
  case "remove":
    if(\$character) \{
      \$this."guarding:access:allowed:individuals"[\$character] = nil;
      \$this."guarding:access:denied:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will not treat "+\$character+" any differently to other people.");
    \} else \{
      EmitTo(\$actor, "Format: remove NAME");
    \}
    break;
  case "block":
  case "deny":
  case "bar":
    if(\$character) \{
      \$this."guarding:access:denied:individuals"[\$character] = Describe(\$actor);
      \$this."guarding:access:allowed:individuals"[\$character] = nil;
      EmitTo(\$actor, Describe(\$this)+" tells you that they will not allow "+\$character+" to pass.");
    \} else \{
      EmitTo(\$actor, "Format: block NAME");
    \}
    break;
  case "ask":
    if(\$this."guarding:access:allowed:individuals"[\$character]) \{
      EmitTo(\$actor, Describe(\$this)+" tells you that "+\$character+" is allowed through by order of "+\$this."guarding:access:allowed:individuals"[\$character]+".");
    \} else if (\$this."guarding:access:denied:individuals"[\$character]) \{
      EmitTo(\$actor, Describe(\$this)+" tells you that "+\$character+" is barred through by order of "+\$this."guarding:access:denied:individuals"[\$character]+".");
    \} else \{
      EmitTo(\$actor, Describe(\$this)+" tells you that there are no special orders about "+\$character+".");
    \}
    break;
  case "list":
    EmitTo(\$actor, Describe(\$this)+" lists who is allowed through:");
    if(sizeof(map_indices(\$this."guarding:access:allowed:individuals"))) \{
      EmitTo(\$actor, implode(map_indices(\$this."guarding:access:allowed:individuals"), " "));
    \} else \{
      EmitTo(\$actor, "No specific individuals.");
    \}
    if(sizeof(Arr(\$this."guarding:access:allowed:guilds"))) \{
      \$tmp = (\{ \});
      for(\$i=0;\$i\<sizeof(Arr(\$this."guarding:access:allowed:guilds"));\$i++) \{
        \$tmp += (\{ \$this."guarding:access:allowed:guilds"[\$i].shortname \});
      \}
      EmitTo(\$actor, "Guilds of "+implode(\$tmp, " "));
    \} else \{
      EmitTo(\$actor, "No specific guilds.");
    \}

    EmitTo(\$actor, Describe(\$this)+" lists who is banned from passing:");
    if(sizeof(map_indices(\$this."guarding:access:denied:individuals"))) \{
      EmitTo(\$actor, implode(map_indices(\$this."guarding:access:denied:individuals"), " "));
    \} else \{
      EmitTo(\$actor, "No specific individuals.");
    \}
    if(sizeof(Arr(\$this."guarding:access:denied:guilds"))) \{
      \$tmp = (\{ \});
      for(\$i=0;\$i\<sizeof(Arr(\$this."guarding:access:denied:guilds"));\$i++) \{
        \$tmp += (\{ \$this."guarding:access:denied:guilds"[\$i].shortname \});
      \}
      EmitTo(\$actor, "Guilds of "+implode(\$tmp, " "));
    \} else \{
      EmitTo(\$actor, "No specific guilds.");
    \}
    break;
  default:
    EmitTo(\$actor, "[OOC: Valid instructions for the guard are: \\"allow\\", \\"block\\", \\"remove\\", \\"ask\\" and \\"list\\" - all followed by the name of the character you are asking about. Except list, of course. That just lists them.]");
    break;
\}


return TRUE;
      </Core:Property>
      <Core:Property property="misc:lastdropped">
         "1250326509 StoryBuilder Nyx[slurpeeslurp]"
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave" \}), \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>:(\{ "witness:enter-into%nip:core", "lib:handler:request-authority" \}), \<Shared:Systems:Quest:NIP:lib:quest-giver\>:(\{ "react-post:evoke-iob%quest_giver", "react-post:evoke-dob%quest_giver", "lib:check_dest", "lib:quest_query", "lib:quest_init", "lib:do_quest_yes", "lib:do_quest_no", "lib:do_quest_expire", "lib:modify_quests", "setprop-post:addquest", "setprop-post:delquest", "lib:quest_config", "lib:quest_show_emits" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, \<MOVED:20080918-114107:Lib:NIP:lib:guarding\>, \<Shared:Systems:Quest:NIP:lib:quest-giver\> \})
      </Core:Property>
      <Core:Property property="nip:quest:list">
         (\{ \<Ironclaw:Quest:Quests:Halloween\> \})
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1437439274
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1250324877
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1250325248, "slurpeeslurp", "S", 1250325255, "slurpeeslurp", "S", 1250325256, "slurpeeslurp", "S", 1250325270, "slurpeeslurp", "S", 1250325280, "slurpeeslurp", "S", 1250325287, "slurpeeslurp", "S", 1250325291, "slurpeeslurp", "S", 1250325303, "slurpeeslurp", "S", 1250325315, "slurpeeslurp", "S", 1250325315, "slurpeeslurp", "S", 1250325340, "slurpeeslurp", "S", 1250325357, "slurpeeslurp", "S", 1250325379, "slurpeeslurp", "S", 1250325391, "slurpeeslurp", "S", 1250325447, "slurpeeslurp", "S", 1250325447, "slurpeeslurp", "S", 1250325570, "slurpeeslurp", "S", 1250325800, "slurpeeslurp", "E", 1250325851, "slurpeeslurp", "E", 1250326045, "slurpeeslurp", "E", 1250326134, "slurpeeslurp", "E", 1250326231, "slurpeeslurp", "E", 1250326299, "slurpeeslurp", "E", 1250326368, "slurpeeslurp", "E", 1250326408, "slurpeeslurp", "E", 1250326438, "slurpeeslurp", "E", 1250326594, "slurpeeslurp", "E", 1250326629, "slurpeeslurp", "E", 1250326828, "slurpeeslurp", "E", 1250326930, "slurpeeslurp", "E", 1250327050, "slurpeeslurp", "E", 1250327158, "slurpeeslurp", "E", 1250327185, "slurpeeslurp", "E", 1250327524, "slurpeeslurp", "E", 1250327668, "slurpeeslurp", "E", 1250327757, "slurpeeslurp", "E", 1250327853, "tonyd", "E", 1250328349, "tonyd", "E", 1250328484, "tonyd", "E", 1250328543, "tonyd", "E", 1250328675, "tonyd", "E", 1250328992, "tonyd", "E", 1250330530, "slurpeeslurp", "S", 1250330544, "slurpeeslurp", "S", 1250330545, "slurpeeslurp", "S", 1250405075, "slurpeeslurp", "E", 1250405142, "slurpeeslurp", "E", 1250405166, "slurpeeslurp", "E", 1250405177, "slurpeeslurp", "E", 1250405205, "slurpeeslurp", "E", 1250409397, "tonyd", "E", 1251061221, "balkaar", "E", 1251939276, "tonyd", "P", 1251939327, "tonyd", "P", 1251939376, "tonyd", "P", 1251939415, "tonyd", "P", 1256906390, "balkaar", "S", 1256906390, "balkaar", "S", 1309490221, "rorschakovacs", "R", 1382884156, "slurpeeslurp", "K", 1382884379, "slurpeeslurp", "E", 1382885411, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="spawn:creator">
         (\{ "slurpeeslurp", 1250324877 \})
      </Core:Property>
      <Core:Property property="trait:animal">"wolf"</Core:Property>
      <Core:Property property="trait:examine">
         "This guard is a buff stern-looking wolf, with cinnamon fur, and shoulder-length feral inky black hair which is tousled. It has dark midnight blue eyes."
      </Core:Property>
      <Core:Property property="trait:heigh">"buff"</Core:Property>
      <Core:Property property="trait:height">"buff"</Core:Property>
      <Core:Property property="trait:look">
         "This guard is a buff stern-looking wolf, with cinnamon fur, and shoulder-length feral inky black hair which is tousled."
      </Core:Property>
      <Core:Property property="trait:smells">([  ])</Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1251463696
      </Core:Property>
      <Core:Property property="trait:title">"none"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
