<object clone="/obj/properties" owner="tonyd">
  <Core:PropertyContainer>
    <Ur:UrObject urobject="OBJ(CharGen:StartStoryFrame)"/>
    <Core:PCProperties>
      <Core:Property property="auto:1:choices">
         X[S] You are a [height] [build] \$(body.trait:animal).\<br/\>
You have [furlength] [furtexture] [furcolor] \$(body.appearance:furtype).
      </Core:Property>
      <Core:Property property="auto:2:choices">
         X[S] Do you have a head of hair, in addition to your \$(body.appearance:furtype)?\<br/\>
[hashair]
\\\&nbsp;\<br/\>\\\&nbsp;\<br/\>
If you have or got hair, it would be:\<br/\>
[hairlength] [hairtype] [haircolor]
 hair, in
[hairstyle]
      </Core:Property>
      <Core:Property property="auto:3:choices">
         X[S] You have [eyeshape] [eyecolor]
 eyes, a
[noseshape]
nose, and a
[mouthshape]
 mouth with
[lipshape]
 lips.
      </Core:Property>
      <Core:Property property="auto:4:choices">
         X[S] You have
[clawlength] [clawapp]
 \$(body.appearance:clawtype) at the end of
[hands]
 hands, and
[feet]
 \$(body.appearance:feettype)
      </Core:Property>
      <Core:Property property="autoendpage">
         "facialhair"
      </Core:Property>
      <Core:Property property="choices:animallist">
         (\{ (\{ "Cat", "cat", \<IronClaw:Races:Animals:UrCat\> \}), (\{ "Wolf", "wolf", \<IronClaw:Races:Animals:UrWolf\> \}), (\{ "Bear", "bear", \<IronClaw:Races:Animals:UrBear\> \}), (\{ "Fox", "fox", \<IronClaw:Races:Animals:UrFox\> \}), (\{ "Ape", "ape", \<IronClaw:Races:Animals:UrApe\> \}), (\{ "Horse", "horse", \<IronClaw:Races:Animals:UrHorse\> \}), (\{ "Mouse or Rat", "rodent", \<IronClaw:Races:Animals:UrMouse\> \}), (\{ "Dog", "dog", \<IronClaw:Races:Animals:UrDog\> \}), (\{ "Skunk", "skunk", \<IronClaw:Races:Animals:UrSkunk\> \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:ape">
         (\{ (\{ "gorilla" \}), (\{ "orangutang" \}), (\{ "chimpanzee" \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:bear">
         (\{ (\{ "ordinary bear" \}), (\{ "black bear" \}), (\{ "brown bear" \}), (\{ "polar bear" \}), (\{ "panda" \}), (\{ "grizzly bear" \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:cat">
         (\{ (\{ "tiger" \}), (\{ "tabby" \}), (\{ "burmese" \}), (\{ "snow leopard" \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:rabbit">
         (\{ (\{ "rabbit" \}), (\{ "jackrabbit" \}), (\{ "hare" \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:rodent">
         (\{ (\{ "mouse" \}), (\{ "rat" \}), (\{ "shrew" \}), (\{ "squirrel" \}) \})
      </Core:Property>
      <Core:Property property="choices:animals:wolf">
         (\{ (\{ "wolf" \}), (\{ "timber wolf" \}), (\{ "mexican wolf", \<IronClaw:Races:Animals:UrFox\> \}), (\{ "grey wolf" \}) \})
      </Core:Property>
      <Core:Property property="choices:browshape">
         (\{ "ordinary", "thin", "arched", "bushy", "high", "narrow", "heavy" \})
      </Core:Property>
      <Core:Property property="choices:build">
         (\{ "average", "ample", "athletic", "blubbery", "bony", "brawny", "broad-shouldered", "bulky", "burly", "buxom", "chiseled", "chubby", "compact", "corpulent", "curvaceous", "delicate", "emaciated", "fat", "flabby", "full-figured", "gangling", "gaunt", "gangly", "hourglass", "hulking", "lanky", "lean", "lissome", "lithe", "meager", "medium", "muscular", "obese", "paunchy", "petite", "plump", "portly", "pudgy", "rawboned", "rock-hard", "rugged", "sculpted", "scrawny", "sickly", "sinewy", "skinny", "sleek", "slender", "slight", "slim", "spindly", "squat", "stalwart", "statuesque", "stocky", "stout", "strapping", "strong", "svelte", "thickset", "thin", "toned", "voluptuous", "waifish", "willowy", "wiry" \})
      </Core:Property>
      <Core:Property property="choices:build:bear">
         ([ "allowed":(\{ "bearish" \}), "disallowed":(\{ "lithe", "meager" \}) ])
      </Core:Property>
      <Core:Property property="choices:clawapp">
         (\{ "ordinary", "stubby", "ragged", "smooth", "trim", "rough", "jagged", "dirty", "manicured", "stubby" \})
      </Core:Property>
      <Core:Property property="choices:clawlength">
         (\{ "average", "long", "short", "stubby", "jagged" \})
      </Core:Property>
      <Core:Property property="choices:earshape">
         (\{ "ordinary", "small", "wide", "narrow", "round" \})
      </Core:Property>
      <Core:Property property="choices:eyecolor">
         (\{ "black", "jet-black", "grey", "dark grey", "light grey", "steel grey", "blue", "grey blue", "light blue", "deep blue", "brown", "dark brown", "light brown", "green", "bright green", "deep green", "sea-green", "hazel", "red", "pink", "violet", "silver", "gold", "yellow", "bloodshot" \})
      </Core:Property>
      <Core:Property property="choices:eyecolor:cat:burmese">
         ([ "disallowed":(\{ "yellow" \}) ])
      </Core:Property>
      <Core:Property property="choices:eyecolor:rabbit">
         ([ "only":(\{ "red", "brown", "black", "pink" \}) ])
      </Core:Property>
      <Core:Property property="choices:eyecolor:wolf">
         ([ "allowed":(\{ "red" \}) ])
      </Core:Property>
      <Core:Property property="choices:eyeshape">
         (\{ "ordinary", "beady", "small", "wide", "narrow", "squinty", "round" \})
      </Core:Property>
      <Core:Property property="choices:facialhair">
         (\{ "no facial hair", "a beard", "a moustache", "a goatee", "a van-dyke", "sideburns" \})
      </Core:Property>
      <Core:Property property="choices:faciallength">
         (\{ "ordinary", "long", "short", "trimmed", "scraggly", "silky", "smooth", "course", "wirey", "shaggy", "matted", "dirty", "fuzzy" \})
      </Core:Property>
      <Core:Property property="choices:features">
         (\{ (\{ (\{ "browshape" \}), "eyebrows" \}), (\{ (\{ "earshape" \}), "ears" \}) \})
      </Core:Property>
      <Core:Property property="choices:features:fox">
         ([ "allowed":(\{ (\{ (\{ "taillength", "tailtexture" \}), "tail" \}) \}) ])
      </Core:Property>
      <Core:Property property="choices:features:wolf">
         ([ "allowed":(\{ (\{ (\{ "muzzleshape" \}), "muzzle" \}) \}) ])
      </Core:Property>
      <Core:Property property="choices:feet">
         (\{ "ordinary", "stubby", "ragged", "smooth", "trim", "rough", "jagged", "dirty", "manicured", "stubby" \})
      </Core:Property>
      <Core:Property property="choices:furcolor">
         (\{ "red", "black", "brown", "white", "gray", "rust" \})
      </Core:Property>
      <Core:Property property="choices:furcolor:ape:chimpanzee">
         ([ "only":(\{ "black", "grey" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:ape:gorilla">
         ([ "only":(\{ "grey", "black", "rust" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:ape:orangutan">
         ([ "only":(\{ "orange" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:bear:black bear">
         ([ "only":(\{ "black" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:bear:brown bear">
         ([ "only":(\{ "brown", "tan" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:bear:grizzly bear">
         ([ "only":(\{ "rust", "brown" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:bear:polar bear">
         ([ "only":(\{ "white" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:cat:burmese">
         ([ "only":(\{ "black", "brown" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:cat:snow leopard">
         ([ "only":(\{ "white" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:cat:tiger">
         ([ "only":(\{ "orange", "orange and black striped", "orange and white striped" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:ferret">
         ([ "only":(\{ "white", "brown", "black", "rust" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:rabbit:hare">
         ([ "disallowed":(\{ "white", "red" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:rabbit:jackrabbit">
         ([ "only":(\{ "brown", "tan", "grey", "rust" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:rabbit:rabbit">
         ([ "disallowed":(\{ "red" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcolor:wolf:grey wolf">
         ([ "only":(\{ "grey", "dark grey", "light grey" \}) ])
      </Core:Property>
      <Core:Property property="choices:furcoloradj">
         (\{ "ordinary", "light", "dark", "bright", "dull" \})
      </Core:Property>
      <Core:Property property="choices:furlength">
         (\{ "ordinary", "long", "short", "uneven" \})
      </Core:Property>
      <Core:Property property="choices:furtexture">
         (\{ "ordinary", "scraggly", "silky", "smooth", "course", "wirey", "shaggy", "matted", "dirty", "fuzzy" \})
      </Core:Property>
      <Core:Property property="choices:haircolor">
         (\{ "red", "black", "brown" \})
      </Core:Property>
      <Core:Property property="choices:haircoloradj">
         (\{ "ordinary", "light", "dark", "bright", "dull" \})
      </Core:Property>
      <Core:Property property="choices:hairlength">
         (\{ "none", "shaved", "short", "medium", "long", "shoulder-length" \})
      </Core:Property>
      <Core:Property property="choices:hairstyle">
         (\{ "unstyled", "ponytail", "dreadlocks", "uncombed", "shaved", "crewcut" \})
      </Core:Property>
      <Core:Property property="choices:hairtype">
         (\{ "ordinary", "scraggly", "silky", "smooth", "course", "wirey", "shaggy", "matted", "dirty", "fuzzy" \})
      </Core:Property>
      <Core:Property property="choices:hands">
         (\{ "ordinary", "stubby", "ragged", "smooth", "trim", "rough", "jagged", "dirty", "manicured", "stubby" \})
      </Core:Property>
      <Core:Property property="choices:hashair">
         (\{ "yes", "no" \})
      </Core:Property>
      <Core:Property property="choices:height">
         (\{ "average", "towering", "tall", "stocky", "short", "petite", "diminutive", "tiny", "lanky" \})
      </Core:Property>
      <Core:Property property="choices:lipshape">
         (\{ "ordinary", "thin", "pouting", "curved", "pert", "sensual", "wide", "full", "uneven", "hare-lined" \})
      </Core:Property>
      <Core:Property property="choices:mouthshape">
         (\{ "ordinary", "wide", "firm", "thin", "full", "cruel" \})
      </Core:Property>
      <Core:Property property="choices:muzzleshape">
         (\{ "ordinary", "thin", "long", "narrow", "short", "flat", "blunt", "pert", "crooked", "straight", "prominent", "snub", "tiny" \})
      </Core:Property>
      <Core:Property property="choices:noseshape">
         (\{ "ordinary", "thin", "long", "narrow", "short", "flat", "blunt", "pert", "crooked", "straight", "prominent", "snub", "tiny", "button" \})
      </Core:Property>
      <Core:Property property="choices:taillength">
         (\{ "ordinary", "long", "short", "uneven" \})
      </Core:Property>
      <Core:Property property="choices:tailtexture">
         (\{ "ordinary", "scraggly", "silky", "smooth", "course", "wirey", "shaggy", "matted", "dirty", "fuzzy" \})
      </Core:Property>
      <Core:Property property="choices:tailtexture:fox">
         ([ "allowed":(\{ "bushy", "furry" \}) ])
      </Core:Property>
      <Core:Property property="descriptions:animals:fox">
         X[S] Foxes are fascinating paradoxes. Kin to wolves and other wild dogs but posessing qualities of felines as well, foxes can be stoic yet playful, swift yet cautious, and have a wide range of character depending on the individual. Slight, handsome hunters capable of adopting to almost any environment, the different families of foxes have spread throughout the lands, coexisting with the natives through cunning and quick wits. Foxes come in many colors, including gray, white, black, red or even silver. They will take sustenance from whatever is available, be it game, wild plants, or if necessary, scavenging. Adept at climbing, hiding and tracking, foxes have an almost supernatural sense of when prey or danger might be near. As any noble can attest the Rinaldi are famed through out the land for this very attribute. Though wary of combat, foxes are unafraid; they'll find a weakness in any warrior or stronghold, given time.
      </Core:Property>
      <Core:Property property="descriptions:animals:rabbit">
         X[S] Legend may not honor rabbits as brave warriors, but when all others have ended the chase, the rabbits will still be afoot.  Some say that rabbits are a lucky race, but others attruibute their good fortune to their speed and their common sense to run from dangers where others are too stubborn to give ground.  Strickly eaters of plants, rabbits are alert creatures that can go from a standstill to a blur at the slightest hint of danger.  They range from arid climates to grasslands and forest to tundra, with colors ranging from black to tawny gray to white. Their enormous ears are sensitive to sounds and changes in the wind, and their long, well-muscled legs and feet allow them to spring into a run quickly.  Rabbits have many children, and clans tend to be quite numerous -- in fact, the rabbit warrior who runs from battle may quickly return with a dozen or more of their cousins.
      </Core:Property>
      <Core:Property property="descriptions:animals:rodent">
         X[S] While close kin, mice and rats have very different natures from one another indeed. Both types of rodent are small, speedy seed-munchers. All rodents have a tendency to explore the darkness and draw trouble like a magnet. Mice tend to be meek and shy (though a few have been known to show valiance and bravery), wheras rats are, by and large, greedy and spiteful. Both races are compact in form, with tiny paws, long tails and huge eyes with good peripheral vision. Both species are rugged travelers, capable of finding refuge almost anywhere. But where mice will captain a ship, rats will be the stowaways where mice reap and store a harvest, rats will gorge themselves on it; where mice explore in earnest, rats will plot and scheme. They populate the entire world, in all nations and places; if rats ever overcame their corrupt ways and unified, they could be an unstoppable legion.
      </Core:Property>
      <Core:Property property="descriptions:animals:skunk">
         X[S] These creatures smell quite badly, making them outcasts. They are usually either black or white.
      </Core:Property>
      <Core:Property property="descriptions:animals:unknown">
         X[S] "As I cast my eyes about, I could not believe the sheer variety of shapes and sizes I beheld. Could Calabria hold so many? Surely it must be filled to bursting. Here a wolf, there an otter, passing by me the imposing form of a rhinoceros. But I am a country lad from a poor manor and my gentle eyes are too accustomed to my home in our tiny sunlit valley. Triskellian was like a mountain top in a flood -- all rush to its peak for safety."\<br/\>
-- Skapti of the Horveld Valley Clan
      </Core:Property>
      <Core:Property property="descriptions:animals:wolf">
         X[S] Powerful, noble creatures with great strength and endurance, wolves are large carnivores with senses and forms built for the hunt. Coloration varies from pure white in the high north to gray, red or black patterning in warmer, southern parts. They live in packs, tightly knit social groups with exceptionally strong family ties. It is said that even a wolf who is not a Bisclavet is a Bisclavet all the same. There are no orphans amongst the wolves. The hierarchy in a pack is critical to their existence; the leaders are a male and female who have proven their superiority over the others. Weakness is not tolerated; in a race that is driven towards dominance of their environment, those that are sick or lame are cast out of the pack. Beyond words, wolves communicate by bodily gestures such as tail and ear posture; by scent markings to define territories; and by howling, a baleful, wordless song that can convey a myriad of thoughts or emotions. The howl of the wolf is legendary; a reminder of who owns the wilderness in which it is heard.
      </Core:Property>
      <Core:Property property="merry:lib:grabchoices">
         X[M] /*    
Returns an array of start story choices, after being given a choice type, and possibly animal type and animal breed    
*/    
  
if (!\$choice) return (\{\});  
  
\$choicearray = (\{\});  
  
if(Get(\$this, "choices:" + \$choice)) \$choicearray = Get(\$this, "choices:" + \$choice);  
  
if(\$animaltype)  
\{  
  if(\$propmap = Get(\$this, "choices:" + \$choice + ":" + \$animaltype))  
  \{  
    if(\$propmap["disallowed"]) \$choicearray -= \$propmap["disallowed"];  
    if(\$propmap["allowed"]) \$choicearray += \$propmap["allowed"];  
    if(\$propmap["only"]) \$choicearray = \$propmap["only"];  
  \}  
\}  
  
if(\$animalbreed \&\& \$animaltype)  
\{  
  if(\$propmap = Get(\$this, "choices:" + \$choice + ":" + \$animaltype + ":" + \$animalbreed))  
  \{  
    if(\$propmap["disallowed"]) \$choicearray -= \$propmap["disallowed"];  
    if(\$propmap["allowed"]) \$choicearray += \$propmap["allowed"];  
    if(\$propmap["only"]) \$choicearray = \$propmap["only"];  
  \}  
\}  
  
\$choicearray = map_indices( arr_to_set( \$choicearray ));  
  
return \$choicearray;
      </Core:Property>
      <Core:Property property="page1:description">
         X[S] Welcome to the IronClaw Character Creator!\<br/\>
Azrael is currently working on new character creation code, which will go here when I'm done.\<br/\>
Everything you see here is very unfinished, so either close this window, or else click at your own risk.\<br/\>
Disclaimer: If you click on anything, and it does anything, then it's not my fault. Unless it was meant to do that. Then I claim credit. Unless it was a bad thing, even if it was meant to do that. Then I claim credit while simultaneously denying blame. Thank you.
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1072490197, "tonyd", "E", 1072490257, "tonyd", "E", 1073095747, "bradbach", "E", 1073095994, "bradbach", "E", 1073096395, "cbaker", "E", 1073096788, "cbaker", "E", 1073096846, "cbaker", "E", 1073096950, "cbaker", "E", 1073096966, "tonyd", "P", 1073097120, "cbaker", "E", 1073097372, "bradbach", "E", 1073097709, "bradbach", "E", 1073097771, "bradbach", "E", 1073097851, "bradbach", "E", 1073098733, "cbaker", "E", 1073099681, "tonyd", "P", 1073435468, "cbaker", "E", 1073439929, "cbaker", "E", 1073439954, "tonyd", "P", 1073444690, "cbaker", "E", 1073444873, "cbaker", "E", 1073444934, "cbaker", "E", 1073445345, "cbaker", "E", 1073445419, "cbaker", "E", 1073445587, "cbaker", "E", 1073445671, "cbaker", "E", 1073445752, "cbaker", "E", 1073445895, "cbaker", "E", 1073446101, "cbaker", "E", 1073446168, "cbaker", "E", 1073446228, "cbaker", "E", 1073446382, "cbaker", "E", 1073446498, "cbaker", "E", 1073446856, "cbaker", "E", 1073447885, "cbaker", "E", 1073447961, "cbaker", "E", 1073448044, "cbaker", "E", 1073448142, "cbaker", "E", 1073448248, "cbaker", "E", 1073448279, "cbaker", "E", 1073448387, "cbaker", "E", 1073448932, "cbaker", "E", 1073449031, "cbaker", "E", 1073449171, "cbaker", "E", 1073449235, "cbaker", "E", 1073512596, "cbaker", "E", 1073512856, "cbaker", "E", 1073513035, "cbaker", "E", 1073513161, "cbaker", "E", 1073513321, "cbaker", "E", 1073513491, "cbaker", "E", 1073513557, "cbaker", "E", 1073522657, "cbaker", "E", 1073523419, "cbaker", "E", 1073523572, "cbaker", "E", 1073525080, "cbaker", "E", 1073525279, "cbaker", "E", 1073525882, "cbaker", "E", 1073525948, "cbaker", "E", 1073526038, "cbaker", "E", 1073526104, "cbaker", "E", 1073526353, "cbaker", "E", 1073527028, "cbaker", "E", 1073527120, "cbaker", "E", 1073527504, "cbaker", "E", 1073527561, "cbaker", "E", 1073528159, "cbaker", "E", 1073619636, "tonyd", "P", 1073619703, "tonyd", "P", 1073619715, "tonyd", "P", 1073619789, "tonyd", "P", 1073620530, "tonyd", "P", 1073620548, "tonyd", "P", 1073620563, "tonyd", "P", 1079834433, "tonyd", "E", 1080170432, "cbaker", "E", 1080234117, "cbaker", "E", 1080234723, "cbaker", "E", 1080235287, "cbaker", "E", 1106200783, "tonyd", "E", 1106200840, "tonyd", "E", 1107991197, "tonyd", "E", 1107996563, "tonyd", "E", 1107996589, "tonyd", "E", 1107997299, "tonyd", "P", 1107997405, "tonyd", "P", 1107997428, "tonyd", "P", 1107997467, "tonyd", "P", 1107997524, "tonyd", "P", 1107997581, "tonyd", "P", 1107997792, "tonyd", "P", 1107997860, "tonyd", "P", 1107997891, "tonyd", "P", 1107997921, "tonyd", "P", 1107997946, "tonyd", "P", 1107998006, "tonyd", "P", 1107998071, "tonyd", "P", 1107998820, "tonyd", "P", 1107998971, "tonyd", "P", 1107999022, "tonyd", "P", 1107999183, "tonyd", "P", 1108001289, "tonyd", "E", 1108002625, "tonyd", "P", 1108003261, "tonyd", "E", 1108003680, "tonyd", "P", 1108003705, "tonyd", "P", 1108003718, "tonyd", "P", 1108003739, "tonyd", "P", 1108003758, "tonyd", "P", 1108003872, "tonyd", "E", 1108005050, "tonyd", "P", 1108005890, "tonyd", "P", 1108005995, "tonyd", "P", 1108006017, "tonyd", "P", 1108006095, "tonyd", "P", 1108006729, "tonyd", "P", 1108006760, "tonyd", "P", 1108007906, "tonyd", "P", 1108008015, "tonyd", "E", 1108008073, "tonyd", "E", 1108009757, "tonyd", "P", 1108010159, "tonyd", "P", 1108010643, "tonyd", "P", 1108011508, "tonyd", "P", 1108012769, "tonyd", "P", 1108012817, "tonyd", "P", 1108013189, "tonyd", "P", 1108013205, "tonyd", "P", 1108013431, "tonyd", "P", 1108013473, "tonyd", "P", 1108013557, "tonyd", "P", 1108013624, "tonyd", "P", 1108013644, "tonyd", "P", 1108019660, "tonyd", "E", 1108019713, "tonyd", "E", 1108019846, "tonyd", "E", 1108020095, "tonyd", "E", 1108265830, "tonyd", "P", 1108266511, "tonyd", "P", 1108271838, "tonyd", "E", 1108271911, "tonyd", "X", 1108272035, "tonyd", "E", 1108276655, "tonyd", "P", 1108277334, "tonyd", "P", 1110592211, "tonyd", "E", 1110615663, "tonyd", "E", 1110615851, "tonyd", "E", 1110616308, "tonyd", "E", 1110683658, "tonyd", "E", 1309489338, "rorschakovacs", "R" \})
      </Core:Property>
      <Core:Property property="startpage">
         "chooseanimal"
      </Core:Property>
      <Core:Property property="theatre_id">"IC"</Core:Property>
      <Core:Property property="title">
         "IronClaw Character Generator"
      </Core:Property>
      <Core:Property property="xtra:state:chooseanimal">
         X[S] \\\<!-- This page is where the user selects what type of animal they wish their character to be. E.G. Cat --\\\>
\<div id="bigbox"\>
\$[if(Get(\$this, "descriptions:animals:" + \$body."trait:animaltype"))                                                                 
\{                                                                 
  \$blurb = Get(\$this, "descriptions:animals:" + \$body."trait:animaltype");                                                                 
\} else \{                                                                 
  \$blurb = Get(\$this, "descriptions:animals:unknown");                                                                 
\}]
\$(blurb)
\</div\>
\<div id="castlist"\>
  What type of animal are you?
  \<zform actbody="\$(body)"\>
    \<select NAME="animaltype" SIZE="1" onchange="submit()"\>
      \<option SELECTED="1"\>\{? equal \| \$(body.trait:animaltype) \| unknown \| \| \<capitalize what="\$(body.trait:animaltype)"/\> \}\</option\>
      \$[\$counter = 0;]
      \<for var="thisanimal" val="\$(this.choices:animallist)"\>
        \$[\$counter++;                                                               
        \$animalname = \$thisanimal[0];]
        \<option value="\$(counter)"\>\$(animalname)\</option\>
      \</for\>
    \</select\>
    \<action\>
      \$[\$actbody."trait:animal" = "unknown";                                                                  
        \$actbody."trait:animaltype" = \$this."choices:animallist"[Int(\$animaltype)-1][1];                                                               
        \$actbody."base:urparent" = \$this."choices:animallist"[Int(\$animaltype)-1][2];]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<br/\>
\{? equal \| \$(body.trait:animaltype) \| unknown \|  \|
\<zact actbody="\$(body)"\>
Continue
  \<action\>
    \$[\$actbody."chargen:state" = "choosebreed";]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\}
\</div\>
      </Core:Property>
      <Core:Property property="xtra:state:choosebreed">
         X[S] \\\<!-- This page is where the user selects what specific breed of animal they wish their character to be. E.G. Panther --\\\>
\\\<!-- Check that we have breed options for this type of animal, otherwise just set the breed to be the same as the animal type --\\\>
\$[if(!(\$breedlist = Get(\$this, "choices:animals:" + \$body."trait:animaltype")))  
\{  
  \$body."trait:animal" = \$body."trait:animaltype";  
  \$body."chargen:state" = "auto";  
\}]
\<div id="bigbox"\>
\$(this.page1:description)
Describing stuff\<br/\>
\$(name)
\$(dat)
\$(body)
\$(body.trait:animal)
\$(body.trait:animaltype)
\$(body.base:urparent)
\<br/\>Finished describing stuff
\</div\>
\<div id="castlist"\>
\{? \| \$(breedlist) \|
Please choose a breed of \$(body.trait:animaltype):\<br/\>
You are a
  \<zform actbody="\$(body)" actbreedlist="\$(breedlist)"\>
    \<select NAME="animalbreed" SIZE="1" onchange="submit()"\>
      \<option SELECTED="1"\>\{? equal \| \$(body.trait:animal) \| unknown \| \| \<capitalize what="\$(body.trait:animal)"/\> \}\</option\>
      \$[\$counter=-1;]
      \<for var="thisanimal" val="\$(breedlist)"\>
        \$[\$counter++;                                                               
          \$animalname = \$thisanimal[0];]
        \<option value="\$(counter)"\>\$(animalname)\</option\>
      \</for\>
    \</select\>
    \<action\>
      \$[\$actbody."trait:animal" = \$actbreedlist[Int(\$animalbreed)][0];                                                             
        if(sizeof(\$actbreedlist[Int(\$animalbreed)]) \> 1)                                                             
        \{                                                             
          \$actbody."base:urparent" = \$actbreedlist[Int(\$animalbreed)][1];                                                             
        \}  
        \$actbody."chargen:state" = "auto";]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\<br/\>
\|
\<redirect propob="\$(this)" characterref="\$(body)"/\>
\<meta HTTP-EQUIV="Refresh" CONTENT="0"/\>
\}
\</div\>
      </Core:Property>
      <Core:Property property="xtra:state:end">
         X[S] \\\<!-- This is the final page of the character generator --\\\>
\<div id="bigbox"\>
Congratulations, your character is now fully created\<sbr/\>
Please enjoy our game!
\</div\>
\<div id="castlist"\>
\<a href="http://ic.s7.skotos.net/SAM/Prop/IronClaw:Theatre:Web:Theatre/Index"\>Click here to return to the Character Login Screen\</a\>\<br/\>
\<zact actbody="\$(body)"\>
FIRST
  \<action\>
    \$[\$actbody."CharGen:State" = "auto";   
      \$actbody."CharGen:State:auto" = Int(\$autoNumber) + 1;]
    \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
  \</action\>
\</zact\>
\<sbr/\>
\</div\>
      </Core:Property>
      <Core:Property property="xtra:state:facialhair">
         X[S] \\\<!-- This is where the user chooses any facial hair
If they are female, it jumps to the next page automagically
 --\\\>
\{? equal \| \$(body.base:gender) \| 2 \|
\$[Set(\$body, "chargen:state", "features");]
\<redirect propob="\$(this)" characterref="\$(body)"/\>
\<meta HTTP-EQUIV="Refresh" CONTENT="0"/\>
\}
\<div id="bigbox"\>
Facial Hair Options
\<br/\>
Please choose your facial features.
\</div\>
\<div id="castlist"\>
  \$[\$counter = 0; \$choices = Call(\$this, "list-choices", \$choices: "You have [facialhair]. It is [faciallength].");]
  \<zform actbody="\$(body)" actchoices="\$(choices)" actnumber="\$(autoNumber)"\>
    \<for var="thisChoiceLine" val="\$(choices)"\>
      \$(thisChoiceLine.0)
      \$[if(sizeof(\$thisChoiceLine) \> 1)\{ \$myVar = TRUE; \$counter++; \} else \{ \$myVar = FALSE; \}]
      \{? \| \$[sizeof(\$thisChoiceLine) \> 1] \|
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisChoiceLine[1], \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \{? \| \$[Get(\$body, "appearance:" + \$thisChoiceLine[1])] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisChoiceLine[1])]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
\|\}
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$list = (\{ \});  
for(\$i = 0; \$i \< sizeof(\$actchoices); \$i++)  
\{  
  if(sizeof(\$actchoices[\$i])\>=2)  
  \{  
    \$list += (\{ \$actchoices[\$i][1] \});  
  \}  
\}  
                       
switch (sizeof(\$list)) \{  
    case 20:  
      Set(\$actbody, "appearance:" + \$list[19], \$counter20);  
    case 19:  
      Set(\$actbody, "appearance:" + \$list[18], \$counter19);  
    case 18:  
      Set(\$actbody, "appearance:" + \$list[17], \$counter18);  
    case 17:  
      Set(\$actbody, "appearance:" + \$list[16], \$counter17);  
    case 16:  
      Set(\$actbody, "appearance:" + \$list[15], \$counter16);  
    case 15:  
      Set(\$actbody, "appearance:" + \$list[14], \$counter15);  
    case 14:  
      Set(\$actbody, "appearance:" + \$list[13], \$counter14);  
    case 13:  
      Set(\$actbody, "appearance:" + \$list[12], \$counter13);  
    case 12:  
      Set(\$actbody, "appearance:" + \$list[11], \$counter12);  
    case 11:  
      Set(\$actbody, "appearance:" + \$list[10], \$counter11);  
    case 10:  
      Set(\$actbody, "appearance:" + \$list[9], \$counter10);  
    case 9:  
      Set(\$actbody, "appearance:" + \$list[8], \$counter9);  
    case 8:  
      Set(\$actbody, "appearance:" + \$list[7], \$counter8);  
    case 7:  
      Set(\$actbody, "appearance:" + \$list[6], \$counter7);  
    case 6:  
      Set(\$actbody, "appearance:" + \$list[5], \$counter6);  
    case 5:  
      Set(\$actbody, "appearance:" + \$list[4], \$counter5);  
    case 4:  
      Set(\$actbody, "appearance:" + \$list[3], \$counter4);  
    case 3:  
      Set(\$actbody, "appearance:" + \$list[2], \$counter3);  
    case 2:  
      Set(\$actbody, "appearance:" + \$list[1], \$counter2);  
    case 1:  
      Set(\$actbody, "appearance:" + \$list[0], \$counter1);  
    default:  
      Set(\$actbody, "chargen:state", "features");  
      break;  
\}]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\</div\>
      </Core:Property>
      <Core:Property property="xtra:state:features">
         X[S] \\\<!-- This is where the user chooses any remaining options --\\\>
\<div id="bigbox"\>
PAGE FIVE! REMAINING OPTIONS
\<br/\>
Look description:
\$(body.trait:look)\<br/\>
Examine description:
\$(body.trait:examine)\<br/\>
\</div\>
\<div id="castlist"\>
Features:
    \$[/*\$featurearray = (\{ (\{ (\{ "taillength", "tailtexture" \}), "foxtail" \}) \});*/  
\$featurearray = Call(this, "grabchoices", \$choice: "features", \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");  
      \$counter = 0;]
  \<zform actbody="\$(body)" actfeatures="\$(featurearray)"\>
    You have:\<br/\>
    \<for var="thisfeature" val="\$(featurearray)"\>
      \<for var="thisoption" val="\$[\$thisfeature[0]]"\>
        \$[\$choicearray = Call(this, "grabchoices", \$choice: \$thisoption, \$animaltype: \$body."trait:animaltype", \$animalbreed: \$body."trait:animal");]
        \<select NAME="counter\$[Str(\$counter)]" SIZE="1"\>
          \$[if(Get(\$body, "appearance:" + \$thisoption)) \{ \$knowsoption = 1; \} else \{ \$knowsoption = nil; \}]
          \{? \| \$[Get(\$body, "appearance:" + \$thisoption)] \|
            \<option SELECTED="1"\>\$[Get(\$body, "appearance:" + \$thisoption)]\</option\>
          \|
            \<option\>ordinary\</option\>
          \}
          \<for var="thisvar" val="\$(choicearray)"\>
            \<option\>\$(thisvar)\</option\>
          \</for\>
        \</select\>
        \$[\$counter++;]
      \</for\>
      \$[\$thisfeature[1]]\<br/\>
    \</for\>
    \<input type="submit" value="SUBMIT"/\>
    \<action\>
      \$[\$actbody."appearance:browshape" = \$browshape;  
        \$actbody."appearance:earshape" = \$earshape;  
\$list = (\{ \});  
for(\$i = 0; \$i \< sizeof(\$actfeatures); \$i++)  
\{  
  for(\$j = 0; \$j \< sizeof(\$actfeatures[\$i][0]); \$j++)  
  \{  
    \$list += (\{ \$actfeatures[\$i][0][\$j] \});  
  \}  
\}  
/*if(sizeof(\$list) \> 0)  
\{  
  Set(\$actbody, "appearance:" + \$list[0], \$counter0);  
\}*/  
        
switch (sizeof(\$list)-1) \{  
    case 20:  
      Set(\$actbody, "appearance:" + \$list[20], \$counter20);  
    case 19:  
      Set(\$actbody, "appearance:" + \$list[19], \$counter19);  
    case 18:  
      Set(\$actbody, "appearance:" + \$list[18], \$counter18);  
    case 17:  
      Set(\$actbody, "appearance:" + \$list[17], \$counter17);  
    case 16:  
      Set(\$actbody, "appearance:" + \$list[16], \$counter16);  
    case 15:  
      Set(\$actbody, "appearance:" + \$list[15], \$counter15);  
    case 14:  
      Set(\$actbody, "appearance:" + \$list[14], \$counter14);  
    case 13:  
      Set(\$actbody, "appearance:" + \$list[13], \$counter13);  
    case 12:  
      Set(\$actbody, "appearance:" + \$list[12], \$counter12);  
    case 11:  
      Set(\$actbody, "appearance:" + \$list[11], \$counter11);  
    case 10:  
      Set(\$actbody, "appearance:" + \$list[10], \$counter10);  
    case 9:  
      Set(\$actbody, "appearance:" + \$list[9], \$counter9);  
    case 8:  
      Set(\$actbody, "appearance:" + \$list[8], \$counter8);  
    case 7:  
      Set(\$actbody, "appearance:" + \$list[7], \$counter7);  
    case 6:  
      Set(\$actbody, "appearance:" + \$list[6], \$counter6);  
    case 5:  
      Set(\$actbody, "appearance:" + \$list[5], \$counter5);  
    case 4:  
      Set(\$actbody, "appearance:" + \$list[4], \$counter4);  
    case 3:  
      Set(\$actbody, "appearance:" + \$list[3], \$counter3);  
    case 2:  
      Set(\$actbody, "appearance:" + \$list[2], \$counter2);  
    case 1:  
      Set(\$actbody, "appearance:" + \$list[1], \$counter1);  
    case 0:  
      Set(\$actbody, "appearance:" + \$list[0], \$counter0);  
    default:  
      break;  
\}  
        \$actbody."chargen:state" = "runscripts";]
      \<redirect propob="\$(this)" characterref="\$(actbody)"/\>
    \</action\>
  \</zform\>
\</div\>
      </Core:Property>
      <Core:Property property="xtra:state:runscripts">
         X[S] \\\<!-- This is where any merry scripts we need to run are run --\\\>
\$[\$body."chargen:state" = "end";  
  
/* Update the character description */  
Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc");  
  
/* Set the character starting room */  
\$virtual_room = Spawn(\$\{Allegory:Setting:Rinascita:Buildings:Southeast:Tavern:SecondFloor:Room01\});  
\$body."virtualhome:home" = \$virtual_room;
\$body."base:environment" = \$virtual_room;]
\<redirect propob="\$(this)" characterref="\$(body)"/\>
      </Core:Property>
      <Core:Property property="xtra:stylesheet">
         X[S] \<style type="text/css"\>
    A:link, A:visited, A:active \\\{ text-decoration: none \\\}
    body \\\{
      padding: 0px;
      background: black;
           \\\}
    #main \\\{
      background: black url(http://www.moonice.net/bbach/splash.jpg);
      position: absolute;
      left: 0px; top: 0px;
      width: 640px;
      height: 390px;
      border: none;
      font-size: 14px;
           \\\}
    #castlist \\\{
      position:absolute; right: 10px; top:20px;
      border: groove 2px;
      padding: 4px;
      width: 210px;
      height: 350px;
      background: #404040;
      color: yellow;
      font-family: cursive;
    \\\}
    #infobox \\\{
      position:absolute; right: 20px; top:180px;
      border: groove 2px;
      padding: 4px;
      width: 240px;
      height: 160px;
      background: #404040;
      color: yellow;
      font-family: cursive;
    \\\}
    #bigbox \\\{
      position:absolute; left: 10px; bottom:10px;
      border: groove 2px;
      padding: 4px;
      width: 370px;
      height: 270px;
      background: #404040;
      color: yellow;
      font-family: cursive;
    \\\}
    \$(cast) \\\{
    \</style\>
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
