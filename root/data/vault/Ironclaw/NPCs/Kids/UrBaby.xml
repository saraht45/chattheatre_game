<object clone="/base/obj/thing" owner="necate">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="0.5" density="0.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="true" tight="false" capacity="1" maxweight="1" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="baby"/>
            <Base:SName sname="infant"/>
            <Base:SName sname="persian"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="infants"/>
            <Base:PName pname="babies"/>
            <Base:PName pname="persians"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:build) $(this.trait:animal) $(this.trait:animalage)
          </Base:Description>
          <Base:Description type="examine">
             This is a $(this.appearance:height) $(this.appearance:build) $(this.trait:animal) $(this.trait:animalage) covered in $(this.appearance:furcolor) fur with {? equal | $(this.appearance:haircoverage) | bald |  a bald head. | {? equal | $(this.appearance:hairtype) | ordinary |  |    $(this.appearance:hairtype),    }   $(this.appearance:haircolor) hair.} {? equal | $(this.appearance:haircoverage) | bald |  a bald head. | {? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength), } {? equal | $(this.appearance:hairtype) | ordinary |  |    $(this.appearance:hairtype),    } $(this.appearance:haircolor) hair}{? equal | $(this.appearance:hairstyle) | ordinary ||, in <describe-prop this="$(this)" what="appearance:hairstyle"/>  hairstyle}.  <capitalize what="$(this.appearance:eyecolor)"/> eyes return your {? equal | $(this.appearance:eyebrowshape) | ordinary |  gaze.| gaze from beneath $(this.appearance:eyebrowshape) eyebrows.    } You also note her {? equal | $(this.appearance:noseshape) | ordinary |  |    $(this.appearance:noseshape) nose,    } {? equal | $(this.appearance:lipshape) | ordinary |  |    $(this.appearance:lipshape) $(this.appearance:lipcolour) lips,    } {? equal | $(this.appearance:mouthshape) | ordinary |  |    $(this.appearance:mouthshape) mouth,    } {? equal | $(this.appearance:jawshape) | ordinary |  |    $(this.appearance:jawshape) jaw,    }  {? equal | $(this.appearance:cheekshape) | ordinary | plain cheeks  |    $(this.appearance:cheekshape) cheeks,    }  and $(this.appearance:earshape) ears.
          </Base:Description>
          <Base:Description type="look">
             This is a $(this.appearance:height) $(this.appearance:build) $(this.trait:animal) $(this.trait:animalage) covered in $(this.appearance:furcolor) fur with {? equal | $(this.appearance:haircoverage) | bald |  a bald head. | {? equal | $(this.appearance:hairtype) | ordinary |  |    $(this.appearance:hairtype),    }   $(this.appearance:haircolor) hair.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="appearance:build">
         "small"
      </Core:Property>
      <Core:Property property="merry:react-post:name-dob">
         X[M] if(\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo")\{
if(this."trait:name") \{
  EmitTo(\$actor, Describe(this)+" already has a name. Sheesh.");
  return TRUE;
\}

\$name = capitalize(\$evoke[1..strlen(\$evoke)-2]);
/* If we have any punctuation at the end of the command, remove it */
if(!((\$name[strlen(\$name)-1] \>= 97) \&\& (\$name[strlen(\$name)-1] \<= 122)) \&\& !((\$name[strlen(\$name)-1] \>= 65) \&\& (\$name[strlen(\$name)-1] \<= 90)))
  \$name = \$name[0..strlen(\$name)-2];
/* Only take the first word of the name */
sscanf(\$name, "%s %*s", \$name);

/* Tell the actor that this was successful */
EmitTo(\$actor, Describe(this)+" will now respond to "+\$name+".");

/* Set the name */
this."trait:name" = \$name;
/* set the sname */
Set(this, "details:default:sname:"+lower_case(\$name), 1);


return TRUE;
\} else \{return FALSE;\}
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] /* Record what room the actor is in */   
\$room = \$actor."Base:environment";   
   
/* Check if the actor is allowed to pick up the kitten */   
  /* check if \$actor is the baby's parent */   
if(\$actor == \$this."trait:ownerone" \|\| \$actor == \$this."trait:ownertwo") \{   
  /* if the actor is allowed to pick up the kitten */   
  /* tell the actor that they picked up the kitten */   
  /* tell the room that the actor picked up the kitten */   
  EmitTo(\$actor, "You pick up "+Describe(\$this)+".");   
  EmitIn(\$room, Describe(\$actor)+" picks up "+ Describe(\$this)+".", \$actor);   
  \$this."base:environment" = \$actor;   
   
\} else \{   
  /* the actor is not the kittens mother */   
   
  /* if the kitten is already being held by someone */   
  if(\$this."base:environment"."base:volition") \{   
    /* use the normal give/take/offer code */   
    return TRUE;   
  \} else \{   
    /* tell the actor that they can't take the kitten */   
    /* tell the room that the actor is a kidnapper! */   
    EmitTo(\$actor, "That baby is not yours!");   
    EmitIn(\$room, Describe(\$actor)+" attempts to take "+ Describe(\$this)+".", \$actor);   
  \}   
\}   
   
/* return false, so that the actor doesn't see a message about not being allowed to pick up the kitten */   
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* check if we are the mother, or if we are carrying the baby */
if((\$actor != \$this."base:environment") \&\& (\$actor != \$this."trait:ownerone" \|\| \$actor != \$this."trait:ownertwo"))
\{
  /* we aren't allowed to give commands */
  EmitTo(\$actor, "You cannot control "+Describe(\$this)+" unless you are carrying "+\$this."base:objective"+".");
  return FALSE;
\}

if(\$evoke) \{

  /* If the actor gave a command */
  \$command = \$evoke[1..strlen(\$evoke)-2];

  /* If the command is cry */
  if(\$command == "cry") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" lets out a series of small whimpers before breaking into loud sobs.");
    \} else if(\$command == "smile") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" kicks " + \$this."base:possessive" + " legs and smiles giddily.");
    \} else if(\$command == "hold-me") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" cries for someone to hold " + \$this."base:objective" + ".");
    \} else if(\$command == "pout") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" extends " + \$this."base:possessive" + " lower lip at " + Describe(\$actor) + " and childishly pouts.");
  \} else if(\$command == "sleep") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" sleeps snugly in " + \$actor."base:possessive" + " arms.", \$actor);
    EmitTo(\$actor, Describe(\$this, nil, \$actor) + " sleeps snugly in your arms.");
    \} else if(\$command == "wiggle") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" adorably wiggles in " + \$actor."base:possessive" + " arms.");
    \} else if(\$command == "scamper") \{
    EmitIn(\$actor."base:environment", Describe(\$this)+" playfully tries to scamper out of " + \$actor."base:possessive" + " arms.");
  \} else if(\$command == "mommy") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " cries for " + \$this."base:possessive" + " mommy.");
  \} else if(\$command == "adorablesmile") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " smiles adorably.");
  \} else if(\$command == "daddy") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " cries for " + \$this."base:possessive" + " daddy.");
  \} else if(\$command == "hungry") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " whines for food.");
  \} else if(\$command == "no-kiss") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" turns it's head as " +Describe(\$actor) +" tries to kiss " + \$this."base:possessive" +" cheek.");
  \} else if(\$command == "blow-kiss") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" blows kisses at people passing by.");
  \} else if(\$command == "kiss-cheek") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" adorably pecks " + Describe(\$actor) +"'s cheek.");
  \} else if(\$command == "coo") \{
    EmitIn(\$actor."base:environment", Describe(\$this) + " makes soft cooing sounds.");
  \} else if(\$command == "play") \{
    EmitIn(\$actor."base:environment", Describe(\$this) + " gazes entertainedly at "+ \$actor."base:objective" + " as " + \$actor."base:pronoun" + " makes silly faces.");
  \} else if(\$command == "peekaboo") \{
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" giggles as " + Describe(\$actor) + " repeatedly hides and reveals " + \$actor."base:possessive" + " face.");
  \} else if(\$command == "giggle") \{
    switch(random(4)) \{
      case 3:
        EmitTo(\$actor, Describe(\$this)+" giggles mirthfully as you tickle "+\$this."base:objective"+".");
        EmitIn(\$actor."base:environment", Describe(\$this)+" giggles mirthfully as " + Describe(\$actor) + " tickles "+\$this."base:objective"+".", \$actor);
        break;
      case 2:
        EmitIn(\$actor."base:environment", Describe(\$this)+" giggles happily.");
        break;
      case 1:
        EmitIn(\$actor."base:environment", Describe(\$this)+" attempts to stifle a giggle.");
        break;
      case 0:
        EmitIn(\$actor."base:environment", Describe(\$this)+" lets out gleeful giggles.");
        break;
      default:
        break;
    \}
  \} else if(\$command == "yawn") \{
    switch(random(4)) \{
      case 3:
        EmitIn(\$actor."base:environment", Describe(\$this)+" yawns sleepily.");
        break;
      case 2:
        EmitIn(\$actor."base:environment", Describe(\$this)+" yawns and stretches contently.");
        break;
      case 1:
        EmitIn(\$actor."base:environment", Describe(\$this)+" attempts to stifle a yawn unsuccessfully.");
        break;
      case 0:
        EmitIn(\$actor."base:environment", Describe(\$this)+" hiccups mid-yawn causing it to giggle and blink wakefully.");
        break;
      default:
        break;
    \}
  \} else \{
  EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: adorablesmile, blow-kiss, coo, cry, daddy, giggle, hold-me, hungry, kiss-cheek, mommy, no-kiss, peekaboo, play, pout, scamper, sleep, smile, wiggle and yawn.");
  \}

\} else \{

  /* If the actor did NOT give a command */
   EmitTo(\$actor, "You must include a command you want followed. Such as: control "+Describe(\$this, nil, \$actor)+ " 'cry'.");

\}
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:object">
         X[M] Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);   
Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replacesname", \$object: this);   
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1126228836, "tonyd", "E", 1126229253, "tonyd", "E", 1126229536, "tonyd", "E", 1126229717, "tonyd", "E", 1126229772, "tonyd", "E", 1126230509, "lunamoon", "E", 1126230896, "tonyd", "E", 1126240251, "roccon", "E", 1126241256, "tonyd", "E", 1126243405, "tonyd", "E", 1126243442, "tonyd", "E", 1126245888, "lunamoon", "P", 1126246183, "lunamoon", "P", 1126246254, "tonyd", "P", 1126246307, "tonyd", "P", 1126246504, "tonyd", "P", 1126247777, "lunamoon", "P", 1126247816, "lunamoon", "P", 1126248145, "lunamoon", "P", 1126248476, "tonyd", "P", 1126248595, "lunamoon", "P", 1126248875, "lunamoon", "P", 1126249175, "tonyd", "P", 1126499693, "lunamoon", "P", 1126499772, "lunamoon", "P", 1126499893, "lunamoon", "P", 1126500002, "lunamoon", "P", 1126500073, "lunamoon", "P", 1126500108, "lunamoon", "P", 1126500235, "lunamoon", "P", 1126500349, "lunamoon", "P", 1126500378, "lunamoon", "P", 1126500547, "lunamoon", "P", 1126500677, "lunamoon", "P", 1126501400, "lunamoon", "P", 1126501443, "lunamoon", "P", 1126501519, "lunamoon", "P", 1127267897, "lunamoon", "P", 1127267949, "lunamoon", "P", 1127268008, "lunamoon", "P", 1127269597, "lunamoon", "P", 1128055683, "lunamoon", "P", 1128055712, "lunamoon", "P", 1128128864, "lunamoon", "P", 1128129153, "lunamoon", "P", 1128129183, "lunamoon", "P", 1128129234, "lunamoon", "P", 1128129300, "lunamoon", "P", 1128129374, "lunamoon", "P", 1128129711, "lunamoon", "P", 1128129756, "lunamoon", "P", 1131060559, "tunk_bodin", "X", 1131061213, "tunk_bodin", "X", 1138238189, "lunamoon", "E", 1147751630, "tunk_bodin", "X", 1149323426, "lunamoon", "K", 1149323676, "lunamoon", "K", 1149360561, "lunamoon", "E", 1149362026, "lunamoon", "P", 1149362121, "lunamoon", "P", 1149362149, "lunamoon", "P", 1149362323, "lunamoon", "P", 1172538751, "necate", "E", 1172538819, "necate", "E", 1172539309, "necate", "E", 1172539353, "necate", "R", 1172539392, "necate", "E", 1172539400, "necate", "E", 1172539411, "necate", "E", 1172539571, "necate", "K", 1172542172, "necate", "K", 1172542194, "necate", "K", 1172542262, "necate", "K", 1172542342, "necate", "E", 1172542492, "necate", "K", 1172542563, "necate", "K", 1172542639, "necate", "K", 1172542658, "necate", "E", 1172542722, "necate", "E", 1172544929, "necate", "E" \})
      </Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="trait:animal">
         "persian"
      </Core:Property>
      <Core:Property property="trait:animalage">
         "kitten"
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
