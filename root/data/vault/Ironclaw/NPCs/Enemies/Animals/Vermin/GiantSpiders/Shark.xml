<object clone="/base/obj/thing" owner="meandmine">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPCs:Enemies:UrNPCFighter-old)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shark"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sharks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="giant"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:size) $(this.trait:type) shark {? | $(this.npc:is_dead) | corpse }
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:size) $(this.trait:type) predatory, saltwater fish spanning approximately twenty feet in length. It boasts countershading along it's streamlined, torpedo-shaped body, and sports a robust conical snout, a set of beady, black eyes, three main fins, and a large, fear-inspiring mouth filled to the brim with serrated teeth. {? | $(this.npc:is_dead) | This magnificent beast of the water is dead.} {? | $(this.trait:meat) | All edible parts of the body have been removed.} {? | $(this.trait:teeth) | Some of the shark's teeth are gone missing too.} {? | $(this.trait:skinned) | The precious skin of the shark has also been removed.}
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:size) $(this.trait:type)predatory, saltwater fish spanning approximately twenty feet in length. It's body displays countershading, giving it a mottled appearance. {? | $(this.npc:is_dead) | This magnificent beast of the water is dead.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="streamlined"/>
          <Base:Adjective adjective="torpedo-shaped"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the torpedo-shaped body of the  $(this.trait:size) $(this.trait:type) shark
          </Base:Description>
          <Base:Description type="examine">
             The body of the  $(this.trait:size) $(this.trait:type) shark is streamlined and torpedo-shaped, enabling it to easily swim through the water. It features three main fins; one dorsal, one caudal, and a pair of pectoral fins which aid it in maneuvering.{? | $(this.trait:meat) | Most of the meat has been cut off from the shark.}
          </Base:Description>
          <Base:Description type="look">
             The body of the  $(this.trait:size) $(this.trait:type) shark is streamlined and torpedo-shaped, enabling it to easily swim through the water.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="countershading" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shade"/>
            <Base:SName sname="shading"/>
            <Base:SName sname="countershading"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="shades"/>
            <Base:PName pname="shadings"/>
            <Base:PName pname="countershadings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="grey"/>
          <Base:Adjective adjective="mottled"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the countershading on the great white shark
          </Base:Description>
          <Base:Description type="examine">
             The torpedo-shaped body of the  $(this.trait:size) $(this.trait:type) shark displays countershading, in which the fish has a white underside and a grey dorsal area. This mottled coloration acts as a deterrent against prey by making the shark's outline blend with the sea from above the water, while exposing a minimal silhouette of sunlight from below the water.
          </Base:Description>
          <Base:Description type="look">
             The torpedo-shaped body of the  $(this.trait:size) $(this.trait:type) shark displays a white underside and a grey dorsal area, giving the fish a mottled appearance.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="beady"/>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="set"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's {? | $(this.trait:corpse) |lifeless, }beady, black eyes
          </Base:Description>
          <Base:Description type="examine">
             A set of {? | $(this.trait:corpse) |lifeless, }beady, black eyes sit above, and on either side of, the  $(this.trait:size) $(this.trait:type) shark's robust, conical snout, enabling it to see.
          </Base:Description>
          <Base:Description type="look">
             A set of {? | $(this.trait:corpse) |lifeless, }beady, black eyes sit above, and on either side of, the  $(this.trait:size) $(this.trait:type) shark's robust, conical snout.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fin-caudal" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fin"/>
            <Base:SName sname="tail"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fins"/>
            <Base:PName pname="tails"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="caudal"/>
          <Base:Adjective adjective="third"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's caudal fin
          </Base:Description>
          <Base:Description type="examine">
             A crescent-shaped caudal fin trails from the back end of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body, assisting it with movement through the water.
          </Base:Description>
          <Base:Description type="look">
             A crescent-shaped caudal fin trails from the back end of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fin-dorsal" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="dorsal"/>
          <Base:Adjective adjective="first"/>
          <Base:Adjective adjective="semi-triangular"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's dorsal fin
          </Base:Description>
          <Base:Description type="examine">
             A semi-triangular shaped dorsal fin juts upward from the mid-back of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body to poke above the surface of the water.
          </Base:Description>
          <Base:Description type="look">
             A semi-triangular shaped dorsal fin juts upward from the mid-back of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body to poke above the surface of the water.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fin-pectoral" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="pectoral"/>
          <Base:Adjective adjective="second"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's pectoral fins
          </Base:Description>
          <Base:Description type="examine">
             A pair of pectoral fins hang from the front sides of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body. They aid the fish in general maneuverings and assist with balance.
          </Base:Description>
          <Base:Description type="look">
             A pair of pectoral fins hang from the front sides of the  $(this.trait:size) $(this.trait:type) shark's torpedo-shaped body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fear-inspiring"/>
          <Base:Adjective adjective="large"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's large mouth
          </Base:Description>
          <Base:Description type="examine">
             A large, fear inspiring mouth filled to the brim with three rows of sharp, serrated teeth.
          </Base:Description>
          <Base:Description type="look">
             A large, fear inspiring mouth filled to the brim with sharp, serrated teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="snout" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="snout"/>
            <Base:SName sname="nose"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="snouts"/>
            <Base:PName pname="noses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="conical"/>
          <Base:Adjective adjective="large"/>
          <Base:Adjective adjective="robust"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's robust, conical snout
          </Base:Description>
          <Base:Description type="examine">
             A robust and large, conical snout protrudes from the menacing face of the  $(this.trait:size) $(this.trait:type) shark.
          </Base:Description>
          <Base:Description type="look">
             A robust, conical snout protrudes from the face of the  $(this.trait:size) $(this.trait:type) shark.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="teeth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tooth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="teeth"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="serrated"/>
          <Base:Adjective adjective="sharp"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the  $(this.trait:size) $(this.trait:type) shark's serrated teeth
          </Base:Description>
          <Base:Description type="examine">
             Three rows of sharp, serrated teeth fill the large mouth of the  $(this.trait:size) $(this.trait:type) shark. As teeth are lost, worn, or broken down, they rotate and are replaced by new ones, so a sharp bite is always ensured. {? | $(this.trait:teeth) | Many of the teeth have been forcibly removed from this once magnificent creature.}
          </Base:Description>
          <Base:Description type="look">
             Three rows of sharp, serrated teeth fill the large mouth of the  $(this.trait:size) $(this.trait:type) shark.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="combat:armor:rating">
         15
      </Core:Property>
      <Core:Property property="export:combat:actions">
         400
      </Core:Property>
      <Core:Property property="export:combat:actions:current">
         400
      </Core:Property>
      <Core:Property property="export:combat:armor:penalty">
         0
      </Core:Property>
      <Core:Property property="export:combat:armor:rating">
         15
      </Core:Property>
      <Core:Property property="export:combat:damage">
         0
      </Core:Property>
      <Core:Property property="export:combat:fatigue">
         0
      </Core:Property>
      <Core:Property property="export:combat:naturalweapon">
         \<Ironclaw:Lib:Combat:Weapons:Enemies:SharkBite\>
      </Core:Property>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "emoting":\<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "fighting-fake-abc":\<IC:Lib:NIP:lib:fighting-fake-abc\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "movement":\<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:(\{ "lib:core_movement_exit" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave", "lib:handler:emoting:preparse" \}), \<IC:Lib:NIP:lib:fighting-fake-abc\>:(\{ "act:nip/die", "lib:fighting-fake-abc:decide", "lib:fight_loop", "lib:choose_target", "react:command-dob%nip-fighting", "react:command-iob%nip-fighting", "lib:fight_command", "act-pre:combat_getattacked%nip-fighting", "act-pre:combat_getattacked_preempt%nip-fighting", "witness:enter-into%nip-fighting" \}), \<Lib:NIP:lib:spawn-control\>:(\{ "act:stop" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, \<IC:Lib:NIP:lib:fighting-fake-abc\>, \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, \<Lib:NIP:lib:spawn-control\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:movement:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:spawn:area">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "fighting-fake-abc:DECIDE", "movement:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:attack-everyone">
         1
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:attack-when-provoked">
         1
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:block-message">
         "(npc) blocks (actor) from leaving."
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:block-runners">
         1
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:delay-max">
         60
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:delay-min">
         7
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:hurtful-verbs">
         (\{ "slash", "cut", "stab", "punch", "hit", "kick" \})
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:killable">
         0
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:multiattack">
         7
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:retarget">
         5
      </Core:Property>
      <Core:Property property="export:nip:trait:fighting:targeting-frequency">
         5
      </Core:Property>
      <Core:Property property="export:nip:trait:freemoting:frequency">
         20
      </Core:Property>
      <Core:Property property="export:nip:trait:freemoting:steal-frequency">
         10
      </Core:Property>
      <Core:Property property="export:nip:trait:movement:frequency">
         0
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:skill:combat:dodge">
         20
      </Core:Property>
      <Core:Property property="export:skill:combat:endurance">
         20
      </Core:Property>
      <Core:Property property="export:skill:combat:unarmed">
         19
      </Core:Property>
      <Core:Property property="export:skill:combatunarmed">
         19
      </Core:Property>
      <Core:Property property="export:teeth:quantity">
         3
      </Core:Property>
      <Core:Property property="export:trait:agility">
         15
      </Core:Property>
      <Core:Property property="export:trait:body">15</Core:Property>
      <Core:Property property="export:trait:mind">2</Core:Property>
      <Core:Property property="export:trait:speed">
         13
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act-pre:combat_getattacked%nip-fighting">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-pre:combat_getattacked_preempt%nip-fighting">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:nip/die">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:act:stop">
         \<Lib:NIP:lib:spawn-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:behave">
         \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:choose_target">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core_movement_exit">
         \<MOVED:20080918-114107:Lib:NIP:lib:movement\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:emoting:decide">
         \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:fight_command">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:fight_loop">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:fighting-fake-abc:decide">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:parse">
         \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:handler:emoting:preparse">
         \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:movement:decide">
         \<MOVED:20080918-114107:Lib:NIP:lib:movement\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<MOVED:20080918-114107:Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:command-dob%nip-fighting">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:react:command-iob%nip-fighting">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness-post:login%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-into%nip-fighting">
         \<IC:Lib:NIP:lib:fighting-fake-abc\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:lib:die">
         X[M] /* someone killed the spider */      
int i, sz;      
EmitIn(\$this."base:environment", Describe(\$this) + " scurries away in fright.");      
/* it should already be appearing as a corpse. Copy the snames to adjectives and add the sname/pname corpse */      
/*      
\$names = Arr(\$this."details:default:snames");      
sz = sizeof(\$names);      
for(i=0;i\<sz;i++)      
  Set(\$this, "details:default:adjective:"+\$names[i], 1);      
\$this."details:default:sname:corpse" = 1;      
\$this."details:default:pname:corpses" = 1;      
*/      
Slay(\$this);      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:fighting_die">
         X[M] /* someone killed the spider */      
int i, sz;      
EmitIn(\$this."base:environment", "Ack! I am kill'd!");      
/* it should already be appearing as a corpse. Copy the snames to adjectives and add the sname/pname corpse */      
\$names = Arr(\$this."details:default:snames");      
sz = sizeof(\$names);      
for(i=0;i\<sz;i++)      
  Set(\$this, "details:default:adjective:"+\$names[i], 1);      
\$this."details:default:sname:corpse" = 1;      
\$this."details:default:pname:corpses" = 1;      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:cut-dob">
         X[M] if(!\$this."body:quantity") \{ \$this."body:quantity" = 4 ; \}    
    
/* check details being targeted */    
if(sizeof(\$dob) != 1) return TRUE;    
\$target = \$dob[0];    
if(NRefDetail(\$target) == "body") \{    
   /* check if shark is dead */    
   if(!\$this."npc:is_dead") \{    
     return TRUE;    
    \}    
    
    
   /* check if shark has meat */    
   if(\$this."trait:meat") \{    
      EmitTo(\$actor, "Someone already tore off all the meat from the shark.");    
      return FALSE;    
   \}    
    
   /* emit cutting the meat */    
   EmitTo(\$actor, "You cut into the flesh of the shark and cut a neat slice of raw steak.");    
   EmitIn(\$actor."base:environment", Describe(\$actor)+" cuts into the flesh of the shark and cuts a neat slice of raw steak.", \$actor);    
    
   /* spawn the neat, set counter */    
   \$meat = Spawn(\$\{Ironclaw:Props:Plot:SharkHunt:RawSteak\});    
   \$meat."base:environment" = \$actor;    
   \$this."body:quantity" -= 1;    
   if(\$this."body:quantity" == 0)  \{\$this."trait:meat" = TRUE;\}    
   return FALSE;    
   \} return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:pull-dob">
         X[M] if(!\$this."teeth:quantity") \{ \$this."teeth:quantity" = 3; \}    
    
/* check details being targeted */    
if(sizeof(\$dob) != 1) return TRUE;    
\$target = \$dob[0];    
if(NRefDetail(\$target) == "teeth") \{    
   /* check if shark is dead */    
   if(!\$this."npc:is_dead") \{    
      EmitTo(\$actor, "How could you miss the fact, that the shark still lives??? Try again later. It might be beneficial to kill the shark before wagering  any new attempts at digging into its mouth.");    
     return FALSE;    
    \}    
    
    
   /* check if shark has teeth */    
   if(\$this."trait:teeth") \{    
      EmitTo(\$actor, "Someone already removed the teeth that could be removed from this shark.");    
      return FALSE;    
   \}    
    
   /* emit pulling the teeth */    
   EmitTo(\$actor, "You reach into the dead shark's mouth. Did you check if it's really dead? You're lucky, it doesn't seem to bite. Difficultly to manage to tear out a tooth from the beast.");    
   EmitIn(\$actor."base:environment", Describe(\$actor)+" reaches into the shark's mouth, and difficultly tears out a tooth from the beast.", \$actor);    
    
   /* spawn the teeth, set counter */    
   \$tooth = Spawn(\$\{Ironclaw:Props:Plot:SharkHunt:SharkTooth\});    
   \$tooth."base:environment" = \$actor;    
   \$this."teeth:quantity" -= 1;    
   if(\$this."teeth:quantity" == 0)  \{\$this."trait:teeth" = TRUE;\}    
   return FALSE;    
   \} return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:skin-dob">
         X[M] /* make definitions */    
   \$fisher = Int(\$actor."skill:career:fisherman");    
   \$tailoring = Int(\$actor."skill:alteration:tailoring");    
   \$tool= nil;    
    
/* check if shark is dead */    
if(!\$this."npc:is_dead") \{    
  EmitTo(\$actor, "Isn't it just a tiny bit cruel to skin a shark alive? And also, the shark might have a say in this. Try killing it? Dead fish don't talk.");    
  return FALSE;    
  \}    
    
/* check if there is any skin left to take from the shark */    
if(\$this."trait:skinned") \{    
  EmitTo(\$actor, "There is no usable amount or form of skin left on this beast.");    
  return FALSE;    
  \}    
    
/* check if they have tools */    
if(sizeof(Match(\$actor, "dagger")) \|\| sizeof(Match(\$actor, "knife")))    
  \$tool= TRUE;    
  if(!\$tool) \{    
     EmitTo(\$actor, "You would need a suitable tool for it, such as a knife or a dagger.");    
     return FALSE;    
     \}    
    
/* check if they have skills*/    
if(!\$fisher) \{    
   EmitTo(\$actor, "Try as hard as you may, skinning a shark isn't easy, even if it is dead. You don't manage to do much, apart from ruining the skin of the beast. It never harms to entrust skilled fisherman with the task.");    
   EmitIn(\$actor."base:environment", Describe(\$actor)+" leans to the shark's corpse starting the delicate art of skinning. Try as hard as "+\$actor."trait:nominative"+" may, skinning a shark isn't easy, even if it is dead. The only accomplishment is the ruining of the skin of the beast. It never harms to entrust a skilled fisherman with the task.", \$actor);    
   \$this."trait:skinned" = TRUE;    
   return FALSE;\}    
    
/* set success rates */    
if(\$fisher \< 4) \{    
   \$this."trait:amount" = 1;    
   \$this."trait:style" = "awkwardly";    
   \$this."trait:description" = "digs into the shark, managing to peal of parts of the skin, butchering the rest. Only a single yard is whole enough to be used later by seamstresses. It still needs a bit of treatment by a skilled tailor or seamstress.";    
\} else if(\$fisher \< 7) \{    
   \$this."trait:amount" = 2;    
   \$this."trait:style" = "unprofessionally";    
   \$this."trait:description" = "slowly slices into the shark. The blade skips on the skin a few times ruining the outcome considerably. Still two yards of raw leather is saved, which can be further prepared by people skilled in tailoring to produce sharkskin.";    
\} else if(\$fisher \< 10) \{    
   \$this."trait:amount" = 3;    
   \$this."trait:style" = "slowly";    
   \$this."trait:description" = "gradually slips the blade under the shark's skin. Due to unfamiliarity of the shark's leather's texture, the dagger skips a few times, making it difficult to produce a continuous set of skin for a needleworker. The skinner ends up having 3 yards of raw leather in the end of the process.";    
\} else if(\$fisher \< 12) \{    
   \$this."trait:amount" = 5;    
   \$this."trait:style" = "familiarly";    
   \$this."trait:description" = "with slow moves opens the shark parting the skin from the flesh. Small chunks of meat still cling to the flesh and some areas are quite hard to access. The dedicated and skilled work of the skinner rewards the process with five yards of raw skin. A skilled needleworker can easily process it into sharkskin.";    
\} else if(\$fisher \< 17) \{    
   \$this."trait:amount" = 6;    
   \$this."trait:style" = "with agile moves";    
   \$this."trait:description" = "professionally parts the skin from the flesh. Occsasionally the blade skips on the wet skin ruining pieces of the raw leather. The hard work is rewarded by 6 yards of leather ready for the needleworkers to prepare it into shark skin.";    
\} else if(\$fisher \< 21) \{    
   \$this."trait:amount" = 8;    
   \$this."trait:style" = "professionally";    
   \$this."trait:description" = "knowledgeably guides the blade through the shark, separating flesh from skin. Only a few corrections is needed by a skilled needleworker to secure some 8 yards from the sharkskin for later use.";    
\} else \{    
   \$this."trait:amount" = 10;    
   \$this."trait:style" = "masterfully";    
   \$this."trait:description" = "slips the dagger under the shark's skin with delicate ease. The skin is peeled in a thin layer with no flesh attached to it, a full set of leather is saved this way. A skilled tailor or seamstress might be able to secure 10 whole yards of usable sharkskin from it.";    
\}     
    
/* spawn cloth */    
\$this."trait:skinned" = TRUE;    
EmitTo(\$actor, "You "+\$this."trait:style"+" skin the shark securing " +\$this."trait:amount"+ " yard(s) of raw skin from the process. A person skilled in tailoring is needed to prepare the raw material into sharkskin.");    
EmitIn(\$actor."base:environment", Describe(\$actor)+ " "+\$this."trait:style"+" starts to skin the shark: " +\$actor."trait:nominative"+" "+\$this."trait:description", \$actor);    
\$cloth = Spawn(\$\{Ironclaw:Props:Plot:SharkHunt:RawSharkSkin\});    
\$cloth."trait:amount" = \$this."trait:amount";    
\$cloth."base:environment" = \$actor;    
    
return FALSE;
      </Core:Property>
      <Core:Property property="msg:teleportinthird">
         "A small spot appears in the distance, getting closer and closer, until a shape of a fish swimming along the ship takes form. A shark!  Though the great isn't exactly fitting, this seem to be in adolescence yet."
      </Core:Property>
      <Core:Property property="msg:teleportoutthird">
         "Somehow the small shark managed to swim out of your reach, and startled by the overpowering force, escapes the scene."
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED ADDITION *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<MOVED:20080918-114107:Lib:NIP:base:hooks:decide\>, "delay":\<MOVED:20080918-114107:Lib:NIP:base:hooks:delay\>, "emoting":\<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, "fighting-fake-abc":\<IC:Lib:NIP:lib:fighting-fake-abc\>, "internal":\<MOVED:20080918-114107:Lib:NIP:base:hooks:internal\>, "movement":\<MOVED:20080918-114107:Lib:NIP:lib:movement\>, "resource-control":\<MOVED:20080918-114107:Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}), \<MOVED:20080918-114107:Lib:NIP:lib:movement\>:(\{ "lib:core_movement_exit" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>:(\{ "lib:handler:emoting:parse", "lib:behave", "lib:handler:emoting:preparse" \}), \<IC:Lib:NIP:lib:fighting-fake-abc\>:(\{ "act:nip/die", "lib:fighting-fake-abc:decide", "lib:fight_loop", "lib:choose_target", "react:command-dob%nip-fighting", "react:command-iob%nip-fighting", "lib:fight_command", "act-pre:combat_getattacked%nip-fighting", "act-pre:combat_getattacked_preempt%nip-fighting", "witness:enter-into%nip-fighting" \}), \<Lib:NIP:lib:spawn-control\>:(\{ "act:stop" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<MOVED:20080918-114107:Lib:NIP:base:lib:signals\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:hooks\>, \<MOVED:20080918-114107:Lib:NIP:base:lib:stream\>, \<MOVED:20080918-114107:Lib:NIP:lib:resource-control\>, \<Lib:NIP:core\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DELAY\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:DECIDE\>, \<MOVED:20080918-114107:Lib:NIP:base:signals:INTERNAL\>, \<MOVED:20080918-114107:Lib:NIP:lib:emoting\>, \<IC:Lib:NIP:lib:fighting-fake-abc\>, \<MOVED:20080918-114107:Lib:NIP:lib:movement\>, \<Lib:NIP:lib:spawn-control\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:behavior:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:emoting:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:hints:">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:movement:frequency">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:spawn:area">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "fighting-fake-abc:DECIDE", "movement:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="nip:trait:fighting:attack-everyone">
         1
      </Core:Property>
      <Core:Property property="nip:trait:fighting:attack-when-provoked">
         1
      </Core:Property>
      <Core:Property property="nip:trait:fighting:block-message">
         "(npc) blocks (actor) from leaving."
      </Core:Property>
      <Core:Property property="nip:trait:fighting:block-runners">
         1
      </Core:Property>
      <Core:Property property="nip:trait:fighting:delay-max">
         60
      </Core:Property>
      <Core:Property property="nip:trait:fighting:delay-min">
         7
      </Core:Property>
      <Core:Property property="nip:trait:fighting:hurtful-verbs">
         (\{ "slash", "cut", "stab", "punch", "hit", "kick" \})
      </Core:Property>
      <Core:Property property="nip:trait:fighting:killable">
         0
      </Core:Property>
      <Core:Property property="nip:trait:fighting:multiattack">
         7
      </Core:Property>
      <Core:Property property="nip:trait:fighting:retarget">
         5
      </Core:Property>
      <Core:Property property="nip:trait:fighting:targeting-frequency">
         5
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:frequency">
         20
      </Core:Property>
      <Core:Property property="nip:trait:freemoting:steal-frequency">
         10
      </Core:Property>
      <Core:Property property="nip:trait:movement:frequency">
         0
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1205214606
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1372620630
      </Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "emoting:DECIDE", "fighting-fake-abc:DECIDE", "movement:DECIDE", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1372622107, "meandmine", "X", 1372624209, "meandmine", "X", 1372627232, "meandmine", "X" \})
      </Core:Property>
      <Core:Property property="sigstream">2</Core:Property>
      <Core:Property property="skill:advancedefensive">
         14
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         14
      </Core:Property>
      <Core:Property property="skill:combat:endurance">
         14
      </Core:Property>
      <Core:Property property="skill:combat:unarmed">
         19
      </Core:Property>
      <Core:Property property="skill:cutoffensive">
         19
      </Core:Property>
      <Core:Property property="skill:dodgedefensive">
         19
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         1
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         1
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         19
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         19
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         19
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         19
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         19
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         19
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         19
      </Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
