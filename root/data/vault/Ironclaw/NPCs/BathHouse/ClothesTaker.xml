<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="attendant"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="attendants"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bath"/>
          <Base:Adjective adjective="bathhouse"/>
          <Base:Adjective adjective="house"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bathhouse attendant
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:offers\>:(\{ "react-post:offer-who", "lib:core:add_offer", "lib:core:sub_offer" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:offers\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:offer:scripts">
         ([ 5:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="export:nip:offer:scripts">
         (\{ "handler:offer:trash" \})
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:nip:trait:trash:frequency">
         20
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:add_offer">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sub_offer">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:room-cleaning:decide">
         \<Lib:NIP:hooks:room-cleaning\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:offer-who">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness-post:login%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:witness-post:enter-from%takeclothes">
         X[M] object *inventory;
int allowed, i;
/* Do we have a bag for this player? */
if(!\$this.bathbags)
  return TRUE;

if(\$this.bathbags[name(\$actor)]) \{
  /* remove nils */
  \$this.bathbags[name(\$actor)] -= (\{ nil \});
  if(!sizeof(\$this.bathbags[name(\$actor)])) \{
    \$this.bathbags[name(\$actor)] = nil;
    return TRUE;
  \}

  \$delay(1, TRUE, "7fa1");

  EmitTo(\$actor, Describe(\$this)+" hands you "+Describe(\$this.bathbags[name(\$actor)])+".");
  EmitIn(\$actor."base:environment", Describe(\$this)+" hands "+Describe(\$actor)+" "+Describe(\$this.bathbags[name(\$actor)])+".", \$actor);
  
  inventory = \$this.bathbags[name(\$actor)];
  for(i=0;i\<sizeof(inventory);i++) \{
    inventory[i]."base:environment" = \$actor;
  \}
  \$this.bathbags[name(\$actor)] = nil;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness:enter-into%takeclothes">
         X[M] object *inventory;
int allowed, i;
/* Is the player attempting to enter the bath area? */
if(NRefDetail(\$dest) != "exit-south") return TRUE;

/* don't let the player into the room if they are clothed */
allowed = TRUE;
\$bathbags = (\{ \});
\$disallowed = (\{ \});
/* loop through inventory checking */
inventory = \$actor."base:inventory";
for(i=0;i\<sizeof(inventory);i++) \{
  if(inventory[i]."trait:bathbag") \{
    \$bathbags += (\{ inventory[i] \});
  \} else if (!inventory[i]."trait:bathallow") \{
    allowed = FALSE;
    \$disallowed += (\{ NewNRef(inventory[i], "default") \});
  \}
\}

if(FALSE \&\& !allowed \&\& sizeof(\$disallowed)) \{
  Social(\$this, "tell", nil, "You can't go into the baths while carrying "+Describe(\$disallowed, \$actor, \$actor)+".", nil, NewNRef(\$actor, "default"));
  return FALSE;
\}

/* take bag */
if(sizeof(\$bathbags)) \{
  EmitTo(\$actor, Describe(\$this)+" takes "+Describe(\$bathbags, \$actor, \$actor)+" from you.");
  EmitIn(\$actor."base:environment", Describe(\$this)+" takes "+Describe(\$bathbags)+" from "+\$actor."base:objective"+".", \$actor);
  if(!\$this.bathbags)
    \$this.bathbags = ([ ]);

  if(!\$this.bathbags[name(\$actor)]) \{
    \$this.bathbags[name(\$actor)] = \$bathbags;
  \} else \{
    \$this.bathbags[name(\$actor)] \|= \$bathbags;
  \}
  for(i=0;i\<sizeof(\$bathbags);i++) \{
    \$bathbags[i]."base:environment" = nil;
  \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED REMOVAL *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:offers\>:(\{ "react-post:offer-who", "lib:core:add_offer", "lib:core:sub_offer" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:offers\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:offer:scripts">
         ([ 5:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="nip:offer:scripts">
         (\{ "handler:offer:trash" \})
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="nip:trait:trash:frequency">
         20
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1168601892
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1168601892
      </Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1168597364, "tonyd", "E", 1168597418, "tonyd", "E", 1168597474, "tonyd", "E", 1168597506, "tonyd", "X", 1168598891, "tonyd", "E", 1168601955, "tonyd", "S", 1168601959, "tonyd", "S", 1168602058, "tonyd", "S", 1168602064, "tonyd", "S", 1168609051, "tonyd", "P", 1168609716, "tonyd", "P", 1168609766, "tonyd", "P", 1168609809, "tonyd", "P", 1168609829, "tonyd", "P", 1168609846, "tonyd", "P", 1168609950, "tonyd", "P", 1168610167, "tonyd", "P", 1168610238, "tonyd", "P", 1168610379, "tonyd", "P", 1168610411, "tonyd", "P", 1168610428, "tonyd", "P", 1168610801, "tonyd", "P", 1168610862, "tonyd", "P", 1168611235, "tonyd", "P", 1168611363, "tonyd", "P", 1168611389, "tonyd", "P", 1168611424, "tonyd", "P", 1168611449, "tonyd", "P", 1168611474, "tonyd", "P", 1168611519, "tonyd", "P", 1168611628, "tonyd", "P", 1168611630, "tonyd", "P", 1168611667, "tonyd", "P", 1168611737, "tonyd", "P", 1168611928, "tonyd", "P", 1168612076, "tonyd", "P", 1168612206, "tonyd", "P", 1168612244, "tonyd", "P", 1168660592, "tonyd", "E", 1168661096, "tonyd", "P", 1168661134, "tonyd", "P", 1168661159, "tonyd", "P", 1168661300, "tonyd", "P", 1168683199, "tonyd", "P", 1168733888, "tonyd", "S" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
