<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="guard"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="guard"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bath"/>
          <Base:Adjective adjective="bathhouse"/>
          <Base:Adjective adjective="house"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bathhouse guard
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="export:nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:offers\>:(\{ "react-post:offer-who", "lib:core:add_offer", "lib:core:sub_offer" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="export:nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:offers\> \})
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:offer:scripts">
         ([ 5:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="export:nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="export:nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="export:nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="export:nip:offer:scripts">
         (\{ "handler:offer:trash" \})
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="export:nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="export:nip:trait:trash:frequency">
         20
      </Core:Property>
      <Core:Property property="loading">1</Core:Property>
      <Core:Property property="merry:inherit:act:start">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:calc_sighookpath">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:add_offer">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:find-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_add">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:merry_delete">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:register-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sub_offer">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:sysupdate">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:core:unregister-hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-exec">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-init">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:decide:decide-post">
         \<Lib:NIP:base:hooks:decide\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-exec">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:delay:delay-init">
         \<Lib:NIP:base:hooks:delay\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:entering">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:find_nip_object">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:heartbeat">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:internal:internal-exec">
         \<Lib:NIP:base:hooks:internal\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:log">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:hooks">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:libraries">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:modify:signals">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:ncs:handler">
         \<Lib:NIP:NCS\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:room-cleaning:decide">
         \<Lib:NIP:hooks:room-cleaning\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:shutdown">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:react-post:offer-who">
         \<Lib:NIP:lib:offers\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:add">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:decide">
         \<Lib:NIP:base:signals:DECIDE\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:del">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:delete">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:error">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:hook">
         \<Lib:NIP:base:lib:hooks\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:nip-core">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigexecptr">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:signal">
         \<Lib:NIP:base:lib:signals\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sigstream">
         \<Lib:NIP:base:lib:stream\>
      </Core:Property>
      <Core:Property property="merry:inherit:setprop-post:sub">
         \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness-post:login%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:enter-from%nip:resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:inherit:witness:teleport%resource-control">
         \<Lib:NIP:lib:resource-control\>
      </Core:Property>
      <Core:Property property="merry:witness-post:command%nosex">
         X[M] string *badverbs; 
string *baddob; 
string *badiob; 
string *badadverbs; 
int naughty, i; 
 
badverbs = (\{ "leer" \}); 
baddob = (\{ "ravish", "molest", "embrace", "rub", "press", "fondle", "caress", "stroke", "bury", "slide", "lick", "grope", "smooch", "cuddle", "snuggle", "explore", "finger" \}); 
badadverbs = (\{ "crudely", "lewdly", "seductively", "sensually", "sexually", "intimately", "passionately", "lasciviously"  \}); 
naughty = FALSE; 
 
if(member(\$imperative, badverbs)) \{ 
  naughty = TRUE; 
\} else if (\$adverb \&\& member(\$adverb, badadverbs))\{ 
  naughty = TRUE; 
\} else if(\$dob) \{ 
  /* check if the dob is a PC */ 
  for(i=0;i\<sizeof(Arr(\$dob));i++) \{ 
    if(NRefOb(Arr(\$dob)[i]) != \$actor \&\& NRefOb(Arr(\$dob)[i])."base:volition") \{ 
      if(member(\$imperative, baddob)) 
        naughty = TRUE; 
      break; 
    \} 
  \} 
\} 
 
if(naughty)\{ 
  if(!\$actor."bathhouse:misbehaving") \{ 
    \$actor."bathhouse:misbehaving" = (\{ 1, time() \}); 
  \} else \{ 
    /* are they forgiven previous lapses? */ 
    if(\$actor."bathhouse:misbehaving"[1]+(60*60*2)\<time()) \{ 
      /* they were forgiven */ 
      \$actor."bathhouse:misbehaving" = (\{ 1, time() \}); 
    \} else \{ 
      \$actor."bathhouse:misbehaving" = (\{ \$actor."bathhouse:misbehaving"[0]+1, time() \}); 
    \} 
  \} 
 
  /* make the guard react */ 
  switch(\$actor."bathhouse:misbehaving"[0]) \{ 
    case 1: 
      Social(\$this, "quirk", nil, nil, nil, NewNRef(\$this, "right-eyebrow"), "at", NewNRef(\$actor, "default")); 
      break; 
    case 2: 
      Social(\$this, "glance", "warningly", nil, "at", NewNRef(\$actor, "default")); 
      break; 
    case 3: 
      Social(\$this, "tell", nil, "That's enough of that, then.", nil, NewNRef(\$actor, "default")); 
      break; 
    case 4: 
      Social(\$this, "inform", "angrily", "It's really not appropriate to be acting like that in a public bathhouse.", nil, NewNRef(\$actor, "default")); 
      break; 
    case 5: 
      Social(\$this, "warn", nil, "You better behave, or leave.", nil, NewNRef(\$actor, "default")); 
      break; 
    default: 
      Social(\$this, "tell", nil, "Alright, that's it! You have to leave now! If you don't, you'll get blacklisted.", nil, NewNRef(\$actor, "default")); 
      break; 
  \} 
 
\} 
return TRUE;
      </Core:Property>
      <Core:Property property="ndp">
         " *** FINISHED REMOVAL *** "
      </Core:Property>
      <Core:Property property="nip-core:hooks">
         ([ "decide":\<Lib:NIP:base:hooks:decide\>, "delay":\<Lib:NIP:base:hooks:delay\>, "internal":\<Lib:NIP:base:hooks:internal\>, "resource-control":\<Lib:NIP:lib:resource-control\> ])
      </Core:Property>
      <Core:Property property="nip-core:inherits">
         ([ \<Lib:NIP:base:lib:hooks\>:(\{ "lib:core:find-hook", "lib:core:register-hook", "lib:core:unregister-hook", "lib:modify:hooks", "setprop-post:hook" \}), \<Lib:NIP:base:lib:signals\>:(\{ "lib:modify:signals", "setprop-post:signal", "lib:calc_sighookpath" \}), \<Lib:NIP:base:lib:stream\>:(\{ "setprop-post:sigexecptr", "setprop-post:sigstream" \}), \<Lib:NIP:base:signals:DECIDE\>:(\{ "setprop-post:decide" \}), \<Lib:NIP:lib:offers\>:(\{ "react-post:offer-who", "lib:core:add_offer", "lib:core:sub_offer" \}), \<Lib:NIP:lib:resource-control\>:(\{ "witness-post:login%nip:resource-control", "witness:enter-from%nip:resource-control", "witness:teleport%resource-control", "lib:entering" \}) ])
      </Core:Property>
      <Core:Property property="nip-core:libraries">
         (\{ \<Lib:NIP:base:lib:signals\>, \<Lib:NIP:base:lib:hooks\>, \<Lib:NIP:base:lib:stream\>, \<Lib:NIP:lib:resource-control\>, \<Kalle:renamed-to-restore-MOVED-nip-object:Lib:NIP:core\>, \<Lib:NIP:base:signals:DELAY\>, \<Lib:NIP:base:signals:DECIDE\>, \<Lib:NIP:base:signals:INTERNAL\>, \<Lib:NIP:lib:offers\> \})
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:offer:scripts">
         ([ 5:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:resource-control:ttl_increase">
         ([ 1:1 ])
      </Core:Property>
      <Core:Property property="nip-core:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="nip-core:signals">
         ([ 10:"DELAY", 500:"INTERNAL", 1000:"DECIDE" ])
      </Core:Property>
      <Core:Property property="nip-core:system:revision">
         44
      </Core:Property>
      <Core:Property property="nip:offer:scripts">
         (\{ "handler:offer:trash" \})
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl">
         1800
      </Core:Property>
      <Core:Property property="nip:trait:resource-control:ttl_increase">
         600
      </Core:Property>
      <Core:Property property="nip:trait:trash:frequency">
         20
      </Core:Property>
      <Core:Property property="npc:resource-control:live_time">
         1168601902
      </Core:Property>
      <Core:Property property="npc:status:spawndate">
         1168601903
      </Core:Property>
      <Core:Property property="npc:sys:sighookpath">
         (\{ "delay:DELAY-init", "delay:DELAY-exec", "internal:INTERNAL-exec", "decide:DECIDE-init", "decide:DECIDE-exec", "decide:DECIDE-post" \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1168597364, "tonyd", "E", 1168597418, "tonyd", "E", 1168597474, "tonyd", "E", 1168597506, "tonyd", "X", 1168598733, "tonyd", "E", 1168601924, "tonyd", "S", 1168601933, "tonyd", "S", 1168602693, "tonyd", "P", 1168602839, "tonyd", "P", 1168602925, "tonyd", "P", 1168603041, "tonyd", "P", 1168603130, "tonyd", "P", 1168603154, "tonyd", "P", 1168603504, "tonyd", "P", 1168603596, "tonyd", "P", 1168603664, "tonyd", "P", 1168605033, "tonyd", "P", 1168605119, "tonyd", "P", 1168606131, "tonyd", "P", 1168606504, "tonyd", "P", 1168606690, "tonyd", "P", 1168606726, "tonyd", "P", 1168606762, "tonyd", "P", 1168606788, "tonyd", "P", 1168612434, "tonyd", "P", 1168612473, "tonyd", "P", 1168733901, "tonyd", "S", 1215556089, "rorschakovacs", "E", 1364749421, "pp74", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
