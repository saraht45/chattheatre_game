<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPC:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="female" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="merchant"/>
            <Base:SName sname="singular name"/>
            <Base:SName sname="unknown"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="merchants"/>
            <Base:PName pname="plural name"/>
            <Base:PName pname="unknowns"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="average"/>
          <Base:Adjective adjective="tiny"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">merchant</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="facialhair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="facialhair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="loose"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="loose"/>
          <Base:Adjective adjective="shaggy"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents>
      <Base:ContentGroup group="clothes-01">
        <Base:ContentItem ix="pants" item="OBJ(Allegory:Props:Clothing:Pants:Generic)" wear="true"/>
      </Base:ContentGroup>
      <Base:ContentGroup group="clothes-02">
        <Base:ContentItem ix="shirt" item="OBJ(Allegory:Props:Clothing:Shirts:Shirts:Generic)" wear="true"/>
      </Base:ContentGroup>
      <Base:ContentGroup group="clothes-03">
        <Base:ContentItem ix="shoes" item="OBJ(Allegory:Props:Clothing:Footwear:Shoes:Generic)" wear="true"/>
      </Base:ContentGroup>
    </Base:InitialContents>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:brief">
         "merchant"
      </Core:Property>
      <Core:Property property="merry:inherit:react:ask-dob%trading">
         \<Allegory:Lib:Economy:TradingLib\>
      </Core:Property>
      <Core:Property property="merry:lib:tabletheft">
         X[M] mapping thieves;
int casenum;

\$delay(1, FALSE, "dadb");

/* Don't report if chatter is stealing from self */
if(\$item."trading:seller" \&\& \$item."trading:seller" == \$actor) \{
    Social(this, "glance", "oddly", nil, "at", \$actor);
    return FALSE;
\}

Social(this, "frown", "angrily", "Thief! I'm reporting you to the authorities for that!", "at", \$actor);
return FALSE;
\$ob = \$\{Allegory:Lib:Law:scripts\};

/* Check if person has already been caught for this crime */
if(\$merchant."nip:theft:spotted") \{
    thieves = \$merchant."nip:theft:spotted";
\} else \{
    thieves = ([ ]);
\}

/* First time offense. File the crime and remember this case. */
if(!thieves[\$actor]) \{
   casenum = Call(\$ob, "filecrime", \$accomplices: (\{ \}), \$criminals: (\{ \$actor \}), \$desc: proper(\$actor."skotos:charname") + " was spotted stealing from a trading table.", \$shortdesc: "stealing from the trading tables", \$severity: 2, \$type: "theft");
   thieves += ([ \$actor:casenum ]);
   \$merchant."nip:theft:spotted" = thieves;
\}

casenum = thieves[\$actor];

/* File evidence from the merchant. */
Call(\$ob, "fileevidence", \$desc: Describe(\$merchant) + " saw " + proper(\$actor."skotos:charname") + " tampering with " + Describe(\$item) + " which was being sold by " + \$item."trading:sellername" + " at the time.", \$value: 4, \$criminal: \$actor, \$name: Describe(\$merchant), \$casenum: casenum);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness-pre:command">
         X[M] int i;
object item;
mixed* items;

if(!\$target) \{
    return TRUE;
\}

item = NRefOb(\$target);

if(\$dob \&\& sizeof(\$dob)) \{
    items = \$dob;
\}

if(\$iob \&\& sizeof(\$iob)) \{
    items = \$iob;
\}

if(\$what \&\& sizeof(\$what)) \{
    items = \$what;
\}

if(\$verb == "sip" \|\| \$verb == "drink" \|\| \$verb == "taste" \|\| \$verb == "eat" \|\| \$verb == "bite" \|\| \$verb == "nibble" \|\| \$verb == "guzzle" \|\| \$verb == "gobble" \|\| \$verb == "finish" \|\| \$verb == "empty" \|\| \$verb == "cut" \|\| \$verb == "tap" \|\| \$verb == "pick" \|\| \$verb == "smoke" \|\| \$verb == "puff" \|\| \$verb == "pour") \{
    if(items) \{
        for(i = 0; i \< sizeof(items); i++) \{
            item = NRefOb(items[i]);
            if(item."trading:table") \{
                ::tabletheft(\$actor: \$actor, \$merchant: this, \$item: item, \$seller: item."trading:seller");
                return TRUE;
            \}
        \}
    \} else \{
        if(item."trading:table") \{
            ::tabletheft(\$actor: \$actor, \$merchant: this, \$item: item, \$seller: item."trading:seller");
            return FALSE;
        \}
    \}
\}

if(\$verb == "toss" \|\| \$verb == "throw" \|\| \$verb == "put" \|\| \$verb == "stow" \|\| \$verb == "stuff" \|\| \$verb == "place" \|\| \$verb == "store") \{
    if(!\$target) \{
        return TRUE;
    \}

    if(item."trading:table") \{
        ::tabletheft(\$actor: \$actor, \$merchant: this, \$item: item, \$seller: item."trading:seller");
        return FALSE;
    \}
\}

if(\$verb == "catch" \|\| \$verb == "snatch" \|\| \$verb == "retrieve") \{
    if(items) \{
        for(i = 0; i \< sizeof(items); i++) \{
            item = NRefOb(items[i])."base:environment";
            if(item."trading:table") \{
                ::tabletheft(\$actor: \$actor, \$merchant: this, \$item: item, \$seller: item."trading:seller");
                return FALSE;
            \}
        \}
    \} else \{
        item = NRefOb(\$target)."base:environment";
        if(item."trading:table") \{
            ::tabletheft(\$actor: \$actor, \$merchant: this, \$item: item, \$seller: item."trading:seller");
            return FALSE;
        \}
    \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1232336308, "jominey", "E", 1232336313, "jominey", "E", 1232336315, "jominey", "E", 1232336317, "jominey", "E", 1232336318, "jominey", "E", 1232336352, "jominey", "E", 1232336373, "jominey", "E", 1232336604, "jominey", "E", 1232336629, "jominey", "E", 1232336639, "jominey", "E", 1232336644, "jominey", "E", 1232336672, "jominey", "E", 1232336730, "jominey", "E", 1232336768, "jominey", "E", 1232336776, "jominey", "E", 1232337416, "jominey", "E", 1232339462, "jominey", "E", 1232419959, "jominey", "E", 1232420038, "jominey", "E", 1232420487, "jominey", "E", 1232420572, "jominey", "E", 1232420788, "jominey", "E", 1232420821, "jominey", "E", 1232420924, "jominey", "E", 1232421022, "jominey", "E", 1232421064, "jominey", "E", 1232421114, "jominey", "E", 1232421667, "jominey", "E", 1232431055, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
