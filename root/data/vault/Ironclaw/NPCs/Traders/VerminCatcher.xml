<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:NPCs:UrNPC)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="10" maxweight="100"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trader"/>
            <Base:SName sname="catcher"/>
            <Base:SName sname="vermincatcher"/>
            <Base:SName sname="rat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ample"/>
          <Base:Adjective adjective="spindly"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             vermin catcher
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="facialhair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="facialhair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="delicate"/>
          <Base:Adjective adjective="even"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="crew cut"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="crew cut"/>
          <Base:Adjective adjective="delicate"/>
          <Base:Adjective adjective="golden blonde"/>
          <Base:Adjective adjective="medium"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="appearance:build">
         "ample"
      </Core:Property>
      <Core:Property property="appearance:clawapp">
         "yellowed"
      </Core:Property>
      <Core:Property property="appearance:clawlength">
         "average"
      </Core:Property>
      <Core:Property property="appearance:earshape">
         "round"
      </Core:Property>
      <Core:Property property="appearance:eyecolor">
         "red"
      </Core:Property>
      <Core:Property property="appearance:eyeshape">
         "wide"
      </Core:Property>
      <Core:Property property="appearance:feet">
         "dainty"
      </Core:Property>
      <Core:Property property="appearance:furcolor">
         "white"
      </Core:Property>
      <Core:Property property="appearance:furlength">
         "even"
      </Core:Property>
      <Core:Property property="appearance:furtexture">
         "delicate"
      </Core:Property>
      <Core:Property property="appearance:haircolor">
         "golden blonde"
      </Core:Property>
      <Core:Property property="appearance:hairlength">
         "medium"
      </Core:Property>
      <Core:Property property="appearance:hairstyle">
         "crew cut"
      </Core:Property>
      <Core:Property property="appearance:hairtype">
         "delicate"
      </Core:Property>
      <Core:Property property="appearance:hands">
         "strong"
      </Core:Property>
      <Core:Property property="appearance:height">
         "spindly"
      </Core:Property>
      <Core:Property property="appearance:lipshape">
         "sensual"
      </Core:Property>
      <Core:Property property="appearance:mouthshape">
         "dour"
      </Core:Property>
      <Core:Property property="appearance:muzzleshape">
         "blunt"
      </Core:Property>
      <Core:Property property="appearance:noseshape">
         "snub"
      </Core:Property>
      <Core:Property property="appearance:taillength">
         "uneven"
      </Core:Property>
      <Core:Property property="appearance:tailtexture">
         "smooth"
      </Core:Property>
      <Core:Property property="export:nip-core:prop:nip:trait:trading:stock">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="export:nip:trait:trading-advanced:inventories">
         \<Allegory:NPCs:NIPs:Buyers:Southwest:RatCatcher\>
      </Core:Property>
      <Core:Property property="export:trading:lists">
         (\{ \<Allegory:NPCs:NIPs:TradingLists:Southwest:RatCatcher\> \})
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This vermin catcher is a spindly ample rat, with even, delicate white fur, and medium delicate golden blonde hair. Wide red eyes are set above a snub nose and a dour mouth, complete with sensual lips. Average yellowed nails, on strong hands, and dainty feet are also visible. You also note his round  ears."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This vermin catcher is a spindly ample rat, with even, delicate white fur, and medium delicate golden blonde hair."
      </Core:Property>
      <Core:Property property="merry:inherit:react:ask-dob%trading">
         \<Allegory:Lib:Economy:TradingLib\>
      </Core:Property>
      <Core:Property property="merry:lib:quest:gather_skinks">
         X[M] /* Asks the PC to gather skinks */
if(!\$actor) return FALSE;

\$questname = "gather_skinks";
/* How much should this quest pay? (modified for the current economy) */
\$payment = Call(\$\{Ironclaw:Lib:Quests:Autoquests:miniquests\}, "questpayment", \$amount: 1500);

if(!\$actor."quest:miniquests") \$actor."quest:miniquests" = ([ ]);

if(\$imperative == "@yes") \{
  Social(this, "smile", nil, "Great! Well, bring me five dead skinks. Just offer them to me when you've got them.", "at", \$actor);
  /* Quest expires after a week */
  \$expires = 60*60*24*7;
  \$id = random(1000000);
  \$actor."quest:miniquests"[\$questname] = ([
      "description":"Gather five skinks and deliver them to the vermin catcher.",
      "name":"Skin Hunt",
      "id":\$id,
      "payment": \$payment,
      "skink_count": 5,
      "expires":time()+\$expires,
      "reward": \$payment ? ironclaw::describe_money(\$amount: \$payment) : "Gratitude" ]);
  /* Make the quest expire */
  if(\$expires) \{
    \$delay(\$expires, TRUE, "5e77");
    if(\$actor."quest:miniquests" \&\& \$actor."quest:miniquests"[\$questname] \&\& \$actor."quest:miniquests"[\$questname]["id"] == \$id)
      \$actor."quest:miniquests"[\$questname] = nil;
  \}
  return TRUE;
\} else if(\$imperative == "@no") \{
  Social(this, "nod", nil, "OK then. Too fancy for your tastes, I guess.", "to", \$actor);
  return TRUE;
\} else if(\$expire_fun == "quest:"+\$questname) \{
  Social(this, "nod", nil, "Hmm, well, come back if you decide to take the job.", "to", \$actor);
  return TRUE;
\}

/* Here's the start of the quest (usually where the PC gets asked if they want to accept the quest) */

/* Check if it's a valid quest */

/* Don't ask, if they are already doing this quest */
if(\$actor."quest:miniquests"[\$questname]) return FALSE;
/* Don't ask if they are already answering a question */
if(\$actor."question:id") return FALSE;
/* They won't get offered this quest if they've already earned too much daily income */
if(Int(\$actor."trait:income:paiduntil") \> time()) return FALSE;
/* Make sure they aren't busy */
if(ironclaw::busy_check(\$character: \$actor)) return FALSE;

Social(this, "appraise", nil, "Hmm...", nil, \$actor);
Social(this, "decide", nil, "You look quite capable. Interested in earning some coin?");
Social(this, "explain", nil, "I'm a vermin catcher, gotta keep the streets clear. Want to do some work for me? Bring me five dead skinks, and I'll see you rewarded.");
Social(this, "ask", nil, "How does "+ironclaw::describe_money(\$amount: \$payment)+" sound?");

interaction::question(\$question: "Will you accept this job?", \$expires: 60, \$env: "TRUE", \$yes_ob: this, \$expire_ob: this, \$no_ob: this, \$yes_fun: "quest:"+\$questname, \$no_fun: "quest:"+\$questname, \$expire_fun: "quest:"+\$questname);


return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:offer-who%quest">
         X[M] /* Accepts skinks from PCs on quests */
if(!\$what) return TRUE;

/* remove the offer so the player doesn't have to revoke */
Call(\$this, "base:removeoffer", \$from: \$actor);

if(!\$actor."quest:miniquests") return TRUE;
/* What quests are they doing? */
if(\$actor."quest:miniquests"["gather_skinks"]) \{
  /* How many skinks are still needed? */
  \$needed = \$actor."quest:miniquests"["gather_skinks"]["skink_count"];
  /* Are they offering any skinks to the merchant? */
  \$matches = (\{ \});
  for(\$i=0;\$i\<sizeof(\$what) \&\& sizeof(\$matches) \< \$needed;\$i++) \{
    if(\$what[\$i]."core:ur:parent" == \$\{Allegory:Props:Animals:City:RatCorpse\})
      \$matches += (\{ \$what[\$i] \});
  \}
  if(!sizeof(\$matches)) \{
    Social(this, "state", nil, "Sorry, I'm not buying none of that");
    return TRUE;
  \}

  Social(this, "collect", nil, nil, nil, \$matches);
  \$needed -= sizeof(\$matches);
  if(\$needed) \{
    /* Still more skinks to go */
    Social(this, "state", nil, "Good catch. Only "+desc_cardinal(\$needed)+" more to go.");
    \$actor."quest:miniquests"["gather_skinks"]["skink_count"] = \$needed;
    \$actor."quest:miniquests"["gather_skinks"]["description"] = "Gather "+desc_cardinal(\$needed)+" skinks and deliver them to the vermin catcher.";
  \} else \{
    Social(this, "smile", nil, "That's the last of 'em! Good job!");
    \$payment = \$actor."quest:miniquests"["gather_skinks"]["payment"];
    /* EXTENSION - update below to pay money better. Through a miniquest script. */
    \$actor."trait:money" = Int(\$actor."trait:money")+\$payment;
    EmitTo(\$actor, Describe(this)+" pays you.");
    /* Clear the quest */
    \$actor."quest:miniquests"["gather_skinks"] = nil;
  \}
  /* Slay the skink corpses */
  \$delay(0.1, TRUE, "b0cb");
  for(\$i=0;\$i\<sizeof(\$matches);\$i++) \{
    Slay(\$matches[\$i]);
  \}
  return TRUE;
\}

Social(this, "apologize", nil, "Sorry - can't buy that from you. I only buy from employees doing a specific job. Guild rules, y'know?");

return TRUE;
      </Core:Property>
      <Core:Property property="merry:witness:enter-from%quest">
         X[M] /* Offer the PC a quest to catch skinks */
if(!\$actor."udat:object") return TRUE;

\$delay(2, TRUE, "ed85");
if(\$actor."base:environment" != this."base:environment") return TRUE;

/* Don't ask, if they are already doing a quest */
if(!\$actor."quest:miniquests") \$actor."quest:miniquests" = ([ ]);
if(\$actor."quest:miniquests"["gather_skinks"]) return FALSE;

return Call(this, "quest:gather_skinks");
      </Core:Property>
      <Core:Property property="nip-core:prop:nip:trait:trading:stock">
         ([ 4:1 ])
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1169782597, "necate", "E", 1169782634, "necate", "K", 1169782660, "necate", "E", 1169782713, "necate", "E", 1169783131, "necate", "E", 1169783586, "necate", "K", 1169783774, "necate", "R", 1169783925, "necate", "S", 1169784059, "necate", "E", 1169784255, "necate", "R", 1169784348, "necate", "K", 1169784456, "necate", "E", 1169784495, "necate", "K", 1169785397, "necate", "R", 1169788104, "tonyd", "S", 1169788110, "tonyd", "S", 1169788112, "tonyd", "S", 1169788115, "tonyd", "S", 1169788340, "tonyd", "S", 1169789096, "tonyd", "S", 1201440792, "tonyd", "E", 1201440809, "tonyd", "E", 1201441169, "tonyd", "E", 1201442060, "tonyd", "E", 1360128987, "tonyd", "E", 1360129000, "tonyd", "E", 1360129020, "tonyd", "E", 1360129091, "tonyd", "P", 1360129107, "tonyd", "P", 1360129137, "tonyd", "P", 1360129149, "tonyd", "P", 1360129162, "tonyd", "P", 1360129179, "tonyd", "P", 1360129216, "tonyd", "P", 1360129249, "tonyd", "P", 1360129911, "tonyd", "P", 1360129942, "tonyd", "P", 1360130034, "tonyd", "P", 1360130073, "tonyd", "P", 1360130156, "tonyd", "P", 1360130239, "tonyd", "P", 1360130294, "tonyd", "P", 1360130411, "tonyd", "P", 1360130485, "tonyd", "P", 1360130548, "tonyd", "P", 1360130573, "tonyd", "P", 1360130682, "tonyd", "P", 1360130724, "tonyd", "P", 1360130806, "tonyd", "P", 1360130821, "tonyd", "P", 1360131074, "tonyd", "P", 1360131138, "tonyd", "P", 1360131343, "tonyd", "P", 1360131352, "tonyd", "P", 1360131377, "tonyd", "P", 1360131556, "tonyd", "P", 1360131585, "tonyd", "P", 1360131670, "tonyd", "P", 1360131896, "tonyd", "P", 1360131939, "tonyd", "P", 1360132048, "tonyd", "P", 1360132066, "tonyd", "P", 1360133350, "tonyd", "P", 1360133459, "tonyd", "P", 1360133470, "tonyd", "P", 1360133479, "tonyd", "P", 1360133483, "tonyd", "P", 1360133526, "tonyd", "P", 1360133541, "tonyd", "P", 1360133649, "tonyd", "P", 1360133918, "tonyd", "P", 1360133964, "tonyd", "P", 1360138477, "tonyd", "P", 1360138497, "tonyd", "P", 1360138636, "tonyd", "P", 1360138776, "tonyd", "P", 1360138908, "tonyd", "P", 1360138990, "tonyd", "P", 1360139020, "tonyd", "P", 1360139104, "tonyd", "P", 1360139170, "tonyd", "P", 1360189013, "tonyd", "P", 1360189133, "tonyd", "P", 1360189155, "tonyd", "P", 1360189165, "tonyd", "P", 1360189390, "tonyd", "P", 1360189430, "tonyd", "P", 1360219571, "tonyd", "E", 1360219741, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="sigstream">2</Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:animal">"rat"</Core:Property>
      <Core:Property property="trait:animaltype">
         "rodent"
      </Core:Property>
      <Core:Property property="trait:examine">
         "This vermin catcher is a spindly ample rat, with even, delicate white fur, and medium delicate golden blonde hair. Wide red eyes are set above a snub nose and a dour mouth, complete with sensual lips. Average yellowed nails, on strong hands, and dainty feet are also visible. You also note his round  ears."
      </Core:Property>
      <Core:Property property="trait:look">
         "This vermin catcher is a spindly ample rat, with even, delicate white fur, and medium delicate golden blonde hair."
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
