<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:act:start">
         X[M] Set(this, "trait:noise:tick_id", Every("tick", 450));                      
  Set(this, "trait:noise:tick_cnt", 1);
      </Core:Property>
      <Core:Property property="merry:timer:tick">
         X[M] object env; int tick; object act;                      
   Set(this, "trait:noise:tick_cnt", tick);                      
   env = (this."base:environment");                      
   switch(random(16)) \{                      
    case 0: \{                      
            \{                      
            EmitIn(env, "The " +oneof("soothing", "calming", "melodious", "monotonous", "repetitive", "consistent")+ " " +oneof("sound", "noise", "tune", "crash")+ " of the " +oneof("waves", "water")+ " can be heard all around.");                      
            \}                      
    \} break;                      
    case 1: \{                      
            \{                      
            EmitIn(env, "The " +oneof("melodious", "serene", "beckoning", "loud")+ " " +oneof("call", "caw", "tune", "voice")+ " of the birds " +oneof("echoes", "resounds", "rebounds", "recoils")+ " " +oneof("along the boardwalk", "off of nearby buildings")+ ". The birds remain hidden from view as they avoid the downpour.");                      
            \}                      
    \} break;                      
    case 2: \{                      
            \{                      
            EmitIn(env, "The boardwalk " +oneof("sways", "shakes", "rolls")+ " and trembles "+ oneof("slightly", "barely", "minutely", "precariously")+ " as a " +oneof("large", "massive")+ " wave "+ oneof("strikes", "slams", "pounds", "hits")+ " the " +oneof("shoreline", "shore", "coast")+ ". A storm seems to be forming off the " +oneof("shoreline", "shore", "coast")+ ".");                      
            \}                      
    \} break;                      
    case 3: \{                      
            \{                      
            EmitIn(env, "The "+ oneof("strong", "over-powering", "soft", "tangy", "subtle")+ " "+ oneof("smell", "scent", "aroma", "odor")+ " of "+ oneof("sea water", "the sea", "the ocean", "the Bay of Auvrich", "the bay")+ " " +oneof("permeates", "wafts through", "soaks")+ " the air.");                      
            \}                      
   \} break;                      
    case 4: \{                      
            \{                      
            EmitIn(env, "A "+ oneof("loud", "thunderous", "rolling")+ " "+oneof("crash", "clash", "slap")+ " of waves break against the "+ oneof("many piers", "shore", "coast", "beach")+ ".");                      
            \}                      
\} break;                      
    case 5: \{                      
            \{                      
            EmitIn(env, "This place smells "+ oneof("of the sea", "fresh", "of salt", "delicious, pure rain")+ ".");                      
            \}                      
\} break;                      
    case 6: \{                      
            \{                      
            EmitIn(env, "A "+ oneof("cart", "wagon", "buckboard", "carriage")+ " rolls through the puddles on the way to "+ oneof("the marketplace", "the Commons", "one of the warehouses", "an unknown destination")+ ".");                      
            \}                      
\} break;                      
    case 7: \{                      
            \{                      
            EmitIn(env, "The "+ oneof("sound", "smell", "sight")+ " of " +oneof("the city", "Docktown", "the marketplace")+ " "+ oneof("beckons", "calls", "lures", "entices")+ " from the north.");                      
            \}                      
\} break;                      
    case 8: \{                      
            \{                      
            EmitIn(env, "A "+ oneof("slight breeze", "gust of wind", "small gale", "barrage of rain")+ " " +oneof("picks up", "increases in power", "tears through the boardwalk")+ " for a " +oneof("moment", "minute", "second")+ " before "+ oneof("dissipating", "calming once again", "passing on", "becoming unnoticable once again")+ ".");                      
            \}                      
\} break;                      
    case 9: \{                      
             \{                      
           EmitIn(env, "The "+ oneof("low", "thunderous", "riotous", "boisterous")+ " " +oneof("roar of voices are", "rattle of swords are", "clamor of people is", "skittering of mounts is", "drum of feet are")+ " heard "+ oneof("from afar", "in the distance", "beyond the boardwalk", "in the city", "from Docktown")+ ".");                      
            \}                      
\} break;                      
    case 10: \{                               
             \{                               
           EmitIn(env, "A "+ oneof("drunken", "confused", "scowling", "smiling", "smug", "distracted", "distraught", "beautiful", "preoccupied", "soiled", "grungy", "cleancut", "tanned", "tired-looking", "muttering", "mumbling", "soaked", "wet", "soggy")+ " "+ oneof("dock worker", "sailor", "porter", "foreign traveler", "thug", "fisherman", "shipwright", "passenger", "wolf", "boar", "horse", "leopard", "otter", "goat", "rat", "mole", "vole")+ " "+ oneof("bearing a nasty scar", "scratching a bristling beard", "hefting a large sack", "donning a strange hat", "with a wooden leg", "wearing a bright set of clothing", "squinting through a black eyepatch", "covered in a patchwork cloak", "wearing a jaunty green beret", "sporting a toothless smile", "with a bent nose", "with a hunched back", "that is missing an eye", "with a high forehead", "with a gleaming balding pate", "with a unibrow", "which is missing a finger", "playing a lute", "beating a drum", "plucking at a banjo", "hefting a bolt of cloth", "carrying a leather attache", "sporting a sparkling ring", "gripping a rusty crowbar", "protectfully carrying a handful of scrolls", "eyeing a large map", "wielding a curved sword", "wielding a short dagger", "wielding a blackened pitchfork", "with clenched fists", "sporting a happy grin", "bearing a troubled look", "with a thoughtful demeanor", "with a fretful shiver", "with a case of scurvy", "biting a small red apple", "hefting a bundle of herbs", "handling a brass lantern", "wearing a pink scarf", "with a noticeable limp", "with a tumbling gait", "wearing just a single boot", "wearing a pair of blue gloves", "with a broad nose", "bearing a bruised cheek", "with a white ponytail", "wielding a curved cutlass", "wearing a braided belt", "carrying an umbrella", "muttering about a lost umbrella")+ " " +oneof("briefly", "quickly", "uncaringly", "quietly", "loudly", "unobtrusively", "rudely", "softly")+ " "+ oneof("meanders", "plods", "walks", "weaves", "steps", "strides", "struts", "wanders", "hustles", "limps", "ambles", "stumbles", "slinks", "dashes", "bustles", "trods", "saunters", "strolls", "splashes")+ " " +oneof("past", "by", "through", "towards the city", "northward", "onto a nearby pier", "along Dock Street")+ ".");                               
            \}                    
\} break;                     
    case 11: \{                      
             \{                      
           EmitIn(env, "The "+ oneof("splash", "ripple", "froth", "bubbles", "passing")+ " of a "+ oneof("school of", "group of", "very large", "very long")+ " " +oneof("fish", "grouper", "trout", "marlin")+ " can be seen out in the " +oneof("bay", "Bay of Auvrich", "water")+ ".");                      
            \}            
\} break;                      
    case 12: \{                      
             \{                      
           EmitIn(env, "A "+ oneof("barrel", "broken plank", "piece of driftwood", "clump of seaweed", "piece of garbage", "rippling jellyfish", "patch of foam", "rusted bucket", "discarded boot", "slip of paper", "dead fish", "sliver of wood", "old crate", "waterlogged barrel", "dead body", "waterlogged doll")+ " " +oneof("floats", "bobs", "sways")+ " in the " +oneof("water", "bay", "Bay of Auvrich", "waves")+ ".");                      
            \}           
\} break;                      
    case 13: \{                      
             \{                      
           EmitIn(env, "A "+ oneof("drunken", "confused", "scowling", "smiling", "smug", "distracted", "distraught")+ " "+ oneof("dock worker", "sailor", "porter", "foreign traveler", "thug", "fisherman", "shipwright")+ " with a "+ oneof("nasty scar", "bristling beard", "large sack", "strange hat", "wooden leg", "bright set of clothing", "black eyepatch")+ " briefly "+ oneof("strides", "struts", "wanders", "hustles", "limps", "ambles", "stumbles")+ " past you.");                      
            \}           
\} break;                      
    case 14: \{                      
             \{                      
           EmitIn(env, oneof("Sailors calling", "A bell ringing", "A dock worker cursing", "A drunk man singing", "Barrels rolling", "A foghorn", "Someone shouting")+ " can be heard from " +oneof("a nearby pier", "the south", "nearby")+ ".");                      
            \}           
\} break;                              
    case 15: \{                
             \{                
           EmitIn(env, "Shadows "+ oneof("flicker", "cast a darkness", "pass")+ " by a window to the " +oneof("north", "south", "east", "southeast", "northeast", "southwest")+ ".");                
            \}                
\} break;              
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1106450816, "tunk_bodin", "X", 1106450975, "tunk_bodin", "X", 1127521075, "tunk_bodin", "X", 1127521194, "tunk_bodin", "X", 1127542749, "lunamoon", "E", 1128033387, "tunk_bodin", "X", 1128035572, "tunk_bodin", "X", 1128036593, "tunk_bodin", "X", 1128057122, "tunk_bodin", "X", 1128057395, "tunk_bodin", "X", 1128057535, "tunk_bodin", "X", 1133641567, "sinistrelle", "E", 1133646877, "sinistrelle", "E", 1133680672, "sinistrelle", "E", 1134239091, "tunk_bodin", "X", 1134241186, "tunk_bodin", "X", 1134243592, "tunk_bodin", "X", 1134243835, "tunk_bodin", "X", 1134244303, "tunk_bodin", "X", 1134244580, "tunk_bodin", "X", 1134804812, "tunk_bodin", "X", 1148281439, "tonyd", "E", 1150301631, "tunk_bodin", "X", 1150301669, "tunk_bodin", "X", 1150301940, "tunk_bodin", "X", 1150303044, "tunk_bodin", "X", 1167802252, "tunk_bodin", "X", 1309489250, "rorschakovacs", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:noise:tick_cnt">
         0
      </Core:Property>
      <Core:Property property="trait:noise:tick_id">
         "4579fd1ac6041afa9670d2dca8d48985"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1059852608" state="Open" user="nest">
           A Merry coded object which will when dropped into a room generate emits on a random basis.
To use for rooms, Duplicate and rename to something suitable. Make sure this object remains, if it doesnt tell me asap.
Rename the brief to nameemitgenerator, so for example riveremitgenerator.
Call up +tool merry edit %Woename of new object timer:tick.
Scroll down to the add your emits here section and put in whatever you want.
A crowd emit generator and river emit generator are already in progress and can be found in Pendragon:Coders:Nest.
Anyone is free to make use of these.
Many thanks to Zell's torch example for teaching me how to make this code happen.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
