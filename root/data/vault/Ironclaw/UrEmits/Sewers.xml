<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:act:start">
         X[M] Set(this, "trait:noise:tick_id", Every("tick", 450));
return TRUE;
      </Core:Property>
      <Core:Property property="merry:timer:tick">
         X[M] object env;
env = (this."base:environment");
switch(random(15)) \{
  case 0:
    EmitIn(env, "A "+ oneof("plop", "splash")+ " " +oneof("echoes throughout", "bounces along", "resounds through")+ " the sewers as something " +oneof("unseen", "unknown", "quickly", "suddenly")+ " "+oneof("hits", "slips into", "traverses")+ " the " +oneof("dingy", "mucky", "grimy", "disgusting")+ " water.");
    break;
  case 1:
    EmitIn(env, "A "+ oneof("mass of beetles", "group of spiders", "large snake", "slithering snake", "jumping spider", "unknown creature")+ " "+ oneof("scurries", "slinks", "dashes", "wanders", "proceeds", "traverses", "passes", "skitters", "crawls")+ " through the sewer towards the "+ oneof("nearest exit", "nearest wall", "closest shadow", "nasty water")+ ".");
    break;
  case 2:
    EmitIn(env, "The "+ oneof("raspy", "scratchy", "skittery", "chittering", "frightening") +" noise of insects crawling over each other in the " +oneof("darkness", "shadows")+ " is ever present.");
    break;
  case 3:
    EmitIn(env, "You hear the endless "+ oneof("drip", "echo", "splash", "trickle", "passage", "stream") +" of water.");
    break;
  case 4:
    EmitIn(env, "A sudden " +oneof("draft", "burst")+ " of " +oneof("cold", "chill", "freezing", "icy")+ ", " +oneof("fetid", "stale")+ " air makes you almost shiver even as it turns the stomach.");
    break;
  case 5:
    EmitIn(env, "Out of the corner of your eye, a shadow darker than the darkness of the sewer seems to move, but as you turn to face it, it vanishes.");
    break;
  case 6:
    EmitIn(env, "You suddenly feel like a "+ oneof("beetle", "roach", "spider", "snake", "skink")+" is crawling up your leg, but when you shake it off there is nothing there.");
    break;
  case 7:
    EmitIn(env, "You hear a " +oneof("sucking", "slurping")+ " sound in the " +oneof("mud", "muck")+ " nearby.");
    break;
  case 8:
    EmitIn(env, "The stench of "+ oneof("garbage", "waste", "rot", "mildew") +" briefly grows " +oneof("stronger", "overpowering")+ ".");
    break;
  case 9:
    EmitIn(env, "You shift your feet and " +oneof("step", "stumble")+ " into a " +oneof("hole", "crevice", "crack")+ " in the " +oneof("floor", "ground")+ ". It takes a moment to pull your foot out of the " +oneof("thick", "gripping", "slimy")+ " mud.");
    break;
  case 10:
    EmitIn(env, "A " +oneof("bone-chilling", "marrow-curdling", "stomach-churning")+ " " +oneof("shriek", "scream", "screech")+ " splits the darkness, the source is completely unidentifiable.");
    break;
  case 11:
    EmitIn(env, "You hear a multitude of squeaks from an unknown source.");
    break;
  case 12:
    EmitIn(env, "Unintelligible voices "+ oneof("mutter", "whisper") +" from a "+ oneof("pipe", "hole", "grate", "crack") +" nearby, the voices sound "+ oneof("drunk", "angry", "sad", "happy", "worried", "terrified", "insane", "confused", "excited", "scared", "upbeat", "unreal", "supernatural") +".");
    break;
  case 13:
    EmitIn(env, "From an unknown direction, you hear the sound of something heavy being dragged.");
    break;
  case 14:
    EmitIn(env, "You think you hear the sound of your name being called, but it could just be something that sounded like your name, or it could have been nothing at all.");
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1106450816, "tunk_bodin", "X", 1106450975, "tunk_bodin", "X", 1127704774, "tunk_bodin", "X", 1127706065, "tunk_bodin", "X", 1127706804, "tunk_bodin", "X", 1127706892, "tunk_bodin", "X", 1127707044, "tunk_bodin", "X", 1127707163, "tunk_bodin", "X", 1127707433, "tunk_bodin", "X", 1127707700, "tunk_bodin", "X", 1132994499, "tunk_bodin", "X", 1132994638, "tunk_bodin", "X", 1132994781, "tunk_bodin", "X", 1133078358, "sinistrelle", "E", 1133078526, "sinistrelle", "E", 1133078748, "sinistrelle", "E", 1133079167, "sinistrelle", "E", 1133079222, "sinistrelle", "E", 1133079372, "sinistrelle", "E", 1133639605, "sinistrelle", "E", 1133639676, "sinistrelle", "E", 1133639723, "sinistrelle", "E", 1133639779, "sinistrelle", "E", 1133639824, "sinistrelle", "E", 1133639840, "sinistrelle", "E", 1133640269, "sinistrelle", "E", 1134239164, "tunk_bodin", "X", 1134242514, "tunk_bodin", "X", 1135644268, "tonyd", "P", 1135644298, "tonyd", "P", 1135644331, "tonyd", "P", 1135644692, "tonyd", "P", 1135644878, "tonyd", "P", 1309489284, "rorschakovacs", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:noise:tick_cnt">
         0
      </Core:Property>
      <Core:Property property="trait:noise:tick_id">
         "79ae272b2524b9955d73433786a7904f"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1059852608" state="Open" user="nest">
           A Merry coded object which will when dropped into a room generate emits on a random basis.
To use for rooms, Duplicate and rename to something suitable. Make sure this object remains, if it doesnt tell me asap.
Rename the brief to nameemitgenerator, so for example riveremitgenerator.
Call up +tool merry edit %Woename of new object timer:tick.
Scroll down to the add your emits here section and put in whatever you want.
A crowd emit generator and river emit generator are already in progress and can be found in Pendragon:Coders:Nest.
Anyone is free to make use of these.
Many thanks to Zell's torch example for teaching me how to make this code happen.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
