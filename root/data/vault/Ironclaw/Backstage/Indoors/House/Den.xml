<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Backstage:Indoors:UrInside)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="5" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="room"/>
            <Base:SName sname="den"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rooms"/>
            <Base:PName pname="dens"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="storyhost"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the StoryHost's den
          </Base:Description>
          <Base:Description type="examine">
             The StoryHost's den with split log walls, a distressed oak floor and a beamed ceiling. A large ivory desks occupies the center of the room and faces south; it is a slab of pressed ivory upon four legs in their natural tusk form. A high-backed, padded leather chair faces the desk. A door heads <acmd tag="command" cmd="south">south</acmd> to the kitchen and, in turn, to the rest of the house. Access to this den is extremely limited which requires you to visit others as they are unable to get here however... you may push the little blue button for instructions. An intercom has been installed on the southern wall, west of the door.
          </Base:Description>
          <Base:Description type="glance">
             The StoryHost's den.
          </Base:Description>
          <Base:Description type="look">
             The StoryHost's den with split log walls, a distressed oak floor and a beamed ceiling. A large ivory desks occupies the center of the room and faces south; it is a slab of pressed ivory upon four legs in their natural tusk form. A high-backed, padded leather chair faces the desk. A door heads <acmd tag="command" cmd="south">south</acmd> to the kitchen and, in turn, to the rest of the house. Access to this den is extremely limited which requires you to visit others as they are unable to get here however... you may push the little blue button for instructions. An intercom has been installed on the southern wall, west of the door.
          </Base:Description>
          <Base:Description type="mapurl">
             http://www.skotos.net/IronclawGame/images/maps/backstage/staff_den.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-south" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="door"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="south"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="doors"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="oak"/>
          <Base:Adjective adjective="solid"/>
          <Base:Adjective adjective="south"/>
          <Base:Adjective adjective="southern"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the southern door
          </Base:Description>
          <Base:Description type="examine">
             The solid oak door to the <acmd tag="command" cmd="south">south</acmd> leading to the kitchen.
          </Base:Description>
          <Base:Description type="look">
             The solid oak door to the <acmd tag="command" cmd="south">south</acmd> leading to the kitchen.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:Backstage:Indoors:House:Kitchen|exit-north)" door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="button-access" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="button"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="buttons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="access"/>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="desk"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the blue button
          </Base:Description>
          <Base:Description type="examine">
             The blue button is quietly residing on the underside of the ivory desk top. It allows the StoryHost to grant or remove access to the den on a whim. [push button for instructions]
          </Base:Description>
          <Base:Description type="look">
             The blue button is quietly residing on the underside of the ivory desk top. It allows the StoryHost to grant or remove access to the den on a whim.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chair-ivory" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chair"/>
            <Base:SName sname="furnishing"/>
            <Base:SName sname="furniture"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chairs"/>
            <Base:PName pname="furnishings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="ivory"/>
          <Base:Adjective adjective="leather"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the high-backed, padded leather chair
          </Base:Description>
          <Base:Description type="examine">
             The chair is framed using full length ivory tusks and exquisite joinery; animal lovers weep at the sight of it. It has a high back and deep seat covered in padded, black leather.
          </Base:Description>
          <Base:Description type="look">
             The chair is framed using full length ivory tusks and exquisite joinery; animal lovers weep at the sight of it. It has a high back and deep seat covered in padded, black leather.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="desk-ivory" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="desk"/>
            <Base:SName sname="furnishing"/>
            <Base:SName sname="furniture"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="desks"/>
            <Base:PName pname="furnishings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="beveled"/>
          <Base:Adjective adjective="brass"/>
          <Base:Adjective adjective="ivory"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the ivory desk
          </Base:Description>
          <Base:Description type="examine">
             The ivory desk is finely crafted from the tusks of elephants; animal lovers beware. Small carvings line the beveled border along the surface and are finished with a brass edge. The legs are full, untouched tusks which curl dramatically at the tips and are capped in brass to form the feet of the desk. A blue button is secreted on the user's side of the desk, just underneath the top and within easy reach of the matching chair.
          </Base:Description>
          <Base:Description type="look">
             The ivory desk is finely crafted from the tusks of elephants; animal lovers beware. Small carvings line the beveled border along the surface and are finished with a brass edge. The legs are full, untouched tusks which curl dramatically at the tips and are capped in brass to form the feet of the desk.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="intercom" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="intercom"/>
            <Base:SName sname="speaker"/>
            <Base:SName sname="button"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brushed"/>
          <Base:Adjective adjective="intercom"/>
          <Base:Adjective adjective="metal"/>
          <Base:Adjective adjective="north"/>
          <Base:Adjective adjective="northern"/>
          <Base:Adjective adjective="simple"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the intercom
          </Base:Description>
          <Base:Description type="examine">
             The intercom is planted on the south wall, just west of the door. It is a simple brushed metal design bearing a speaker and a single button upon its face. It allows one to converse with those within the house. [Push Button and Evoke. i.e. push button 'Hello, how can I help you?]
          </Base:Description>
          <Base:Description type="look">
             The intercom is planted on the south wall, just west of the door. It is a simple brushed metal design bearing a speaker and a single button upon its face. It allows one to converse with those within the house. [Push Button and Evoke. i.e. push button 'Hello, how can I help you?]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="access:permanent">
         (\{ "death", "azrael", "roo", "topsy" \})
      </Core:Property>
      <Core:Property property="access:temporary"/>
      <Core:Property property="merry:react-post:push-dob">
         X[M] if(sizeof(\$dob) == 1 \&\& NRefDetail(\$dob[0]) == "intercom") \{                                
Call(\$\{Ironclaw:Lib:Builders:Lib\}, "intercom_system", \$actor: \$actor, \$loc: \$this, \$evoke: \$evoke, \$sys: "backstage" );                  
   \}                                               
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:push-dob">
         X[M] /* check if they pushed the button */  
if(\$dob \&\& sizeof(\$dob) == 1 \&\& NRefDetail(\$dob[0]) == "button-access") \{  
 \$button = NRefDetail(\$dob[0]);  
 /* create some messages */  
 \$bad_actor = "You are not allowed to use this button.";  
 \$no_line = "You must include an evoke as in: push button \\"\<evoke\>. \\n Possible commands are: \\n add \<name\> - allows access for 3 minutes \\n perma-add \<name\> - allows access permanently \\n remove \<name\> - removes person from access.";  
 \$long_line = "The evoke you submitted is too long. Submit 2 words such as: add Bubba.";  
 \$short_line = "The evoke you submitted is too short. It takes 2 words such as: add Bubba.";  
 \$bad_action = "You may use add, perma-add, or remove as a command. It is not possible to use: ";  
 \$bad_name = "There is no person named: ";  
 \$add_bad = " already has temporary access.";  
 \$add_line = "You have temporarily allowed access for: ";  
 \$perma_add_bad = " already has permanent access.";  
 \$perma_add_line = "You have permanently allowed access for: ";  
 \$remove_bad = " has already been removed or never had access.";  
 \$remove_line = "You have removed all access for: ";  
 /* set an owner */  
 \$owner = \$\{Chatters:IC:de:death\};  
 /* make sure actor is owner */  
 if(\$actor != \$owner \&\& \$actor != \$\{Chatters:AE:az:azrael\}) \{  
  EmitTo(\$actor, \$bad_actor);  
  return FALSE;  
 \}  
 /* check if there is a evoke */  
 if(!\$evoke) \{  
  EmitTo(\$actor, \$no_line);  
  return FALSE;  
 \}  
 /* turn evoke into line */  
 \$line = \$(raw-evoke);  
 /* break down the line */  
 \$line_arr = explode(\$line, " ");  
 /* make sure it is not too long */  
 if(sizeof(\$line_arr) \>= 3) \{  
  EmitTo(\$actor, \$long_line);  
  return FALSE;  
 \}  
 /* make sure line is not too short */  
 if(sizeof(\$line_arr) == 1) \{  
  EmitTo(\$actor, \$short_line);  
  return FALSE;  
 \}  
  
 /* find the action */  
 \$action = lower_case(\$line_arr[0]);  
  
 /* make sure it's a viable action */  
 if(\$action != "add" \&\& \$action != "perma-add" \&\& \$action != "remove") \{  
  EmitTo(\$actor, \$bad_action+\$action+".");  
  return FALSE;  
 \}  
 /* find the name */  
 \$name = lower_case(\$line_arr[1]);  
 /* make sure it is valid */  
 if(!common::lookup(\$name: \$name)) \{  
  EmitTo(\$actor, \$bad_name+\$name+ ".");  
  return FALSE;  
 \}  
 /* define permanent db */  
 if(\$this."access:permanent") \{  
  \$db = \$this."access:permanent";  
 \} else \{  
  \$db = (\{ \});  
 \}  
 /* define temporary db */  
 if(\$this."access:temporary") \{  
  \$db2 = \$this."access:temporary";  
 \} else \{  
  \$db2 = (\{ \});  
 \}  
  
 /* script for permanent additions */  
 if(\$action == "perma-add") \{  
  if(member(\$name, Arr(\$db))) \{  
   EmitTo(\$actor, \$name+\$perma_add_bad);  
   return FALSE;  
  \}  
  \$db += (\{ \$name \});  
  Set(\$this, "access:permanent", \$db);  
  EmitTo(\$actor, \$perma_add_line+\$name);  
 \}  
  
 /* script for temporary additions */  
 if(\$action == "add") \{  
  if(member(\$name, Arr(\$db2))) \{  
   EmitTo(\$actor, \$name+\$add_bad);  
   return FALSE;  
  \}  
  \$db2 += (\{ \$name \});  
  \$id = ironclaw::set_prop(\$obj: \$this, \$prop: "access:temporary", \$value: \$db2, \$timer: 180);  
  EmitTo(\$actor, \$add_line+\$name);  
 \}  
  
 /* script for removals */  
 if(\$action == "remove") \{  
  if(!member(\$name, Arr(\$db))) \{  
   \$not_perm = 1;  
  \} else \{  
   \$db -= (\{ \$name \});  
   Set(\$this, "access:permanent", \$db);  
  \}  
  if(!member(\$name, Arr(\$db2))) \{  
   \$not_temp = 1;  
  \} else \{  
   \$db2 -= (\{ \$name \});  
   Set(\$this, "access:temporary", \$db2);  
  \}  
  if(\$not_perm \&\& \$not_temp) \{  
   EmitTo(\$actor, \$name+\$remove_bad);  
   return FALSE;  
  \} else \{  
   EmitTo(\$actor, \$remove_line+\$name);  
  \}  
 \}  
  
 \$evoke = nil;  
 return FALSE;  
\}  
  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:enter-from">
         X[M] \$name = \$actor."skotos:charname";       
/* define permanent db */       
if(\$this."access:permanent") \{       
\$db = \$this."access:permanent";       
\} else \{       
\$db = (\{ \});       
\}       
/* define temporary db */       
if(\$this."access:temporary") \{       
\$db2 = \$this."access:temporary";       
\} else \{       
\$db2 = (\{ \});       
\}       
\$no = "You are unable to access this area. Please contact the owner or a superior being. Thank you.";       
if(!member(\$name, Arr(\$db2))) \{       
\$temp = 1;       
\}       
if(!member(\$name, Arr(\$db))) \{       
\$perm = 1;       
\}       
if(\$temp == 1 \&\& \$perm == 1) \{       
EmitTo(\$actor, \$no);       
return FALSE;       
\}       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:teleport">
         X[M] \$name = \$actor."skotos:charname";       
/* define permanent db */       
if(\$this."access:permanent") \{       
\$db = \$this."access:permanent";       
\} else \{       
\$db = (\{ \});       
\}       
/* define temporary db */       
if(\$this."access:temporary") \{       
\$db2 = \$this."access:temporary";       
\} else \{       
\$db2 = (\{ \});       
\}       
\$no = "You are unable to access this area. Please contact the owner or a superior being. Thank you.";       
if(!member(\$name, Arr(\$db2))) \{       
\$temp = 1;       
\}       
if(!member(\$name, Arr(\$db))) \{       
\$perm = 1;       
\}       
if(\$temp == 1 \&\& \$perm == 1) \{       
EmitTo(\$actor, \$no);       
return FALSE;       
\}       
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1293440611, "tunk_bodin", "X", 1293497297, "tunk_bodin", "X", 1293578836, "tonyd", "P", 1293578899, "tonyd", "P", 1293579183, "tonyd", "P", 1293579200, "tonyd", "S", 1293579247, "tonyd", "P", 1293588917, "tonyd", "S", 1293588925, "tonyd", "S", 1293588929, "tonyd", "S", 1293605206, "tunk_bodin", "X", 1309730179, "tunk_bodin", "X", 1509143098, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1305660717
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
