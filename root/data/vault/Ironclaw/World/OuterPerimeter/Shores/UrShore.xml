<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:World:OuterPerimeter:UrExitCodes)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="100" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="here"/>
            <Base:SName sname="room"/>
            <Base:SName sname="shore"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heres"/>
            <Base:PName pname="rooms"/>
            <Base:PName pname="shores"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="sandy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the sandy shore
          </Base:Description>
          <Base:Description type="examine">
             The sandy shore appears to be comprised of fine dunes of sand and the restless tide of the Bay of Auvrich.
          </Base:Description>
          <Base:Description type="glance">
             The sandy shore appears to be comprised of fine dunes of sand and the restless tide of the Bay of Auvrich.
          </Base:Description>
          <Base:Description type="look">
             The sandy shore appears to be comprised of fine dunes of sand and the restless tide of the Bay of Auvrich.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="bay" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bay"/>
            <Base:SName sname="water"/>
            <Base:SName sname="ocean"/>
            <Base:SName sname="sea"/>
            <Base:SName sname="wave"/>
            <Base:SName sname="shore"/>
            <Base:SName sname="coast"/>
            <Base:SName sname="auvrich"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bays"/>
            <Base:PName pname="waters"/>
            <Base:PName pname="oceans"/>
            <Base:PName pname="seas"/>
            <Base:PName pname="waves"/>
            <Base:PName pname="shores"/>
            <Base:PName pname="coasts"/>
            <Base:PName pname="auvrichs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="auvrich"/>
          <Base:Adjective adjective="bay"/>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="blue-green"/>
          <Base:Adjective adjective="coast"/>
          <Base:Adjective adjective="cool"/>
          <Base:Adjective adjective="graceless"/>
          <Base:Adjective adjective="green"/>
          <Base:Adjective adjective="inviting"/>
          <Base:Adjective adjective="ocean"/>
          <Base:Adjective adjective="of"/>
          <Base:Adjective adjective="refreshing"/>
          <Base:Adjective adjective="sea"/>
          <Base:Adjective adjective="shore"/>
          <Base:Adjective adjective="water"/>
          <Base:Adjective adjective="wave"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the Bay of Auvrich
          </Base:Description>
          <Base:Description type="examine">
             The Bay of Auvrich. {The blue-green waves crash gracelessly against the shore.|The deep blue water seems inviting.|The colors of the sky reflect on the water's surface.|The grand expanse of water seems endless.|The cool, refreshing water extends to the horizon.}
          </Base:Description>
          <Base:Description type="look">
             The Bay of Auvrich.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="churning bay" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bay"/>
            <Base:SName sname="water"/>
            <Base:SName sname="ocean"/>
            <Base:SName sname="sea"/>
            <Base:SName sname="wave"/>
            <Base:SName sname="shore"/>
            <Base:SName sname="coast"/>
            <Base:SName sname="debris"/>
            <Base:SName sname="auvrich"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bays"/>
            <Base:PName pname="waters"/>
            <Base:PName pname="oceans"/>
            <Base:PName pname="seas"/>
            <Base:PName pname="waves"/>
            <Base:PName pname="shores"/>
            <Base:PName pname="coasts"/>
            <Base:PName pname="auvrichs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="auvrich"/>
          <Base:Adjective adjective="bay"/>
          <Base:Adjective adjective="black"/>
          <Base:Adjective adjective="blackened"/>
          <Base:Adjective adjective="clouded"/>
          <Base:Adjective adjective="coast"/>
          <Base:Adjective adjective="crashing"/>
          <Base:Adjective adjective="foam"/>
          <Base:Adjective adjective="ominous"/>
          <Base:Adjective adjective="sea"/>
          <Base:Adjective adjective="shore"/>
          <Base:Adjective adjective="water"/>
          <Base:Adjective adjective="wave"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the churning Bay of Auvrich
          </Base:Description>
          <Base:Description type="examine">
             The churning Bay of Auvrich looks agitated. {The water has turned an ominous color of black and has white foam forming on it's crashing waves.| Quickly moving debris skips along the shoreline at an alarming rate.| The clouded black water gives you the impression something is amiss.}
          </Base:Description>
          <Base:Description type="look">
             The churning Bay of Auvrich.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="dune" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dune"/>
            <Base:SName sname="sand"/>
            <Base:SName sname="slope"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="dunes"/>
            <Base:PName pname="sands"/>
            <Base:PName pname="slopes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="fine"/>
          <Base:Adjective adjective="gentle"/>
          <Base:Adjective adjective="sandy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fine, sandy dune
          </Base:Description>
          <Base:Description type="look">
             A gentle dune slopes down toward the bay with a short deck set up to the east.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="floor" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="floor"/>
            <Base:SName sname="ground"/>
            <Base:SName sname="track"/>
            <Base:SName sname="rubble"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="floors"/>
            <Base:PName pname="grounds"/>
            <Base:PName pname="tracks"/>
            <Base:PName pname="rubbles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="dirt"/>
          <Base:Adjective adjective="dusty"/>
          <Base:Adjective adjective="loose"/>
          <Base:Adjective adjective="sandy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the sandy floor
          </Base:Description>
          <Base:Description type="look">
             The sandy floor that makes up the shore is comprised of dwindling, grassy islands and loose, dusty rubble mixed with the fine dune of sand.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ground_broken" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ground"/>
            <Base:SName sname="floor"/>
            <Base:SName sname="pothole"/>
            <Base:SName sname="rubble"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="grounds"/>
            <Base:PName pname="floors"/>
            <Base:PName pname="potholes"/>
            <Base:PName pname="rubbles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="broken"/>
          <Base:Adjective adjective="potholed"/>
          <Base:Adjective adjective="rubbled"/>
          <Base:Adjective adjective="torn"/>
          <Base:Adjective adjective="weathered"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the broken ground
          </Base:Description>
          <Base:Description type="examine">
             The ground is broken and torn up by harsh weather. Potholes and rubble line the area.
          </Base:Description>
          <Base:Description type="look">
             The sand is disheveled. Potholes and rubble line the area.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="horizon" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="horizon"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="horizons"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="curving"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the horizon
          </Base:Description>
          <Base:Description type="examine">
             The gently curving horizon.
          </Base:Description>
          <Base:Description type="look">
             The gently curving horizon.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="middle" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="middle"/>
            <Base:SName sname="center"/>
            <Base:SName sname="centre"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="middles"/>
            <Base:PName pname="centers"/>
            <Base:PName pname="centres"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the middle of the shore
          </Base:Description>
          <Base:Description type="look">
             The middle of the shore is made up of sand, dirt and dwindling grass.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="muddy bay" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bay"/>
            <Base:SName sname="water"/>
            <Base:SName sname="ocean"/>
            <Base:SName sname="sea"/>
            <Base:SName sname="mud"/>
            <Base:SName sname="shore"/>
            <Base:SName sname="coast"/>
            <Base:SName sname="auvrich"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bays"/>
            <Base:PName pname="waters"/>
            <Base:PName pname="oceans"/>
            <Base:PName pname="seas"/>
            <Base:PName pname="shores"/>
            <Base:PName pname="coasts"/>
            <Base:PName pname="auvrichs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="auvrich"/>
          <Base:Adjective adjective="bay"/>
          <Base:Adjective adjective="blackened"/>
          <Base:Adjective adjective="coast"/>
          <Base:Adjective adjective="dead"/>
          <Base:Adjective adjective="dirt"/>
          <Base:Adjective adjective="endless"/>
          <Base:Adjective adjective="filth"/>
          <Base:Adjective adjective="fish"/>
          <Base:Adjective adjective="rancid"/>
          <Base:Adjective adjective="sea"/>
          <Base:Adjective adjective="shore"/>
          <Base:Adjective adjective="shoreline"/>
          <Base:Adjective adjective="slim"/>
          <Base:Adjective adjective="sludge"/>
          <Base:Adjective adjective="waterless"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the muddy Bay of Auvrich
          </Base:Description>
          <Base:Description type="examine">
             The waterless Bay of Auvrich is extremely muddy. If you are daring you could gather some of the mud. {The blackened mud looks more like slimy sludge then mud.|You see no sign of where the water has gone.|If you wish to play in filth perhaps you might like the endless amount of mud seen where the water used to be.|The smell of the mud  makes you think of dead fish and rancid dirt.}
          </Base:Description>
          <Base:Description type="look">
             The muddy Bay of Auvrich.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="emit:hot:day">
         "\{You feel the heat rise up from the hard dry \{ground\|earth\}.\| The \{hot\|burning\|sweltering\} sun beats down on your back.\| The \{heat\|warmth\} of the sun brings out the worst \{smells\|scents\|odors\} of \{the city\|docktown\}.\}"
      </Core:Property>
      <Core:Property property="emit:storm">
         "\{Rain \{pours\|falls\} down from \{over head\|above\|the sky\}.\|Several lightning bolts lance down from \{over head\|above\|the sky\} striking in the distance.\| A loud clap of thunder sounds, sending vibrations through the ground, shaking you.\|\{A series of lightning\|A lightning bolt\} streaks across \{over head\|above\|the sky\} spreading out like fingers on a hand.\| Lightning emblazons the sky spreading a \{eerie\|ominous\} white glow on everything around you.\| The rain \{lightens\|calms\|weakens\} for a moment before a \{clap\|shock\|boom\} of thunder ushers it's heavy return.\| The dark clouds billow ominously \{over head\|above\|through the sky\}, sending rain falling down in waves.\| The wind blows the rain harshly \{against your face\|in your eyes\}.\|A heavy blast of rain forces you to \{close your eyes.\|turn your face\}.\}"
      </Core:Property>
      <Core:Property property="export:backup:fishing:bay:fisharray">
         (\{ \<Allegory:Props:Animals:Fish:OddCatches:Seaweed\>, \<Allegory:Props:Animals:Fish:OddCatches:BrokenShell\>, \<Allegory:Props:Animals:Fish:OddCatches:Driftwood\>, \<Allegory:Props:Animals:Fish:OddCatches:EmptyContainer\>, \<Allegory:Props:Animals:Fish:OddCatches:FishingLine\>, \<Allegory:Props:Animals:Fish:OddCatches:SoggyScroll\>, \<Allegory:Props:Animals:Fish:OddCatches:Boots\>, \<Allegory:Props:Animals:Fish:OddCatches:RustyBucket\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\> \})
      </Core:Property>
      <Core:Property property="export:fishing:bay:fisharray">
         (\{ \<Allegory:Props:Animals:Fish:OddCatches:Seaweed\>, \<Allegory:Props:Animals:Fish:OddCatches:BrokenShell\>, \<Allegory:Props:Animals:Fish:OddCatches:Driftwood\>, \<Allegory:Props:Animals:Fish:OddCatches:EmptyContainer\>, \<Allegory:Props:Animals:Fish:OddCatches:FishingLine\>, \<Allegory:Props:Animals:Fish:OddCatches:SoggyScroll\>, \<Allegory:Props:Animals:Fish:OddCatches:Boots\>, \<Allegory:Props:Animals:Fish:OddCatches:RustyBucket\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bonefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Weakfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Gag\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:Scamp\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverPerch\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:Bluefish\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:BlackGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:Croaker\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:RedDrum\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SandSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:YellowfinGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Spearfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:Jewfish\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:LefteyeFlounder\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:RedGrouper\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:Cobia\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:SilverSeatrout\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\>, \<Allegory:Props:Animals:Fish:Saltwater:BlueMarlin\> \})
      </Core:Property>
      <Core:Property property="export:fishing:stock">
         10
      </Core:Property>
      <Core:Property property="export:float:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "float_on_water");
      </Core:Property>
      <Core:Property property="export:place:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "place_in_water");
      </Core:Property>
      <Core:Property property="export:swimming:waterdetails">
         (\{ "bay" \})
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "fish with a salty tang"
      </Core:Property>
      <Core:Property property="float:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "float_on_water");
      </Core:Property>
      <Core:Property property="merry:react-post:enter-from">
         X[M] \$actor."merry:act-post:stance" = \$this."float:script";      
\$actor."merry:act-post:approach" = \$this."float:script";      
\$actor."merry:act-post:leave" = \$this."float:script";      
\$actor."merry:act-post:place" = \$this."place:script";      
\$actor."merry:act-post:zthrow" = \$this."place:script";      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:fill-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react-post:refill-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react-post:tap-iob">
         X[M] /* D=Refill first appropriate container in actor's inventory from this vessel. */  
constant THE = STYLE_DEFINITE \| STYLE_NONPOSS;  
object liquid, container, refiller, holder;  
int    potential;  
if (!sizeof(this."base:inventory")) \{  
    EmitTo(\$actor, Describe(this, nil, nil, THE) + " can not provide you any water now.");  
    return FALSE;  
\}  
container = shared_drink::find_container_for(\$what: this."base:inventory"[0]."core:ur:parent", \$where: \$actor, \$tight: 1);  
if (!container) \{  
    EmitTo(\$actor, "You are not holding a vessel of any kind which could be filled with " + Describe(this."base:inventory"[0]) + ".");  
    return FALSE;  
\}  
holder = this."base:holder";  
if (holder \&\& holder."base:volition" \&\& holder != \$actor) \{  
    if (\$actor."base:proximity" != holder \&\& holder."base:proximity" != \$actor) \{  
        EmitTo(\$actor, "You must approach " + Describe(holder) + " in order to do that.");  
        return FALSE;  
    \}  
\}  
if (shared_drink::liquid_transfer(\$from: this, \$into: container)) \{  
    /* Transfer was successful. */  
    EmitTo(\$actor, "You collect " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, nil, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""));  
    EmitIn(\$actor."base:environment", Describe(\$actor) + " collects some of " + Describe(this, nil, nil, THE) + "'s contents into " + Describe(container, \$actor) + "." + (\$emptied ? " " + capitalize(Describe(this, nil, nil, THE)) + " can not provide any water now." : ""), \$actor);  
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:gather-dob">
         X[M] if (NRefDetail(\$target) == "muddy_bay")                       
  \{            
\$object = Spawn(\$\{Ironclaw:Props:Plot:VampHunt:Trap\}); \$object."base:environment" = \$actor;                                      
EmitTo(\$actor, "You somehow pick up some sludge mud from the waterless bay.");                         
EmitIn(\$actor."base:environment", Describe(\$actor)+" picks up some sludge mud from the waterless bay.", \$actor);              
return FALSE;           
\} else \{                        
return TRUE;           
\}
      </Core:Property>
      <Core:Property property="merry:react:enter-into">
         X[M] /* remove the scripts when the actor leaves the water area */      
\$actor."merry:act-post:stance" = nil;      
\$actor."merry:act-post:approach" = nil;      
\$actor."merry:act-post:leave" = nil;      
\$actor."merry:act-post:place" = nil;      
\$actor."merry:act-post:zthrow" = nil;      
      
/* and, just in case anyone still has these scripts */      
\$actor."merry:act-pre:place" = nil;      
\$actor."merry:act-pre:zthrow" = nil;      
return TRUE;
      </Core:Property>
      <Core:Property property="place:script">
         X[M] return Call(\$\{IronClaw:Lib:Common\}, "place_in_water");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1310576378, "meandmine", "X", 1310576549, "meandmine", "K", 1313229338, "morwenlorelie", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:smell">
         "fish with a salty tang"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
