<object clone="/base/obj/thing" owner="librarysage">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:World:DockTown:Roads:UR:UrAlley)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="here"/>
            <Base:SName sname="street"/>
            <Base:SName sname="road"/>
            <Base:SName sname="alley"/>
            <Base:SName sname="alleyway"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="streets"/>
            <Base:PName pname="roads"/>
            <Base:PName pname="alleys"/>
            <Base:PName pname="alleyway"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="alley"/>
          <Base:Adjective adjective="cobbled"/>
          <Base:Adjective adjective="dingy"/>
          <Base:Adjective adjective="ill"/>
          <Base:Adjective adjective="ill-kept"/>
          <Base:Adjective adjective="kept"/>
          <Base:Adjective adjective="narrow"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">alleyway</Base:Description>
          <Base:Description type="examine">
             A narrow cobbled alleyway. The alley is dingy and ill-kept, clearly not a main thoroughfair.  There are barrels of trash, as well as garbage on the street.<dawn> Morning has broken and the first rays of sunshine can be seen shimmering down, slightly illuminating the narrow passage.</dawn><morning> The sun has risen and the hustle and bustle of the city is muted by the close walls, but still audible.</morning><midday> The midday sun is high in the sky and waves of heat can be seen shimmering off the cobblestones.</midday><afternoon> The afternoon sun does little to lighten the dingy alley.</afternoon><dusk> The sun has set and the alley is deeply shadowed in the failing light.</dusk><evening> Evening has fallen and the alley is nearly pitch black. There is a slight chill in the air.</evening><midnight> Midnight has struck and the silent alley is enveloped in total darkness.</midnight><aftermidnight> A barely noticible lightening on the overhangs above signal the coming of dawn.</aftermidnight>  The alley ends at Helloise Lane to the <acmd tag="command" cmd="north">north</acmd> and Sea Street to the <acmd tag="command" cmd="south">south</acmd>.  To the <acmd tag="command" cmd="west">west</acmd>, a heavy iron door is set into the brick wall.
          </Base:Description>
          <Base:Description type="glance">
             An alleyway.
          </Base:Description>
          <Base:Description type="look">
             A narrow cobbled alleyway, dirty and ill-kept.<day> The alley is dimly lit by the day's light.</day><night> The alley is deeply wrapped in near pitch blackness.</night> To the <acmd tag="command" cmd="north">north</acmd> and <acmd tag="command" cmd="south">south</acmd>, the alley ends at main streets.  To the <acmd tag="command" cmd="west">west</acmd> is an iron door.
          </Base:Description>
          <Base:Description type="mapurl">
             http://www.skotos.net/IronclawGame/images/maps/<night>night/</night>docktown/streets/heltosea.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-north" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="exit"/>
            <Base:SName sname="north"/>
            <Base:SName sname="opening"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
            <Base:PName pname="openings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="north"/>
          <Base:Adjective adjective="northern"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             an opening
          </Base:Description>
          <Base:Description type="look">
             An opening leading to Helloise Way. In this direction, you can see: <br/> <describe-view view="$(IronClaw:Rooms:Roads:HelloiseStreet:Seven)" type="look"/>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:World:DockTown:Roads:Streets:Helloise07|exit-south)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="north"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-south" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="opening"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="south"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="exits"/>
            <Base:PName pname="openings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="south"/>
          <Base:Adjective adjective="southern"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             an opening
          </Base:Description>
          <Base:Description type="look">
             An opening leading to Sea Street. In this direction, you can see: <br/> <describe-view view="$(IronClaw:Rooms:Roads:SeaStreet:Three)" type="look"/>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:World:DockTown:Roads:Streets:Sea03|exit-north)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="garbage" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="garbage"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="garbages"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="dirty"/>
          <Base:Adjective adjective="unidentifiable"/>
          <Base:Adjective adjective="useless"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a bundle of garbage
          </Base:Description>
          <Base:Description type="examine">
             A bundle of garbage, the contents unidentifiable. It looks useless and dirty, and not worth your time.
          </Base:Description>
          <Base:Description type="glance">Trash.</Base:Description>
          <Base:Description type="look">
             A bundle of garbage, the contents unidentifiable.
          </Base:Description>
          <Base:Description type="react-desc:movement/arrive">
             You push your way through a small mountain of trash and arrive in a dark alley.
          </Base:Description>
          <Base:Description type="react3-desc:movement/arrive">
             <describe what="$(Actor)" cap="1"/> pushes into the alley through a heap of garbage, {$(actor.base:pronoun) |$(actor.base:pronoun)} is announced by an avalanche of refuse.
          </Base:Description>
          <Base:Description type="react3-desc:movement/leave">
             <describe what="$(Actor)" cap="1"/> struggles through a heap of trash. An avalanche of refuse follows $(actor.base:possessive) departure.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(Ironclaw:World:DockTown:Underground:Jailhouse:Tunnels:Eight|exit-southeast)" door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="true" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="down"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cobblestones" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cobblestone"/>
            <Base:SName sname="stone"/>
            <Base:SName sname="floor"/>
            <Base:SName sname="ground"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cobblestones"/>
            <Base:PName pname="stones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cobble"/>
          <Base:Adjective adjective="countless"/>
          <Base:Adjective adjective="embedded"/>
          <Base:Adjective adjective="firmly"/>
          <Base:Adjective adjective="firmly-embedded"/>
          <Base:Adjective adjective="old"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a cobblestone
          </Base:Description>
          <Base:Description type="examine">
             One of a series of countless cobblestones paving the road. The stones look old and firmly embedded.
          </Base:Description>
          <Base:Description type="look">
             One of a series of countless cobblestones paving the road.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-west" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="door"/>
            <Base:SName sname="west"/>
            <Base:SName sname="exit"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="doors"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="heavy"/>
          <Base:Adjective adjective="iron"/>
          <Base:Adjective adjective="secure"/>
          <Base:Adjective adjective="sturdy"/>
          <Base:Adjective adjective="west"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             iron door
          </Base:Description>
          <Base:Description type="examine">
             A heavy iron door, sturdy and secured with rivets. A small slot is visible near the top of the door for those inside to look out.
          </Base:Description>
          <Base:Description type="look">
             A heavy iron door.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="true" deadbolt="false">
          <Base:Direction dir="west"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="peekhole" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="true" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="peekhole"/>
            <Base:SName sname="peephole"/>
            <Base:SName sname="hatch"/>
            <Base:SName sname="hole"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="peekholes"/>
            <Base:PName pname="peepholes"/>
            <Base:PName pname="hatches"/>
            <Base:PName pname="holes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="metal"/>
          <Base:Adjective adjective="peek"/>
          <Base:Adjective adjective="peep"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             metal peekhole
          </Base:Description>
          <Base:Description type="look">
             A metal peekhole in an iron door.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" keycode="OBJ(Chatters:IC:be:behemoth)" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="trash" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trash"/>
            <Base:SName sname="piece"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trashes"/>
            <Base:PName pname="pieces"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="dirty"/>
          <Base:Adjective adjective="piece"/>
          <Base:Adjective adjective="trash"/>
          <Base:Adjective adjective="unidentifiable"/>
          <Base:Adjective adjective="useless"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a piece of trash
          </Base:Description>
          <Base:Description type="examine">
             An unidentifiable bit of trash.  It looks useless and dirty, and not worth your time.
          </Base:Description>
          <Base:Description type="look">
             An unidentifiable bit of trash.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="trashcans" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trashcan"/>
            <Base:SName sname="can"/>
            <Base:SName sname="barrel"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trashcans"/>
            <Base:PName pname="cans"/>
            <Base:PName pname="barrels"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="full"/>
          <Base:Adjective adjective="round"/>
          <Base:Adjective adjective="several"/>
          <Base:Adjective adjective="trash"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a trash barrel
          </Base:Description>
          <Base:Description type="examine">
             One of several trash barrels used by the denizens of the surrounding buildings.  It is round, about average waist height, and made of wooden planks strapped together by iron rings.  Upon closer inspection you find that it is full of various bits of rubbish, none of which is worth saving or taking.
          </Base:Description>
          <Base:Description type="glance">
             A trash barrel.
          </Base:Description>
          <Base:Description type="look">
             One of several trash barrel used by the denizens of the surrounding buildings.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:door/opens">
         X[M] if(NRefDetail(\$target) == "exit-west")      
\{      
\$delay(20, FALSE, "a51e");      
EmitIn(\$this, "A muscular grungy boar leaves through the open door and slams it behind him.");      
    this."details:exit-west:exit:closed" = 1;      
\}      
else if (NRefDetail(\$target) == "peekhole")      
\{      
EmitIn(\$this, "You see a pair of large bloodshot eyes gaze out from the peekhole. You hear a husky voice call from the other side, 'Go away! We're closed'");      
      
\$delay(20, FALSE, "29aa");      
      
if (this."details:exit-west:exit:closed" == 1)      
\{      
EmitIn(\$this, "You hear a snort and a grunt before the peekhole is slammed shut.");      
    this."details:peekhole:exit:closed" = 1;      
\}      
\} else if (NRefDetail(\$target) == "garbage") \{ 
\$delay(20, FALSE, "ab11"); 
this."details:garbage:exit:closed" = 1; 
\}
      </Core:Property>
      <Core:Property property="merry:react-post:knock-dflt">
         X[M] if((NRefDetail(\$target) == "exit-west") \|\| (NRefDetail(\$target) == "peekhole"))    
\{    
  if(this."details:exit-west:exit:closed" \&\& this."details:peekhole:exit:closed")    
  \{    
    this."details:peekhole:exit:closed" = nil;    
  \}    
  \$delay(20, FALSE, "e8dc");    
    
  if(this."details:exit-west:exit:closed" \&\& this."details:peekhole:exit:closed")    
  \{    
    EmitIn(\$this, "You hear a snort from inside, 'Go away. We're closed.'");    
  \}    
  this."details:peekhole:exit:closed" = 1;    
\}    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:whisper-dob">
         X[M] if(!\$evoke) return TRUE;   
   
\$room = \$actor."base:environment";   
\$password = Str("beer me captain");   
\$whisper = lower_case(\$evoke[1..strlen(\$evoke)-3]);   
/*replace_strings(\$evoke,"\\"","");  */   
if (NRefDetail(\$target) == "exit-west" \|\| NRefDetail(\$target) == "peekhole") \{   
 if(\$whisper == \$password) \{   
  if (this."details:peekhole:exit:closed" == 0)   
   this."details:peekhole:exit:closed" = 1;   
  \$delay(3, FALSE, "3448");   
  this."details:exit-west:exit:closed" = 0;   
  if(this."details:exit-west:exit:closed")\{   
    EmitIn(\$room, "A muscular grungy boar walks through the open door and motions for " + Describe(\$actor) + " to enter.", \$actor);   
    EmitTo(\$actor, "A muscular grungy boar walks through the open door and motions for you to enter.");   
  \}   
 \}   
\}   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:whisper-iob">
         X[M] if(!\$evoke) return TRUE;   
   
\$room = \$actor."base:environment";   
\$password = Str("beer me captain");   
\$whisper = lower_case(\$evoke[1..strlen(\$evoke)-3]);   
/*replace_strings(\$evoke,"\\"","");  */   
if (NRefDetail(\$target) == "exit-west" \|\| NRefDetail(\$target) == "peekhole") \{   
 if(\$whisper == \$password) \{   
  if (this."details:peekhole:exit:closed" == 0)   
   this."details:peekhole:exit:closed" = 1;   
  \$delay(3, FALSE, "3448");   
  this."details:exit-west:exit:closed" = 0;   
  if(this."details:exit-west:exit:closed")\{   
    EmitIn(\$room, "A muscular grungy boar walks through the open door and motions for " + Describe(\$actor) + " to enter.", \$actor);   
    EmitTo(\$actor, "A muscular grungy boar walks through the open door and motions for you to enter.");   
  \}   
 \}   
\}   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:part-dob">
         X[M] if (NRefDetail(\$target) == "trash")         
  \{         
  if (this."details:garbage:exit:closed")         
    \{         
    this."details:garbage:exit:closed" = 0;         
  \}         
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1055793680, "bradbach", "E", 1055793719, "bradbach", "E", 1055793754, "bradbach", "E", 1055794542, "bradbach", "E", 1056294452, "bradbach", "E", 1056294498, "bradbach", "E", 1056296704, "bradbach", "E", 1056296729, "bradbach", "E", 1056296762, "bradbach", "E", 1056296790, "bradbach", "E", 1056296828, "bradbach", "E", 1056298202, "bradbach", "E", 1056298534, "bradbach", "E", 1056320066, "bradbach", "E", 1056320087, "bradbach", "E", 1056320758, "bradbach", "E", 1056320778, "bradbach", "E", 1056320922, "bradbach", "E", 1056321339, "bradbach", "E", 1056321356, "bradbach", "E", 1056321489, "bradbach", "E", 1056321505, "bradbach", "E", 1056322269, "bradbach", "E", 1056322605, "bradbach", "E", 1056322635, "bradbach", "E", 1056322677, "bradbach", "E", 1056408101, "bradbach", "E", 1056408112, "bradbach", "E", 1056408369, "bradbach", "E", 1056408532, "bradbach", "E", 1106038470, "tonyd", "E", 1106038486, "tonyd", "E", 1106038512, "tonyd", "E", 1106038627, "tonyd", "E", 1106039489, "tonyd", "E", 1106039546, "tonyd", "E", 1106039564, "tonyd", "E", 1106041293, "tonyd", "E", 1106064596, "tunk_bodin", "X", 1106064643, "tunk_bodin", "X", 1106064710, "tunk_bodin", "X", 1111292702, "tonyd", "E", 1111292716, "tonyd", "E", 1119983817, "librarysage", "E", 1119983938, "librarysage", "E", 1119984250, "librarysage", "X", 1119986563, "librarysage", "E", 1120514603, "librarysage", "E", 1120514916, "librarysage", "E", 1120516221, "librarysage", "E", 1120517253, "librarysage", "E", 1120517358, "librarysage", "E", 1120517377, "librarysage", "E", 1120517388, "librarysage", "E", 1120517465, "librarysage", "X", 1120517524, "librarysage", "E", 1120517699, "librarysage", "E", 1120518089, "librarysage", "E", 1120550023, "tonyd", "E", 1120550216, "librarysage", "E", 1120550242, "librarysage", "E", 1120550280, "tonyd", "E", 1120550667, "librarysage", "E", 1120550907, "tonyd", "E", 1120711675, "librarysage", "E", 1120711699, "librarysage", "E", 1120711748, "librarysage", "E", 1120712167, "librarysage", "E", 1120712215, "librarysage", "E", 1123709950, "librarysage", "E", 1123810596, "librarysage", "E", 1123810607, "librarysage", "E", 1123810628, "librarysage", "E", 1123810641, "librarysage", "E", 1123811269, "librarysage", "E", 1123811631, "librarysage", "E", 1123812104, "librarysage", "E", 1123812123, "librarysage", "E", 1123812265, "librarysage", "X", 1123812539, "librarysage", "E", 1123812573, "librarysage", "E", 1123812586, "librarysage", "E", 1123812697, "librarysage", "X", 1123812817, "librarysage", "E", 1123894563, "librarysage", "E", 1123894577, "librarysage", "E", 1123894598, "librarysage", "E", 1123894611, "librarysage", "E", 1123894693, "librarysage", "E", 1123896032, "librarysage", "X", 1123896765, "librarysage", "E", 1123896933, "librarysage", "X", 1123897097, "librarysage", "E", 1123897712, "librarysage", "E", 1123897765, "librarysage", "E", 1123897897, "librarysage", "X", 1123898054, "librarysage", "E", 1123899004, "librarysage", "E", 1123899148, "librarysage", "E", 1123901870, "arikon", "E", 1123902072, "arikon", "E", 1123902161, "librarysage", "E", 1123902178, "librarysage", "E", 1123902204, "arikon", "E", 1123902239, "arikon", "E", 1123902258, "arikon", "E", 1123902277, "arikon", "E", 1123902354, "librarysage", "E", 1123902356, "arikon", "E", 1123902383, "arikon", "E", 1123902387, "librarysage", "E", 1123902493, "arikon", "E", 1123902578, "arikon", "E", 1123902677, "arikon", "E", 1123902814, "arikon", "E", 1123902938, "arikon", "E", 1123903073, "arikon", "E", 1123903127, "arikon", "E", 1123903163, "librarysage", "E", 1123903579, "arikon", "E", 1123903606, "arikon", "E", 1123903619, "arikon", "E", 1123903656, "arikon", "E", 1123903676, "arikon", "E", 1123903731, "arikon", "E", 1123903830, "arikon", "E", 1123904188, "arikon", "E", 1123907477, "arikon", "E", 1123908091, "arikon", "E", 1123908159, "arikon", "E", 1123908562, "arikon", "E", 1123908793, "arikon", "E", 1123909011, "arikon", "E", 1123909100, "arikon", "E", 1123909248, "arikon", "E", 1123909382, "arikon", "E", 1123910792, "arikon", "E", 1124014131, "tonyd", "E", 1124014663, "tonyd", "E", 1124014716, "tonyd", "K", 1124014934, "tonyd", "E", 1124015227, "tonyd", "E", 1124016037, "tonyd", "E", 1124016054, "tonyd", "E", 1124016072, "tonyd", "E", 1127181328, "tunk_bodin", "X", 1127230979, "tunk_bodin", "X", 1127250497, "tunk_bodin", "X", 1127252557, "tunk_bodin", "X", 1128394186, "tunk_bodin", "X", 1128394611, "tunk_bodin", "X", 1128403389, "tunk_bodin", "X", 1128403458, "tunk_bodin", "X", 1128404176, "tunk_bodin", "X", 1128578817, "abiwan", "K", 1129252893, "tunk_bodin", "X", 1129597065, "tunk_bodin", "X", 1135051394, "abiwan", "K", 1135964681, "abiwan", "K", 1136179544, "tonyd", "E", 1136179599, "tonyd", "E", 1136179635, "tonyd", "E", 1136179694, "tonyd", "E", 1136179722, "tonyd", "E", 1136179760, "tonyd", "E", 1139189510, "arikon", "E", 1139189559, "arikon", "E", 1139189600, "arikon", "E", 1140046953, "tonyd", "P", 1140047008, "tonyd", "P", 1140047035, "tonyd", "P", 1140047186, "tonyd", "P", 1140047287, "tonyd", "P", 1140047394, "tonyd", "P", 1140047442, "tonyd", "P", 1140047530, "tonyd", "P", 1140047549, "tonyd", "P", 1140047575, "tonyd", "P", 1140047633, "tonyd", "P", 1140047653, "tonyd", "P", 1140047758, "tonyd", "P", 1140047783, "tonyd", "P", 1172112188, "tunk_bodin", "X", 1293839174, "tonyd", "P", 1293839207, "tonyd", "P", 1293839333, "tonyd", "P", 1293839452, "tonyd", "P", 1309666890, "morwenlorelie", "E", 1309666911, "morwenlorelie", "E", 1309667096, "morwenlorelie", "X", 1309667267, "morwenlorelie", "K", 1309667279, "morwenlorelie", "X", 1309667324, "morwenlorelie", "E", 1309667353, "morwenlorelie", "X", 1309748360, "tunk_bodin", "X", 1311913225, "rorschakovacs", "E", 1311913253, "rorschakovacs", "E", 1311913387, "rorschakovacs", "E", 1311913502, "rorschakovacs", "E", 1311913693, "rorschakovacs", "E", 1311913749, "rorschakovacs", "E", 1311913784, "rorschakovacs", "E", 1311913798, "rorschakovacs", "E", 1311913844, "rorschakovacs", "E", 1311913876, "rorschakovacs", "E", 1311913933, "rorschakovacs", "E", 1311914050, "rorschakovacs", "E", 1312318392, "rorschakovacs", "E", 1312445548, "rorschakovacs", "E", 1312445667, "rorschakovacs", "E", 1312445930, "rorschakovacs", "E", 1340597001, "rorschakovacs", "E", 1340597022, "rorschakovacs", "E", 1340597037, "rorschakovacs", "E", 1519182968, "ezralee", "R", 1570808073, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="searching:cobblestones:searchmapping">
         ([ "14":(\{ nil \}) ])
      </Core:Property>
      <Core:Property property="searching:randomobjects">
         1
      </Core:Property>
      <Core:Property property="searching:trash:actormapping">
         ([ "Chatters:IC:tr:troyes":(\{ \<[Allegory:Props:Clothing:Containers:Pouch]#272447\> \}) ])
      </Core:Property>
      <Core:Property property="searching:trash:searchmapping">
         ([ "8":(\{ \<[Allegory:Props:Clothing:Containers:Pouch]#272447\> \}) ])
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="sys:emit:population"/>
      <Core:Property property="trait:smells:lastchecked">
         1569596019
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
