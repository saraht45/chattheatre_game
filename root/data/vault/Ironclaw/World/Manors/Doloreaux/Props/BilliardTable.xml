<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="billiard"/>
            <Base:SName sname="table"/>
            <Base:SName sname="tabelle"/>
            <Base:SName sname="furniture"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tabelles"/>
            <Base:PName pname="furnitures"/>
            <Base:PName pname="tables"/>
            <Base:PName pname="billiard"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="round"/>
          <Base:Adjective adjective="table"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             round billiard table
          </Base:Description>
          <Base:Description type="examine">
             A round billiard table sits in the center of the gaming area. The table is about 5 feet in diameter with three feet of space around the table for ease of <acmd tag="command" cmd="shoot table">SHOOT</acmd>the billiard balls. The table itself is made of dark pine with a green felt lining on the table. The edges are raised four inches railings so that the balls don't roll off the table. Short, curved cue sticks and three billiard balls accompany the table. The goal of the game is to set a predetermined number. You then aim your cue ball (either white or spotted) so that it hits both the other player's ball and the red ball in one shot. The player who reaches the predetermined number first wins.
          </Base:Description>
          <Base:Description type="look">
             A round billiard table perfect for playing billiards.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ball-1" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ball"/>
            <Base:SName sname="cue"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="balls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cue"/>
          <Base:Adjective adjective="white"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             white cue
          </Base:Description>
          <Base:Description type="examine">
             The white ball is made of solid oak, it's 2 inches in diameter, and weighs 12 ounces.
          </Base:Description>
          <Base:Description type="look">
             The white cue ball has a visible 1 printed on it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ball-2" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ball"/>
            <Base:SName sname="cue"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="balls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cue"/>
          <Base:Adjective adjective="spotted"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             spotted cue
          </Base:Description>
          <Base:Description type="examine">
             The spotted cue ball is made of solid oak, it's 2 inches in diameter, and weighs 12 ounces.
          </Base:Description>
          <Base:Description type="look">
             The spotted ball has a visible 2 printed on it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ball-3" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ball"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="balls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">red ball</Base:Description>
          <Base:Description type="examine">
             The red ball is made of solid oak, it's 2 inches in diameter, and weighs 12 ounces.
          </Base:Description>
          <Base:Description type="look">
             The red ball has a visible 2 printed on it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             centered legs
          </Base:Description>
          <Base:Description type="examine">
             The support of this table is a thick central cluster of legs. This cluster is six legs put back to back and secured together.
          </Base:Description>
          <Base:Description type="look">
             The support of this table is a thick central cluster of legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lining" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lining"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="linings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="felt"/>
          <Base:Adjective adjective="green"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             green felt lining
          </Base:Description>
          <Base:Description type="examine">
             The green felt lining covers the top of the table. In the center of this lining in gold lettering is the name of the person who owns this room.
          </Base:Description>
          <Base:Description type="look">
             The green felt lining covers the top of the table.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="railing" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="railing"/>
            <Base:SName sname="bumper"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="railings"/>
            <Base:PName pname="bumpers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">railing</Base:Description>
          <Base:Description type="examine">
             The railings of the table completely encompasses the lining. The purpose of the railing is to keep the balls on the table.
          </Base:Description>
          <Base:Description type="look">
             The railing of the table completely encompasses the lining.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stick" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stick"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sticks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cue"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             cue stick
          </Base:Description>
          <Base:Description type="examine">
             A short, curved cue stick is made of oak. It tappers down to a blunted blue end while the thick end is varnished black and is polished for ease of shooting.
          </Base:Description>
          <Base:Description type="look">
             A short, curved cue stick is made of oak. It tappers down to a blunted blue end.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:shoot-dob">
         X[M] \$delay(1, TRUE, "312b");                                                          
\$env = \$actor."base:environment";                                 
\$roll = ironclaw::roll(\$skills: (\{ "trait:mind", "trait:agility"\}));   
    
/* check for a hit */                               
if(\$roll \> 5) \$shoot = 1;   
if(\$roll \> 1 \&\& \$roll \< 6) \$miss = 1;  
if(\$roll \<2) \$lost = 1;  
if(\$lost) \{  
  switch(random(2)) \{  
      case 1:               
          EmitTo(\$actor, "You must have envisioned that going better in your head. You got your ball stuck in the corner, and are now a sitting duck. You lost the game.");               
          EmitIn(\$actor."base:environment", Describe(\$actor)+" smiles cockily and shoots. Their cue gets stuck in the corner, wonder what that smile was for. "+Describe(\$actor)+" lost the game.", \$actor);               
          break;  
      default:               
          EmitTo(\$actor, "You poor soul. You smack your cue ball so hard it flies off the table. You lose the game.");               
          EmitIn(\$actor."base:environment", Describe(\$actor)+"  isn't very good at this game, the cue ball flies from the table and lands nearby. That's enough to lose the game.", \$actor);               
          break;  \}  
\} else if (\$miss) \{      
  switch(random(5)) \{                  
      case 4:              
          EmitTo(\$actor, "Your cue ball merely bounces around the table, missing all targets. You didn't score a point.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" aims carefully and merely manages to bounce the cue ball around the table without hitting any targets. No point scored.", \$actor);              
          break;              
      case 3:              
          EmitTo(\$actor, "You successfully ricochet the cue ball around the table and end up only hitting the other player's ball. No points won.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" ricochets the cue ball around the table till and end up only hitting the other player's ball. No points won.", \$actor);              
          break;              
      case 2:              
          EmitTo(\$actor, "Somehow what you envisioned didn't work out, the ball moves around the table without hitting any other balls. That's no point scored.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" looks confident and shoots. The ball moves around the table without hitting any other balls. That's no point scored.", \$actor);              
          break;              
      case 1:              
          EmitTo(\$actor, "You see a complex shot and ease the cue stick back and forth, hoping this crazy idea works. The cue ball glides over the surface of the table and only hits the red ball a few times. No points scored.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" glares at the cue ball for a moment and then shoots. The cue ball bounces against the railings vigorously and only hits the red ball a few times,  not scoring any points.", \$actor);              
          break;              
      default:              
          EmitTo(\$actor, "Aiming carefully you shoot the ball, but it only manages to glance of the red ball. That's not enough to gain you a point.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+"  aims carefully and shoots, but their cue only manages to hit the red ball with the barest glancing blow. No point scored.", \$actor);              
          break; \}             
\}  else if(\$shoot) \{      
  switch(random(7)) \{    
      case 6:              
          EmitTo(\$actor, "With ease you shoot the cue ball and see how it bounces around the table, hitting the two other balls. You scored a point.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" confidently shoots their cue, which bounces around the table hitting the two other balls, scoring them a point.", \$actor);              
          break;      
      case 5:              
          EmitTo(\$actor, "Taking a deep breath you aim and shoot at the cue ball. It moves around the table, hitting the other cue and the red ball. Good shot, one point scored.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" takes a deep breath before shooting. The cue bounces around the table hitting the other cue and the red ball. A point has been scored.", \$actor);              
          break;                    
      case 4:              
          EmitTo(\$actor, "You aim the cue ball very carefully and smack both the opponent's ball and the red ball with ease, scoring a hit.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" aims carefully and smacks both the other cue ball and the red ball, scoring a hit.", \$actor);              
          break;              
      case 3:              
          EmitTo(\$actor, "You successfully ricochet the cue ball around the table and by luck, end up barely touching both targets. You win a point.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" ricochets the cue ball around the table till both targets are hit, winning a point. What a lucky shot.", \$actor);              
          break;              
      case 2:              
          EmitTo(\$actor, "You see a simple shot and position all balls in a small cluster for easy scoring, you win a point.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" smiles cockily and positions the balls so they are clustered together. Ohoh, a nice point won.", \$actor);              
          break;              
      case 1:              
          EmitTo(\$actor, "You see a complex shot and ease the cue stick back and forth, hoping this crazy idea works. The cue slowly spins toward the other cue ball and taps it before spiraling ever-so-slowly towards the red ball and stops right after touching it. You won a point");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+" glares at the cue ball for a moment and then shoots. The slow cue ball moves across the table and barely taps the other cue. The ball in slow motion comes to a stop after touching the red ball. "+Describe(\$actor)+" wins a point.", \$actor);             
          break;              
      default:              
          EmitTo(\$actor, "You lucky bastard. Your shot repeated bounces off the other cue and the red ball. You just scored two points.");              
          EmitIn(\$actor."base:environment", Describe(\$actor)+"  is a lucky bastard, the cues bounce off each other and the red ball repeated. "+Describe(\$actor)+" just scored two points.", \$actor);              
          break; \}          
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1344050877, "meandmine", "X", 1344051101, "meandmine", "X", 1344051189, "meandmine", "X", 1344052925, "meandmine", "K", 1344053067, "meandmine", "K", 1344053164, "meandmine", "K", 1344053199, "meandmine", "K", 1344053257, "meandmine", "K", 1344053308, "meandmine", "K", 1344053449, "meandmine", "K", 1344053503, "meandmine", "K", 1344053507, "meandmine", "E", 1344053561, "meandmine", "K", 1344053570, "meandmine", "E", 1344053573, "meandmine", "E", 1344053715, "meandmine", "K", 1344053755, "meandmine", "K", 1344053883, "meandmine", "K", 1344053921, "meandmine", "K", 1344053984, "meandmine", "K", 1344054047, "meandmine", "K", 1344054195, "meandmine", "K", 1344054203, "meandmine", "E", 1344054203, "meandmine", "E", 1344054203, "meandmine", "E", 1344054203, "meandmine", "E", 1344054203, "meandmine", "E", 1344054205, "meandmine", "E", 1344054205, "meandmine", "E", 1344054206, "meandmine", "E", 1344054206, "meandmine", "E", 1344054208, "meandmine", "E", 1344054208, "meandmine", "E", 1344054210, "meandmine", "E", 1344054210, "meandmine", "E", 1344054217, "meandmine", "E", 1344054219, "meandmine", "E", 1344054227, "meandmine", "E", 1344054321, "meandmine", "K", 1344054337, "meandmine", "K", 1344054346, "meandmine", "E", 1344054385, "meandmine", "K", 1344054395, "meandmine", "E", 1344054402, "meandmine", "E", 1344054404, "meandmine", "E", 1344054404, "meandmine", "E", 1344054404, "meandmine", "E", 1344054405, "meandmine", "E", 1344054405, "meandmine", "E", 1344054500, "meandmine", "K", 1344054521, "meandmine", "E", 1344054521, "meandmine", "E", 1344054523, "meandmine", "E", 1344054523, "meandmine", "E", 1344054523, "meandmine", "E", 1344054524, "meandmine", "E", 1344054525, "meandmine", "E", 1344054710, "meandmine", "K", 1344055515, "meandmine", "X", 1344055696, "meandmine", "X", 1344055779, "meandmine", "X", 1344055886, "meandmine", "X", 1344056279, "meandmine", "X", 1344056357, "meandmine", "X", 1344974651, "meandmine", "X", 1344975764, "meandmine", "E", 1344976945, "meandmine", "X", 1344977285, "slurpeeslurp", "R", 1344977333, "slurpeeslurp", "E", 1344977752, "meandmine", "X", 1344979411, "meandmine", "X", 1344983882, "meandmine", "X", 1344985530, "meandmine", "E", 1344985541, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985576, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985582, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985583, "meandmine", "E", 1344985584, "meandmine", "E", 1344985585, "meandmine", "E", 1344985602, "meandmine", "E", 1344985604, "meandmine", "E", 1344985604, "meandmine", "E", 1344985604, "meandmine", "E", 1344985605, "meandmine", "E", 1344986029, "meandmine", "K", 1344986036, "meandmine", "E", 1344986220, "meandmine", "K", 1344986619, "meandmine", "X", 1345061665, "meandmine", "X", 1345150954, "meandmine", "K", 1345397678, "meandmine", "K", 1345761880, "meandmine", "K", 1345797377, "meandmine", "K", 1345797432, "meandmine", "K", 1390656252, "pp74", "X", 1438655502, "dmwtst", "E", 1438657186, "dmwtst", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
