<object clone="/base/obj/thing" owner="rorschakovacs">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="50" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chandelier"/>
            <Base:SName sname="light"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chandeliers"/>
            <Base:PName pname="lights"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brass"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the brass chandeliers
          </Base:Description>
          <Base:Description type="examine">
             Brass chandeliers hang from the high ceiling, spaced apart yet close enough to fully illuminate the room.  Delicately curved arms extend in all directions from each chandelier. Glass globes of different colors holding candles are at the end of each arm, and bare white candles are lit near the center of each light. Each chandelier is supported by a long, sturdy brass chain.  The chandeliers throw $(this.trait:color) light into the room.  {? | $(this.trait:lowered) |The chandeliers are currently lowered to the floor.}
          </Base:Description>
          <Base:Description type="look">
             Brass chandeliers hang from the high ceiling, spaced apart yet close enough to fully illuminate the room in $(this.trait:color) light. {? | $(this.trait:lowered) |The chandeliers are currently lowered to the floor.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arm"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="arms"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brass"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the brass arms of the chandeliers
          </Base:Description>
          <Base:Description type="look">
             Many slender, curved brass arms extend from each chandelier.  At the ends of each arm are globes of glass holding candles of blue, red, or yellow color.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chain" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chain"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chains"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brass"/>
          <Base:Adjective adjective="long"/>
          <Base:Adjective adjective="sturdy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             long, sturdy brass chains
          </Base:Description>
          <Base:Description type="examine">
             Long, sturdy chains plated in brass hold each chandelier aloft when they are raised. You notice they all connect at a central point and then wrap around a crank near the floor.
          </Base:Description>
          <Base:Description type="look">
             Long, sturdy chains plated in brass hold each chandelier aloft when they are raised.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="crank" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="crank"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cranks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="mounted"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">crank</Base:Description>
          <Base:Description type="examine">
             A <acmd tag="command" cmd="wind crank">crank</acmd> mounted into the floor which holds the chains supporting the chandeliers.
          </Base:Description>
          <Base:Description type="look">
             A crank mounted into the floor which holds the chains supporting the chandeliers.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="globes-blue" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="blue"/>
            <Base:SName sname="candle"/>
            <Base:SName sname="globe"/>
            <Base:SName sname="glass"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="candles"/>
            <Base:PName pname="globes"/>
            <Base:PName pname="glasses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
          <Base:Adjective adjective="glass"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the blue glass globes of the chandeliers
          </Base:Description>
          <Base:Description type="examine">
             Globes of blue glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:blue) |lit }candles.  {? not | $(this.trait:blue) | Lighting the candles in the blue globes would change the color of light in this room.}{? | $(this.trait:blue) | The candles in the globes shed light onto the room.}
          </Base:Description>
          <Base:Description type="look">
             Globes of blue glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:blue) |lit }candles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="globes-red" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="red"/>
            <Base:SName sname="candle"/>
            <Base:SName sname="globe"/>
            <Base:SName sname="glass"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="candles"/>
            <Base:PName pname="globes"/>
            <Base:PName pname="glasses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="glass"/>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the red glass globes of the chandeliers
          </Base:Description>
          <Base:Description type="examine">
             Globes of red glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:red) |lit }candles.  {? not | $(this.trait:red) | Lighting the candles in the red globes would change the color of light in this room.}{? | $(this.trait:red) | The candles in the globes shed light onto the room.}
          </Base:Description>
          <Base:Description type="look">
             Globes of red glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:red) |lit }candles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="globes-yellow" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="yellow"/>
            <Base:SName sname="candle"/>
            <Base:SName sname="globe"/>
            <Base:SName sname="glass"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="candles"/>
            <Base:PName pname="globes"/>
            <Base:PName pname="glasses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="glass"/>
          <Base:Adjective adjective="yellow"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the yellow glass globes of the chandeliers
          </Base:Description>
          <Base:Description type="examine">
             Globes of yellow glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:yellow) |lit }candles.  {? not | $(this.trait:yellow) | Lighting the candles in the yellow globes would change the color of light in this room.}{? | $(this.trait:yellow) | The candles in the globes shed light onto the room.}
          </Base:Description>
          <Base:Description type="look">
             Globes of yellow glass mounted on the brass arms of the chandeliers hold {? | $(this.trait:yellow) |lit }candles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:color">
         X[M] if(!\$this."trait:blue" \&\& !\$this."trait:red" \&\& !\$this."trait:yellow" ) \$this."trait:color" = "white";  
if(\$this."trait:blue" \&\& \$this."trait:red" \&\& \$this."trait:yellow" ) \$this."trait:color" = "rainbow";  
if(!\$this."trait:blue" \&\& \$this."trait:red" \&\& !\$this."trait:yellow" ) \$this."trait:color" = "red";  
if(!\$this."trait:blue" \&\& \$this."trait:red" \&\& \$this."trait:yellow" ) \$this."trait:color" = "orange";  
if(!\$this."trait:blue" \&\& !\$this."trait:red" \&\& \$this."trait:yellow" ) \$this."trait:color" = "yellow";  
if(\$this."trait:blue" \&\& !\$this."trait:red" \&\& \$this."trait:yellow" ) \$this."trait:color" = "green";  
if(\$this."trait:blue" \&\& !\$this."trait:red" \&\& !\$this."trait:yellow" ) \$this."trait:color" = "blue";  
if(\$this."trait:blue" \&\& \$this."trait:red" \&\& !\$this."trait:yellow" ) \$this."trait:color" = "purple";
\$room = \$this."base:environment";
\$room."trait:color" = \$this."trait:color";
      </Core:Property>
      <Core:Property property="merry:react-pre:extinguish-dob">
         X[M] if (!\$this."trait:lowered")     
  \{    
  EmitTo( \$actor, "The chandeliers are too high for you to reach." );    
  return FALSE;    
  \}    
if (NRefDetail(\$target) == "globes-blue")                  
  \{        
  if (!\$this."trait:blue")       
    \{         
    EmitTo( \$actor, "The blue globes are not lit." );      
    return FALSE;      
    \}                 
  if (\$this."trait:blue")       
    \{         
    EmitTo( \$actor, "You extinguish the blue globes of the chandeliers, snuffing out each candle." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" extinguish the blue globes of the chandeliers, snuffing out each candle.", \$actor );         
    \$this."trait:blue" = nil;    
    return FALSE;                 
    \}    
  \}      
if (NRefDetail(\$target) == "globes-red")                   
  \{        
  if (!\$this."trait:red")       
    \{         
    EmitTo( \$actor, "The red globes are not lit." );      
    return FALSE;      
    \}                 
  if (\$this."trait:red")       
    \{         
    EmitTo( \$actor, "You extinguish the red globes of the chandeliers, snuffing out each candle." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" extinguish the red globes of the chandeliers, snuffing out each candle.", \$actor );         
    \$this."trait:red" = nil;    
    return FALSE;                 
    \}    
  \}      
if (NRefDetail(\$target) == "globes-yellow")                   
  \{        
  if (!\$this."trait:yellow")       
    \{         
    EmitTo( \$actor, "The yellow globes are not lit." );      
    return FALSE;      
    \}                 
  if (\$this."trait:yellow")       
    \{         
    EmitTo( \$actor, "You extinguish the yellow globes of the chandeliers, snuffing out each candle." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" extinguish the yellow globes of the chandeliers, snuffing out each candle.", \$actor );         
    \$this."trait:yellow" = nil;    
    return FALSE;                 
    \}      
  \}    
EmitTo( \$actor, "That's not something you can extinguish." );
      </Core:Property>
      <Core:Property property="merry:react-pre:light-dob">
         X[M] if (!\$this."trait:lowered")     
  \{    
  EmitTo( \$actor, "The chandeliers are too high for you to reach." );    
  return FALSE;    
  \}    
if (NRefDetail(\$target) == "globes-blue")                  
  \{        
  if (\$this."trait:blue")       
    \{         
    EmitTo( \$actor, "The blue globes are already lit." );      
    return FALSE;      
    \}                 
  if (!\$this."trait:blue")       
    \{         
    EmitTo( \$actor, "You light the blue globes of the chandeliers, adding a blue glow to the room." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" light the blue globes of the chandeliers, adding a blue glow to the room", \$actor );         
    \$this."trait:blue" = 1;    
    return FALSE;                 
    \}    
  \}      
if (NRefDetail(\$target) == "globes-red")                   
  \{        
  if (\$this."trait:red")       
    \{         
    EmitTo( \$actor, "The red globes are already lit." );      
    return FALSE;      
    \}                 
  if (!\$this."trait:red")       
    \{         
    EmitTo( \$actor, "You light the red globes of the chandeliers, adding a red glow to the room." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" light the red globes of the chandeliers, adding a red glow to the room.", \$actor );         
    \$this."trait:red" = 1;    
    return FALSE;                 
    \}    
  \}      
if (NRefDetail(\$target) == "globes-yellow")                   
  \{        
  if (\$this."trait:yellow")       
    \{         
    EmitTo( \$actor, "The yellow globes are already lit." );      
    return FALSE;      
    \}                 
  if (!\$this."trait:yellow")       
    \{         
    EmitTo( \$actor, "You light the yellow globes of the chandeliers, adding a yellow glow to the room." );                      
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" light the yellow globes of the chandeliers, adding a yellow glow to the room.", \$actor );         
    \$this."trait:yellow" = 1;    
    return FALSE;                 
    \}      
  \}    
EmitTo( \$actor, "You can't light that." );
      </Core:Property>
      <Core:Property property="merry:react-pre:wind-dob">
         X[M] if (NRefDetail(\$target) == "crank")                       
  \{                    
  if (\$this."trait:lowered")           
    \{             
    EmitTo( \$actor, "You wind the crank slowly, pulling the chains upward and lifting the chandeliers to the ceiling." );                          
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" winding a crank slowly and lifting the chandeliers to the ceiling.", \$actor );         
    \$this."trait:lowered" = nil;        
    return FALSE;                      
    \}                  
  if (!\$this."trait:lowered")           
    \{             
    EmitTo( \$actor, "You wind the crank slowly, giving slack to the chains and lowering the chandeliers to the ballroom floor." );                          
    EmitIn( \$actor."base:environment", "You see "+Describe(\$actor)+" winding a crank slowly and lowering the chandeliers to the ballroom floor.", \$actor );        
    \$this."trait:lowered" = 1;        
    return FALSE;                      
    \}          
  \}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:blue">
         X[M] return Call(\$this, "color");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:red">
         X[M] return Call(\$this, "color");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:yellow">
         X[M] return Call(\$this, "color");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1193762448, "rorschakovacs", "K", 1193762510, "rorschakovacs", "K", 1309204360, "tunk_bodin", "R", 1337749707, "lidiab", "R", 1426988235, "rorschakovacs", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
