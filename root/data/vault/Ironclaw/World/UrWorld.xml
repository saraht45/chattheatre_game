<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="2.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="10000" maxweight="100000"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="true"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="bigmapurl">
             http://www.skotos.net/IronclawGame/images/maps/trisk.jpg
          </Base:Description>
          <Base:Description type="brief">world</Base:Description>
          <Base:Description type="mapurl">
             http://www.skotos.net/IronclawGame/images/maps/nonavailable.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:merry:lib:time/dusk">
         "placeholder"
      </Core:Property>
      <Core:Property property="export:merry:lib:time/midday">
         "placeholder"
      </Core:Property>
      <Core:Property property="export:merry:lib:time/midnight">
         "placeholder"
      </Core:Property>
      <Core:Property property="export:merry:lib:time/morning">
         "placeholder"
      </Core:Property>
      <Core:Property property="gimli:lib:check_dangerarea">
         "E[G]\\n// EmitTo(\$actor, \\"gimli:lib:check_dangerarea\\");\\n\\n// Are we currently in a danger area?\\nif(\$this.\\"area:dangerarea\\") return TRUE; // Already in a danger area\\nif(!\$dest) return TRUE; // No idea how this even happened!\\n\\nif(NRefOb(\$dest).\\"area:dangerarea\\"\\n\&\& (\$actor.\\"dangerarea:consent\\"\\n    \|\| (\$actor.\\"base:consent:map\\" \&\& \$actor.\\"base:consent:map\\"[\$\{Chatters:IC:da:dangerarea\}] == \\"allow\\")\\n   )\\n) \{\\n  // They have already consented\\n  EmitTo(\$actor, TAG(\\"You are now entering a danger area.\\", \\"imp\\"));\\n\} else if(NRefOb(\$dest).\\"area:dangerarea\\") \{\\n  // Are they moving into a danger area?\\n\\n  // Ask for their consent\\n  EmitTo(\$actor, \\"You are entering a danger area. By entering, you automatically consent to possible death for \\"+Describe(\$actor)+\\".\\");\\n  interaction::question(\$question: \\"Are you sure you wish to continue?\\", \$env: \\"TRUE\\", \$expires: 60, \$yes_ob: \$this, \$yes_fun: \\"enter_dangerarea\\", \$no: \\"You decide it would be best to stay here.\\", \$expire: \\"You decide it would be best to stay here.\\", \$par: ([ \\"actor\\": \$actor, \\"passed_args\\":args ]));\\n  return FALSE;\\n\}\\n\\n// Not moving into a danger area, or already pre-consented\\nreturn TRUE;"
      </Core:Property>
      <Core:Property property="gimli:lib:enter_dangerarea">
         "E[G]\\n// Agreed to enter a danger area\\n// Temporarily set consent to enter danger areas\\nironclaw::set_prop(\$obj: \$actor, \$prop: \\"dangerarea:consent\\", \$value: 1, \$timer: 6);\\n \\n// Re-trigger the action where they entered the area\\nif(\$par[\\"passed_args\\"] \&\& \$par[\\"passed_args\\"][\\"verb\\"]) \{\\n  Social(\$actor, \$par[\\"passed_args\\"][\\"verb\\"], \$par[\\"passed_args\\"][\\"adverb\\"], \$par[\\"passed_args\\"][\\"evoke\\"], \$par[\\"passed_args\\"][\\"gait_exit:preposition\\"], \$par[\\"passed_args\\"][\\"target\\"]);\\n\} else \{\\n  Social(\$actor, \\"walk\\", \$par[\\"passed_args\\"][\\"adverb\\"], \$par[\\"passed_args\\"][\\"evoke\\"], \\"through\\", \$par[\\"passed_args\\"][\\"target\\"]);\\n\}\\n\\nreturn TRUE;"
      </Core:Property>
      <Core:Property property="merry:lib:check_dangerarea">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:check_dangerarea instead! */
/* EmitTo(\$actor, "gimli:lib:check_dangerarea"); */

/* Are we currently in a danger area? */
if(\$this."area:dangerarea") return TRUE; /* Already in a danger area */
if(!\$dest) return TRUE; /* No idea how this even happened! */

if(NRefOb(\$dest)."area:dangerarea"
\&\& (\$actor."dangerarea:consent"
    \|\| (\$actor."base:consent:map" \&\& \$actor."base:consent:map"[\$\{Chatters:IC:da:dangerarea\}] == "allow")
   )
) \{
  /* They have already consented */
  EmitTo(\$actor, TAG("You are now entering a danger area.", "imp"));
\} else if(NRefOb(\$dest)."area:dangerarea") \{
  /* Are they moving into a danger area? */

  /* Ask for their consent */
  EmitTo(\$actor, "You are entering a danger area. By entering, you automatically consent to possible death for "+Describe(\$actor)+".");
  interaction::question(\$question: "Are you sure you wish to continue?", \$env: "TRUE", \$expires: 60, \$yes_ob: \$this, \$yes_fun: "enter_dangerarea", \$no: "You decide it would be best to stay here.", \$expire: "You decide it would be best to stay here.", \$par: ([ "actor": \$actor, "passed_args":args ]));
  return FALSE;
\}

/* Not moving into a danger area, or already pre-consented */
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:enter_dangerarea">
         X[M] /* Gimli-Powered! Do not edit! Edit gimli:lib:enter_dangerarea instead! */
/* Agreed to enter a danger area */
/* Temporarily set consent to enter danger areas */
ironclaw::set_prop(\$obj: \$actor, \$prop: "dangerarea:consent", \$value: 1, \$timer: 6);
 
/* Re-trigger the action where they entered the area */
if(\$par["passed_args"] \&\& \$par["passed_args"]["verb"]) \{
  Social(\$actor, \$par["passed_args"]["verb"], \$par["passed_args"]["adverb"], \$par["passed_args"]["evoke"], \$par["passed_args"]["gait_exit:preposition"], \$par["passed_args"]["target"]);
\} else \{
  Social(\$actor, "walk", \$par["passed_args"]["adverb"], \$par["passed_args"]["evoke"], "through", \$par["passed_args"]["target"]);
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:time/dusk">
         X[M] EmitIn(\$this, "The solemn tones of the evening bell echo across the world.");              
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:time/midday">
         X[M] EmitIn(\$this, "The sound of distant bells mark midday.");              
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:time/midnight">
         X[M] EmitIn(\$this, "Faintly, the chapel bells ring to mark the midnight hour.");              
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:time/morning">
         X[M] EmitIn(\$this, "The strike of morning bells can be heard across the world.");             
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1307216915, "tunk_bodin", "X", 1307217055, "tunk_bodin", "X", 1311310770, "tonyd", "E", 1462765361, "tonyd", "P", 1462765465, "tonyd", "P", 1462765524, "tonyd", "P", 1462765589, "tonyd", "P", 1462765658, "tonyd", "P", 1462765717, "tonyd", "P", 1462765746, "tonyd", "P", 1462765791, "tonyd", "P", 1462765901, "tonyd", "P", 1462766062, "tonyd", "P", 1462766200, "tonyd", "P", 1462766208, "tonyd", "P", 1462766251, "tonyd", "P", 1462766277, "tonyd", "P", 1462767070, "tonyd", "P", 1462767123, "tonyd", "P", 1462767138, "tonyd", "P", 1462767630, "tonyd", "P", 1462767660, "tonyd", "P", 1462767693, "tonyd", "P", 1462767732, "tonyd", "P", 1462768174, "tonyd", "P", 1462768188, "tonyd", "P", 1462768221, "tonyd", "P", 1462768338, "tonyd", "P", 1462768371, "tonyd", "P", 1462768384, "tonyd", "P", 1462768456, "tonyd", "P", 1462768471, "tonyd", "P", 1462768480, "tonyd", "P", 1462768539, "tonyd", "P", 1462768655, "tonyd", "P", 1462768680, "tonyd", "P", 1462768718, "tonyd", "P", 1462768730, "tonyd", "P", 1462768826, "tonyd", "P", 1462768884, "tonyd", "P", 1462768953, "tonyd", "P", 1462771305, "tonyd", "P", 1462771327, "tonyd", "P", 1462771365, "tonyd", "P", 1462771387, "tonyd", "P", 1462771423, "tonyd", "P", 1462771465, "tonyd", "P", 1462771483, "tonyd", "P", 1462771509, "tonyd", "P", 1462771535, "tonyd", "P", 1462771554, "tonyd", "P", 1464502676, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="x_gimliinstance">
         ([  ])
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
