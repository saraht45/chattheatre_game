<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="100" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="100000" maxweight="100000"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="marsh"/>
            <Base:SName sname="wetland"/>
            <Base:SName sname="land"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="marshes"/>
            <Base:PName pname="marshs"/>
            <Base:PName pname="wetlands"/>
            <Base:PName pname="lands"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="bigmapurl">
             http://www.skotos.net/IronclawGame/images/map.jpg
          </Base:Description>
          <Base:Description type="brief">marsh</Base:Description>
          <Base:Description type="examine">
             The marsh is distinguished by its low-lying plants and the covering of shallow fresh water that blankets the area. This particular spot is dominated by a large $(this.trait:clay:color) clay pit in the center.
          </Base:Description>
          <Base:Description type="glance">
             A section of the marsh dominated by a large $(this.trait:clay:color) clay pit.
          </Base:Description>
          <Base:Description type="look">
             The marsh holds a diverse number of small plants and is completely blanketed by shallow fresh water. A large $(this.trait:clay:color) clay pit scars the middle of the marsh.
          </Base:Description>
          <Base:Description type="mapurl">
             http://www.skotos.net/IronclawGame/images/maps/adventure/marsh/marsh.jpg
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-east" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit dest="NREF(Ironclaw:AAs:Framework:RandomRoom|exit-west)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="east"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-north" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit dest="NREF(Ironclaw:AAs:Framework:RandomRoom|exit-south)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="north"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-south" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit dest="NREF(Ironclaw:AAs:Framework:RandomRoom|exit-north)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-west" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit dest="NREF(Ironclaw:AAs:Framework:RandomRoom|exit-east)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="west"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="clay" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="clay"/>
            <Base:SName sname="claypit"/>
            <Base:SName sname="pit"/>
            <Base:SName sname="middle"/>
            <Base:SName sname="center"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pits"/>
            <Base:PName pname="clays"/>
            <Base:PName pname="claypits"/>
            <Base:PName pname="middles"/>
            <Base:PName pname="centers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="clay"/>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:clay:color) claypit
          </Base:Description>
          <Base:Description type="examine">
             The middle of the marsh bears a large $(this.trait:clay:color) clay pit. It is soft and malleable, ready to be GATHERed by anyone who desires a lump of clay.
          </Base:Description>
          <Base:Description type="look">
             The middle of the marsh is scarred by a large $(this.trait:clay:color) clay pit.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="destination-east" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trail"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="west"/>
            <Base:SName sname="path"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trails"/>
            <Base:PName pname="paths"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="west"/>
          <Base:Adjective adjective="western"/>
          <Base:Adjective adjective="wet"/>
          <Base:Adjective adjective="wetland"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             western trail
          </Base:Description>
          <Base:Description type="look">
             A trail leading west towards a claypit.
          </Base:Description>
          <Base:Description type="room">
             a trail leads west towards a claypit
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="west"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="destination-north" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trail"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="south"/>
            <Base:SName sname="path"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trails"/>
            <Base:PName pname="paths"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="south"/>
          <Base:Adjective adjective="southern"/>
          <Base:Adjective adjective="wet"/>
          <Base:Adjective adjective="wetland"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             southern trail
          </Base:Description>
          <Base:Description type="look">
             A trail leading south towards a claypit.
          </Base:Description>
          <Base:Description type="room">
             a trail leads south towards a claypit
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="south"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="destination-south" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trail"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="north"/>
            <Base:SName sname="path"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trails"/>
            <Base:PName pname="paths"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="north"/>
          <Base:Adjective adjective="northern"/>
          <Base:Adjective adjective="wet"/>
          <Base:Adjective adjective="wetland"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             northern trail
          </Base:Description>
          <Base:Description type="look">
             A trail leading north towards a claypit.
          </Base:Description>
          <Base:Description type="room">
             a trail leads north towards a claypit
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="north"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="destination-west" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="trail"/>
            <Base:SName sname="exit"/>
            <Base:SName sname="east"/>
            <Base:SName sname="path"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="trails"/>
            <Base:PName pname="paths"/>
            <Base:PName pname="exits"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="east"/>
          <Base:Adjective adjective="eastern"/>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="wet"/>
          <Base:Adjective adjective="wetland"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             eastern trail
          </Base:Description>
          <Base:Description type="look">
             A trail leading east towards a claypit.
          </Base:Description>
          <Base:Description type="room">
             a trail leads east towards a claypit
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false">
          <Base:Direction dir="east"/>
        </Base:Exit>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ground" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ground"/>
            <Base:SName sname="floor"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="covered"/>
          <Base:Adjective adjective="land"/>
          <Base:Adjective adjective="marsh"/>
          <Base:Adjective adjective="wet"/>
          <Base:Adjective adjective="wetland"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the wet ground
          </Base:Description>
          <Base:Description type="examine">
             The ground is covered in a blanket of shallow fresh water. Plants sprout prolifically. A large $(this.trait:clay:color) clay pit dominates the center of the area.
          </Base:Description>
          <Base:Description type="look">
             The ground is covered in a blanket of shallow fresh water. A large $(this.trait:clay:color) clay pit scars this marsh.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="sky" prime="false" def="true" abstract="false" hidden="false" luminosity="500" targetable_in_dark="true" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sky"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="skies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="night"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the <day>open</day><night>night</night> sky
          </Base:Description>
          <Base:Description type="look">
             <day> It is daytime.</day><night> It is night time.</night> <dawn>The sky is streaked in the multi-colored hues of dawn.</dawn><morning>A crisp morning lights the world.</morning><midday>Midday has arrived.</midday><afternoon>The blue skies of afternoon.</afternoon><dusk>Dusk creeps over the land in dulled hues of grey.</dusk><evening>The evening skies bring with them the appearance of the first stars.</evening><midnight>Midnight embraces the world in its dark cloak.</midnight><aftermidnight>The end of night nears and dawn will soon arrive.</aftermidnight>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="sun-moon" prime="false" def="true" abstract="false" hidden="false" luminosity="5" targetable_in_dark="true" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sun"/>
            <Base:SName sname="moon"/>
            <Base:SName sname="stars"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bright"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the <day>sun</day><night>moon</night>
          </Base:Description>
          <Base:Description type="look">
             <day> It is the sun.</day><night> It is the moon.</night> <dawn>The sun begins to warm the world for it is dawn.</dawn><morning>The yellow sun makes for a softly lit morning.</morning><midday>The midday sun is hot and powerful. Rays of warmth envelop the lands.</midday><afternoon>The sun has begun its descent, its heat is waning.</afternoon><dusk>The sun hits the horizon and pulls back its bright rays to leave the world in hues of grey and shadow. The moon makes its first appearance of the evening.</dusk><evening>The moon begins its rise into the night sky. Stars can be seen as they peek around the fading light.</evening><midnight>Mid of night has brought the moon to the peak of its arc. Many brilliant stars share the dark canopy above.</midnight><aftermidnight>The moon is in descent and the stars begin to fade. The sun has almost come full circle and prepares to rise.</aftermidnight>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="water" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="water"/>
            <Base:SName sname="liquid"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="liquids"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="clean"/>
          <Base:Adjective adjective="fresh"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the surrounding water
          </Base:Description>
          <Base:Description type="examine">
             The shallow water appears fresh and clean. It covers the land completely.
          </Base:Description>
          <Base:Description type="look">
             The water appears fresh and clean.
          </Base:Description>
          <Base:Description type="react-post:sense/smell-dob">
             A distinct lack of smell.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:plant:array">
         (\{ \<Allegory:Props:Plants:B:Bulrush:BulrushPlant\>, \<Allegory:Props:Plants:C:Cattail:CattailPlant\>, \<Ironclaw:Props:Flora-New:Plants:OldDoNotUse:WaterHemlock\> \})
      </Core:Property>
      <Core:Property property="export:searching:random:floor">
         (\{ (\{ \<IronClaw:Props:Fishing:Tools:Rock\> \}) \})
      </Core:Property>
      <Core:Property property="export:trait:quality">
         12
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         12
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:clay:color" = oneof( "ochre", "red", "yellow", "orange-yellow", "orange", "golden yellow", "greenish gold", "light brown", "gold-orange", "warm yellow", "sienna", "deep sienna", "burnt sienna", "chalky red", "dark olive green", "pale yellow", "grayish green", "gray", "dark-red" );    
 \$color = \$this."trait:clay:color"; 
\$map = ParseXML("http://something/blah/claypit-"+\$color+".jpg");   
Set(\$this, "details:default:description:mapurl", \$map);                   
/* Spawn and integrate plantlife */                       
\$plantnum = random(8);                             
for(\$i=0;\$i\<\$plantnum;\$i++) \{                         
\$plantarray = Get(\$this, "plant:array");                    
\$plant = \$plantarray[random(sizeof(\$plantarray))];                    
\$plant = Spawn(\$plant);                    
\$plant."base:environment" = \$this;                         
  \$IDN = Str(random( 999999 ));                           
  if( sscanf( name(\$plant), "%s#%s", \$tmp, \$ID ) != 2 )                           
  \$ID = "auto-trait:integration:" + \$IDN;                           
  \$env = \$plant."base:environment";                           
  \$plant."base:integration" = \$ID;                           
  Set( \$env, \$ID, \$plant );                           
  \$prox = \$this;                           
  \$stance = "standing";                           
  \$prep = "near";                           
  \$plant."base:proximity" = \$prox;                           
  \$plant."base:stance" = \$stance;                           
  \$plant."base:preposition" = \$prep;                           
  \$plant."base:immobile" = TRUE;                            
\}                          
\$claynum = random(24)+1;                 
Set(\$this, "trait:quantity", \$claynum);                 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:emotes">
         X[M] EmitTo(\$actor, "You " +Str(\$vob."Verb:imperative")+ " from " +Describe(\$what[0])+ ". It is delicious and refreshing.");                                                      
EmitIn(\$actor."base:environment", Describe(\$actor)+ " " +Str(\$vob."Verb:third")+ " " +Describe(\$what[0])+ ".");                                                      
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:regenerate-clay">
         X[M] if(\$this."trait:quantity" \>= \$this."trait:quality") return TRUE;                                  
                                        
if(\$this."regenerating:clay") return TRUE;                                  
                                       
\$this."regenerating:clay" = 1;                                  
                                     
while(\$this."trait:quantity" \< \$this."trait:quality") \{                                  
  /* wait one hour */                                  
  \$delay((60*60), TRUE, "9d85");                                       
  if(\$this."trait:quantity" \< \$this."trait:quality")                                  
    \$this."trait:quantity" += 1;                                  
\}                                  
                                  
/* stop regenerating */                                  
\$this."regenerating:clay" = nil;                                  
                                  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drink-what">
         X[M] if(NRefDetail(\$what[0]) == "water") \{                                             
Call(\$this, "emotes", \$vob: \$vob);                                            
return FALSE;                                            
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:gather-dob">
         X[M] /* EmitTo(\$actor, dump_value(args));    */

if(NRefDetail(\$dob[0]) == "clay") \{

if(\$actor.isbusy)\{
  EmitTo(\$actor, "You are in the middle of something. Please wait for your current action to complete before attempting something new.");
  return FALSE;
\}

if(\$this."trait:quantity" \< 1) \{
  EmitTo(\$actor, "You are finding it difficult to find any "+\$this."trait:clay:color"+ " clay worth gathering at this moment.");
  return FALSE;
\}

EmitTo(\$actor, "You begin to gather from the " +\$this."trait:clay:color"+ " claypit.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" begins to gather from the "+\$this."trait:clay:color"+ " claypit.", \$actor);
\$actor.isbusy = (1);
\$actor.claypit = \$actor."base:environment";

\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ Int(Flt(\$actor."trait:dex")/2.0), \$actor."skill:artist:potter", \$actor."career:artist:potter", \$actor."skill:career:potter" \}));
\$delay(36 - (\$result*2), FALSE, "66ca");


if(\$actor."base:environment" != \$actor.claypit)
   \{
      EmitTo(\$actor, "Your clay gathering was aborted due to movement.");
\$actor.isbusy = nil;
\$actor.claypit = nil;
      return TRUE;
    \} else \{
\$this."trait:quantity" -= 1;
\$object = Spawn(\$\{Ironclaw:Props:Potter:UrClay\});
Set(\$object, "trait:color", \$this."trait:clay:color");

/* I want to make this a skill roll */
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ Int(Flt(\$actor."trait:dex")/2.0), \$actor."skill:artist:potter", \$actor."career:artist:potter", \$actor."skill:career:potter" \}));
\$object."trait:quality" = \$result;

\$object."base:environment" = \$actor;
EmitTo(\$actor, "You gather "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from the " +\$this."trait:clay:color"+ " claypit.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" gathers "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from the "+\$this."trait:clay:color"+ " claypit.", \$actor);

\$actor.isbusy = nil;
\$actor.claypit = nil;
return FALSE;
 \}     \}   else \{
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:gather-what">
         X[M] /* EmitTo(\$actor, dump_value(args));    */              
                        
if(NRefDetail(\$what[0]) == "clay") \{                    
                
if(\$actor.isbusy)\{                               
  EmitTo(\$actor, "You are in the middle of something. Please wait for your current action to complete before attempting something new.");                               
  return FALSE;                               
\}                        
                                 
if(\$this."trait:quantity" \< 1) \{                                  
  EmitTo(\$actor, "You are finding it difficult to find any "+\$this."trait:clay:color"+ " clay worth gathering at this moment.");                                  
  return FALSE;                                  
\}                               
               
EmitTo(\$actor, "You begin to gather from the " +\$this."trait:clay:color"+ " claypit.");                                  
EmitIn(\$actor."base:environment", Describe(\$actor)+" begins to gather from the "+\$this."trait:clay:color"+ " claypit.", \$actor);               
\$actor.isbusy = (1);                 
\$actor.claypit = \$actor."base:environment";                   
             
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ Int(Flt(\$actor."trait:dex")/2.0), \$actor."skill:artist:potter", \$actor."career:artist:potter", \$actor."skill:career:potter" \}));                                               
\$delay(36 - (\$result*2), FALSE, "66ca");             
              
            
if(\$actor."base:environment" != \$actor.claypit)                  
   \{                  
      EmitTo(\$actor, "Your clay gathering was aborted due to movement.");                  
\$actor.isbusy = nil;                             
\$actor.claypit = nil;                   
      return TRUE;                  
    \} else \{            
\$this."trait:quantity" -= 1;                                       
\$object = Spawn(\$\{Ironclaw:Props:Potter:UrClay\});                            
Set(\$object, "trait:color", \$this."trait:clay:color");                            
                            
/* I want to make this a skill roll */                        
\$result = Call(\$\{IronClaw:Lib:UrPeople:System\}, "roll", \$dicearray: (\{ Int(Flt(\$actor."trait:dex")/2.0), \$actor."skill:artist:potter", \$actor."career:artist:potter", \$actor."skill:career:potter" \}));                                           
\$object."trait:quality" = \$result;                                        
                            
\$object."base:environment" = \$actor;                                      
EmitTo(\$actor, "You gather "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from the " +\$this."trait:clay:color"+ " claypit.");                                  
EmitIn(\$actor."base:environment", Describe(\$actor)+" gathers "+Describe(\$object, nil, nil, STYLE_NONPOSS)+" from the "+\$this."trait:clay:color"+ " claypit.", \$actor);               
           
\$actor.isbusy = nil;                            
\$actor.claypit = nil;                             
return FALSE;                           
 \}     \}   else \{                         
return TRUE;                         
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:gulp-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:guzzle-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                         
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:lap-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:lick-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:quaff-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:savor-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:savour-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                         
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:sip-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                          
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:slurp-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                       
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:swallow-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                         
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:swill-iob">
         X[M] if(NRefDetail(\$iob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                     
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:react-pre:taste-dob">
         X[M] if(NRefDetail(\$dob[0]) == "water") \{                                                      
Call(\$this, "emotes", \$vob: \$vob);                                                        
return FALSE;                                                      
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:clay:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "clay");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quality">
         X[M] if(\$this."trait:quantity" \< \$this."trait:quality") Call(\$this, "regenerate-clay");                                 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quantity">
         X[M] if(\$this."trait:quantity" \< \$this."trait:quality") Call(\$this, "regenerate-clay");                                 
return TRUE;
      </Core:Property>
      <Core:Property property="plant:array">
         (\{ \<Allegory:Props:Plants:B:Bulrush:BulrushPlant\>, \<Allegory:Props:Plants:C:Cattail:CattailPlant\>, \<Ironclaw:Props:Flora-New:Plants:OldDoNotUse:WaterHemlock\> \})
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1169434561, "tunk_bodin", "X", 1169434666, "tunk_bodin", "X", 1169434754, "tunk_bodin", "X", 1169434884, "tunk_bodin", "X", 1169434915, "tunk_bodin", "X", 1169434976, "tunk_bodin", "X", 1169435028, "tunk_bodin", "X", 1169435111, "tunk_bodin", "X", 1169435215, "tunk_bodin", "X", 1169435390, "tunk_bodin", "X", 1169437714, "tunk_bodin", "X", 1169441710, "tunk_bodin", "X", 1169441768, "tunk_bodin", "X", 1169518488, "tunk_bodin", "X", 1170048232, "tunk_bodin", "X", 1170048750, "tunk_bodin", "X", 1170048873, "tunk_bodin", "X", 1170048938, "tunk_bodin", "X", 1170049125, "tunk_bodin", "X", 1170049381, "tunk_bodin", "X", 1170049447, "tunk_bodin", "X", 1170049604, "tunk_bodin", "X", 1170049666, "tunk_bodin", "X", 1170049802, "tunk_bodin", "X", 1170049898, "tunk_bodin", "S", 1170050067, "tunk_bodin", "X", 1170050105, "tunk_bodin", "X", 1170050229, "tunk_bodin", "X", 1170050717, "tunk_bodin", "X", 1170122788, "tunk_bodin", "X", 1170123366, "tunk_bodin", "X", 1170123765, "tunk_bodin", "X", 1170537045, "tunk_bodin", "S", 1172076223, "tunk_bodin", "E", 1172076258, "tunk_bodin", "E", 1173743870, "tunk_bodin", "E", 1173743892, "tunk_bodin", "E", 1173743925, "tunk_bodin", "E", 1189564585, "tonyd", "X", 1189564681, "tonyd", "K", 1358477759, "meandmine", "K", 1403741749, "jominey", "E", 1403744003, "jominey", "P", 1403744917, "jominey", "P", 1405485801, "jominey", "E", 1405573405, "slurpeeslurp", "E", 1405573462, "slurpeeslurp", "E", 1560384843, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:clay:color">
         "red"
      </Core:Property>
      <Core:Property property="trait:quality">12</Core:Property>
      <Core:Property property="trait:quantity">12</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
