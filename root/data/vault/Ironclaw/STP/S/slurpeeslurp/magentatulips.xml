<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bush"/>
            <Base:SName sname="bucket"/>
            <Base:SName sname="plant"/>
            <Base:SName sname="flower"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bushes"/>
            <Base:PName pname="buckets"/>
            <Base:PName pname="plants"/>
            <Base:PName pname="flowers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="magenta"/>
          <Base:Adjective adjective="tulip"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             potted $(this.trait:state) $(this.trait:color) $(this.trait:flowertype) $(this.trait:brief)
          </Base:Description>
          <Base:Description type="examine">
             This $(this.trait:color) $(this.trait:flowertype) $(this.trait:brief) is contained in a broken, wood bucket.
          </Base:Description>
          <Base:Description type="look">
             This $(this.trait:color) $(this.trait:flowertype) $(this.trait:brief) is contained in a broken, wood bucket.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="bak:export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:decaydelay">
         172800
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "bush"
      </Core:Property>
      <Core:Property property="export:trait:color">
         "magenta"
      </Core:Property>
      <Core:Property property="export:trait:flowertype">
         "tulip"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "flower"
      </Core:Property>
      <Core:Property property="export:trait:quality">
         4
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "sweet scents"
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] /* make flowers decay over time */   
Call(this, "decay");   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:decay">
         X[M] /* Make flowers decay over time */   
   
/* check if this is a spawn */   
if(sscanf(name(this), "%s]#%s", \$tmp, \$tmp) != 2) \{   
  /* NOT a spawn. Don't decay */   
  return TRUE;   
\}   
   
if(!this."trait:quality")   
  this."trait:quality" = 4;   
   
while(this."trait:quality") \{   
  \$delay(this.decaydelay, TRUE, "0fe5");   
   
  /* check if this is a spawn */   
  if(sscanf(name(this), "%s]#%s", \$tmp, \$tmp) != 2) \{   
    /* NOT a spawn. Don't decay */   
    return TRUE;   
  \}   
  this."trait:quality"--;   
   
/*  EmitTo(this."base:environment", "I am "+Describe(this));   
  EmitTo(this."base:environment", "Quality of "+Str(this."trait:quality")); */   
\}   
   
\$delay(this.decaydelay*5, TRUE, "93f0");   
   
/* check if this is a spawn */   
if(sscanf(name(this), "%s]#%s", \$tmp, \$tmp) != 2) \{   
  /* NOT a spawn. Don't decay */   
  return TRUE;   
\}  
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:quality">
         X[M] /* set the description for the flower, based on quality */   
   
switch(this."trait:quality") \{   
  case 12:   
    this."trait:state" = "perfect";   
    break;   
  case 11:   
    this."trait:state" = "perfect";   
    break;   
  case 10:   
    this."trait:state" = "immaculate";   
    break;   
  case 9:   
    this."trait:state" = "amazing";   
    break;   
  case 8:   
    this."trait:state" = "pristine";   
    break;   
  case 7:   
    this."trait:state" = "crisp";   
    break;   
  case 6:   
    this."trait:state" = "fresh";   
    break;   
  case 5:   
    this."trait:state" = "bright";   
    break;   
  case 2:   
    this."trait:state" = (\{ "dull", "drooping", "faded" \})[random(2)];   
    break;   
  case 1:   
    this."trait:state" = (\{ "limp", "listless" \})[random(2)];   
    break;   
  case 0:   
    this."trait:state" = "wilted";   
    break;    
\}   
   
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1306515738, "morwenlorelie", "E", 1306515781, "morwenlorelie", "R", 1306515814, "morwenlorelie", "K", 1306515829, "morwenlorelie", "X", 1306515943, "morwenlorelie", "X", 1306515973, "morwenlorelie", "X", 1306516020, "morwenlorelie", "K", 1306517049, "morwenlorelie", "K", 1306517081, "morwenlorelie", "E", 1306517139, "morwenlorelie", "K", 1306517352, "morwenlorelie", "X", 1306517368, "morwenlorelie", "E", 1306517447, "morwenlorelie", "E", 1306589028, "morwenlorelie", "X", 1306589053, "morwenlorelie", "E", 1309419760, "morwenlorelie", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:brief">"bush"</Core:Property>
      <Core:Property property="trait:color">
         "magenta"
      </Core:Property>
      <Core:Property property="trait:flowertype">
         "tulip"
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
