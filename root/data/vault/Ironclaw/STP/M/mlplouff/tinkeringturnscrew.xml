<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.01" density="8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="true" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="turnscrew"/>
            <Base:SName sname="screw"/>
            <Base:SName sname="screwdriver"/>
            <Base:SName sname="tool"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="turnscrews"/>
            <Base:PName pname="screws"/>
            <Base:PName pname="screwdrivers"/>
            <Base:PName pname="tools"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="flat"/>
          <Base:Adjective adjective="flexible"/>
          <Base:Adjective adjective="steel"/>
          <Base:Adjective adjective="tinkering"/>
          <Base:Adjective adjective="turn"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) tinkering turnscrew
          </Base:Description>
          <Base:Description type="examine">
             A flexible $(this.trait:color) $(this.trait:material) tinkering turnscrew. It is a device with a flexible $(this.trait:color) $(this.trait:material) shaft emerging from a cherry wood handle, at the end of which is a flat tip. It is designed to spin fasteners which are tightened or loosened by the application of rotation. This flexible $(this.trait:color) $(this.trait:material) tinkering turnscrew appears to be of very good quality.
          </Base:Description>
          <Base:Description type="look">
             A flexible $(this.trait:color) $(this.trait:material) tinkering turnscrew.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="handle" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="handle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="handles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cherry"/>
          <Base:Adjective adjective="polished"/>
          <Base:Adjective adjective="wood"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the handle on the turnscrew
          </Base:Description>
          <Base:Description type="examine">
             This $(this.trait:color) $(this.trait:material) tinkering turnscrew features a highly polished $(this.trait:handle:material) handle which emerges smoothly from its shaft.
          </Base:Description>
          <Base:Description type="look">
             This $(this.trait:color) $(this.trait:material) tinkering turnscrew features a highly polished $(this.trait:handle:material) handle.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:handle:material">
         "cherry wood"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "steel"
      </Core:Property>
      <Core:Property property="export:writable">1</Core:Property>
      <Core:Property property="merry:react:tinker-using%guns">
         X[M] /* lets a custom wheel-lock be added to pistols */  
if(!\$iob \|\| sizeof(\$iob) \> 1) return TRUE;  
  
/* must be holding the tool */  
if(this."base:environment" != \$actor) return TRUE;  
  
\$gun = NRefOb(\$iob[0]);  
\$detail = NRefDetail(\$iob[0]);  
  
/* must be holding the gun */  
if(\$gun."base:environment" != \$actor) return TRUE;  
  
/* check that this is something that can be upgraded */  
if(\$gun."trait:objecttype" != "firearm") return TRUE;  
  
if(\$detail == "default") \{  
  /* upgrade firing mechanism */  
  if(\$gun.locktype == "snaphaunce") \{  
    EmitTo(\$actor, "You cannot upgrade "+Describe(\$iob[0], nil, \$actor)+" any further.");  
    return FALSE;  
  \}  
  
  /* describe the upgrade */  
  EmitTo(\$actor, "You begin to pull apart "+Describe(\$iob[0], nil, \$actor)+" with "+Describe(this, nil, \$actor)+". Cogs, springs, and other pieces of metal go flying everywhere.");  
  EmitIn(\$actor."base:environment", Describe(\$actor)+" begins to pull apart "+Describe(\$iob[0], \$actor)+" with "+Describe(this, \$actor)+". Cogs, springs, and other pieces of metal go flying everywhere.", \$actor);  
  \$delay(2, FALSE, "e7ef");  
  switch(random(3)) \{  
    case 2:  
      EmitTo(\$actor, "All the pieces are coming together, as you assemble "+Describe(\$iob[0], nil, \$actor)+".");  
      EmitIn(\$actor."base:environment", "You notice a manic gleam in "+Describe(\$actor)+"'s eyes.", \$actor);  
      break;  
    case 1:  
      EmitTo(\$actor, "You have trouble keeping a spring in place.");  
      EmitIn(\$actor."base:environment", Describe(\$actor)+" seems to be having trouble with a spring that keeps popping out.", \$actor);  
      break;  
    default:  
      EmitTo(\$actor, "You frown at "+Describe(\$iob[0], nil, \$actor)+", something doesn't seem right.");  
      EmitIn(\$actor."base:environment", "You hear "+Describe(\$actor)+" mutter the words 'Uh oh.'", \$actor);  
  \}  
  \$delay(2, FALSE, "bfb8");  
  switch(random(3)) \{  
    case 2:  
      EmitTo(\$actor, "You finish working on "+Describe(\$iob[0], nil, \$actor)+", then notice a spare spring. You wonder briefly where the spring was meant to go, before tossing it over your shoulder.");  
      EmitIn(\$actor."base:environment", Describe(\$actor)+" finishes reassembling "+Describe(\$iob[0], \$actor)+". You notice a spare spring that seems to have been forgotten. "+Describe(\$actor)+" casually tosses the spring over "+\$actor."base:possessive"+" shoulder.", \$actor);  
      break;  
    case 1:  
      EmitTo(\$actor, "You put the last cog in place, and really hope "+Describe(\$iob[0], nil, \$actor)+" doesn't explode when next fired.");  
      EmitIn(\$actor."base:environment", Describe(\$actor)+" puts the last few cogs into place, with an unsure look on "+\$actor."base:possessive"+" face.", \$actor);  
      break;  
    default:  
      EmitTo(\$actor, "You triumphantly finish working on "+Describe(\$iob[0], nil, \$actor)+".");  
      EmitIn(\$actor."base:environment", "With a triumphant gleam in "+\$actor."base:possessive"+" eye, "+Describe(\$actor)+" manages to reassemble "+Describe(\$iob[0], \$actor)+".", \$actor);  
  \}  
  
  if(\$gun.locktype == "match-lock") \{  
    \$gun.locktype = "wheel-lock";  
  \} else if(\$gun.locktype == "wheel-lock") \{  
    \$gun.locktype = "snaphaunce";  
   \} else \{  
    \$gun.locktype = "match-lock";  
  \}  
  return FALSE;  
\} else if(\$detail == "lock") \{  
  /* replace lock description */  
  if(this."details:default:description:writing:local") \{  
    \$gun."details:lock:description:look" = Str(this."details:default:description:writing:local");  
  \} else \{  
    \$gun."details:lock:description:look" = nil;  
  \}  
  
  /* describe the upgrade */  
  EmitTo(\$actor, "You upgrade the lock mechanism in "+Describe(\$iob[0], nil, \$actor)+" with a new design.");  
  EmitIn(\$actor."base:environment", Describe(\$actor)+" pulls apart "+Describe(\$iob[0], \$actor)+"'s lock mechanism, making strange and unusual changes with "+Describe(this, \$actor)+".", \$actor);  
  return FALSE;  
\}  
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1147235617, "sanc_the_dark", "E", 1147235632, "sanc_the_dark", "E", 1147235661, "sanc_the_dark", "E", 1147235672, "sanc_the_dark", "E", 1147235717, "sanc_the_dark", "E", 1147235762, "sanc_the_dark", "E", 1147235791, "sanc_the_dark", "E", 1147235831, "sanc_the_dark", "E", 1147235906, "sanc_the_dark", "E", 1147235932, "sanc_the_dark", "E", 1147236055, "sanc_the_dark", "E", 1147236070, "sanc_the_dark", "E", 1147236552, "sanc_the_dark", "E", 1203299089, "slurpeeslurp", "E", 1203299120, "slurpeeslurp", "E", 1203299142, "slurpeeslurp", "E", 1203299497, "slurpeeslurp", "E", 1203299565, "slurpeeslurp", "E", 1203299694, "slurpeeslurp", "E", 1203299713, "slurpeeslurp", "E", 1203300494, "slurpeeslurp", "E", 1203300582, "slurpeeslurp", "E", 1203300667, "slurpeeslurp", "E", 1203655312, "slurpeeslurp", "E", 1203655374, "slurpeeslurp", "E", 1203655417, "slurpeeslurp", "E", 1203655656, "slurpeeslurp", "E", 1203655852, "slurpeeslurp", "E", 1203655913, "slurpeeslurp", "E", 1203656510, "slurpeeslurp", "E", 1203656594, "slurpeeslurp", "E", 1203657962, "slurpeeslurp", "E", 1203785684, "slurpeeslurp", "E", 1214553849, "slurpeeslurp", "E", 1214554009, "slurpeeslurp", "E", 1214554156, "slurpeeslurp", "K", 1214554206, "slurpeeslurp", "E", 1216023097, "tonyd", "P", 1216024409, "tonyd", "P", 1216024465, "tonyd", "P", 1216024474, "tonyd", "P", 1216034909, "tonyd", "P", 1216034980, "tonyd", "P", 1216035037, "tonyd", "P", 1216035230, "tonyd", "P", 1216035258, "tonyd", "P", 1216035608, "tonyd", "P", 1216035874, "tonyd", "P", 1216035944, "tonyd", "P", 1216036188, "tonyd", "P", 1216036211, "tonyd", "P", 1216036323, "tonyd", "P", 1216036395, "tonyd", "P", 1216036487, "tonyd", "P", 1216036611, "tonyd", "P", 1216046214, "rorschakovacs", "E", 1216047357, "rorschakovacs", "E", 1216047373, "rorschakovacs", "K", 1216047478, "rorschakovacs", "E", 1216047544, "rorschakovacs", "E", 1286838805, "rastalabor", "X", 1305990333, "morwenlorelie", "K", 1305990337, "morwenlorelie", "E", 1305990390, "morwenlorelie", "X", 1309419209, "morwenlorelie", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
