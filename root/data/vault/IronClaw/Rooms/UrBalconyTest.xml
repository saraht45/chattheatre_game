<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="28.3" maxweight="28.3"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="true"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="100" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="courtyard"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="courtyard"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             courtyard
          </Base:Description>
          <Base:Description type="glance">
             A small courtyard, overlooked by a balcony.
          </Base:Description>
          <Base:Description type="look">
             A courtyard, surrounded by stone walls. To the north, vines climb the stone and wrap around a balcony.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-north" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="archway"/>
            <Base:SName sname="arch"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="archways"/>
            <Base:PName pname="arches"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="balcony"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             balcony archway
          </Base:Description>
          <Base:Description type="look">
             An archway, that opening onto the courtyard balcony.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(IronClaw:Rooms:UrBalconyTest|exit-west)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="exit-west" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="false" inside="true" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="doorway"/>
            <Base:SName sname="door"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="doorways"/>
            <Base:PName pname="doors"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="courtyard"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             courtyard doorway
          </Base:Description>
          <Base:Description type="look">
             A doorway, leading to a flight of stairs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit dest="NREF(IronClaw:Rooms:UrBalconyTest|exit-north)" door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="balcony" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="balcony"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="balconies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">balcony</Base:Description>
          <Base:Description type="look">
             A balcony, overlooking the courtyard. Vines wrap around the balcony wall, and creep down to the cobbles below.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cage" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="true" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cage"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cages"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">cage</Base:Description>
          <Base:Description type="look">
             A solid cage, built from thick iron bars.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cage-bars" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bar"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bars"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cage"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             cage bars
          </Base:Description>
          <Base:Description type="look">
             Thick metal bars, enclosing a cage.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="vines" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vine"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="vines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="courtyard"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">vines</Base:Description>
          <Base:Description type="look">
             Vines, that climb from the cobbles of the courtyard up to the balcony.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="vines-balcony" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vine"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="vines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="balcony"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             balcony vines
          </Base:Description>
          <Base:Description type="look">
             Vines that curl around the balcony. The vines trail from the balcony down to the courtyard.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-desc:climb-dob">
         X[M] /* allow climbing the vines */
if(!\$dob \|\| sizeof(\$dob) \> 1) return TRUE;

if(NRefDetail(\$dob[0]) == "vines") \{
  EmitTo(\$actor, "You climb the vines, to the balcony.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" climbs the vines to the balcony.", \$actor);
  \$actor."base:proximity" = NewNRef(\$actor."base:environment", "balcony");
  \$actor."room:partition" = "on the balcony";
  \$actor."base:stancestring" = "standing";
  \$actor."base:prepositionstring" = "on";
  return FALSE;
\} else if(NRefDetail(\$dob[0]) == "vines-balcony") \{
  EmitTo(\$actor, "You climb down the vines, from the balcony to the courtyard.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" climbs down the vines to the courtyard below.", \$actor);
  \$actor."room:partition" = nil;
  \$actor."base:stancestring" = "standing";
  \$actor."base:prepositionstring" = "in";
  \$actor."base:proximity" = NewNRef(\$actor."base:environment", "default");
  return FALSE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:apologize-iob">
         X[M] /* get released from the cage */
EmitTo(\$actor, "A guard tells you, \\"Alright, just don't go swearing again.\\"");
EmitTo(\$actor, "A guard lets you out of the cage.");
EmitIn(\$actor."base:environment", "A guard tells "+Describe(\$actor)+", \\"Alright, just don't go swearing again.\\"", \$actor);
EmitIn(\$actor."base:environment", "A guard lets "+Describe(\$actor)+" out of the cage.", \$actor);

\$actor."base:proximity" = NewNRef(\$actor."base:environment", "cage");
\$actor."room:partition" = nil;
\$actor."base:stancestring" = "standing";
\$actor."base:prepositionstring" = "near";
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:swear-iob">
         X[M] /* get locked in the cage */
EmitTo(\$actor, "A guard tells you, \\"Oi! No swearing in here! This is Romeo and Juliet, not Pulp Fiction.\\"");
EmitTo(\$actor, "A guard locks you in a cage.");
EmitIn(\$actor."base:environment", "A guard tells "+Describe(\$actor)+", \\"Oi! No swearing in here! This is Romeo and Juliet, not Pulp Fiction.\\"", \$actor);
EmitIn(\$actor."base:environment", "A guard locks "+Describe(\$actor)+" in a cage.", \$actor);

\$actor."base:proximity" = NewNRef(\$actor."base:environment", "cage");
\$actor."room:partition" = "in a cage";
\$actor."base:stancestring" = "standing";
\$actor."base:prepositionstring" = "in";
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1156568762, "tonyd", "E", 1156937608, "tonyd", "S", 1157015214, "tonyd", "E", 1157155669, "tonyd", "E", 1157155859, "tonyd", "E", 1157157474, "tonyd", "E", 1172102552, "tunk_bodin", "E" \})
      </Core:Property>
      <Core:Property property="room:partition:balcony">
         "on the balcony"
      </Core:Property>
      <Core:Property property="room:partition:cage">
         "in a cage"
      </Core:Property>
      <Core:Property property="room:partition:cage-bars">
         (\{ nil, "in a cage" \})
      </Core:Property>
      <Core:Property property="room:partition:exit-north">
         "on the balcony"
      </Core:Property>
      <Core:Property property="room:partition:no-throw">
         (\{ "on the balcony" \})
      </Core:Property>
      <Core:Property property="room:partition:vines-balcony">
         "on the balcony"
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
