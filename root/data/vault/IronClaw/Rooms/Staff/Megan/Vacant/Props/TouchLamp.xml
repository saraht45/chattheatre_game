<object clone="/base/obj/thing" owner="rorschakovacs">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="sitting" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lamp"/>
            <Base:SName sname="furniture"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="lamps"/>
            <Base:PName pname="furnitures"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="table"/>
          <Base:Adjective adjective="touch"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? not | $(this.details:light:hidden) |lit } $(this.trait:color) $(this.trait:material) touch lamp
          </Base:Description>
          <Base:Description type="examine">
             {? not | $(this.details:light:hidden) | A simple modern $(this.trait:color) $(this.trait:material) touch lamp. It has a $(this.trait:shade:color) $(this.trait:shade:material) shade. The lamp illuminates the room with a warm golden light.| A simple modern $(this.trait:color) $(this.trait:material) touch lamp. It has a $(this.trait:shade:color) $(this.trait:shade:material) shade. It is not lit. }
          </Base:Description>
          <Base:Description type="glance">
             A $(this.trait:color) $(this.trait:material) touch lamp.
          </Base:Description>
          <Base:Description type="look">
             {? not | $(this.details:light:hidden) | A simple modern $(this.trait:color) $(this.trait:material) touch lamp. It has a $(this.trait:shade:color) $(this.trait:shade:material) shade. The lamp illuminates the room with a warm golden light.| A simple modern $(this.trait:color) $(this.trait:material) touch lamp. It has a $(this.trait:shade:color) $(this.trait:shade:material) shade. It is not lit. }
          </Base:Description>
          <Base:Description type="react-desc:extinguish-dob">
             {? not | $(this.details:light:hidden) | $[EmitTo($actor, Describe($this, nil, $actor) + " extinguishes."); EmitIn(Get($actor, "base:environment"), Describe($this, nil, nil) + " extinguishes.", $actor); Set($this, "details:light:hidden", TRUE);] | The $(this.trait:color) $(this.trait:material) touch lamp is not lit. }
          </Base:Description>
          <Base:Description type="react-desc:light-dob">
             {? not | $(this.details:light:hidden) | The $(this.trait:color) $(this.trait:material) touch lamp is already lit. | $[EmitTo($actor, Describe($this, nil, $actor) + " lights."); EmitIn(Get($actor, "base:environment"), Describe($this, nil, nil) + " lights.", $actor); Set($this, "details:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react-post:tap-dob">
             {? not | $(this.details:light:hidden) | The $(this.trait:color) $(this.trait:material) touch lamp extinguishes. $[Set($this, "details:light:hidden", TRUE);] | The $(this.trait:color) $(this.trait:material) touch lamp lights. $[Set($this, "details:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react-post:touch-dob">
             {? not | $(this.details:light:hidden) | The $(this.trait:color) $(this.trait:material) touch lamp extinguishes. $[Set($this, "details:light:hidden", TRUE);] | The $(this.trait:color) $(this.trait:material) touch lamp lights. $[Set($this, "details:light:hidden", FALSE);] }
          </Base:Description>
          <Base:Description type="react3-post:tap-dob">
             {? not | $(this.details:light:hidden) |  The $(this.trait:color) $(this.trait:material) touch lamp lights. | The $(this.trait:color) $(this.trait:material) touch lamp extinguishes.}
          </Base:Description>
          <Base:Description type="react3-post:touch-dob">
             {? not | $(this.details:light:hidden) |  The $(this.trait:color) $(this.trait:material) touch lamp lights. | The $(this.trait:color) $(this.trait:material) touch lamp extinguishes.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="light" prime="false" def="false" abstract="false" hidden="false" luminosity="20" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="light"/>
            <Base:SName sname="flame"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="flames"/>
            <Base:PName pname="lights"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="light"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             light from a lamp
          </Base:Description>
          <Base:Description type="examine">
             The lamp light casts out a warm golden hue.
          </Base:Description>
          <Base:Description type="look">
             A yellowish light from a lamp.
          </Base:Description>
          <Base:Description type="pbrief">lights</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shade" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shade"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="shades"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="lamp"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the simple curved $(this.trait:shade:color) $(this.trait:shade:material) of $[Describe($this)]
          </Base:Description>
          <Base:Description type="examine">
             The simple curved $(this.trait:shade:color) $(this.trait:shade:material) of $[Describe($this)] with a white painted interior.
          </Base:Description>
          <Base:Description type="look">
             The simple curved $(this.trait:shade:color) $(this.trait:shade:material) of $[Describe($this)] with a white painted interior.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stand" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stand"/>
            <Base:SName sname="base"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stands"/>
            <Base:PName pname="bases"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:color) $(this.trait:material) stand of $[Describe($this)]
          </Base:Description>
          <Base:Description type="examine">
             The $(this.trait:color) $(this.trait:material) stand of $[Describe($this)] which rests on a $(this.trait:color) $(this.trait:material) base.
          </Base:Description>
          <Base:Description type="glance">
             The $(this.trait:color) $(this.trait:material) stand of $[Describe($this)] which rests on a $(this.trait:color) $(this.trait:material) base.
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:color) $(this.trait:material) stand of $[Describe($this)] which rests on a $(this.trait:color) $(this.trait:material) base.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="trait:light:lightable">
         1
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:trait:color">
         "burnished"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "brass"
      </Core:Property>
      <Core:Property property="export:trait:shade:color">
         "burnished"
      </Core:Property>
      <Core:Property property="export:trait:shade:material">
         "brass"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1191699525, "rorschakovacs", "E", 1191699600, "rorschakovacs", "E", 1191699616, "rorschakovacs", "E", 1191699647, "rorschakovacs", "E", 1191699670, "rorschakovacs", "E", 1191699685, "rorschakovacs", "E", 1191699766, "rorschakovacs", "E", 1191699816, "rorschakovacs", "E", 1191699905, "rorschakovacs", "E", 1191700146, "rorschakovacs", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:light:lightable">
         1
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
