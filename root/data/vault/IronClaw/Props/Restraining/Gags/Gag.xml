<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gag"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="gags"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="examine">
             A  $(this.trait:brief) made of {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } {? | $(this.details:button:snames) | adorned with $(this.trait:buttons:color) $(this.trait:buttons:material)$(this.trait:buttons:type) buttons} {? | $(this.details:bead:snames) | {? | $(this.details:button:snames) | and | adorned with } $(this.trait:bead:color) $(this.trait:bead:material) beads}. {? | $(this.details:gem:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s cover the fabric.} {? | $(this.details:trimming:snames) | A $(this.trait:trimming:color) $(this.trait:trimming:material) trimming runs along the edge.} {? | $(this.details:lace:snames) | The $(this.trait:brief) is decorated with a $(this.trait:lace:color) $(this.trait:lace:material) lace} {? | $(this.details:fringe:snames) | {? | $(this.details:lace:snames) | and a |The $(this.trait:brief) is decorated with a } $(this.trait:fringe:color) $(this.trait:fringe:material) fringe.} {? | $(this.details:buckle:snames) | The piece is finished with a set of $(this.trait:buckle:color) $(this.trait:buckle:material) buckles.} <br/> $(this.trait:examine)
          </Base:Description>
          <Base:Description type="look">
             A  $(this.trait:brief) made of {? equal | $(this.trait:color) | none | {? equal | $(this.trait:material) | none | plain | $(this.trait:material) } | $(this.trait:color) {? equal | $(this.trait:material) | none || $(this.trait:material) } } {? | $(this.details:button:snames) | adorned with $(this.trait:buttons:color) $(this.trait:buttons:material)$(this.trait:buttons:type) buttons} {? | $(this.details:bead:snames) | {? | $(this.details:button:snames) | and | adorned with } $(this.trait:bead:color) $(this.trait:bead:material) beads}. {? | $(this.details:gem:snames) | Remarkable $(this.trait:gem:color) $(this.trait:gem:material)s cover the fabric.} {? | $(this.details:trimming:snames) | A $(this.trait:trimming:color) $(this.trait:trimming:material) trimming runs along the edge.} {? | $(this.details:lace:snames) | The $(this.trait:brief) is decorated with a $(this.trait:lace:color) $(this.trait:lace:material) lace} {? | $(this.details:fringe:snames) | {? | $(this.details:lace:snames) | and a |The $(this.trait:brief) is decorated with a } $(this.trait:fringe:color) $(this.trait:fringe:material) fringe.} {? | $(this.details:buckle:snames) | The piece is finished with a set of $(this.trait:buckle:color) $(this.trait:buckle:material) buckles.} <br/> $(this.trait:look)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="buckle" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:buckle:material) | $(this.trait:buckle:material) }buckle
          </Base:Description>
          <Base:Description type="export:trait:buckle:material">
             "brass"
          </Base:Description>
          <Base:Description type="look">
             A buckle{? | $(this.trait:buckle:material) | made of $(this.trait:buckle:color) $(this.trait:buckle:material)}.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="waist"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:brief">
         "gag"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "Worn over the mouth, this gag is designed to prevent the wearer from speaking"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "cloth"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "gag"
      </Core:Property>
      <Core:Property property="merry:lib:gag_allowed">
         X[M] /* Attach the handcuffs to the victim */
\$actor = \$par["actor"];
\$victim = \$par["victim"];

/* Check the handcuffer and handcuffee are still in the same room */
if(\$actor."base:environment" == \$victim."base:environment") \{
  /* first move the handcuffs into the victims inventory */
  \$this."base:environment" = \$victim;
  /* then make them be worn */
  \$this."base:worn-by" = \$victim;
  /* make it mute them */
  \$victim.mute = 1;


  /* Output a message */
  EmitTo(\$actor, "You gag "+Describe(NewNRef(\$victim, "default"), \$actor, \$actor)+". ");
  /* Don't emit a second emote if we're handcuffing ourselves */
  if(!NRefsEqual(NewNRef(\$actor, "default"), NewNRef(\$victim, "default")))
    EmitTo(\$victim, Describe(\$actor)+" gags you.");
  EmitIn(\$actor."base:environment", Describe(\$actor)+" gags "+Describe(NewNRef(\$victim, "default"))+".", \$actor, \$victim);
\} else \{
  EmitTo(\$actor, "You are no longer in the same room as "+Describe(NewNRef(\$victim, "default"))+".");
  EmitTo(\$victim, "You are no longer in the same room as "+Describe(\$actor)+".");
\}


/* Suppress the usual "attach" emote */
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:gag_denied">
         X[M] \$actor = \$par["actor"];
\$victim = \$par["victim"];
EmitTo(\$actor, Describe(NewNRef(\$victim, "default"))+" refuses to be gagged.");
EmitTo(\$victim, "You refuse "+Describe(NewNRef(\$actor, "default"))+" consent to gag you.");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:gag_expire">
         X[M] \$actor = \$par["actor"];
\$victim = \$par["victim"];
if(\$this."base:environment" == \$actor) \{
  EmitTo(\$actor, "Consent to bind "+Describe(NewNRef(\$victim, "default"))+" has expired.");
  EmitTo(\$victim, Describe(NewNRef(\$actor, "default"))+" has asked to bind you, but time has expired.");
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:gag-using">
         X[M] /* The X[M] tells us that we're writing a merry script */
/* We are handcuffing someone */

/* Check if we have someone to gag */
if(!\$dob)
  return TRUE;

/* Check that we are only gagging one person at a time */
if(sizeof(\$dob) \> 1) \{
  EmitTo(\$actor, "You can only gag one person at a time.");
  return FALSE;
\}

\$victim = NRefOb(\$dob[0]);



/* Check if the target is a person */
if(!\$victim."base:volition")
 return TRUE;


/* make the gag be worn by the victim */

/* Check if we need consent */
/* check if combat:damage is larger than trait:body */
/* Also check if we're gagging ourselves (and hence don't need consent) */
\$endur = Int(\$victim."career:combat:endurance") + Int(\$victim."skill:combat:endurance");
\$hp = \$victim."trait:body" + \$endur + 3;
if((\$victim."combat:damage" \> \$hp) \|\| (\$victim."combat:fatigue" \> \$hp) \|\| NRefsEqual(NewNRef(\$actor, "default"), NewNRef(\$victim, "default"))) \{
  Call(\$this, "gag_allowed", \$par: ([ "victim": \$victim, "room": \$room, "actor": \$actor]));
\} else \{
 
  EmitTo(\$actor, "Asking "+Describe(\$dob[0])+" for consent, as "+\$victim."base:pronoun"+" is still able to resist.");
  interaction::question(\$actor: \$victim, \$question: Describe(\$actor)+" is attempting to gag you. Will you allow this?", \$expires: 80, \$env: "TRUE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "gag_allowed", \$no_fun: "gag_denied", \$expire_fun: "gag_expire", \$par: ([ "victim": \$victim, "room": \$room, "actor": \$actor]));
\}

/* we're done here. squash the normal emote for attach */
return FALSE;


/* first move the handcuffs into the victims inventory */
\$this."base:environment" = \$victim;
/* then make them be worn */
\$this."base:worn-by" = \$victim;

/* Output a message */
EmitTo(\$actor, "You gag "+Describe(\$iob[0])+".");
EmitTo(\$victim, Describe(\$actor)+" gags you.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" gags "+Describe(\$iob[0])+".");

/* Suppress the usual "attach" emote */
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:unwear">
         X[M] \$actor.mute = nil; 
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:wear">
         X[M] \$actor.mute = 1;   
    
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1102312379, "tonyd", "X", 1102312418, "tonyd", "X", 1102312676, "tonyd", "E", 1102312804, "tonyd", "E", 1102312946, "tonyd", "E", 1102312971, "tonyd", "E", 1102313360, "tonyd", "E", 1102313385, "tonyd", "E", 1102313698, "tonyd", "E", 1102313730, "tonyd", "E", 1102313760, "tonyd", "E", 1102313778, "tonyd", "E", 1102313910, "tonyd", "E", 1102314969, "tonyd", "E", 1102314986, "tonyd", "E", 1102315252, "tonyd", "E", 1102315331, "tonyd", "E", 1102315419, "tonyd", "E", 1102315469, "tonyd", "E", 1102315509, "tonyd", "E", 1102315653, "tonyd", "E", 1102315689, "tonyd", "E", 1102315913, "tonyd", "E", 1102315944, "tonyd", "E", 1102316160, "tonyd", "E", 1102722113, "tonyd", "E", 1102722121, "tonyd", "E", 1102723433, "tonyd", "E", 1102723452, "tonyd", "E", 1102725463, "tonyd", "E", 1102725971, "tonyd", "E", 1102727694, "tonyd", "E", 1102728027, "tonyd", "E", 1102737382, "tonyd", "E", 1102818089, "tonyd", "E", 1102823410, "tonyd", "E", 1102823445, "tonyd", "E", 1102824774, "tonyd", "E", 1102825200, "tonyd", "E", 1102825270, "tonyd", "E", 1102825861, "tonyd", "E", 1103000935, "tonyd", "E", 1103002715, "tonyd", "E", 1103002786, "tonyd", "E", 1103069521, "tonyd", "E", 1103070439, "tonyd", "E", 1103071522, "tonyd", "E", 1103072176, "tonyd", "E", 1103072602, "tonyd", "E", 1103072808, "tonyd", "E", 1103078278, "tonyd", "E", 1103084033, "tonyd", "E", 1103084078, "tonyd", "E", 1103084148, "tonyd", "E", 1103084391, "tonyd", "E", 1103084493, "tonyd", "E", 1103084608, "tonyd", "E", 1103084651, "tonyd", "E", 1103084725, "tonyd", "E", 1103084822, "tonyd", "E", 1103084892, "tonyd", "E", 1103084923, "tonyd", "E", 1103084953, "tonyd", "E", 1103085056, "tonyd", "E", 1103085100, "tonyd", "E", 1103089195, "tonyd", "E", 1103091115, "tonyd", "E", 1103154368, "tonyd", "E", 1103253009, "tonyd", "E", 1103253256, "tonyd", "E", 1103253438, "tonyd", "E", 1103253537, "tonyd", "P", 1103253693, "tonyd", "P", 1103253903, "tonyd", "E", 1103253939, "tonyd", "E", 1103253967, "tonyd", "E", 1103254055, "tonyd", "P", 1107035735, "tonyd", "E", 1107035881, "tonyd", "X", 1107035977, "tonyd", "E", 1107036131, "tonyd", "E", 1107036221, "tonyd", "E", 1107036238, "tonyd", "E", 1107038959, "tonyd", "E", 1107038973, "tonyd", "X", 1107039000, "tonyd", "E", 1107039260, "tonyd", "E", 1107039329, "tonyd", "E", 1107044820, "tonyd", "E", 1118474379, "librarysage", "E", 1119754459, "tonyd", "E", 1119754627, "tonyd", "E", 1119754717, "tonyd", "E", 1119754918, "tonyd", "E", 1119755504, "tonyd", "E", 1119755518, "tonyd", "E", 1119755700, "tonyd", "E", 1119760590, "tonyd", "E", 1119760598, "tonyd", "E", 1119760735, "tonyd", "E", 1119760860, "tonyd", "E", 1125556753, "roccon", "E", 1136533985, "tunk_bodin", "X", 1140250537, "tonyd", "P", 1140250632, "tonyd", "P", 1167629051, "tonyd", "E", 1167629899, "tonyd", "E", 1167629961, "tonyd", "E", 1179853699, "barbra18", "X", 1196270903, "slurpeeslurp", "E", 1196270929, "slurpeeslurp", "E", 1196270946, "slurpeeslurp", "E", 1196275272, "slurpeeslurp", "X", 1196283504, "slurpeeslurp", "E", 1196283615, "slurpeeslurp", "E", 1196302101, "slurpeeslurp", "E", 1196302191, "slurpeeslurp", "E", 1196302370, "slurpeeslurp", "E", 1223939027, "slurpeeslurp", "E", 1223939101, "slurpeeslurp", "K", 1223939124, "slurpeeslurp", "E", 1223939133, "slurpeeslurp", "E", 1223939161, "slurpeeslurp", "E", 1223939189, "slurpeeslurp", "E", 1223939215, "slurpeeslurp", "E", 1223939472, "slurpeeslurp", "E", 1223939550, "slurpeeslurp", "E", 1223939576, "slurpeeslurp", "E", 1223939873, "slurpeeslurp", "E", 1223940039, "slurpeeslurp", "E", 1223940143, "slurpeeslurp", "E", 1223940190, "slurpeeslurp", "E", 1223940213, "slurpeeslurp", "E", 1223940260, "slurpeeslurp", "E", 1223940412, "slurpeeslurp", "E", 1223940463, "slurpeeslurp", "E", 1223940543, "slurpeeslurp", "E", 1223940689, "slurpeeslurp", "E", 1234739362, "balkaar", "E", 1234739366, "balkaar", "E", 1234739375, "balkaar", "E", 1234739378, "balkaar", "E", 1234739381, "balkaar", "E", 1234739396, "balkaar", "E", 1234739403, "balkaar", "E", 1234739407, "balkaar", "E", 1234739469, "balkaar", "E", 1234739893, "balkaar", "E", 1234739926, "balkaar", "E", 1234739974, "balkaar", "E", 1234740129, "balkaar", "E", 1234740215, "balkaar", "E", 1234740272, "balkaar", "E", 1234823092, "balkaar", "E", 1234823241, "balkaar", "E", 1234823299, "balkaar", "E", 1238885513, "morwenlorelie", "E", 1246274434, "morwenlorelie", "K", 1250308947, "slurpeeslurp", "E", 1263295672, "slurpeeslurp", "E", 1263295685, "slurpeeslurp", "E", 1263295797, "slurpeeslurp", "K", 1263637137, "tonyd", "E", 1263637207, "tonyd", "E", 1263637353, "tonyd", "E", 1263637468, "tonyd", "E", 1263637471, "tonyd", "E", 1263637506, "tonyd", "E", 1263637513, "tonyd", "E", 1263637569, "tonyd", "E", 1263637627, "tonyd", "E", 1263637682, "tonyd", "E", 1263637923, "tonyd", "E", 1263639137, "tonyd", "E", 1263640280, "tonyd", "E", 1263640484, "tonyd", "E", 1263641115, "tonyd", "E", 1263641211, "tonyd", "E", 1263642563, "tonyd", "E", 1263643264, "tonyd", "E", 1263643469, "tonyd", "E", 1263644173, "tonyd", "E", 1263644448, "tonyd", "E", 1263644564, "tonyd", "E", 1263644647, "tonyd", "E", 1263644707, "tonyd", "E", 1263644713, "tonyd", "E", 1263644769, "tonyd", "E", 1263644830, "tonyd", "E", 1263645621, "tonyd", "E", 1263646287, "tonyd", "E", 1263646360, "tonyd", "E", 1263646488, "tonyd", "E", 1263647417, "tonyd", "E", 1263647732, "tonyd", "E", 1263648064, "tonyd", "E", 1263648229, "tonyd", "E", 1263649017, "tonyd", "E", 1263649204, "tonyd", "E", 1263649262, "tonyd", "E", 1263649310, "tonyd", "E", 1263649348, "tonyd", "E", 1263649480, "tonyd", "E", 1263649532, "tonyd", "E", 1263649576, "tonyd", "E", 1263649651, "tonyd", "E", 1263649728, "tonyd", "E", 1263649779, "tonyd", "E", 1263649901, "tonyd", "E", 1263649918, "tonyd", "E", 1702364959, "ezralee", "K", 1702364967, "ezralee", "E", 1702364972, "ezralee", "E", 1702365117, "ezralee", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
