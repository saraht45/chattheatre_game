<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rod"/>
            <Base:SName sname="copper"/>
            <Base:SName sname="electric"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rods"/>
            <Base:PName pname="coppers"/>
            <Base:PName pname="electrics"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             copper rod
          </Base:Description>
          <Base:Description type="examine">
             A copper rod, painted in a $(this.trait:color) shade.
          </Base:Description>
          <Base:Description type="look">
             A copper rod, painted in a $(this.trait:color) shade.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:color">
         "black"
      </Core:Property>
      <Core:Property property="merry:react-desc:touch-dob">
         X[M] /* cause pain to the victim */
int i;

/* if we don't have a victim, continue normally */
if(!\$iob \|\| sizeof(\$iob) == 0) return TRUE;

/* find who the victims are */
switch(sizeof(\$iob)) \{
  case 10:
    \$vic10 = NRefOb(\$iob[9]);
  case 9:
    \$vic9 = NRefOb(\$iob[8]);
  case 8:
    \$vic8 = NRefOb(\$iob[7]);
  case 7:
    \$vic7 = NRefOb(\$iob[6]);
  case 6:
    \$vic6 = NRefOb(\$iob[5]);
  case 5:
    \$vic5 = NRefOb(\$iob[4]);
  case 4:
    \$vic4 = NRefOb(\$iob[3]);
  case 3:
    \$vic3 = NRefOb(\$iob[2]);
  case 2:
    \$vic2 = NRefOb(\$iob[1]);
  default:
    \$vic1 = NRefOb(\$iob[0]);
    break;
\}


/* give emits */
EmitTo( \$actor, "You touch "+Describe(\$iob, \$actor, \$actor, STYLE_PRONOUN)+ " with " +Describe(\$this, nil, \$actor)+". " +capitalize(Describe(\$iob, nil, \$actor))+ " seems to shudder in pain.");

EmitIn( \$actor."base:environment", Describe(\$actor)+ " touches " +Describe(\$iob, \$actor, nil, STYLE_PRONOUN)+ " with " +Describe(\$this, \$actor)+ ". " +capitalize(Describe(\$iob))+ " seems to shudder in pain.", \$actor, \$vic1, \$vic2, \$vic3, \$vic4, \$vic5, \$vic6, \$vic7, \$vic8, \$vic9, \$vic10);

/* emit to each victim */
for(i=0;i\<sizeof(\$iob);i++) \{
  EmitTo( NRefOb(\$iob[i]), Describe(\$actor)+ " touches "+Describe(\$iob[i], nil, NRefOb(\$iob[i]), STYLE_IGNORE_VISIBILITY)+" with " +Describe(\$this, \$actor)+". You suddenly feel as if a lightning bolt has hit you and you feel the need to move away from " +Describe(\$this, \$actor)+ ".");
\}

return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-desc:touch-using">
         X[M] /* cause pain to the victim */
int i;

/* if we don't have a victim, continue normally */
if(!\$dob \|\| sizeof(\$dob) == 0) return TRUE;

/* find who the victims are */
switch(sizeof(\$dob)) \{
  case 10:
    \$vic10 = NRefOb(\$dob[9]);
  case 9:
    \$vic9 = NRefOb(\$dob[8]);
  case 8:
    \$vic8 = NRefOb(\$dob[7]);
  case 7:
    \$vic7 = NRefOb(\$dob[6]);
  case 6:
    \$vic6 = NRefOb(\$dob[5]);
  case 5:
    \$vic5 = NRefOb(\$dob[4]);
  case 4:
    \$vic4 = NRefOb(\$dob[3]);
  case 3:
    \$vic3 = NRefOb(\$dob[2]);
  case 2:
    \$vic2 = NRefOb(\$dob[1]);
  default:
    \$vic1 = NRefOb(\$dob[0]);
    break;
\}


/* give emits */
EmitTo( \$actor, "You touch "+Describe(\$dob, nil, \$actor)+ " with " +Describe(\$this, nil, \$actor)+". They seem to shudder in pain.");

EmitIn( \$actor."base:environment", Describe(\$actor)+ " touches " +Describe(\$dob, \$actor)+ " with " +Describe(\$this, \$actor)+ ". " +capitalize(Describe(\$dob, \$actor))+ " seems to shudder in pain.", \$actor, \$vic1, \$vic2, \$vic3, \$vic4, \$vic5, \$vic6, \$vic7, \$vic8, \$vic9, \$vic10);

/* emit to each victim */
for(i=0;i\<sizeof(\$dob);i++) \{
  EmitTo( NRefOb(\$dob[i]), Describe(\$actor)+ " touches "+Describe(\$dob[i], nil, NRefOb(\$dob[i]), STYLE_IGNORE_VISIBILITY)+" with " +Describe(\$this, \$actor)+". You suddenly feel as if a lightning bolt has hit you and you feel the need to move away from " +Describe(\$this, \$actor)+ ".");
\}

return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1155475445, "barbra18", "K", 1155475576, "barbra18", "X", 1155475620, "barbra18", "X", 1155476717, "barbra18", "X", 1155484800, "barbra18", "X", 1155516778, "tonyd", "P", 1155516817, "tonyd", "P", 1155516843, "tonyd", "P", 1155516856, "tonyd", "P", 1155516917, "tonyd", "P", 1155516932, "tonyd", "P", 1155516957, "tonyd", "P", 1155516996, "tonyd", "E", 1155517036, "tonyd", "P", 1155517146, "tonyd", "P", 1155517172, "tonyd", "P", 1155517190, "tonyd", "P", 1155517276, "tonyd", "P", 1155517391, "tonyd", "P", 1155517443, "tonyd", "P", 1155517505, "tonyd", "P", 1155517535, "tonyd", "P", 1155517753, "tonyd", "P", 1155517762, "tonyd", "P", 1155517868, "tonyd", "P", 1155517924, "tonyd", "P", 1155517955, "tonyd", "P", 1155518181, "tonyd", "P", 1155518358, "tonyd", "P", 1155518562, "tonyd", "P", 1155518621, "tonyd", "P", 1155518678, "tonyd", "P", 1155518731, "tonyd", "P", 1155518743, "tonyd", "P", 1155518764, "tonyd", "P", 1155518852, "tonyd", "P", 1155519018, "tonyd", "P", 1155519088, "tonyd", "P", 1155519144, "tonyd", "P", 1155519186, "tonyd", "P", 1155519216, "tonyd", "P", 1155519243, "tonyd", "P", 1155519275, "tonyd", "P", 1155519310, "tonyd", "P", 1155519330, "tonyd", "P", 1155519348, "tonyd", "P", 1155519387, "tonyd", "P", 1155519408, "tonyd", "P", 1155519562, "tonyd", "P", 1155519602, "tonyd", "P", 1155520715, "tonyd", "P", 1155520752, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
