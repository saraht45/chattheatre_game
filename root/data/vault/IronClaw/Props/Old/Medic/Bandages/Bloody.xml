<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.2" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bandage"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bandages"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blood-stained"/>
          <Base:Adjective adjective="bloody"/>
          <Base:Adjective adjective="gauze"/>
          <Base:Adjective adjective="plain"/>
          <Base:Adjective adjective="stained"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bloody  {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } bandage
          </Base:Description>
          <Base:Description type="examine">
             A {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } bandage, stained with blood.
          </Base:Description>
          <Base:Description type="look">
             A bloody {? equal | $(this.trait:color) | none || $(this.trait:color) } {? equal | $(this.trait:material) | none || $(this.trait:material) } bandage.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="wound"/>
      <Base:Covered value="scar"/>
      <Base:SingleWear value="true"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="base:clothing:worn">1</Core:Property>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:base:clothing:worn">
         1
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] this."base:clothing:worn" = 1;
      </Core:Property>
      <Core:Property property="merry:react:unwear">
         X[M] string firstPerson, thirdPerson;             
object env;             
/* Removed because trait:healing is a non-IC trait  
firstPerson= "The bandage unravels and disintegrates as you remove it, revealing ";             
if (Get(\$actor, "trait:healing")) \{             
   firstPerson += "a freshly opened wound.";             
\} else \{             
   firstPerson += "a scar.";             
\}           */  
firstPerson = "The bandage unravels in your hands.";  
             
thirdPerson= Describe(\$actor) + " removes " + Describe(this, \$actor) + ", which promptly unravels and disintegrates.";             
             
env = Get(\$actor, "base:environment");             
EmitTo(\$actor, firstPerson);             
EmitIn(env, thirdPerson, \$actor);             
             
Slay(this);             
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1136918456, "tunk_bodin", "X", 1136920987, "tunk_bodin", "X", 1136921111, "tunk_bodin", "X", 1136921214, "tunk_bodin", "X", 1136921255, "tunk_bodin", "X", 1136921481, "tunk_bodin", "X", 1136921673, "tunk_bodin", "X", 1136922646, "tunk_bodin", "X", 1136939791, "tunk_bodin", "X", 1137313295, "tunk_bodin", "X", 1139071154, "tunk_bodin", "X", 1139071196, "tunk_bodin", "X", 1140407752, "tunk_bodin", "X", 1145815530, "tunk_bodin", "X", 1145815605, "tunk_bodin", "X", 1146119883, "sinistrelle", "E", 1146120154, "sinistrelle", "E", 1146205729, "sinistrelle", "X", 1195983287, "tonyd", "R", 1195983327, "tonyd", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
