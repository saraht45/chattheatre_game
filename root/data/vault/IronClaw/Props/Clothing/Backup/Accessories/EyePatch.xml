<object clone="/base/obj/thing" owner="balkaar">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Clothing:UrClothing)"/>
    <Base:Bulk immobile="false" mass="0.3" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyepatch"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyepatches"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:color) | none || $(this.trait:color) }
{? equal | $(this.trait:material) | none || $(this.trait:material) }
eyepatch
          </Base:Description>
          <Base:Description type="examine">
             <describe what="$(this)" nonposs="1" cap="1"/>$[$bits = ({ nil, nil, nil });    
  if ($this."details:trimming:snames" && sizeof($this."details:trimming:snames") > 0) {    
      $bits[0] =    
          "trimmed with" +    
          ($this."trait:trimming:color" == "none" ? "" : " " + $this."trait:trimming:color") +    
          " " +    
          ($this."trait:trimming:material" == "none" ? "delicate trimming" : $this."trait:trimming:material");    
  }    
  if ($this."details:lace:snames" && sizeof($this."details:lace:snames") > 0) {    
      $bits[1] =    
          "decorated with" +    
          ($this."trait:lace:color" ? " " + $this."trait:lace:color" : "") +    
          ($this."trait:lace:material" ? " " + $this."trait:lace:material" : "") +    
          " lace";    
  }    
  if ($this."details:fringe:snames" && sizeof($this."details:fringe:snames") > 0) {    
      $bits[2] =   
          "it is decorated with" +   
          ($this."trait:fringe:color" ? " " + $this."trait:fringe:color" : "") +   
          ($this."trait:fringe:material" ? " " + $this."trait:fringe:material" : "") +   
          " fringe";   
  }    
  $bits -= ({ nil });    
  $total = sizeof($bits);    
  if ($total > 0) {    
      if ($total == 1) {    
          return ", " + $bits[0] + ".";    
      }    
      return ", " + implode($bits[0 .. $total - 2], ", ") + " and " + $bits[$total - 1] + ".";    
  }    
  return "";] This small piece of $(this.trait:material) fits snugly over one eye, either for decoration or to hide a disfigurement.
$(this.quality:description)
          </Base:Description>
          <Base:Description type="look">
             <describe what="$(this)" nonposs="1" cap="1"/>{? | $(this.details:trimming:snames) |, trimmed with {? equal | $(this.trait:trimming:color) | none || $(this.trait:trimming:color) }{? equal | $(this.trait:trimming:material) | none |delicate trimming| $(this.trait:trimming:material)}}{? | $(this.details:lace:snames) |{? | $(this.details:trimming:snames) | and |,} decorated with {? equal | $(this.trait:lace:color) | none || $(this.trait:lace:color) }{? equal | $(this.trait:lace:material) | none || $(this.trait:lace:material)} lace}.This small piece of $(this.trait:material) fits snugly over one eye, either for decoration or to hide a disfigurement.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="eye-left"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:fringe">
         ([ "adj-list-default":(\{ "fringe" \}), "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "fringe" \}), (\{ "pname", "fringes" \}) \}), "properties":(\{ (\{ "trait:color", "trait:fringe:color" \}), (\{ "trait:material", "trait:fringe:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lace">
         ([ "adj-list-default":(\{ "lacy" \}), "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "lace" \}), (\{ "pname", "laces" \}) \}), "properties":(\{ (\{ "trait:color", "trait:lace:color" \}), (\{ "trait:material", "trait:lace:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:default:trimming">
         ([ "adj-list-default":(\{ "trimmed" \}), "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "trimming" \}), (\{ "pname", "trimmings" \}) \}), "properties":(\{ (\{ "trait:color", "trait:trimming:color" \}), (\{ "trait:material", "trait:trimming:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:lace:dye">
         ([ "adj-prop":(\{ "trait:color" \}), "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:lace:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:add:trimming:dye">
         ([ "adj-prop":(\{ "trait:color" \}), "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:trimming:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "eyepatch"
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "eyepatch"
      </Core:Property>
      <Core:Property property="merry:react-post:wear">
         X[M] if(!\$actor."backup:appearance:left-eye") \$actor."backup:appearance:left-eye" = \$actor."appearance:left-eye";

\$actor."appearance:left-eye" = "covered";

/* back up their detail descriptions */
\$this."eye:look" = \$actor."details:left-eye:description:look:local";
\$this."eye:examine" = \$actor."details:left-eye:description:examine:local";

/* set the new descriptions */
\$actor."details:left-eye:description:look:local" = \$this."details:left-eye:description:look";
\$actor."details:left-eye:description:examine:local" = \$this."details:left-eye:description:examine";

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:unwear">
         X[M] if(!\$actor."backup:appearance:left-eye") \{
  \$actor."appearance:left-eye" = \$actor."backup:appearance:left-eye";
\} else \{
  \$actor."appearance:left-eye" = nil;
\}
if(!\$actor."backup:appearance:left-eye") \{
  \$actor."appearance:left-temple" = \$actor."backup:appearance:left-temple";
\} else \{
  \$actor."appearance:left-temple" = nil;
\}

/* restore the actor's details */
\$actor."details:left-eye:description:look:local" = \$this."eye:look";
\$actor."details:left-eye:description:examine:local" = \$this."eye:examine";

return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:lace:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "lace");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:trimming:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this, \$detail: "trimming");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1102312379, "tonyd", "X", 1102312418, "tonyd", "X", 1102312676, "tonyd", "E", 1102312804, "tonyd", "E", 1102312946, "tonyd", "E", 1102312971, "tonyd", "E", 1102313360, "tonyd", "E", 1102313385, "tonyd", "E", 1102313698, "tonyd", "E", 1102313730, "tonyd", "E", 1102313760, "tonyd", "E", 1102313778, "tonyd", "E", 1102313910, "tonyd", "E", 1102314969, "tonyd", "E", 1102314986, "tonyd", "E", 1102315252, "tonyd", "E", 1102315331, "tonyd", "E", 1102315419, "tonyd", "E", 1102315469, "tonyd", "E", 1102315509, "tonyd", "E", 1102315653, "tonyd", "E", 1102315689, "tonyd", "E", 1102315913, "tonyd", "E", 1102315944, "tonyd", "E", 1102316160, "tonyd", "E", 1102722113, "tonyd", "E", 1102722121, "tonyd", "E", 1102723433, "tonyd", "E", 1102723452, "tonyd", "E", 1102725463, "tonyd", "E", 1102725971, "tonyd", "E", 1102727694, "tonyd", "E", 1102728027, "tonyd", "E", 1102737382, "tonyd", "E", 1102818089, "tonyd", "E", 1102823410, "tonyd", "E", 1102823445, "tonyd", "E", 1102824774, "tonyd", "E", 1102825200, "tonyd", "E", 1102825270, "tonyd", "E", 1102825861, "tonyd", "E", 1103000935, "tonyd", "E", 1103002715, "tonyd", "E", 1103002786, "tonyd", "E", 1103069521, "tonyd", "E", 1103070439, "tonyd", "E", 1103071522, "tonyd", "E", 1103072176, "tonyd", "E", 1103072602, "tonyd", "E", 1103072808, "tonyd", "E", 1103078278, "tonyd", "E", 1103084033, "tonyd", "E", 1103084078, "tonyd", "E", 1103084148, "tonyd", "E", 1103084391, "tonyd", "E", 1103084493, "tonyd", "E", 1103084608, "tonyd", "E", 1103084651, "tonyd", "E", 1103084725, "tonyd", "E", 1103084822, "tonyd", "E", 1103084892, "tonyd", "E", 1103084923, "tonyd", "E", 1103084953, "tonyd", "E", 1103085056, "tonyd", "E", 1103085100, "tonyd", "E", 1103089195, "tonyd", "E", 1103091115, "tonyd", "E", 1103154368, "tonyd", "E", 1103253009, "tonyd", "E", 1103253256, "tonyd", "E", 1103253438, "tonyd", "E", 1103253537, "tonyd", "P", 1103253693, "tonyd", "P", 1103253903, "tonyd", "E", 1103253939, "tonyd", "E", 1103253967, "tonyd", "E", 1103254055, "tonyd", "P", 1107035735, "tonyd", "E", 1107035881, "tonyd", "X", 1107035977, "tonyd", "E", 1107036131, "tonyd", "E", 1107036221, "tonyd", "E", 1107036238, "tonyd", "E", 1107037049, "tonyd", "E", 1107037067, "tonyd", "E", 1107037160, "tonyd", "X", 1107037225, "tonyd", "X", 1107037369, "tonyd", "E", 1107037509, "tonyd", "E", 1107037549, "tonyd", "E", 1107039604, "tonyd", "E", 1107039656, "tonyd", "E", 1107039829, "tonyd", "E", 1107039901, "tonyd", "E", 1107039974, "tonyd", "E", 1107039989, "tonyd", "E", 1109371846, "tonyd", "X", 1109371874, "tonyd", "E", 1109372019, "tonyd", "E", 1109372092, "tonyd", "E", 1109372340, "tonyd", "E", 1136534147, "tunk_bodin", "X", 1146442711, "tunk_bodin", "X", 1188920316, "rorschakovacs", "X", 1188923150, "rorschakovacs", "E", 1188923214, "rorschakovacs", "E", 1188923277, "rorschakovacs", "E", 1188923290, "rorschakovacs", "E", 1188923318, "rorschakovacs", "E", 1188923335, "rorschakovacs", "E", 1188923348, "rorschakovacs", "E", 1188923386, "rorschakovacs", "E", 1189176632, "rorschakovacs", "E", 1189176662, "rorschakovacs", "E", 1189177034, "rorschakovacs", "E", 1189177051, "rorschakovacs", "E", 1189177099, "rorschakovacs", "E", 1189177113, "rorschakovacs", "E", 1189970117, "rorschakovacs", "E", 1196270745, "slurpeeslurp", "E", 1196270766, "slurpeeslurp", "E", 1196274646, "slurpeeslurp", "X", 1196299848, "slurpeeslurp", "E", 1196300504, "slurpeeslurp", "E", 1196300604, "slurpeeslurp", "X", 1220528859, "slurpeeslurp", "E", 1220528869, "slurpeeslurp", "E", 1220528885, "slurpeeslurp", "E", 1220528993, "slurpeeslurp", "E", 1220529102, "slurpeeslurp", "E", 1234698104, "balkaar", "E", 1234698111, "balkaar", "E", 1234698118, "balkaar", "E", 1443457649, "rorschakovacs", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
