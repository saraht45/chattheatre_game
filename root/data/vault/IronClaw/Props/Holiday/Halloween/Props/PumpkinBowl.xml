<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCraftingContainer)"/>
    <Base:Bulk immobile="false" mass="0.2" density="0.8"/>
    <Base:Container flexible="false" transparent-container="true" public-container="true" tight="true" capacity="0.3" maxweight="3" verb2="hold" verb3="holds"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="true" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bowl"/>
            <Base:SName sname="pumpkin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bowls"/>
            <Base:PName pname="pumpkins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="orange"/>
          <Base:Adjective adjective="pumpkin"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             orange pumpkin bowl
          </Base:Description>
          <Base:Description type="look">
             An orange pumpkin that has been hollowed out and left with a jagged edge, it comes in the appearance of a bowl.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:old:brief">
         "rotting pumpkin bowl"
      </Core:Property>
      <Core:Property property="export:trait:old:look">
         "A rotting pumpkin bowl."
      </Core:Property>
      <Core:Property property="export:trait:old:variant">
         "Old"
      </Core:Property>
      <Core:Property property="merry:lib:age_food">
         X[M] int delay;    
    
\$delay(15, TRUE, "14fc");    
    
/* If this isn't a spawn */    
if(sscanf(name(\$this), "[%*s]#%*d") != 2)    
  return TRUE;    
    
if(\$this."details:default:description:brief:fresh")    
\{    
  if(\$this."trait:age:fresh" \|\| \$this."trait:setprop:fresh")    
  \{    
    delay = \$this."trait:age:fresh"*60;    
  \} else \{    
    delay = 24*60*60;    
  \}    
    
  /* set fresh descriptions */    
  if(\$this."details:default:description:brief:fresh")    
    \$this."details:default:description:brief" = \$this."details:default:description:brief:fresh";    
  if(\$this."details:default:description:pbrief:fresh")    
    \$this."details:default:description:pbrief" = \$this."details:default:description:pbrief:fresh";    
  if(\$this."details:default:description:look:fresh")    
    \$this."details:default:description:look" = \$this."details:default:description:look:fresh";       
  if(\$this."details:default:description:taste:fresh")    
    \$this."details:default:description:taste" = \$this."details:default:description:taste:fresh";    
  if(\$this."details:default:description:smell:fresh")    
    \$this."details:default:description:smell" = \$this."details:default:description:smell:fresh";    
    
  /* set the fresh properties */    
  if(\$this."trait:setprop:fresh")    
  \{    
    for(\$i = 0; \$i \< sizeof(\$this."trait:setprop:fresh"); \$i++)    
    \{    
      Set(\$this, \$this."trait:setprop:fresh"[\$i][0], \$this."trait:setprop:fresh"[\$i][1]);    
    \}    
  \}    
    
    
  \$delay(delay, TRUE, "684e");    
    
  /* unset fresh descriptions */    
  \$this."details:default:description:brief" = nil;    
  \$this."details:default:description:pbrief" = nil;    
  \$this."details:default:description:look" = nil;       
  \$this."details:default:description:taste" = nil;    
  \$this."details:default:description:smell" = nil;    
\}    
    
/* set the normal properties */    
if(\$this."trait:setprop")    
\{    
  for(\$i = 0; \$i \< sizeof(\$this."trait:setprop"); \$i++)    
  \{    
    Set(\$this, \$this."trait:setprop"[\$i][0], \$this."trait:setprop"[\$i][1]);    
  \}    
\}    
    
if(\$this."details:default:description:brief:old" \|\| \$this."trait:setprop:old")    
\{    
  if(\$this."trait:age:old")    
  \{    
    delay = \$this."trait:age:old"*60;    
  \} else \{    
    delay = 2*24*60*60;    
  \}    
    
  \$delay(delay, TRUE, "30eb");    
    
  /* set the old descriptions */    
  if(\$this."details:default:description:brief:old")    
    \$this."details:default:description:brief" = \$this."details:default:description:brief:old";    
  if(\$this."details:default:description:pbrief:old")    
    \$this."details:default:description:pbrief" = \$this."details:default:description:pbrief:old";    
  if(\$this."details:default:description:look:old")    
    \$this."details:default:description:look" = \$this."details:default:description:look:old";       
  if(\$this."details:default:description:taste:old")    
    \$this."details:default:description:taste" = \$this."details:default:description:taste:old";    
  if(\$this."details:default:description:smell:old")    
    \$this."details:default:description:smell" = \$this."details:default:description:smell:old";    
    
  /* set the old properties */    
  if(\$this."trait:setprop:old")    
  \{    
    for(\$i = 0; \$i \< sizeof(\$this."trait:setprop:old"); \$i++)    
    \{    
      Set(\$this, \$this."trait:setprop:old"[\$i][0], \$this."trait:setprop:old"[\$i][1]);    
    \}    
  \}    
    
\}    
    
if(\$this."trait:age:slay")    
\{    
  delay = \$this."trait:age:slay"*60;    
\} else \{    
  delay = 14*24*60*60;    
\}    
    
\$delay(delay, TRUE, "2aaa");    
    
/* slay the food */    
if(\$this."base:environment")\{    
  if(\$this."trait:age:slay:message")    
  \{    
    EmitTo(\$this."base:environment", Describe(\$this)+" "+\$this."trait:age:slay:message");    
  \} else \{    
    EmitTo(\$this."base:environment", Describe(\$this)+" crumbles and dissipates into nothing.");    
  \}    
\}    
    
/* Check the object is a spawn before slaying it */    
/* If this isn't a spawn */    
if(sscanf(name(\$this), "[%*s]#%*d") == 2)    
  Slay(\$this);    
    
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1223503607, "morwenlorelie", "K", 1223503618, "morwenlorelie", "E", 1223503663, "morwenlorelie", "E", 1223503797, "morwenlorelie", "X", 1223503820, "morwenlorelie", "E", 1223503945, "morwenlorelie", "E", 1223503971, "morwenlorelie", "E", 1223504301, "morwenlorelie", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
