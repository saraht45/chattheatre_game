<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.01" density="0.3"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sparkler"/>
            <Base:SName sname="firework"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sparklers"/>
            <Base:PName pname="fireworks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="colorful"/>
          <Base:Adjective adjective="hand-held"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) sparkler
          </Base:Description>
          <Base:Description type="examine">
             You see some $(this.trait:color) $(this.trait:material) substance spread over a metal holder. You identify the object as a sparkler. You are tempted to light it in order to coax the fireworks to life.
          </Base:Description>
          <Base:Description type="look">
             A sparkler covered in some $(this.trait:color) $(this.trait:material) substance at its top.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         0
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:color" = oneof("shiny", "pale", "oddly-shaped", "sheeny", "dark", "light", "matte", "thin", "glossy", "thick", "fat", "long");
\$this."trait:material" = oneof("gold", "brass", "silver", "iron", "steel", "bronze");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:light-dob">
         X[M] EmitTo(\$actor, "Upon lighting " +Describe(\$this, nil, \$actor)+", milliards of " +oneof("brilliant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively", "multi-colored") + " sparkles shoot forth to fly in all directions.");
EmitIn(\$actor."base:environment", Describe(\$actor) +" lights " +Describe(\$this, \$actor)+", coaxing milliards of " +oneof("brilliant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively", "multi-colored") + " sparkles to shoot forth.", \$actor);

\$this."trait:islit" = 1;
\$delay(15, TRUE, "ceb8");
EmitTo(\$actor, Describe(\$this, nil, \$actor)+" continues to throw " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " sparkles all over the place.");

EmitIn(\$actor."base:environment", Describe(\$this)+" continues to throw " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " sparkles all over the place.", \$actor);

\$delay(15, TRUE, "2bf6");
EmitTo(\$actor, Describe(\$this, nil, \$actor)+" sizzles and buzzes emitting a new set of " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " sparkles.");
EmitIn(\$actor."base:environment", Describe(\$this)+" sizzles and buzzes emitting a new set of " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " sparkles.", \$actor);

\$delay(15, TRUE, "8577");
EmitTo(\$actor, "With a last " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " flame " +Describe(\$this, nil, \$actor)+" dies out.");
EmitIn(\$actor."base:environment", "With a last " +oneof("radiant", "orange", "sizzling", "scorching", "fiery", "golden", "silvery", "vivid", "livid", "lively") + " flame " +Describe(\$this)+" dies out.",\$actor);

Slay(\$this);

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:wave-dob">
         X[M] if (!\$this."trait:islit") \{
   EmitTo(\$actor, "You wave " +Describe(\$this, nil, \$actor)+" which is fun, though you feel a bit dumb about it. Surprisingly, an intelligent idea creeps into your mind suggesting you might want to light it first.");
EmitIn(\$actor."base:environment", Describe(\$actor) +" waves " +Describe(\$this, \$actor)+". It might be a bit more impressive if the sparkler was lit.", \$actor);
   \} else \{
   EmitTo(\$actor, "You wave " +Describe(\$this, nil, \$actor)+" drawing a random pattern with the sizzling tip in the air.");
EmitIn(\$actor."base:environment", Describe(\$actor) +" waves " +Describe(\$this, \$actor)+" drawing a random pattern with the sizzling tip in the air.", \$actor);
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1221752477, "???", "R", 1230126712, "morwenlorelie", "E", 1230126722, "morwenlorelie", "E", 1230126827, "morwenlorelie", "K", 1230126837, "morwenlorelie", "E", 1230127366, "balkaar", "E", 1230127543, "balkaar", "E", 1230127567, "jominey", "E", 1230132603, "balkaar", "E", 1230133566, "jominey", "E", 1230133610, "jominey", "E", 1230133637, "jominey", "E", 1230133688, "jominey", "E", 1230133700, "jominey", "E", 1230133738, "jominey", "E", 1230133764, "jominey", "E", 1230133977, "jominey", "E", 1230134079, "jominey", "E", 1230134101, "jominey", "E", 1230134176, "jominey", "E", 1230134205, "jominey", "E", 1230136001, "balkaar", "E", 1230145221, "balkaar", "E", 1230145277, "balkaar", "E", 1230145562, "balkaar", "E", 1230146003, "balkaar", "E", 1230146154, "balkaar", "E", 1230146417, "balkaar", "E", 1230147105, "balkaar", "E", 1230147545, "balkaar", "E", 1230147620, "balkaar", "E", 1230147907, "balkaar", "E", 1230213851, "morwenlorelie", "E", 1251397402, "slurpeeslurp", "E", 1261648844, "slurpeeslurp", "E", 1261772174, "haystack", "E", 1261772194, "haystack", "E", 1263033482, "haystack", "E", 1546598845, "lidiab", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:color"/>
      <Core:Property property="trait:material"/>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
