<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="2" maxweight="2" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="humidor"/>
            <Base:SName sname="box"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="humidors"/>
            <Base:PName pname="boxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) humidor
          </Base:Description>
          <Base:Description type="examine">
             A small $(this.trait:color) $(this.trait:material) humidor box constructed with unique dovetail joinery. The interior is completely lined with sturdy cedar, allowing for control of temperature and providing a safe place in which to age a multitude of prized cigars.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) $(this.trait:material) humidor box.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:lock">
         ([ "adj-prop":(\{ "trait:material", "trait:size", "trait:color", "trait:brief" \}), "names":(\{ (\{ "sname", "lock" \}), (\{ "pname", "locks" \}) \}), "properties":(\{ (\{ "trait:material", "trait:lock:material" \}), (\{ "trait:size", "trait:lock:size" \}), (\{ "trait:color", "trait:lock:color" \}), (\{ "trait:brief", "trait:lock:brief" \}), (\{ "trait:examine", "trait:lock:examine" \}), (\{ "trait:quality", "trait:lock:quality" \}), (\{ "trait:lockpicking", "trait:lockpicking" \}), (\{ "details:default:exit:keycode", "details:default:exit:keycode" \}), (\{ "base:urparent", "trait:lock:parent" \}), (\{ "trait:madeby", "trait:lock:madeby" \}), (\{ "trait:madeby:account", "trait:lock:madeby:account" \}), (\{ "trait:madeby:object", "trait:lock:madeby:object" \}) \}), "stopvalue":(\{ "trait:lock:brief", nil, "This piece of furniture already holds a lock." \}) ])
      </Core:Property>
      <Core:Property property="export:writable">1</Core:Property>
      <Core:Property property="merry:react-post:place-where%preserve">
         X[M] if(!\$what \|\| !sizeof(\$what)) \{
    return FALSE;
\}

for(\$i = 0; \$i \< sizeof(\$what); \$i++) \{
    Set(NRefOb(\$what[\$i]), "trait:preserved", TRUE);
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:take-from%preserve">
         X[M] if(!\$what \|\| !sizeof(\$what)) \{
    return FALSE;
\}

for(\$i = 0; \$i \< sizeof(\$what); \$i++) \{
    Set(NRefOb(\$what[\$i]), "trait:preserved", FALSE);
    Call(NRefOb(\$what[\$i]), "age_cigar");  
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:place-where%preserve">
         X[M] if(\$obprep == PREP_INSIDE) \{
    if(\$what \&\& sizeof(\$what)) \{
        \$disallow = (\{ \}); 
        \$lit = (\{ \});
        for(\$i = 0; \$i \< sizeof(\$what); \$i++) \{
            if(!NRefOb(\$what[\$i])."base:urparent" \|\| NRefOb(\$what[\$i])."base:urparent" != \$\{Ironclaw:Props:Gardening:Cigars:UrCigar\}) \{
                \$disallow += (\{ \$what[\$i] \});
            \} else if(NRefOb(\$what[\$i]).timer) \{
                \$lit += (\{ \$what[\$i] \});
            \}
        \}

        if(sizeof(\$disallow)) EmitTo(\$actor, "You cannot put " + Describe(\$disallow) + " in " + Describe(\$this, nil, \$actor) + ".");
        if(sizeof(\$lit))      EmitTo(\$actor, "You should extinguish " + Describe(\$lit) + " first.");

        \$what -= \$disallow;
        \$what -= \$lit;
    \}
\}

return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1124472923, "lunamoon", "E", 1124473585, "lunamoon", "E", 1124473634, "lunamoon", "E", 1124473651, "lunamoon", "E", 1124473662, "lunamoon", "E", 1124473681, "lunamoon", "E", 1124473706, "lunamoon", "E", 1139736771, "tunk_bodin", "X", 1139736822, "tunk_bodin", "X", 1172116617, "tunk_bodin", "E", 1240330997, "morwenlorelie", "R", 1260598111, "slurpeeslurp", "E", 1260598163, "slurpeeslurp", "E", 1260598176, "slurpeeslurp", "E", 1305001215, "slurpeeslurp", "E", 1305001244, "slurpeeslurp", "E", 1324241162, "slurpeeslurp", "E", 1324241181, "slurpeeslurp", "E", 1324241203, "slurpeeslurp", "E", 1324241229, "slurpeeslurp", "K", 1326825857, "jominey", "E", 1326825909, "jominey", "E", 1326826025, "jominey", "E", 1326826041, "jominey", "E", 1326826107, "jominey", "E", 1326826161, "jominey", "E", 1326826185, "jominey", "E", 1326826196, "jominey", "E", 1326826660, "jominey", "E", 1326826805, "jominey", "E", 1326826957, "jominey", "E", 1326827207, "jominey", "E", 1326827318, "jominey", "E", 1326827370, "jominey", "E", 1327203346, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="writable">"true"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
