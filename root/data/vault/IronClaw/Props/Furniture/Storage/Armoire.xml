<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Furniture:UrFurnitureContainer)"/>
    <Base:Bulk immobile="false" mass="10" density="0.7"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1.35" maxweight="210" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armoire"/>
            <Base:SName sname="cabinet"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="armoires"/>
            <Base:PName pname="cabinets"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="dark"/>
          <Base:Adjective adjective="fancy"/>
          <Base:Adjective adjective="ornate"/>
          <Base:Adjective adjective="stained"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mirror1" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mirror"/>
            <Base:SName sname="room"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mirrors"/>
            <Base:PName pname="rooms"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="featureless"/>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="left-hand"/>
          <Base:Adjective adjective="silver"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             armoire's left-hand mirror
          </Base:Description>
          <Base:Description type="look">
             The armoire's mirror shows <describe what="$(actor)"/> in <describe what="$(actor.env)"/>.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mirror2" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mirror"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mirrors"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
          <Base:Adjective adjective="right-hand"/>
          <Base:Adjective adjective="silver"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             armoire's right-hand mirror
          </Base:Description>
          <Base:Description type="look">
             The armoire's mirror shows <describe what="$(actor)"/> in <describe what="$(actor.env)"/>.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="bak:merry:act:start">
         X[M] \$this."trait:variation" = oneof( "wildflowers in bloom", "an underwater scene featuring mermaids amidst a mass of coral", "a series of galloping drays", "a garden alive with butterflies, flowers, and birds", "an impressively detailed vessel sailing upon an enraged sea", "a waterfall, cascading down into a large flowing body of water" ); return TRUE;
      </Core:Property>
      <Core:Property property="export:alteration:add:default:lock">
         ([ "adj-prop":(\{ "trait:material", "trait:size", "trait:color", "trait:brief" \}), "names":(\{ (\{ "sname", "lock" \}), (\{ "pname", "locks" \}) \}), "properties":(\{ (\{ "trait:material", "trait:lock:material" \}), (\{ "trait:size", "trait:lock:size" \}), (\{ "trait:color", "trait:lock:color" \}), (\{ "trait:brief", "trait:lock:brief" \}), (\{ "trait:examine", "trait:lock:examine" \}), (\{ "trait:quality", "trait:lock:quality" \}), (\{ "trait:lockpicking", "trait:lockpicking" \}), (\{ "details:default:exit:keycode", "details:default:exit:keycode" \}), (\{ "base:urparent", "trait:lock:parent" \}), (\{ "lock:default:lockpick:history", "lock:default:lockpick:history" \}), (\{ "trait:madeby", "trait:lock:madeby" \}), (\{ "trait:madeby:account", "trait:lock:madeby:account" \}), (\{ "trait:madeby:object", "trait:lock:madeby:object" \}) \}), "stopvalue":(\{ "trait:lock:brief", nil, "This piece of furniture already holds a lock." \}) ])
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "armoire"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This piece features two doors and a single lower drawer. A silver mirror is mounted on each of the doors, reflecting the immediate environment."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "armoire"
      </Core:Property>
      <Core:Property property="export:writable">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1579220484, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="writable">"true"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
