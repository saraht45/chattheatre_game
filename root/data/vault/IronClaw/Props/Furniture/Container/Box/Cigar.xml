<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Crafting:Fabrics:UrCompressionStorage)"/>
    <Base:Bulk immobile="false" mass="0.5" density="0.9"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="box"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="boxes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cigar"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cover" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cover"/>
            <Base:SName sname="clothing"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="covers"/>
            <Base:PName pname="clothings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="inner"/>
          <Base:Adjective adjective="silk"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the $(this.trait:silk:color) silk lining of the $(this.trait:color) $(this.trait:material) $(this.trait:brief)
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:silk:color) silk lining inside the box provides a soft support to help keep the contents in top condition.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lid" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lid"/>
            <Base:SName sname="cover"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="lids"/>
            <Base:PName pname="covers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="box"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the box lid of the $(this.trait:color) $(this.trait:material) $(this.trait:brief)
          </Base:Description>
          <Base:Description type="look">
             The lid of the $(this.trait:color) $(this.trait:material) $(this.trait:brief). It opens and closes easily to either reveal or keep secret the contents within.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:lock">
         ([ "adj-prop":(\{ "trait:material", "trait:size", "trait:color", "trait:brief" \}), "names":(\{ (\{ "sname", "lock" \}), (\{ "pname", "locks" \}) \}), "properties":(\{ (\{ "trait:material", "trait:lock:material" \}), (\{ "trait:size", "trait:lock:size" \}), (\{ "trait:color", "trait:lock:color" \}), (\{ "trait:brief", "trait:lock:brief" \}), (\{ "trait:examine", "trait:lock:examine" \}), (\{ "trait:quality", "trait:lock:quality" \}), (\{ "trait:lockpicking", "trait:lockpicking" \}), (\{ "details:default:exit:keycode", "details:default:exit:keycode" \}), (\{ "base:urparent", "trait:lock:parent" \}), (\{ "lock:default:lockpick:history", "lock:default:lockpick:history" \}), (\{ "trait:madeby", "trait:lock:madeby" \}), (\{ "trait:madeby:account", "trait:lock:madeby:account" \}), (\{ "trait:madeby:object", "trait:lock:madeby:object" \}) \}), "stopvalue":(\{ "trait:lock:brief", nil, "This piece of furniture already holds a lock." \}) ])
      </Core:Property>
      <Core:Property property="export:compression:suffix_plural">
         " cigars"
      </Core:Property>
      <Core:Property property="export:compression:suffix_singular">
         " cigar"
      </Core:Property>
      <Core:Property property="export:is:engravable">
         1
      </Core:Property>
      <Core:Property property="export:trait:brief">
         "cigar box"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This is a rectangular box made to store cigars. The inside is covered with silk, and it features a lid that opens and closes."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "box"
      </Core:Property>
      <Core:Property property="export:writable">"1"</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:silk:color" = oneof( "pearly white", "russet", "maroon", "crimson", "scarlet", "vermilion", "magenta", "verdant", "lavender", "mauve", "cerulean", "blue", "green", "red", "yellow", "teal", "orange", "pink", "indigo", "violet", "purple", "ebony", "jet black", "forest green", "emerald", "ice blue", "crystal blue", "rose", "ocean blue", "cerise", "golden", "silvery", "amethyst", "lilac", "pearl", "blood-red", "ivory" );  
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:check_object_is_valid">
         X[M] /* check if this object can be compressed */

/* code here is for a cigar */
if(\$item."trait:objecttype" != "cigar") \{
 EmitTo(\$actor, Describe(\$item, nil, \$actor)+" is not a cigar that will fit in the box.");
 return FALSE;
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:find_key">
         X[M] /* find the key used to identify this item */
string key;
key = "";
if(\$item."trait:flavor") \{
 key = Str(\$item."trait:flavor");
\}

if(!key \|\| key == " " \|\| key == "")
 key = "unflavored";
return key;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1586363152, "jominey", "E", 1586363175, "jominey", "E", 1586363187, "jominey", "E", 1586363215, "jominey", "E", 1586363246, "jominey", "E", 1586363275, "jominey", "E", 1586363416, "jominey", "E", 1586363672, "jominey", "E", 1586363729, "jominey", "E", 1606404956, "jominey", "E", 1606404964, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="writable">"true"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
