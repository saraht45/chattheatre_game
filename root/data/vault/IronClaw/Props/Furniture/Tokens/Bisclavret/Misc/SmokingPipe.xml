<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Furniture:UrFurnitureContainer)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0.3" maxweight="15" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="true" near="true" over="false" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pipe"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="pipes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="smoking"/>
          <Base:Adjective adjective="tobacco"/>
          <Base:Adjective adjective="wooden"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="true" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" keycode="Keys:Storage:Box-Large" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:trait:brief">
         "smoking pipe"
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "A decorative pipe for smoking. It features an elaborate, curved stem, and a large bowl for holding tobacco."
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "pipe"
      </Core:Property>
      <Core:Property property="merry:lib:do_smoke">
         X[M] if(!\$this.timer) \{
    EmitTo(\$actor, Describe(this, nil, \$actor) + " is not lit.");
    return FALSE;
\}

\$delay(1, FALSE, "4bf9");     
       
if(!\$adverb) \{       
  \$adverb_str = "";       
\} else \{       
  \$adverb_str = \$adverb+" ";       
\}                        
    
switch(random(3))             
\{             
  case 2:             
    \$sizes = "miniature";             
  break;             
  case 1:             
    \$sizes = "small";             
  break;             
  case 0:             
    \$sizes = "modest";             
  break;             
  default:             
  break;             
\}   
   
switch(random(2))             
\{             
  case 1:             
    \$plumes = "tufts";             
  break;             
  case 0:             
    \$plumes = "plumes";             
  break;                       
  default:             
  break;             
\}   
   
switch(random(3))             
\{             
  case 2:             
    \$desc1 = "radiate";             
  break;             
  case 1:             
    \$desc1 = "swirl";            
  break;             
  case 0:             
    \$desc1 = "billow";            
  break;             
  default:             
  break;             
\}   
   
switch(random(3))             
\{             
  case 2:             
    \$direct = "upward";             
  break;             
  case 1:             
    \$direct = "skyward";           
  break;             
  case 0:             
    \$direct = "outward";            
  break;             
  default:             
  break;             
\}   
   
switch(random(2))             
\{             
  case 1:             
    \$taste = "taste";             
  break;             
  case 0:             
    \$taste = "sensation";             
  break;                       
  default:             
  break;             
\}   
                  
EmitTo( \$actor, "You puff " + \$adverb_str + "on " + Describe(this) + ", the " + \$taste + " of the tobacco fills your mouth and " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + "." );                                           
EmitIn( \$actor."base:environment", Describe(\$actor)+ " puffs " + \$adverb_str + "on " +Describe(\$this, \$actor)+ " as " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + ".", \$actor);
      </Core:Property>
      <Core:Property property="merry:lib:emitsmoke">
         X[M] switch(random(3))             
\{             
  case 2:             
    EmitIn(\$actor."base:environment", Describe(\$this)+" releases tiny plumes of smoke into the air.");             
  break;             
  case 1:             
    EmitIn(\$actor."base:environment", Describe(\$this)+" emits a light, aromatic scent.");             
  break;             
  case 0:             
    EmitIn(\$actor."base:environment", Describe(\$this)+" glows slightly as the tobacco within gradually burns.");             
  break;             
  default:             
  break;             
\}             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makesmoke">
         X[M] if(this."trait:objecttype" \&\& this."trait:objecttype" == "pipe") \{   
    Set(\$this, "trait:smell", "smoked tobacco leaves, sweet yet heavy");   
\}   
   
if(\$this.timer) \{             
  \$this.timer = 30;             
  \$delay(1, TRUE, "484b");             
  Call(\$this, "emitsmoke");             
  return TRUE;             
\} else \{             
  \$this.timer = 30;             
\}             
\$delay(1, TRUE, "8a49");             
while(\$this.timer \&\& (\$this.timer \< 240)) \{             
  Call(\$this, "emitsmoke");             
  \$delay(\$this.timer, TRUE, "b73d");       
   
  if(!\$this.timer) \{   
    return TRUE;   
  \}   
         
  \$this.timer += 20 + random(30);             
\}             
\$this.timer = nil;             
             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:puff-dob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:puff-iob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:smoke-dob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:smoke-iob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-pre:extinguish-dob">
         X[M] if(\$this.timer) \{       
    if(this."trait:objecttype" \&\& this."trait:objecttype" == "pipe") \{   
        Set(\$this, "trait:smell", "lingering tobacco");   
    \}   
    \$this.timer = nil;      
    return TRUE;       
\} else \{       
    EmitTo(\$actor, Describe(this) + " is not lit.");       
    return FALSE;       
\}
      </Core:Property>
      <Core:Property property="merry:react:light-dob">
         X[M] return Call(\$this, "makesmoke");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1123908365, "lunamoon", "X", 1123908384, "lunamoon", "E", 1123908443, "lunamoon", "E", 1123908656, "lunamoon", "E", 1123908726, "lunamoon", "E", 1123908817, "lunamoon", "E", 1123908878, "lunamoon", "E", 1141268540, "lunamoon", "X", 1141268680, "lunamoon", "E", 1143915845, "lunamoon", "E", 1143915987, "lunamoon", "E", 1145081980, "lunamoon", "E", 1146065827, "sinistrelle", "E", 1146065872, "sinistrelle", "E", 1146066022, "sinistrelle", "E", 1146066102, "sinistrelle", "E", 1146066126, "sinistrelle", "E", 1146066151, "sinistrelle", "E", 1146066178, "sinistrelle", "E", 1148225549, "tunk_bodin", "X", 1148225562, "tunk_bodin", "X", 1167652255, "tonyd", "E", 1170654459, "necate", "E", 1172116535, "tunk_bodin", "E", 1213438107, "slurpeeslurp", "E", 1223754546, "morwenlorelie", "K", 1240331717, "morwenlorelie", "R", 1240417092, "morwenlorelie", "E", 1240417205, "morwenlorelie", "X", 1240417266, "morwenlorelie", "X", 1240417319, "morwenlorelie", "X", 1272498562, "slurpeeslurp", "K", 1284261136, "jominey", "K", 1284421537, "jominey", "E", 1284421546, "jominey", "E", 1284421549, "jominey", "E", 1305000544, "slurpeeslurp", "E", 1305000555, "slurpeeslurp", "E", 1305000577, "slurpeeslurp", "E", 1322452420, "morwenlorelie", "E", 1355374538, "lidiab", "E", 1366833485, "slurpeeslurp", "K", 1366833621, "slurpeeslurp", "E", 1398876181, "slurpeeslurp", "K", 1398876189, "slurpeeslurp", "E", 1398876194, "slurpeeslurp", "E", 1398876198, "slurpeeslurp", "E", 1398876291, "slurpeeslurp", "E", 1398876313, "slurpeeslurp", "E", 1398876329, "slurpeeslurp", "E", 1398876514, "slurpeeslurp", "E", 1398876595, "slurpeeslurp", "E", 1398876603, "slurpeeslurp", "E", 1398876658, "slurpeeslurp", "E", 1398876685, "slurpeeslurp", "E", 1398876712, "slurpeeslurp", "E", 1398876741, "slurpeeslurp", "E", 1398876780, "slurpeeslurp", "E", 1398876804, "slurpeeslurp", "E", 1398877386, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
