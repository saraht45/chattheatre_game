<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="paper"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="papers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blue"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:shape) | $(this.trait:color) $(this.trait:material) $(this.trait:shape)| sheet of  $(this.trait:color) $(this.trait:material)}
          </Base:Description>
          <Base:Description type="examine">
             A {? | $(this.trait:shape) | $(this.trait:color) $(this.trait:material) $(this.trait:shape)| sheet of  $(this.trait:color) $(this.trait:material)}.
          </Base:Description>
          <Base:Description type="look">
             A {? | $(this.trait:shape) | $(this.trait:color) $(this.trait:material) $(this.trait:shape)| sheet of  $(this.trait:color) $(this.trait:material)}.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:dye">
         ([ "noslay":"true", "properties":(\{ (\{ "trait:color", "trait:color" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:alteration:create:default:carve">
         ([ "cost":(\{ 0, "You do not have enough ORIGINAL_OBJECT" \}), "description":(\{ "You fold ORIGINAL_OBJECT into NEW_OBJECT", "folds ORIGINAL_OBJECT into NEW_OBJECT" \}), "input-list":(\{ (\{ \<Ironclaw:Lib:Crafting:Old:CraftingDB\>, "alteration:knowledge:folding-paper" \}) \}), "input-list-actor":(\{ "alteration:knowledge:folding-paper" \}), "input-list-actor-remote":(\{ "alteration:knowledge:folding-paper-remote" \}), "newobject-properties":(\{ (\{ "trait:color", "trait:color" \}) \}), "skill":"origamist" ])
      </Core:Property>
      <Core:Property property="export:trait:color">
         "blue"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "paper"
      </Core:Property>
      <Core:Property property="merry:react-post:tickle-dob">
         X[M] /* see if its blue, then change to red */   
if(\$this."trait:color" == "blue") \{   
\$this."trait:color" = "red";   
/* else change back to blue */   
\} else \{   
\$this."trait:color" = "blue";   
\}   
/* emit to actor */   
EmitTo(\$actor, "Changed " +Describe(\$this)+ " to " +\$this."trait:color"+ ".");   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:shape">
         X[M] return Call( \$\{Ironclaw:Lib:Crafting:Lib\}, "replacesname", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1153586291, "colavina", "E", 1153586428, "colavina", "E", 1153587674, "tunk_bodin", "E", 1153587784, "tunk_bodin", "E", 1153588544, "colavina", "E", 1154459008, "colavina", "E", 1154537951, "colavina", "E", 1154538450, "colavina", "E", 1154538611, "colavina", "E", 1154539392, "colavina", "E", 1154539530, "colavina", "E", 1154539751, "colavina", "E", 1154539862, "tunk_bodin", "X", 1154540340, "colavina", "E", 1154813863, "colavina", "E", 1154813932, "tunk_bodin", "X", 1154814216, "colavina", "E", 1154814501, "colavina", "E", 1154814634, "tunk_bodin", "X", 1154814750, "tunk_bodin", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
