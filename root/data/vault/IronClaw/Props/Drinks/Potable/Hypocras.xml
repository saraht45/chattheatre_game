<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Generic:DB:DrinkFancyDB)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="true" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="glass"/>
            <Base:SName sname="drink"/>
            <Base:SName sname="wine"/>
            <Base:SName sname="vessel"/>
            <Base:SName sname="hypocras"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="drinks"/>
            <Base:PName pname="wines"/>
            <Base:PName pname="glasses"/>
            <Base:PName pname="vessels"/>
            <Base:PName pname="hypocrases"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hypocras"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:liquid) $(this.trait:superbrief)
          </Base:Description>
          <Base:Description type="examine">
             The $(this.trait:superbrief) is $(this.trait:level-desc) $(this.trait:liquid).
          </Base:Description>
          <Base:Description type="look">
             <describe-prop what="trait:liquid" cap="1"/> $(this.trait:superbrief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="liquid" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="liquid"/>
            <Base:SName sname="wine"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wines"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:liquid)
          </Base:Description>
          <Base:Description type="look">
             The $(this.trait:liquid) in the $(this.trait:superbrief) swirls around as you inspect it.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="#inherits[0]">"20"</Core:Property>
      <Core:Property property="#inherits[10]">
         "react:dodrink"
      </Core:Property>
      <Core:Property property="#inherits[11]">
         "react:emptysub"
      </Core:Property>
      <Core:Property property="#inherits[12]">
         "react:fillsub"
      </Core:Property>
      <Core:Property property="#inherits[13]">
         "react:gotsub"
      </Core:Property>
      <Core:Property property="#inherits[14]">
         "react:gulp"
      </Core:Property>
      <Core:Property property="#inherits[15]">
         "react:quaff"
      </Core:Property>
      <Core:Property property="#inherits[16]">
         "react:guzzle"
      </Core:Property>
      <Core:Property property="#inherits[17]">
         "react:swill"
      </Core:Property>
      <Core:Property property="#inherits[18]">
         "react:slurp"
      </Core:Property>
      <Core:Property property="#inherits[19]">
         "react:savor"
      </Core:Property>
      <Core:Property property="#inherits[1]">
         "react:drink"
      </Core:Property>
      <Core:Property property="#inherits[20]">
         "react:savour"
      </Core:Property>
      <Core:Property property="#inherits[2]">
         "react:fill"
      </Core:Property>
      <Core:Property property="#inherits[3]">
         "react:refill"
      </Core:Property>
      <Core:Property property="#inherits[4]">
         "react:taste"
      </Core:Property>
      <Core:Property property="#inherits[5]">
         "react:sip"
      </Core:Property>
      <Core:Property property="#inherits[6]">
         "react:smell"
      </Core:Property>
      <Core:Property property="#inherits[7]">
         "react:sniff"
      </Core:Property>
      <Core:Property property="#inherits[8]">
         "react:empty"
      </Core:Property>
      <Core:Property property="#inherits[9]">
         "react:dofill"
      </Core:Property>
      <Core:Property property="#levels[0]">"quite"</Core:Property>
      <Core:Property property="#levels[1]">
         "nearly emptied of"
      </Core:Property>
      <Core:Property property="#levels[2]">
         "less than half filled with"
      </Core:Property>
      <Core:Property property="#levels[3]">
         "about half filled with"
      </Core:Property>
      <Core:Property property="#levels[4]">
         "nearly filled with"
      </Core:Property>
      <Core:Property property="#levels[5]">
         "filled to the brim with"
      </Core:Property>
      <Core:Property property="bilbo:auto:start">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0010">
         "set this.ddb to \$lookup(Generic:DB:DrinkDB) :: set this.dcnt to 1 :: set this.dmax to \$element(this.ddb,#inherits,0)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0020">
         "set this.dtemp to \$element(this.ddb,#inherits,\$prop(this.dcnt)) :: set this.bilbo:inherit:\$prop(this.dtemp) to \$prop(this.ddb)"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0030">
         "add 1 to this.dcnt :: if \$prop(this.dcnt) \<= \$prop(this.dmax) then goto 0020 else call bilbo:react:fillsub"
      </Core:Property>
      <Core:Property property="bilbo:auto:start:0040">
         "set this.dtemp to nil :: set this.ddb to nil :: set this.dcnt to nil :: set this.dmax to nil :: set this.bilbo:auto:start to nil :: set this.bilbo:auto:start:0010 to nil :: set this.bilbo:auto:start:0020 to nil :: set this.bilbo:auto:start:0030 to nil :: set this.bilbo:auto:start:0040 to nil"
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:dodrink">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:dofill">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:drink">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:empty">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:emptysub">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:fill">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:fillsub">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:gotsub">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:gulp">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:guzzle">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:quaff">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:refill">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:savour">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:sip">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:smell">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:sniff">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:swill">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:taste">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0010">
         "call bilbo:react:gotsub"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0020">
         "if \$prop(this.doexit) \<\> nil then goto 0150"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0040">
         "emit.actor Alas. The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0050">
         "sub 1 from this.trait:level :: if \$prop(this.trait:level) \> 0 then goto 0110"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0060">
         "set this.xtemp1 to \$sam(\{final\|satisfied\|faint\}) :: set this.xtemp2 to \$sam(\{empty\|polish off\|quaff the remainder of\}) :: set this.xtemp3 to \$sam(\{empties\|polishes off\|quaffs the remainder of\})"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0070">
         "emit.actor With a \$prop(this.xtemp1) gulp, you \$prop(this.xtemp2) your \$prop(this.trait:liquid)."
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0080">
         "emit.audience With a \$prop(this.xtemp1) gulp, \$brief(actor) \$prop(this.xtemp3) \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid)."
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0090">
         "call bilbo:react:emptysub"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0100">
         "goto 0150"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0110">
         "set this.xtemp1 to \$sam(\{drink\|take a drink of\}) :: set this.xtemp2 to \$sam(\{drinks\|takes a drink of\})"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0120">
         "emit.actor You \$prop(this.xtemp1) your \$prop(this.trait:liquid)."
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0130">
         "emit.audience \$brief(actor) \$prop(this.xtemp2) \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid)."
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0140">
         "set this.xtemp1 to \$lookup(Generic:DB:DrinkDB) :: set this.trait:level-desc to \$element(this.xtemp1,#levels,\$prop(this.trait:level))"
      </Core:Property>
      <Core:Property property="bilbo:react:dodrink:0150">
         "set this.doexit to nil :: set this.xtemp1 to nil :: set this.xtemp2 to nil :: set this.xtemp3 to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0010">
         "call bilbo:react:gotsub"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0020">
         "if \$prop(this.doexit) \<\> nil then goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0030">
         "if \$prop(this.trait:level) \< \$prop(this.trait:level-max) then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0040">
         "emit.actor Your \$prop(this.trait:superbrief) is already filled to the brim with \$prop(this.trait:liquid). :: goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0050">
         "fill #xstuff in this with env.actor(property trait:isfancybar \<\> nil) :: set this.xtemp to \$element(this,#xstuff,0) :: if \$prop(this.xtemp) = nil then goto 0060 else if \$prop(this.xtemp) \> 0 then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0060">
         "if \$count(actor.Generic:drink:bottle-wine-refill) \> 0 then if this.iswine = true then goto 0110 :: emit.actor Alas, this bar is not stocked with the beverage you requested. You must be at one of the inner bailey liquor cabinets to fill your \$prop(this.trait:superbrief). :: goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0070">
         "set this.xtemp to \$sam(\{You gesture silently, and the bartender\|You make eye contact with the bartender, who\|A silent glance summons the bartender, who\} \{agreeably\|obediently\|deftly\}) :: emit.actor \$prop(this.xtemp) tops off your \$prop(this.trait:superbrief)."
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0080">
         "set this.xtemp to \$sam(\{gestures silently, and the bartender\|makes eye contact with the bartender, who\|summons the bartender, who\} \{agreeably\|obediently\|deftly\}) :: emit.audience \$brief(actor) \$prop(this.xtemp) tops off \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:superbrief)."
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0090">
         "call bilbo:react:fillsub"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0100">
         "empty #xstuff in this :: set this.xtemp to nil :: set this.doexit to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0110">
         "rem They have a wine bottle and they're trying to fill a wine glass."
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0120">
         "fill #bottle in this with actor(Generic:drink:bottle-wine-refill) :: set this.bottle to \$element(this,#bottle,1) :: if \$obj(this.bottle).trait:level \> 0 then goto 0140"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0130">
         "emit.actor Alas. The wine bottle is empty. :: goto 0180"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0140">
         "set this.xtemp to \$obj(this.bottle).trait:level :: sub 1 from this.xtemp :: set \$obj(this.bottle).trait:level to this.xtemp :: if \$obj(this.bottle).trait:level \> 0 then goto 0160"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0150">
         "set this.xtemp to \$sam(\{With a \{little\|small\|subtle\} flourish,\|With \{practiced\|natural\|graceful\} ease,\|With \{intent\|absent\|careful\|silent\} concentration,\|While \{tipping\|angling\|tilting\} it slightly,\}) :: emit.actor \$prop(this.xtemp) you top off your \$prop(this.trait:superbrief), emptying the remainder of your bottle. :: emit.audience \$prop(this.xtemp) \$brief(actor) tops off \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:superbrief), emptying the remainder of the bottle. :: set \$obj(this.bottle).trait:level-desc to quite empty of :: goto 0170"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0160">
         "set this.xtemp to \$sam(\{With a \{little\|small\|subtle\} flourish,\|With \{practiced\|natural\|graceful\} ease,\|With \{intent\|absent\|careful\|silent\} concentration,\|While \{tipping\|angling\|tilting\} it slightly,\}) :: emit.actor \$prop(this.xtemp) you top off your \$prop(this.trait:superbrief). :: emit.audience \$prop(this.xtemp) \$brief(actor) tops off \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:superbrief). :: set this.xtemp1 to \$lookup(Generic:DB:DrinkDB) :: set this.xtemp2 to \$obj(this.bottle).trait:level :: set \$obj(this.bottle).trait:level-desc to \$element(this.xtemp1,#levels,this.xtemp2)"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0170">
         "call bilbo:react:fillsub"
      </Core:Property>
      <Core:Property property="bilbo:react:dofill:0180">
         "empty #bottle in this :: set this.bottle to nil :: set this.xtemp1 to nil :: set this.xtemp2 to nil :: goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:drink">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:drink:0010">
         "call bilbo:react:dodrink"
      </Core:Property>
      <Core:Property property="bilbo:react:drink:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:empty">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0010">
         "call bilbo:react:gotsub"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0020">
         "if \$prop(this.doexit) \<\> nil then goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0040">
         "emit.actor The \$prop(this.trait:superbrief) is already empty. :: goto 0100"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0050">
         "if \$prop(this.trait:level) \> 3 then set this.xtemp to several quick gulps else if \$prop(this.trait:level) \> 1 then set this.xtemp to a few quick gulps else set this.xtemp to a quick gulp"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0060">
         "emit.actor With \$prop(this.xtemp), you empty your \$prop(this.trait:superbrief)."
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0070">
         "emit.audience With \$prop(this.xtemp), \$brief(actor) empties \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:superbrief)."
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0080">
         "call bilbo:react:emptysub"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0090">
         "rem"
      </Core:Property>
      <Core:Property property="bilbo:react:empty:0100">
         "set this.xtemp to nil :: set this.doexit to nil :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:emptysub">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:emptysub:0010">
         "set this.xtemp to \$sam(\<rem-name name=\\"\$this.trait:liquid\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.xtemp to \$sam(\<rem-adj adjective=\\"\$this.trait:liquid\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.xtemp to \$sam(\<rem-name name=\\"liquid\\" obj=\\"\$this\\" detail=\\"liquid\\"/\>) :: set this.xtemp to \$sam(\<add-adj adjective=\\"empty\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.trait:liquid to empty :: set this.trait:level to 0 :: set this.xtemp to \$lookup(Generic:DB:DrinkDB) :: set this.trait:level-desc to \$element(this.xtemp,#levels,0) :: set this.xtemp to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:fill">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:fill:0010">
         "call bilbo:react:dofill"
      </Core:Property>
      <Core:Property property="bilbo:react:fill:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:fillsub">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:fillsub:0010">
         "set this.trait:liquid to \$prop(this.trait:liquid-default) :: set this.trait:level to \$prop(this.trait:level-max) :: set this.xtemp to \$lookup(Generic:DB:DrinkDB) :: set this.trait:level-desc to \$element(this.xtemp,#levels,\$prop(this.trait:level)) :: set this.xtemp to \$sam(\<add-name name=\\"\$this.trait:liquid\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.xtemp to \$sam(\<add-adj adjective=\\"\$this.trait:liquid\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.xtemp to \$sam(\<add-name name=\\"liquid\\" obj=\\"\$this\\" detail=\\"liquid\\"/\>) :: set this.xtemp to \$sam(\<rem-adj adjective=\\"empty\\" obj=\\"\$this\\" detail=\\"default\\"/\>) :: set this.xtemp to nil :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:gotsub">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:gotsub:0010">
         "set this.doexit to nil :: if \$obj(other) = \$obj(env.this) then return"
      </Core:Property>
      <Core:Property property="bilbo:react:gotsub:0020">
         "set this.doexit to true :: emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: return"
      </Core:Property>
      <Core:Property property="bilbo:react:gulp">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:gulp:0010">
         "call bilbo:react:dodrink"
      </Core:Property>
      <Core:Property property="bilbo:react:gulp:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:guzzle">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:guzzle:0010">
         "call bilbo:react:dodrink"
      </Core:Property>
      <Core:Property property="bilbo:react:guzzle:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:quaff">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:quaff:0010">
         "call bilbo:react:dodrink"
      </Core:Property>
      <Core:Property property="bilbo:react:quaff:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:refill">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:refill:0010">
         "call bilbo:react:dofill"
      </Core:Property>
      <Core:Property property="bilbo:react:refill:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savor">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0010">
         "if \$prop(this.trait:taste) = nil then exit true else if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0040">
         "emit.actor The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0050">
         "rem if \$adverb = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0060">
         "emit.actor You \$adverb savor your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) \$adverb savors \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savor:0070">
         "emit.actor You savor your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) savors \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savour">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0010">
         "if \$prop(this.trait:taste) = nil then exit true else if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0040">
         "emit.actor The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0050">
         "rem if \$adverb = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0060">
         "emit.actor You \$adverb savour your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) \$adverb savours \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:savour:0070">
         "emit.actor You savour your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) savours \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sip">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0010">
         "if \$prop(this.trait:taste) = nil then exit true else if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0040">
         "emit.actor The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0050">
         "rem if \$adverb = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0060">
         "emit.actor You \$adverb sip your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) \$adverb sips \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sip:0070">
         "emit.actor You sip your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) sips \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0010">
         "if \$prop(this.trait:taste) = nil then exit true else if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0040">
         "emit.actor The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0050">
         "rem if \$adverb = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0060">
         "emit.actor You \$adverb slurp your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) \$adverb slurps \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:slurp:0070">
         "emit.actor You slurp your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) slurps \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:smell">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:smell:0010">
         "if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:smell:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:smell:0030">
         "if \$prop(this.trait:level) \< 1 then set this.xtemp to faintly like else set this.xtemp to like"
      </Core:Property>
      <Core:Property property="bilbo:react:smell:0040">
         "emit.actor The \$prop(this.trait:superbrief) smells \$prop(this.xtemp) \$prop(this.trait:liquid-default). :: set this.xtemp to nil :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sniff">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:sniff:0010">
         "if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:sniff:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:sniff:0030">
         "if \$prop(this.trait:level) \< 1 then set this.xtemp to faintly like else set this.xtemp to like"
      </Core:Property>
      <Core:Property property="bilbo:react:sniff:0040">
         "emit.actor The \$prop(this.trait:superbrief) smells \$prop(this.xtemp) \$prop(this.trait:liquid-default). :: set this.xtemp to nil :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:swill">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:swill:0010">
         "call bilbo:react:dodrink"
      </Core:Property>
      <Core:Property property="bilbo:react:swill:0020">
         "exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:taste">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0010">
         "if \$prop(this.trait:taste) = nil then exit true else if \$obj(actor) = \$obj(env.this) then goto 0030"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0020">
         "emit.actor You must be holding the \$prop(this.trait:superbrief) to do that. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0030">
         "if \$prop(this.trait:level) \> 0 then goto 0050"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0040">
         "emit.actor The \$prop(this.trait:superbrief) is empty. :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0050">
         "rem if \$adverb = nil then goto 0070"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0060">
         "emit.actor You \$adverb taste your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) \$adverb tastes \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="bilbo:react:taste:0070">
         "emit.actor You taste your \$prop(this.trait:liquid). \$prop(this.trait:taste) :: emit.audience \$brief(actor) tastes \<possessive what=\\"\$(actor)\\"/\> \$prop(this.trait:liquid). :: exit false"
      </Core:Property>
      <Core:Property property="dcnt">"19"</Core:Property>
      <Core:Property property="ddb">
         \<Generic:DB:DrinkDB\>
      </Core:Property>
      <Core:Property property="dmax">"20"</Core:Property>
      <Core:Property property="export:nip:item:cost">
         0
      </Core:Property>
      <Core:Property property="export:trait:level">
         "5"
      </Core:Property>
      <Core:Property property="export:trait:level-desc">
         "filled to the brim with"
      </Core:Property>
      <Core:Property property="export:trait:level-max">
         "5"
      </Core:Property>
      <Core:Property property="export:trait:liquid">
         "hypocras"
      </Core:Property>
      <Core:Property property="export:trait:liquid-default">
         "hypocras"
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "sweet spices"
      </Core:Property>
      <Core:Property property="export:trait:superbrief">
         "glass"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "The taste is like that of a sweet, spicy red wine, complimented by a rich combination of ginger, nutmeg, cinnamon and clove."
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1170615950, "necate", "E", 1196177577, "slurpeeslurp", "E", 1196177591, "slurpeeslurp", "E", 1196177816, "slurpeeslurp", "E", 1196177983, "slurpeeslurp", "E", 1196178028, "slurpeeslurp", "E", 1196586129, "slurpeeslurp", "E", 1196586470, "slurpeeslurp", "E", 1223577729, "slurpeeslurp", "K", 1431619467, "slurpeeslurp", "R" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skotos:creator">
         "npc:tailor"
      </Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
