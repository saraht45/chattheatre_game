<object clone="/base/obj/thing" owner="jominey">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="0.1" density="1.2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0.0001" maxweight="0.15" verb2="hold in your bowl" verb3="holds in its bowl"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="merry:lib:do_smoke">
         X[M] if(!\$this.lit) \{   
    EmitTo(\$actor, Describe(this, nil, \$actor) + " is not lit.");   
    return FALSE;   
\}   
   
\$delay(1, FALSE, "4bf9");        
          
if(!\$adverb) \{          
  \$adverb_str = "";          
\} else \{          
  \$adverb_str = \$adverb+" ";          
\}                           
       
switch(random(8))                
\{         
  case 7:                
    \$sizes = "light";                
  break;           
  case 6:                
    \$sizes = "meager";                
  break;    
  case 5:                
    \$sizes = "slight";                
  break;    
  case 4:                
    \$sizes = "little";                
  break;      
  case 3:                
    \$sizes = "tiny";                
  break;      
  case 2:                
    \$sizes = "miniature";                
  break;                
  case 1:                
    \$sizes = "small";                
  break;                
  case 0:                
    \$sizes = "scant";                
  break;                
  default:                
  break;                
\}      
      
switch(random(3))                
\{                
  case 2:                
    \$plumes = "clouds";                
  break;    
  case 1:                
    \$plumes = "clouds";                
  break;                
  case 0:                
    \$plumes = "plumes";                
  break;                          
  default:                
  break;                
\}      
      
switch(random(7))                
\{    
  case 6:                
    \$desc1 = "float";                
  break;        
  case 5:                
    \$desc1 = "dance";                
  break;                
  case 4:                
    \$desc1 = "curl";                
  break;      
  case 3:                
    \$desc1 = "emanate";                
  break;      
  case 2:                
    \$desc1 = "radiate";                
  break;                
  case 1:                
    \$desc1 = "rise";               
  break;                
  case 0:                
    \$desc1 = "billow";               
  break;                
  default:                
  break;                
\}      
      
switch(random(3))                
\{                
  case 2:                
    \$direct = "upward";                
  break;                
  case 1:                
    \$direct = "skyward";              
  break;                
  case 0:                
    \$direct = "outward";               
  break;                
  default:                
  break;                
\}      
      
switch(random(3))                
\{       
  case 2:                
    \$taste = "flavor";                
  break;             
  case 1:                
    \$taste = "taste";                
  break;                
  case 0:                
    \$taste = "sensation";                
  break;                          
  default:                
  break;                
\}      
                     
EmitTo( \$actor, "You puff " + \$adverb_str + "on " + Describe(this) + ", the " + \$taste + " of the tobacco fills your mouth and " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + "." );                                              
EmitIn( \$actor."base:environment", Describe(\$actor)+ " puffs " + \$adverb_str + "on " +Describe(\$this, \$actor)+ " as " + \$sizes + " " + \$plumes + " of smoke " + \$desc1 + " " + \$direct + ".", \$actor);
      </Core:Property>
      <Core:Property property="merry:lib:emitsmoke">
         X[M] switch(random(7))                
\{       
  case 6:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" glows faintly as the tobacco burns, emanating a light, aromatic scent.");     
  break;             
  case 5:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" releases a curling tendril of smoke into the air, filling the area with the light scent of tobacco.");     
  break;             
  case 4:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" burns, sending a tendril of smoke dancing upward into the air.");                
  break;             
  case 3:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" burns, releasing sinuous wisps of smoke curling through the air.");                
  break;             
  case 2:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" releases a small tendril of smoke into the air.");                
  break;                
  case 1:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" emits a light, aromatic scent.");                
  break;                
  case 0:                
    EmitIn(\$actor."base:environment", Describe(\$this)+" glows slightly as the tobacco burns to ash.");                
  break;                
  default:                
  break;                
\}                
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makesmoke">
         X[M] \$this.lit = 1;   
   
if(this."trait:objecttype" \&\& this."trait:objecttype" == "cigar") \{      
    Set(\$this, "trait:smell", "smoked tobacco leaves, sweet yet heavy");      
\}      
   
\$delay(1, TRUE, "3a66");   
   
for(\$i = 0; \$i \< 20; \$i++) \{   
    if(!\$this.lit) \{   
        \$i = 25;   
    \} else \{   
        Call(\$this, "emitsmoke");   
        \$delay(180 + random(30), TRUE, "3883");   
    \}   
\}        
   
if(\$i == 26) return TRUE;      
   
\$this.lit = nil;     
   
EmitIn(\$actor."base:environment", Describe(\$this)+" goes out, giving off a solitary tendril of smoke.");    
                
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:puff-dob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:puff-iob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:smoke-dob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-post:smoke-iob">
         X[M] ::do_smoke();
      </Core:Property>
      <Core:Property property="merry:react-pre:extinguish-dob">
         X[M] if(\$this.lit) \{          
    if(this."trait:objecttype" \&\& this."trait:objecttype" == "cigar") \{      
        Set(\$this, "trait:smell", "dried tobacco");      
    \}      
    \$this.lit = nil;   
    \$delay(1, TRUE, "ceb3");   
    EmitIn(\$actor."base:environment", Describe(\$this)+" goes out, giving off a solitary tendril of smoke.");         
    return TRUE;          
\} else \{          
    EmitTo(\$actor, Describe(this) + " is not lit.");          
    return FALSE;          
\}
      </Core:Property>
      <Core:Property property="merry:react:light-dob">
         X[M] return Call(\$this, "makesmoke");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1287075577, "tunk_bodin", "X", 1287126111, "tunk_bodin", "X", 1294375833, "jominey", "E", 1426992448, "rorschakovacs", "E", 1426993447, "rorschakovacs", "E", 1426993735, "rorschakovacs", "E", 1427594862, "rorschakovacs", "E", 1427595396, "rorschakovacs", "E", 1427595433, "rorschakovacs", "E", 1427595474, "rorschakovacs", "E", 1427595803, "rorschakovacs", "E", 1427595842, "rorschakovacs", "E", 1427596158, "rorschakovacs", "E", 1427596347, "rorschakovacs", "E", 1427599307, "rorschakovacs", "E", 1427668102, "rorschakovacs", "E", 1427668265, "rorschakovacs", "E", 1427668794, "rorschakovacs", "E", 1427668907, "rorschakovacs", "E", 1427668977, "rorschakovacs", "E", 1427669513, "rorschakovacs", "E", 1427672404, "jominey", "E", 1427672433, "jominey", "E", 1427672445, "jominey", "E", 1427672546, "jominey", "E", 1427673428, "jominey", "E", 1427673444, "jominey", "E", 1427673619, "jominey", "E", 1427673755, "rorschakovacs", "E", 1427673899, "jominey", "E", 1427674011, "jominey", "E", 1427674234, "rorschakovacs", "E", 1427674289, "rorschakovacs", "E", 1427674359, "rorschakovacs", "E", 1427674403, "rorschakovacs", "E", 1427674426, "rorschakovacs", "E", 1427674437, "rorschakovacs", "E", 1427674519, "rorschakovacs", "E", 1427674531, "rorschakovacs", "E", 1427690342, "rorschakovacs", "E", 1427690755, "rorschakovacs", "E", 1427690834, "rorschakovacs", "E", 1427690913, "rorschakovacs", "E", 1427692273, "rorschakovacs", "E", 1435177272, "rorschakovacs", "E", 1442461215, "ezralee", "X", 1575475547, "sendnoodlez", "X", 1575475589, "sendnoodlez", "X", 1575475641, "sendnoodlez", "E", 1575475643, "sendnoodlez", "E", 1575918910, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
