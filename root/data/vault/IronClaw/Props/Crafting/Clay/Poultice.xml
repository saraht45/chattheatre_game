<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="poultice"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="poultices"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="small"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) poultice
          </Base:Description>
          <Base:Description type="examine">
             A small $(this.trait:color) $(this.trait:material) poultice. It smells of mellow earthiness, but that's unsurprising considering where it came from. <propcheck skill="career:healer" min="12">Healers know that this poultice is an anti-inflammatory that can diminish the appearance of bruises and welts. </propcheck>
          </Base:Description>
          <Base:Description type="look">
             A small $(this.trait:color) $(this.trait:material) poultice.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react:apply-dob">
         X[M] EmitTo(\$actor, "You strategically rest the clay poultice on the bruise. It's still there but doesn't hurt as bad.");
EmitIn(\$actor."base:environment", Describe(\$actor)+" strategically rests the clay poultice on the bruise.", \$actor);

return TRUE;

EmitTo(\$actor, "You strategically rest the clay poultice on the bruise until it gradually disappears.");               
EmitIn(\$actor."base:environment", Describe(\$actor)+" strategically rests the clay poultice on the bruise until it gradually disappears.", \$actor);               
                  
/* Chatter whose wound we are healing */          
\$body = NRefOb(\$iob[0]);          
          
/* Body part we are healing */          
\$detail = NRefDetail(\$iob[0]);          
          
/* Make sure a wound exists on this body part */          
if(Get(\$body, "combat:injury:" + \$detail)) \{          
    \$injuries = Get(\$body, "combat:injury:" + \$detail);          
\} else \{          
    EmitTo(\$actor, Describe(\$body) + " does not have a bruise there.");          
    return FALSE;          
\}          
          
/* Wounds exist but is there a bruise? */          
if(!\$injuries["injuries"]["bruise"] \|\| !sizeof(\$injuries["injuries"]["bruise"])) \{          
    EmitTo(\$actor, Describe(\$body) + " does not have a bruise there.");          
    return FALSE;          
\}          
          
/* There is a bruise now let's pick the first and remove it */          
\$injuries["injuries"]["bruise"][0] = nil;          
\$injuries["injuries"]["bruise"] -= (\{ nil \});          
       
/* If that is the only bruise on the detail, remove bruise listing from the injuries list */       
if(!sizeof(\$injuries["injuries"]["bruise"])) \{       
    \$injuries["injuries"]["bruise"] = nil;       
\}         
          
/* If that is the only wound on the detail, remove the injuries list entirely */        
if(!map_sizeof(\$injuries["injuries"])) \{        
    \$injuries = nil;        
\}          
          
/* Now apply the changes to the chatter */          
Set(\$body, "combat:injury:" + \$detail, \$injuries);    
Slay(\$this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1346480280, "meandmine", "X", 1346480396, "meandmine", "X", 1347220590, "jominey", "R", 1347950138, "meandmine", "K", 1379449699, "meandmine", "R", 1379450157, "meandmine", "X", 1404679860, "slurpeeslurp", "K", 1404679914, "slurpeeslurp", "E", 1404681866, "slurpeeslurp", "E", 1404681950, "slurpeeslurp", "K", 1404681970, "slurpeeslurp", "K", 1404681986, "slurpeeslurp", "K", 1405700318, "slurpeeslurp", "E", 1409468547, "pp74", "E", 1427602738, "jominey", "E", 1427602844, "jominey", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
