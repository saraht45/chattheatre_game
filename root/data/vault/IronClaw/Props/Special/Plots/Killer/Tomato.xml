<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.05" density="10.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tomato"/>
            <Base:SName sname="fruit"/>
            <Base:SName sname="vegetable"/>
            <Base:SName sname="food"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tomatoes"/>
            <Base:PName pname="fruits"/>
            <Base:PName pname="vegetables"/>
            <Base:PName pname="foods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brown"/>
          <Base:Adjective adjective="mushy"/>
          <Base:Adjective adjective="red"/>
          <Base:Adjective adjective="rotten"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             rotten tomato
          </Base:Description>
          <Base:Description type="examine">
             A brown, mushy rotten tomato.
          </Base:Description>
          <Base:Description type="glance">
             A rotten tomato.
          </Base:Description>
          <Base:Description type="look">
             A rotten tomato.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         100
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "rotten tomatoes"
      </Core:Property>
      <Core:Property property="export:trait:taste">
         "like rotten tomatoes"
      </Core:Property>
      <Core:Property property="merry:react-pre:throw-what">
         X[M] if(\$where \&\& (sizeof(\$where) == 1)) \{                                          
EmitIn( \$actor."base:environment", Describe(\$actor)+" throws "+Describe(\$this, \$actor)+" at " +Describe(\$where)+ ". SPLAT!!", \$actor );                             
EmitTo( \$actor, "You throw "+Describe(\$this, nil, \$actor)+" at " +Describe(\$where)+ ". SPLAT!!" );           
\$target = NRefOb(\$where[0]);                          
\$target."trait:smell" = \$this."trait:smell";      
Slay(\$this);                            
return FALSE;                                      
\} else \{                                          
EmitTo( \$actor, "What do you intend to throw " +Describe(\$this, nil, \$actor)+" at?" );                              
return FALSE;                           
\}                     
return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127923051, "tunk_bodin", "X", 1127923345, "tunk_bodin", "X", 1127923680, "tunk_bodin", "X", 1127923815, "tunk_bodin", "X", 1127924823, "tunk_bodin", "X", 1127930010, "tunk_bodin", "X", 1127968158, "tunk_bodin", "X", 1127968319, "tunk_bodin", "X", 1127969815, "tunk_bodin", "X", 1127970910, "tunk_bodin", "X", 1127971625, "tunk_bodin", "E", 1128056257, "tunk_bodin", "X", 1129048001, "tunk_bodin", "E", 1129771495, "tunk_bodin", "S", 1129773643, "tunk_bodin", "S", 1129787113, "tunk_bodin", "X", 1136586185, "tunk_bodin", "X", 1136707572, "tunk_bodin", "X", 1136709214, "tunk_bodin", "X", 1136709377, "tunk_bodin", "X", 1136709513, "tunk_bodin", "X", 1136709537, "tunk_bodin", "X", 1136709687, "tunk_bodin", "X", 1136709792, "tunk_bodin", "X", 1136709831, "tunk_bodin", "X", 1136709873, "tunk_bodin", "X", 1136710143, "tunk_bodin", "X", 1136710275, "tunk_bodin", "X", 1136710300, "tunk_bodin", "X", 1136710401, "tunk_bodin", "X", 1136712006, "tunk_bodin", "X", 1136757751, "roccon", "X", 1136757874, "roccon", "X", 1136757953, "roccon", "X", 1136772933, "tunk_bodin", "X", 1136773254, "tunk_bodin", "X", 1136774798, "tunk_bodin", "X", 1136776241, "tunk_bodin", "X", 1137515493, "tunk_bodin", "X", 1137515610, "tunk_bodin", "X", 1137515640, "tunk_bodin", "X", 1137515684, "tunk_bodin", "X", 1137515771, "tunk_bodin", "X", 1137515851, "tunk_bodin", "X", 1137515909, "tunk_bodin", "X", 1137516006, "tunk_bodin", "X", 1137516514, "tunk_bodin", "X", 1138491382, "tunk_bodin", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
