<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="5" density="2"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="deck"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="decks"/>
            <Base:PName pname="cards"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="cartomancy"/>
          <Base:Adjective adjective="deck"/>
          <Base:Adjective adjective="of"/>
          <Base:Adjective adjective="pack"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             deck of cartomancy cards
          </Base:Description>
          <Base:Description type="examine">
             A deck of cartomancy cards. Cartomancy is divination derived from cards. For believers, they may predict situations in life. For non-believers, they are a minor curiousity.
          </Base:Description>
          <Base:Description type="look">
             A deck of cartomancy cards.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:lib:card_randomizer">
         X[M] switch(random(4)+1) \{                                     
  case 1:                     
\$cardface = "upright";                                    
Call(\$this, "major_arcana");                                                         
    break;                                     
  case 2:                                                         
\$cardface = "upright";    
Call(\$this, "minor_arcana_numbers");                                                                           
    break;  
  case 3:                 
\$cardface = "reversed";                                          
Call(\$this, "major_arcana");                                                         
    break;                                     
  case 4:                 
\$cardface = "reversed";                                            
Call(\$this, "minor_arcana_numbers");                                                                           
    break;                                     
  default:                                   
    EmitIn(\$this."base:environment", "No suit decided! This is not programmed to actually occur. Please @bug seeing this result.");                                     
\}                                     
                                     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:deliver_cards">
         X[M] \$card = Spawn(\$\{IronClaw:Props:Special:Requested:Meepers:CartomancyCard\});                                    
if(\$cardnum) \{   
    \$card."trait:type" = Str(\$cardnum)+ " of " +Str(\$cardsuit);   
\} else \{   
\$card."trait:type" = Str(\$cardsuit);   
\}   
     \$card."trait:face" = Str(\$cardface);                                                                        
    \$card."base:environment" = \$actor;                
if(\$this.counter) \{         
\$this.counter += 1;         
\} else \{         
\$this.counter = 1; \}         
if(\$this.counter \< 3) \{         
\$cardnum = nil;    
\$cardsuit = nil;    
\$cardface = nil;  
Call(\$this, "card_randomizer");          
\} else \{         
    EmitIn(\$actor."base:environment", Describe(\$actor)+ " places three unrevealed cards.");         
\$this.counter = nil;         
\$cardnum = nil;    
\$cardsuit = nil;    
\$cardface = nil;  
\}           
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:major_arcana">
         X[M] switch(random(22)+1) \{                                     
  case 1:                            
\$cardsuit = "Fool";                                       
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 2:                        
\$cardsuit = "Magician";                                               
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 3:                        
\$cardsuit = "High Priestess";                                             
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 4:                        
\$cardsuit = "Empress";                                               
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 5:                        
\$cardsuit = "Emperor";                                             
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 6:                        
\$cardsuit = "Hierophant";                                               
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 7:                        
\$cardsuit = "Lovers";                                             
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 8:                        
\$cardsuit = "Chariot";                                               
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 9:                        
\$cardsuit = "Strength";                                             
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 10:                       
\$cardsuit = "Hermit";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 11:                       
\$cardsuit = "Wheel of Fortune";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 12:                       
\$cardsuit = "Justice";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 13:                       
\$cardsuit = "Hanged Man";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 14:                       
\$cardsuit = "Death";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 15:                       
\$cardsuit = "Temperance";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 16:                       
\$cardsuit = "Devil";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 17:                       
\$cardsuit = "Tower";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 18:                       
\$cardsuit = "Star";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 19:                       
\$cardsuit = "Moon";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 20:                       
\$cardsuit = "Sun";                                                
Call(\$this, "deliver_cards");                                                                           
    break;            
  case 21:                       
\$cardsuit = "Judgement";                                              
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 22:                       
\$cardsuit = "World";                                                
Call(\$this, "deliver_cards");                                                                           
    break;                                     
  default:                                   
    EmitIn(\$this."base:environment", "No card decided! This is not programmed to actually occur. Please @bug seeing this result.");                                     
\}                                     
                                     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:minor_arcana_numbers">
         X[M] switch(random(14)+1) \{                                     
  case 1:                   
\$cardnum = "Ace";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 2:                         
\$cardnum = "2";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 3:                   
\$cardnum = "3";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 4:                         
\$cardnum = "4";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 5:                   
\$cardnum = "5";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 6:                         
\$cardnum = "6";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 7:                   
\$cardnum = "7";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 8:                         
\$cardnum = "8";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 9:                   
\$cardnum = "9";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 10:                         
\$cardnum = "10";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 11:                   
\$cardnum = "page";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 12:                         
\$cardnum = "knight";                                                 
Call(\$this, "minor_arcana_suits");               
    break;               
  case 13:                   
\$cardnum = "king";                                                  
Call(\$this, "minor_arcana_suits");                                                         
    break;                                     
  case 14:                         
\$cardnum = "queen";                                                 
Call(\$this, "minor_arcana_suits");                                                                           
    break;                                     
  default:                                   
    EmitIn(\$this."base:environment", "No number decided! This is not programmed to actually occur. Please @bug seeing this result.");                                     
\}                                     
                                     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:minor_arcana_suits">
         X[M] switch(random(4)+1) \{                                     
  case 1:                
\$cardsuit = "wands";                                                    
Call(\$this, "deliver_cards");                                                         
    break;                                     
  case 2:                                                         
\$cardsuit = "cups";                                                    
Call(\$this, "deliver_cards");                                                                           
    break;             
  case 3:                                                         
\$cardsuit = "swords";                                                    
Call(\$this, "deliver_cards");                                                                           
    break;             
  case 4:                                                         
\$cardsuit = "coins";                                                    
Call(\$this, "deliver_cards");                                                                           
    break;                                     
  default:                                   
    EmitIn(\$this."base:environment", "No suit decided! This is not programmed to actually occur. Please @bug seeing this result.");                                     
\}                                     
                                     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:cull-dob">
         X[M] Call(\$this, "card_randomizer");             
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1145926725, "tunk_bodin", "X", 1145927163, "tunk_bodin", "X", 1145927233, "tunk_bodin", "X", 1145927398, "tunk_bodin", "X", 1145927421, "tunk_bodin", "X", 1145928434, "tunk_bodin", "X", 1145928993, "tunk_bodin", "X", 1145929913, "tunk_bodin", "X", 1145931056, "tunk_bodin", "X", 1145931443, "tunk_bodin", "X", 1145931993, "tunk_bodin", "X", 1145932621, "tunk_bodin", "X", 1145933108, "tunk_bodin", "X", 1145933968, "tonyd", "P", 1145933968, "tunk_bodin", "P", 1145933976, "tunk_bodin", "P", 1145933997, "tunk_bodin", "P", 1145934017, "tunk_bodin", "P", 1145934119, "tunk_bodin", "P", 1145934338, "tunk_bodin", "X", 1145934532, "tunk_bodin", "X", 1145934641, "tunk_bodin", "X", 1145934813, "tunk_bodin", "X", 1145934999, "tunk_bodin", "X", 1145935142, "tunk_bodin", "X", 1145935810, "tunk_bodin", "X", 1145936210, "tunk_bodin", "X", 1145938557, "tunk_bodin", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="zcnt">"1"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
