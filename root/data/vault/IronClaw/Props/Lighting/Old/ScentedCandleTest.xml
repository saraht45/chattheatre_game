<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.1" density="0.9"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="candle"/>
            <Base:SName sname="tallow"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="candles"/>
            <Base:PName pname="tallows"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="wax"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? not | $(this.details:light:hidden) |lit } $(this.trait:color) candle
          </Base:Description>
          <Base:Description type="examine">
             A candle that is approximately eight inches tall, and a half inch in diameter. The coloring of the candle wax itself has a $(this.trait:color) tone to it. There is a wick extending from the top of the candle.
          </Base:Description>
          <Base:Description type="look">
             {? not | $(this.details:light:hidden) | A candle with a small flame flickering from the wick.| A candle.}
          </Base:Description>
          <Base:Description type="pbrief">
             {? not | $(this.details:light:hidden) |lit } candles
          </Base:Description>
          <Base:Description type="react-desc:blow-dob">
             {? not | $(this.details:light:hidden) | $[EmitTo($actor, "You blow out " +Describe($this, nil, $actor) + "."); EmitIn(Get($actor, "base:environment"), Describe($actor) + " blows out " +Describe($this, $actor, nil) + ".", $actor); Set($this, "details:light:hidden", TRUE); Set($this, "stoptimer", 1);] | The candle is not lit. }
          </Base:Description>
          <Base:Description type="react-desc:extinguish-dob">
             {? not | $(this.details:light:hidden) | $[EmitTo($actor, "You extinguish " +Describe($this, nil, $actor) + "."); EmitIn(Get($actor, "base:environment"), Describe($actor) + " extinguishes " +Describe($this, $actor, nil) + ".", $actor); Set($this, "details:light:hidden", TRUE); Set($this, "stoptimer", 1);] | The candle is not lit. }
          </Base:Description>
          <Base:Description type="react-desc:light-dob">
             {? not | $(this.details:light:hidden) | The candle is already lit. | $[EmitTo($actor, "You light " +Describe($this, nil, $actor) + "."); EmitIn(Get($actor, "base:environment"), Describe($actor) + " lights " + Describe($this, $actor, nil) + ".", $actor); Set($this, "details:light:hidden", FALSE);] }
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="flame" prime="false" def="false" abstract="false" hidden="false" luminosity="5" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="light"/>
            <Base:SName sname="flame"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="flames"/>
            <Base:PName pname="lights"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="light"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             light from a candle
          </Base:Description>
          <Base:Description type="examine">
             The candle flame casts a subtle glow.
          </Base:Description>
          <Base:Description type="look">
             A slightly yellow glowing flame from a candle.
          </Base:Description>
          <Base:Description type="pbrief">lights</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="trait:light:lightable">
         "1"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="export:heatsource">1</Core:Property>
      <Core:Property property="export:trait:smell">
         "\$(this.trait:smell)"
      </Core:Property>
      <Core:Property property="export:xtra:emits">
         X[S] \{
\{emits\|lets out\} \{a\|the\} \{light\|faint\|subtle\|mild\|soft\} \{fragrance\|smell\|scent\|odor\|essence\|perfume\|whiff\} of \$(this.trait:smell)\{.\| into the air.\}
\| \{emits\|lets out\} a \{delicate\|faint\|hazy\|gentle\|soft\|thin\} \{stream\|thread\|line\|band\|streak\} of smoke\{\| \{that dances\|dancing\|that floats\|that wafts\} upwards\}.
\| burns \{lazily\|softly\|continuously\|lackadaisically\|calmly\|laggardly\|listlessly\} \{and causes a sweet odor\|filling the area with the smell of \$(this.trait:smell)\}.
\}
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] Set(\$this, "details:light:hidden", TRUE); Set(\$this, "stoptimer", 1); return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:emitscent">
         X[M] \$env = \$this."base:environment";         
         
/* if the environment is not the main room, then emit in the main room */         
if(\$env \&\& \$env."base:environment") \$env = \$env."base:environment";         
         
/* if there isn't a room to emit in, don't emit */         
if(!\$env) return TRUE;         
         
/* do the emit */         
/*EmitIn(\$this."base:environment",         
Describe(\$this)+UnSAM(ParseXML(\$this."xtra:emits")));*/         
         
EmitIn(\$env,         
Describe(\$this)+" "+UnSAM(\$this."xtra:emits"));         
         
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makescent">
         X[M] this.stoptimer = nil;  
if(\$this.timer)              
\{                    
  return TRUE;              
\}              
\$this.timer = 10;                   
\$delay(random(45)+15, TRUE, "e25a");              
while(\$this.timer \&\& !\$this.stoptimer)              
\{                   
  Call(\$this, "emitscent");              
  \$delay(random(45)+15, TRUE, "8cd2");              
\}              
\$this.timer = nil;              
\$this.stoptimer = nil;              
              
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:+burn-dob">
         X[M] return Call(\$this, "makescent");
      </Core:Property>
      <Core:Property property="merry:react:blow-dob">
         X[M] \$this.stoptimer = 1;  
\$this.timer = nil; 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:extinguish-dob">
         X[M] \$this.stoptimer = 1;  
\$this.timer = nil; 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:light-dob">
         X[M] return Call(\$this, "makescent");
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1132203378, "diedra", "E", 1132203512, "diedra", "E", 1132203573, "diedra", "E", 1132203611, "diedra", "E", 1132203648, "diedra", "E", 1132203680, "diedra", "E", 1132203714, "diedra", "E", 1132203835, "diedra", "E", 1132203872, "diedra", "E", 1132204072, "diedra", "E", 1132204133, "diedra", "E", 1132204409, "diedra", "X", 1132204768, "diedra", "X", 1132204861, "diedra", "X", 1132205239, "diedra", "X", 1132205378, "diedra", "E", 1132205424, "diedra", "E", 1132205814, "diedra", "E", 1132205882, "diedra", "E", 1132206045, "diedra", "E", 1132206069, "diedra", "E", 1132206453, "diedra", "E", 1138155065, "librarysage", "E", 1196064608, "slurpeeslurp", "E", 1196064654, "slurpeeslurp", "E", 1196064720, "slurpeeslurp", "E", 1196064750, "slurpeeslurp", "R", 1196066722, "slurpeeslurp", "E", 1196066932, "slurpeeslurp", "E", 1196067002, "slurpeeslurp", "E", 1196067044, "slurpeeslurp", "E", 1196067071, "slurpeeslurp", "E", 1196070546, "tonyd", "P", 1196070612, "tonyd", "P", 1196070678, "tonyd", "P", 1196070734, "tonyd", "P", 1196070806, "tonyd", "P", 1196070841, "tonyd", "P", 1196070946, "tonyd", "P", 1196070973, "tonyd", "P", 1196070995, "tonyd", "P", 1196071030, "tonyd", "P", 1196071093, "tonyd", "P", 1196071116, "tonyd", "P", 1196071147, "tonyd", "P", 1196071171, "tonyd", "P", 1196071208, "tonyd", "P", 1196071299, "tonyd", "P", 1196071435, "tonyd", "P", 1196071446, "tonyd", "P", 1196071464, "tonyd", "P", 1196071473, "tonyd", "P", 1196072229, "slurpeeslurp", "E", 1196072368, "slurpeeslurp", "E", 1196072403, "tonyd", "P", 1196072495, "tonyd", "P", 1196072786, "tonyd", "P", 1196072799, "tonyd", "P", 1196073217, "tonyd", "P", 1196073806, "tonyd", "P", 1196127507, "tonyd", "P", 1196127519, "tonyd", "P", 1196953753, "slurpeeslurp", "E", 1196964703, "tunk_bodin", "X", 1196964786, "tunk_bodin", "X", 1196965265, "tunk_bodin", "X", 1196965443, "tunk_bodin", "X", 1196965456, "tunk_bodin", "X", 1196965641, "tunk_bodin", "X", 1196965811, "tunk_bodin", "X", 1196966060, "tunk_bodin", "X", 1196966355, "tunk_bodin", "X", 1196966458, "tunk_bodin", "X", 1196966550, "tunk_bodin", "X", 1201551893, "jsfox", "X", 1252762373, "jominey", "E", 1252762524, "jominey", "E", 1253289862, "slurpeeslurp", "E", 1253289882, "slurpeeslurp", "E", 1253289969, "slurpeeslurp", "E", 1253290016, "slurpeeslurp", "E", 1283711904, "jominey", "E", 1283711921, "jominey", "E", 1287866452, "rastalabor", "X", 1288282714, "tunk_bodin", "X", 1288315136, "jominey", "R", 1288316817, "jominey", "R", 1288567433, "jominey", "R", 1288567463, "jominey", "R", 1288576089, "jominey", "R", 1368706800, "pp74", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:light:lightable">
         "1"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="1132206045" state="Open" user="diedra">
           Just a basic lightable / extinguishable candle.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
