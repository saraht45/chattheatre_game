<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.00025" density="0.01"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="hanging" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="portrait"/>
            <Base:SName sname="canvas"/>
            <Base:SName sname="painting"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="paintings"/>
            <Base:PName pname="portraits"/>
            <Base:PName pname="canvases"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="blank"/>
          <Base:Adjective adjective="shredded"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.details:frame:snames) | framed } {? | $(this.trait:brief) |$(this.trait:brief)|blank canvas}
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.trait:brief) |<describe what="$(this)" nonposs="1" cap="1"/>{? | $(this.trait:paints) |, painted in $(this.trait:paints)}{? | $(this.trait:pencils) |, created with $(this.trait:pencils) pencils}.{? | $(this.trait:examine) |<br/>$(this.trait:examine)|{? | $(this.trait:look) |<br/>$(this.trait:look)}} |A blank canvas, ready to have something painted or drawn on it. <br/>[OOC Syntax: 'paint/draw (object) on canvas'] <br/> [OOC Freeform Syntax: 'paint/draw on canvas']}<br/>{? | $(this.details:frame:snames) | This picture is framed with $(this.trait:frame:color) $(this.trait:frame:material) frame. }
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.trait:brief) |<describe what="$(this)" nonposs="1" cap="1"/>{? | $(this.trait:paints) |, painted in $(this.trait:paints)}{? | $(this.trait:pencils) |, created with $(this.trait:paints) pencils}.{? | $(this.trait:look) |<br/>$(this.trait:look)} |A blank canvas, ready to have something painted or drawn on it.} <br/> {? | $(this.details:frame:snames) | This picture is framed with $(this.trait:frame:color) $(this.trait:frame:material) frame. }
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="frame" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:frame:color) $(this.trait:frame:material) frame
          </Base:Description>
          <Base:Description type="look">
             The {? equal | $(this.trait:frame:color) | none | simple | $(this.trait:frame:color) } {? equal | $(this.trait:frame:material) | none | wooden | $(this.trait:frame:material) } frame, that surrounds the $(this.details:default:descriptions:brief).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="details:default:adjective:blank">
         1
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="export:alteration:add:default:frame">
         ([ "adj-prop":(\{ "trait:color", "trait:material" \}), "names":(\{ (\{ "sname", "frame" \}), (\{ "pname", "frames" \}) \}), "properties":(\{ (\{ "trait:color", "trait:frame:color" \}), (\{ "trait:material", "trait:frame:material" \}) \}) ])
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         300
      </Core:Property>
      <Core:Property property="export:trait:objecttype">
         "canvas"
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:react-post:hang-dob">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1)) \{                       
  if(NRefOb(\$iob[0])."base:volition")                       
    return TRUE;       
                 
  if(NRefOb(\$iob[0])."base:environment") \{                       
    \$this."base:environment" = NRefOb(\$iob[0])."base:environment";                       
  \} else \{                       
    \$this."base:environment" = NRefOb(\$iob[0]);                       
  \}                       
  \$this."base:proximity" = \$iob[0];                       
  \$this."base:stance" = 6;  
  \$this."base:preposition" = 8;   

  if(\$(iob:preposition) == "over") \{
    \$this."base:prepositionstring" = "above"; 
  \}                                        
\}                       
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:draw-iob">
         X[M] if((sizeof(Match(\$actor, "pencil")) == 0)) \{                      
  EmitTo(\$actor, "You need a pencil to draw with.");                      
  return FALSE;                      
\}

if(\$this."trait:brief") \{
  EmitTo(\$actor, Describe(\$this, nil, \$actor) + " has already been used.");
  return FALSE;
\}

if(\$this."base:environment" != \$actor) \{
  EmitTo(\$actor, "You must be holding " + Describe(\$this, nil, \$actor) + " to draw on it.");
  return FALSE;
\}
                
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:paint-iob">
         X[M] if((sizeof(Match(\$actor, "paint")) == 0) \&\& (sizeof(Match(\$actor, "paintbrush")) == 0)) \{                      
  EmitTo(\$actor, "You need a paintbrush and some paint.");                      
  return FALSE;                      
\} else if(sizeof(Match(\$actor, "paintbrush")) == 0) \{                      
  EmitTo(\$actor, "You need a paintbrush.");                      
  return FALSE;                      
\} else if(sizeof(Match(\$actor, "paint")) == 0) \{                      
  EmitTo(\$actor, "You need some paint.");                      
  return FALSE;                      
\}     

if(\$this."trait:brief") \{
  EmitTo(\$actor, Describe(\$this, nil, \$actor) + " has already been used.");
  return FALSE;
\}

if(\$this."base:environment" != \$actor) \{
  EmitTo(\$actor, "You must be holding " + Describe(\$this, nil, \$actor) + " to paint on it.");
  return FALSE;
\}

return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:draw-iob">
         X[M] if(\$dob \&\& NRefOb(\$dob[0])) \{
    Call(\$\{Allegory:Lib:Crafting:Custom:Canvas\}, "draw", \$canvas: \$this, \$brief: Describe(\$dob[0]));
    return TRUE;
\} else \{
    EmitTo(\$actor, "http://ironclaw.skotos.net/SAM/Prop/Allegory%3ALib%3ACrafting%3ACustom%3ACanvas/html:index?action=draw\&actor=" + url_encode(name(\$actor))  + "\&canvas=" + url_encode(name(\$this)));
\$delay(0.01, FALSE, "aa9c");
    Popup(\$actor, \$\{Allegory:Lib:Crafting:Custom:Canvas\}, "html:index", \$actor: \$actor, \$action: "draw", \$canvas: \$this, \$using: \$using);
\}
      </Core:Property>
      <Core:Property property="merry:react:paint-iob">
         X[M] if(\$dob \&\& NRefOb(\$dob[0])) \{
    Call(\$\{Allegory:Lib:Crafting:Custom:Canvas\}, "paint", \$canvas: \$this, \$brief: Describe(\$dob[0]));
    return TRUE;
\} else \{
    EmitTo(\$actor, "http://game.allegoryofempires.com/SAM/Prop/Allegory%3ALib%3ACrafting%3ACustom%3ACanvas/html:index?action=paint\&actor=" + url_encode(name(\$actor))  + "\&canvas=" + url_encode(name(\$this)));
\$delay(0.01, FALSE, "5820"); 
    Popup(\$actor, \$\{Allegory:Lib:Crafting:Custom:Canvas\}, "html:index", \$actor: \$actor, \$action: "paint", \$canvas: Str(\$this), \$using: Str(NRefOb(\$using[0])));
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1502923708, "jominey", "E", 1502923832, "jominey", "E", 1502923900, "jominey", "E", 1502923970, "jominey", "E", 1502923999, "jominey", "E", 1502924661, "jominey", "E", 1502924868, "jominey", "E", 1502924892, "jominey", "E", 1502924909, "jominey", "E", 1502925005, "jominey", "E", 1502925025, "jominey", "E", 1502925436, "jominey", "E", 1502925483, "jominey", "E", 1502925989, "jominey", "E", 1502926013, "jominey", "E", 1502926926, "jominey", "E", 1502926952, "jominey", "E", 1502927426, "jominey", "E", 1502927459, "jominey", "E", 1502933607, "jominey", "E", 1502933625, "jominey", "E", 1502935770, "jominey", "K", 1560353595, "jominey", "E", 1560353651, "jominey", "E", 1572304318, "jominey", "E", 1572304473, "jominey", "E", 1572493473, "jominey", "E", 1572493517, "jominey", "E", 1572493619, "jominey", "E", 1572493929, "jominey", "E", 1573693143, "jominey", "E", 1573693201, "jominey", "E", 1606100996, "jominey", "P", 1617928290, "ezralee", "K", 1624550949, "sendnoodlez", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
