<object clone="/base/obj/thing" owner="morwenlorelie">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.02" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vial"/>
            <Base:SName sname="bottle"/>
            <Base:SName sname="salt"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bottles"/>
            <Base:PName pname="vials"/>
            <Base:PName pname="salts"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="smelling"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) vial of $(this.trait:variation) smelling salts
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:color) vial of $(this.trait:variation) smelling salts with a $(this.trait:material) stopper.<sbr/> There seems to be enough salts for another $(this.trait:quantity) applications.
          </Base:Description>
          <Base:Description type="glance">
             A $(this.trait:color) vial of $(this.trait:variation) smelling salts.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) vial of $(this.trait:variation) smelling salts with a stopper.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="stopper" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stopper"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="stoppers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) stopper
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:material) stopper.
          </Base:Description>
          <Base:Description type="glance">
             A stopper.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:material) stopper.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         1000
      </Core:Property>
      <Core:Property property="export:objecttype:oil">
         1
      </Core:Property>
      <Core:Property property="export:trait:color">
         "crystal"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "gold"
      </Core:Property>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "sour lemon"
      </Core:Property>
      <Core:Property property="export:trait:variation">
         "Lemon"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."export:trait:material" = oneof( "silver", "gold", "pewter", "nickel", "brass", "cork", "rubber", "glass", "crystal", "clay", "rag" ); \$this."export:trait:color" = oneof( "bronze", "pewter", "copper", "silver", "gold", "iron", "clay", "glass", "crystal" ); return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:apply-dob">
         X[M] \$victim = \$iob;  
if(\$victim \&\& (sizeof(\$victim) == 1)) \{  
  
  
EmitIn( \$actor."base:environment", Describe(\$actor)+" dabs "+Describe(this)+" on " +Describe(\$victim, \$actor)+ ".", \$actor );  
EmitTo( \$actor, "You dab "+Describe(this)+" on " +Describe(\$victim, nil, \$actor)+ "." );  
  
/*\$actor."trait:smell" = \$this."trait:smell";  
\$actor."trait:taste" = "of " +\$this."trait:smell";*/  
  
  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);  
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});  
  
  
  \$this."trait:quantity" -= 1;  
  if(\$this."trait:quantity" == 0) \{  
    \$delay(0.1, FALSE, "4cbf");  
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");  
    Slay(\$this);  
  \}  
  
  
/* this part references the effect library*/  
\$target = NRefOb(\$iob[0]);   
\$paste = \$this;  
Call(\$\{Ironclaw:Props:Herbalism:EffectLib\}, "effect");  
  return FALSE;  
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{  
  EmitTo( \$actor, "You may only dab " +Describe(this)+" on one thing at a time." );  
  return FALSE;  
\} else \{  
  EmitTo( \$actor, "What do you intend to dab " +Describe(this)+" on?" );  
  return FALSE;  
\}  
  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:dab-dob">
         X[M] \$victim = \$iob;  
if(\$victim \&\& (sizeof(\$victim) == 1)) \{  
EmitIn( \$actor."base:environment", Describe(\$actor)+" dabs "+Describe(this)+" on " +Describe(\$victim, \$actor)+ ".", \$actor );  
EmitTo( \$actor, "You dab "+Describe(this)+" on " +Describe(\$victim, nil, \$actor)+ "." );  
/*\$actor."trait:smell" = \$this."trait:smell";  
\$actor."trait:taste" = "of " +\$this."trait:smell";*/  
  
  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);  
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});  
  
  \$this."trait:quantity" -= 1;  
  if(\$this."trait:quantity" == 0) \{  
    \$delay(0.1, FALSE, "70d9");  
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");  
    Slay(\$this);  
  \}  
/* this part references the effect library*/  
\$target = NRefOb(\$iob[0]);   
\$paste = \$this;  
Call(\$\{Ironclaw:Props:Herbalism:EffectLib\}, "effect");  
  return FALSE;  
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{  
  EmitTo( \$actor, "You may only dab " +Describe(this)+" on one thing at a time." );  
  return FALSE;  
\} else \{  
  EmitTo( \$actor, "What do you intend to dab " +Describe(this)+" on?" );  
  return FALSE;  
\}  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:dab-using">
         X[M] \$victim = \$dob;  
if(\$victim \&\& (sizeof(\$victim) == 1)) \{  
EmitIn( \$actor."base:environment", Describe(\$actor)+" dabs "+Describe(this)+" on " +Describe(\$victim, \$actor)+ ".", \$actor );  
EmitTo( \$actor, "You dab "+Describe(this)+" on " +Describe(\$victim, nil, \$actor)+ "." );  
/*\$actor."trait:smell" = \$this."trait:smell";  
\$actor."trait:taste" = "of " +\$this."trait:smell";*/  
  
  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);  
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});  
  
  \$this."trait:quantity" -= 1;  
  if(\$this."trait:quantity" == 0) \{  
    \$delay(0.1, FALSE, "67f1");  
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");  
    Slay(\$this);  
  \}  
/* this part references the effect library*/  
\$target = NRefOb(\$dob[0]);   
\$paste = \$this;  
Call(\$\{Ironclaw:Props:Herbalism:EffectLib\}, "effect");  
  return FALSE;  
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{  
  EmitTo( \$actor, "You may only dab " +Describe(this)+" on one thing at a time." );  
  return FALSE;  
\} else \{  
  EmitTo( \$actor, "What do you intend to dab " +Describe(this)+" on?" );  
  return FALSE;  
\}  
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:variation">
         X[M] return Call(\$\{Ironclaw:Lib:Crafting:Lib\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1318270325, "morwenlorelie", "K", 1318270482, "morwenlorelie", "X", 1318270676, "morwenlorelie", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:effect">"aloe"</Core:Property>
      <Core:Property property="trait:quantity">10</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
