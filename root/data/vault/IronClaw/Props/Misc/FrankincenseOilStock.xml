<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Misc:Oils:UrOilStock)"/>
    <Base:Bulk immobile="false" mass="0.02" density="10.5"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vial"/>
            <Base:SName sname="bottle"/>
            <Base:SName sname="container"/>
            <Base:SName sname="stock"/>
            <Base:SName sname="oil"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bottles"/>
            <Base:PName pname="vials"/>
            <Base:PName pname="containers"/>
            <Base:PName pname="stocks"/>
            <Base:PName pname="oils"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="frankincense"/>
          <Base:Adjective adjective="oil"/>
          <Base:Adjective adjective="stock"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:material) stock of $(this.trait:variation) oil
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:material) stock of $(this.trait:variation) oil.<sbr/>
There seems to be enough oil for another $(this.trait:quantity) applications.
          </Base:Description>
          <Base:Description type="glance">
             A $(this.trait:material) stock of $(this.trait:variation) oil.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:material) stock of $(this.trait:variation) oil.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         1000
      </Core:Property>
      <Core:Property property="export:trait:material"/>
      <Core:Property property="export:trait:quantity">
         10
      </Core:Property>
      <Core:Property property="export:trait:smell">
         "a woody, spicy, and haunting aroma"
      </Core:Property>
      <Core:Property property="export:trait:variation">
         "blessed frankincense"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."export:trait:material" = oneof( "silver", "gold", "pewter", "nickel", "brass", "cork", "rubber", "glass", "crystal", "clay", "rag" ); return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:anoint-using">
         X[M] \$victim = \$dob;
if(\$victim \&\& (sizeof(\$victim) == 1)) \{
EmitIn( \$actor."base:environment", Describe(\$actor)+" anoints "+Describe(\$victim, \$actor)+" with " +Describe(this)+ ".", \$actor );
EmitTo( \$actor, "You anoint "+Describe(\$victim, nil, \$actor)+" with " +Describe(this)+ "." );
/*\$actor."trait:smell" = \$this."trait:smell";
\$actor."trait:taste" = "of " +\$this."trait:smell";*/

  if(!NRefOb(\$victim[0])."trait:smells") NRefOb(\$victim[0])."trait:smells" = ([ ]);
  NRefOb(\$victim[0])."trait:smells"[\$this."trait:smell"] = (\{ 30, time() \});

  \$this."trait:quantity" -= 1;
  if(\$this."trait:quantity" == 0) \{
    \$delay(0.1, FALSE, "656d");
    EmitTo(\$actor, Describe(\$this, nil, \$actor)+" has run out.");
    Slay(\$this);
  \}
  return FALSE;
\} else if(\$iob \&\& (sizeof(\$iob) \>= 1)) \{
  EmitTo( \$actor, "You may only use " +Describe(this)+" for anointment on one thing at a time." );
  return FALSE;
\} else \{
  EmitTo( \$actor, "Whom do you intend to anoint with " +Describe(this)+" ?" );
  return FALSE;
\}
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:variation">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1127923051, "tunk_bodin", "X", 1127923345, "tunk_bodin", "X", 1127923680, "tunk_bodin", "X", 1127923815, "tunk_bodin", "X", 1127924823, "tunk_bodin", "X", 1127930010, "tunk_bodin", "X", 1127968158, "tunk_bodin", "X", 1127968319, "tunk_bodin", "X", 1127969815, "tunk_bodin", "X", 1127970910, "tunk_bodin", "X", 1127971625, "tunk_bodin", "E", 1128056257, "tunk_bodin", "X", 1129048001, "tunk_bodin", "E", 1129771495, "tunk_bodin", "S", 1129773643, "tunk_bodin", "S", 1129787113, "tunk_bodin", "X", 1136586185, "tunk_bodin", "X", 1136707572, "tunk_bodin", "X", 1136709214, "tunk_bodin", "X", 1136709377, "tunk_bodin", "X", 1136709513, "tunk_bodin", "X", 1136709537, "tunk_bodin", "X", 1136709687, "tunk_bodin", "X", 1136709792, "tunk_bodin", "X", 1136709831, "tunk_bodin", "X", 1136709873, "tunk_bodin", "X", 1136710143, "tunk_bodin", "X", 1136710275, "tunk_bodin", "X", 1136710300, "tunk_bodin", "X", 1136710401, "tunk_bodin", "X", 1136712272, "tunk_bodin", "X", 1136758055, "roccon", "X", 1136758058, "tunk_bodin", "X", 1136758068, "roccon", "X", 1136773668, "tunk_bodin", "X", 1136774912, "tunk_bodin", "X", 1136776335, "tunk_bodin", "X", 1138914440, "tunk_bodin", "X", 1138921460, "tunk_bodin", "X", 1196728139, "slurpeeslurp", "E", 1196728159, "slurpeeslurp", "E", 1196728241, "slurpeeslurp", "E", 1196728292, "slurpeeslurp", "E", 1196728369, "slurpeeslurp", "E", 1203797120, "slurpeeslurp", "E", 1203797386, "slurpeeslurp", "E", 1205833522, "slurpeeslurp", "E", 1205833522, "slurpeeslurp", "E", 1205833565, "slurpeeslurp", "E", 1205833587, "slurpeeslurp", "E", 1205833607, "slurpeeslurp", "E", 1251200930, "slurpeeslurp", "R", 1251201037, "slurpeeslurp", "E", 1251201117, "slurpeeslurp", "E", 1251201130, "slurpeeslurp", "E", 1251201141, "slurpeeslurp", "E", 1251201161, "slurpeeslurp", "E", 1251201297, "slurpeeslurp", "E", 1251202851, "slurpeeslurp", "E", 1251202894, "slurpeeslurp", "E", 1251202958, "slurpeeslurp", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:quantity">10</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
