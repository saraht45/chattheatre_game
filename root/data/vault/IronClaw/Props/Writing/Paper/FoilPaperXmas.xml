<object clone="/base/obj/thing" owner="slurpeeslurp">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.02" density="0.9"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="objskin" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="paper"/>
            <Base:SName sname="foil"/>
            <Base:SName sname="foil paper"/>
            <Base:SName sname="sheet"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="papers"/>
            <Base:PName pname="foils"/>
            <Base:PName pname="sheets"/>
            <Base:PName pname="foil papers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="foil"/>
          <Base:Adjective adjective="sheet"/>
          <Base:Adjective adjective="shiny"/>
          <Base:Adjective adjective="thin"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             thin shiny sheet of $(this.trait:color) foil paper
          </Base:Description>
          <Base:Description type="examine">
             A thin and shiny sheet of $(this.trait:color) foil paper. It is most often used for folding into objects or as a decoration.
          </Base:Description>
          <Base:Description type="look">
             A thin and shiny sheet of $(this.trait:color) foil paper.
          </Base:Description>
          <Base:Description type="pbrief">papers</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="100"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties>
      <Base:InitialProperty property="bilbo:inherit:react:chant">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:cite">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:instruct">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:orate">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:preach">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:recite">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:sing">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="bilbo:inherit:react:translate">
         \<Generic:DB:ScrollDB\>
      </Base:InitialProperty>
      <Base:InitialProperty property="writable">
         "1"
      </Base:InitialProperty>
    </Base:InitialProperties>
    <Core:Properties>
      <Core:Property property="bilbo:inherit:react:chant">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:cite">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:instruct">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:orate">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:preach">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:recite">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:sing">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:inherit:react:translate">
         \<Generic:DB:ScrollDB\>
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh">
         "run"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0010">
         "set this.scrollrefreshtemp to \$lookup(Generic:DB:ScrollDB)"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0020">
         "set this.bilbo:inherit:react:chant to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0030">
         "set this.bilbo:inherit:react:cite to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0040">
         "set this.bilbo:inherit:react:instruct to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0050">
         "set this.bilbo:inherit:react:sing to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0060">
         "set this.bilbo:inherit:react:orate to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0070">
         "set this.bilbo:inherit:react:preach to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0080">
         "set this.bilbo:inherit:react:recite to this.scrollrefreshtemp"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0090">
         "set this.bilbo:inherit:react:translate to nil"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0100">
         "set writable 1"
      </Core:Property>
      <Core:Property property="bilbo:solo:refresh:0110">
         "set this.scrollrefreshtemp to nil"
      </Core:Property>
      <Core:Property property="export:nip:item:cost">
         0
      </Core:Property>
      <Core:Property property="export:trait:trash">1</Core:Property>
      <Core:Property property="merry:act:start">
         X[M] \$this."trait:color" = oneof( "gold", "bronze-colored", "silver", "silvery-white", "copper-colored", "holly red", "silvery-green", "silvery-blue", "glacier blue", "snow white", "pure white", "silvery-snow", "pale aureate", "cranberry red" ); return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:hang-dob">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1)) \{                      
  if(NRefOb(\$iob[0])."base:volition")                      
    return TRUE;                      
                      
  if(NRefOb(\$iob[0])."base:environment") \{                      
    \$this."base:environment" = NRefOb(\$iob[0])."base:environment";                      
  \} else \{                      
    \$this."base:environment" = NRefOb(\$iob[0]);                      
  \}                      
  \$this."base:proximity" = \$iob[0];                      
  \$this."base:stance" = 6;                      
  \$this."base:preposition" = 8;                      
\}                      
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react:fold-dob">
         X[M] /* fold foil paper into a paper animal */

/* what random origami can be made? */
\$items = (\{
\$\{IronClaw:Props:Origami:Saint\},
\$\{IronClaw:Props:Origami:HollyLeaf\},
\$\{IronClaw:Props:Origami:Bell\},
\$\{IronClaw:Props:Origami:Sleigh\},
\$\{IronClaw:Props:Origami:XmasTree\},
\$\{IronClaw:Props:Origami:4PointStar\},
\$\{IronClaw:Props:Origami:TeddyBear\},
\$\{IronClaw:Props:Origami:Heart\},
\$\{IronClaw:Props:Origami:Snowflake\}
\});

/* sanity check */
if(sizeof(\$dob) != 1) return TRUE;
if(\$iob) return TRUE;

/* create the item, and set the colour to match the paper */
\$items -= (\{ nil \});
\$item = \$items[random(sizeof(\$items))];
\$item = Spawn(\$item);
\$item."trait:color" = this."trait:color";

/* emote the folding */
EmitTo(\$actor, "You fold "+Describe(this, nil, \$actor)+" into "+Describe(\$item, nil, \$actor)+".");
EmitIn(\$actor."base:environment", Describe(\$actor)+" folds "+Describe(this, \$actor)+" into "+Describe(\$item, \$actor)+".", \$actor);

\$item."base:environment" = \$actor;
/* could the actor hold the item? */
if(!\$item."base:environment")
 \$item."base:environment" = \$actor."base:environment";
if(!\$item."base:environment")
 Slay(\$item);

/* destroy the paper that was used up */
Slay(this);

return FALSE;
      </Core:Property>
      <Core:Property property="misc:lastdopped">
         "1048692858 /usr/SkotOS/merry/fe76fdbb6793c3e6fedfa42659af22d0"
      </Core:Property>
      <Core:Property property="nip:item:cost">0</Core:Property>
      <Core:Property property="no:slay">1</Core:Property>
      <Core:Property property="revisions">
         (\{ 1170616929, "necate", "E", 1230086631, "slurpeeslurp", "E", 1230087226, "tonyd", "P", 1230087306, "tonyd", "P", 1230087552, "tonyd", "P", 1230087602, "tonyd", "P", 1230087634, "tonyd", "P", 1230087641, "tonyd", "P", 1230088224, "slurpeeslurp", "E", 1230088482, "slurpeeslurp", "E", 1230088708, "slurpeeslurp", "E", 1230089016, "slurpeeslurp", "E", 1230089378, "slurpeeslurp", "E", 1230089566, "slurpeeslurp", "E", 1230089705, "slurpeeslurp", "E", 1230089919, "slurpeeslurp", "E", 1230090204, "slurpeeslurp", "E", 1230090293, "slurpeeslurp", "E", 1230090355, "slurpeeslurp", "E", 1261648418, "haystack", "E", 1261648904, "haystack", "E", 1261648993, "haystack", "E", 1261650522, "slurpeeslurp", "E", 1261650725, "slurpeeslurp", "E", 1261651165, "slurpeeslurp", "E", 1638501563, "ezralee", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">100.0</Core:Property>
      <Core:Property property="trait:trash">1</Core:Property>
      <Core:Property property="volition">0</Core:Property>
      <Core:Property property="writable">"1"</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="966637404" state="Open" user="michaelb">
           The basic, original scroll.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
