<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Furniture:UrFurniture)"/>
    <Base:Bulk immobile="false" mass="0.03" density="6"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="lying" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="false" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toy"/>
            <Base:SName sname="thing"/>
            <Base:SName sname="plaything"/>
            <Base:SName sname="yo"/>
            <Base:SName sname="yoyo"/>
            <Base:SName sname="yo-yo"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="yoyos"/>
            <Base:PName pname="things"/>
            <Base:PName pname="toys"/>
            <Base:PName pname="playthings"/>
            <Base:PName pname="yos"/>
            <Base:PName pname="yo-yos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toy"/>
          <Base:Adjective adjective="wood"/>
          <Base:Adjective adjective="wooden"/>
          <Base:Adjective adjective="yo"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? | $(this.trait:engraving) | {? | $(this.trait:engraving:pattern) | $(this.trait:engraving:pattern)} engraved } $(this.trait:color) $(this.trait:material) yo-yo
          </Base:Description>
          <Base:Description type="examine">
             The yo-yo is created by two pieces of wood connected by a single post. A string is securely attached to the post and the free end has been tied into a little loop. Each half of the toy is a simple disk that has a convex curve which faces away from the center. This plaything can simply spin downward and return to the hand of the owner or be manipulated into several tricky maneuvers. The string $[if($this."trait:wound" == 1) { return "is tightly wound around the center of the yo-yo"; } else if ($this."trait:wound" == 2) { return "hangs loosely and uselessly from the yo-yo's central post"; } else { return "appears to have some OOC coding issues, please give a precise report to the game staff"; }]. $(this.trait:engraving).
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) $(this.trait:material) yo-yo with accompanying string. The string is attached securely to the center post of the toy and the free end has a small loop. $(this.trait:engraving).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="loop" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="loop"/>
            <Base:SName sname="ring"/>
            <Base:SName sname="circle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="loops"/>
            <Base:PName pname="rings"/>
            <Base:PName pname="circles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="string"/>
          <Base:Adjective adjective="strings"/>
          <Base:Adjective adjective="toys"/>
          <Base:Adjective adjective="yoyos"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a tiny loop on the end of a yo-yo's string
          </Base:Description>
          <Base:Description type="examine">
             The tiny loop on the end of a $(this.trait:color) $(this.trait:material) yo-yo's string. It is meant for the owner's finger and allows one to maintain control of this toy.
          </Base:Description>
          <Base:Description type="look">
             The tiny loop on the end of a $(this.trait:color) $(this.trait:material) yo-yo's string.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="post" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="post"/>
            <Base:SName sname="dowel"/>
            <Base:SName sname="middle"/>
            <Base:SName sname="center"/>
            <Base:SName sname="core"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="posts"/>
            <Base:PName pname="dowels"/>
            <Base:PName pname="middles"/>
            <Base:PName pname="centers"/>
            <Base:PName pname="cores"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toys"/>
          <Base:Adjective adjective="yoyos"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the central post of a $(this.trait:color) $(this.trait:material) yo-yo
          </Base:Description>
          <Base:Description type="examine">
             The central post of a $(this.trait:color) $(this.trait:material) yo-yo connects the two split halves of this toy and is the anchor for the string. It is barely visible from the outside.
          </Base:Description>
          <Base:Description type="look">
             The central post of a $(this.trait:color) $(this.trait:material) yo-yo connects the two split halves of this toy and is the anchor for the string.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="string" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="string"/>
            <Base:SName sname="thread"/>
            <Base:SName sname="tether"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="strings"/>
            <Base:PName pname="threads"/>
            <Base:PName pname="tethers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toys"/>
          <Base:Adjective adjective="yoyos"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             a $(this.trait:color) $(this.trait:material) yo-yo's string
          </Base:Description>
          <Base:Description type="examine">
             The string of a $(this.trait:color) $(this.trait:material) yo-yo. One end is attached to the central post of the toy and the other is tied into a minor loop. This little string is a vital part of what makes the yo-yo work. The string $[if($this."trait:wound" == 1) { return "is tightly wound around the center of the yo-yo"; } else if ($this."trait:wound" == 2) { return "hangs loosely and uselessly from the yo-yo's central post"; } else { return "appears to have some OOC coding issues, please give a precise report to the game staff"; }].
          </Base:Description>
          <Base:Description type="look">
             The string of a $(this.trait:color) $(this.trait:material) yo-yo. One end is attached to the central post of the toy and the other is tied into a minor loop.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:color">
         "pale"
      </Core:Property>
      <Core:Property property="export:trait:material">
         "wood"
      </Core:Property>
      <Core:Property property="export:trait:wound">1</Core:Property>
      <Core:Property property="merry:react-pre:release-dob">
         X[M] if(\$this."trait:wound" != 1) \{              
EmitTo(\$actor, "The yo-yo requires winding before you may play with it effectively.");             
return FALSE;              
\}              
EmitTo(\$actor, "You release " +Describe(\$this, \$actor, \$actor)+ " with the flick of your wrist.");                      
EmitIn(\$actor."base:environment", Describe(\$actor)+ " releases " +Describe(\$this, \$actor)+ " with a flick of " +\$actor."base:possessive"+ " wrist.", \$actor);                      
\$delay(0.5, FALSE, "666");            
            
            
\$result = random(8)+1;                    
switch(\$result) \{                    
  case 1:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                           
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " remains spinning at the end of the string for a good length of time. You have performed a trick called the 'sleeper'. With a simple jerk of your wrist, the yo-yo returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " remains spinning at the end of the string for a good length of time. " +Describe(\$actor)+ " has performed a trick called the 'sleeper'. With a simple jerk of " +\$actor."base:possessive"+ " wrist, the yo-yo returns to " +\$actor."base:possessive"+ " palm.", \$actor);                    
    break;                    
  case 2:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                               
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " swiftly reverses direction but snags while attempting to return to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " swiftly reverses direction but snags while attempting to return to " +\$actor."base:possessive"+ " palm.", \$actor);  
\$this."trait:wound" = 2;                  
    break;                    
  case 3:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                                
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " remains spinning at the end of the string for a good length of time. You have performed a trick called the 'sleeper'. You lower your hand and allow the revolving toy to lightly roll across the ground in order to complete the 'walk the skink' maneuver. With a simple jerk of your wrist, the yo-yo returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " remains spinning at the end of the string for a good length of time. " +Describe(\$actor)+ " has performed a trick called the 'sleeper'. " +capitalize(\$actor."trait:nominative")+ " lowers " +\$actor."base:possessive"+ " hand and allows the revolving toy to lightly roll across the ground in order to complete the 'walk the skink' maneuver. With a simple jerk of " +\$actor."base:possessive"+ " wrist, the yo-yo returns to " +\$actor."base:possessive"+ " palm.", \$actor);                 
    break;                    
  case 4:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                             
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " remains spinning at the end of the string for a good length of time. You have performed a trick called the 'sleeper'. You lower your hand and allow the revolving toy to lightly roll across the ground in order to complete the 'walk the skink' maneuver but it spins out of control before falling limp and lifeless.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " remains spinning at the end of the string for a good length of time. " +Describe(\$actor)+ " has performed a trick called the 'sleeper'. " +capitalize(\$actor."trait:nominative")+ " lowers " +\$actor."base:possessive"+ " hand and allows the revolving toy to lightly roll across the ground in order to complete the 'walk the skink' maneuver but it spins out of control before falling limp and lifeless.", \$actor);           
\$this."trait:wound" = 2;            
    break;                    
  case 5:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                             
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " remains spinning at the end of the string for a good length of time. You have performed a trick called the 'sleeper'. While the plaything is in this state, you add a bit of centrifugal force along the string which causes it to revolve completely overhead and return to its original position. This is called 'around the island'. With a simple jerk of your wrist, the yo-yo returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " remains spinning at the end of the string for a good length of time. " +Describe(\$actor)+ " has performed a trick called the 'sleeper'. While the plaything is in this state, " +\$actor."trait:nominative"+ " adds a bit of centrifugal force along the string which causes it to revolve completely overhead and return to its original position. This is called 'around the island'. With a simple jerk of " +\$actor."base:possessive"+ " wrist, the yo-yo returns to " +\$actor."base:possessive"+ " palm.", \$actor);                    
    break;                    
  case 6:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                                
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " remains spinning at the end of the string for a good length of time. You have performed a trick called the 'sleeper'. While the plaything is in this state, you add a bit of centrifugal force while attempting the 'around the island' trick. Sadly, the manuever fails and the yo-yo gets tangled up.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " remains spinning at the end of the string for a good length of time. " +Describe(\$actor)+ " has performed a trick called the 'sleeper'. While the plaything is in this state, " +\$actor."trait:nominative"+ " adds a bit of centrifugal force while attempting the 'around the island' trick. Sadly, the manuever fails and the yo-yo gets tangled up.", \$actor);      
\$this."trait:wound" = 2;              
    break;                    
  case 7:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                              
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to " +\$actor."base:possessive"+ " palm.", \$actor);                    
    break;                    
  case 8:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                               
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to " +\$actor."base:possessive"+ " palm.", \$actor);                    
    break;                    
  default:                    
EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " travels smoothly along its string, revolving easily to the end of the tether.");                               
EmitTo(\$actor, Describe(\$this, \$actor, \$actor)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to your palm.");                      
EmitIn(\$actor."base:environment", Describe(\$this)+ " swiftly reverses direction, the string coiling effortlessly at its center, and returns to " +\$actor."base:possessive"+ " palm.", \$actor);                     
\}             
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:wind-dob">
         X[M] if(\$this."trait:wound" == 1) \{           
EmitTo(\$actor, "The yo-yo's string is already tightly wound around its core.");           
return FALSE;           
\} else if(\$this."trait:wound" == 2) \{           
EmitTo(\$actor, "You deftly wind the string about the core of the yo-yo.");           
EmitIn(\$actor."base:environment", Describe(\$actor)+ " deftly winds the string around the core of " +\$actor."base:possessive"+ " yo-yo.", \$actor);           
\$this."trait:wound" = 1;          
return FALSE;           
\} else \{           
EmitTo(\$actor, "You are experiencing OOC string code issues, please report this experience to the game staff.");           
return FALSE;           
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1158380290, "tunk_bodin", "X", 1158380426, "tunk_bodin", "X", 1158380491, "tunk_bodin", "X", 1158380574, "tunk_bodin", "X", 1158380608, "tunk_bodin", "X", 1158380664, "tunk_bodin", "X", 1158380689, "tunk_bodin", "X", 1158380765, "tunk_bodin", "X", 1158380814, "tunk_bodin", "X", 1158380869, "tunk_bodin", "X", 1158381223, "tunk_bodin", "X", 1158381300, "tunk_bodin", "X", 1158381583, "tunk_bodin", "X", 1158381642, "tunk_bodin", "X", 1158382203, "tunk_bodin", "X", 1158382603, "tunk_bodin", "X", 1158382631, "tunk_bodin", "X", 1158382658, "tunk_bodin", "X", 1158382741, "tunk_bodin", "X", 1158382785, "tunk_bodin", "X", 1158382865, "tunk_bodin", "X", 1158383075, "tunk_bodin", "X", 1158383102, "tunk_bodin", "X", 1158383666, "tunk_bodin", "X", 1158384007, "tunk_bodin", "X", 1158384268, "tunk_bodin", "X", 1158384403, "tunk_bodin", "X", 1158384591, "tunk_bodin", "X", 1158384849, "tunk_bodin", "X", 1216772448, "tunk_bodin", "X", 1395414440, "slurpeeslurp", "E", 1402715045, "slurpeeslurp", "K", 1402715083, "slurpeeslurp", "K", 1402715136, "slurpeeslurp", "K", 1402715172, "slurpeeslurp", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
