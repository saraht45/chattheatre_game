<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Staff:Angelo:Chatters:Mainbody5)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="1"/>
    <Base:Misc gender="male" volition="false" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rat"/>
            <Base:SName sname="skeletal"/>
            <Base:SName sname="man"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="rats"/>
            <Base:PName pname="men"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="miniature"/>
          <Base:Adjective adjective="sinewy"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:title) | none ||$(this.trait:title) }$(this.trait:superbrief){? | $(this.death:dead) | (Deceased)}
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.trait:override:examine) | $(this.trait:override:examine) | $(this.trait:examine) }
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.trait:override:look) | $(this.trait:override:look) | $(this.trait:look) }
          </Base:Description>
          <Base:Description type="worn">
             skeletal rat, clinging easily around his neck
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="breasts" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="bones"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bloody"/>
          <Base:Adjective adjective="pure white"/>
          <Base:Adjective adjective="tendoned"/>
        </Base:Adjectives>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="left-breast" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="left-hand" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="neck" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="right-breast" prime="false" def="false" abstract="false" hidden="true" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tattoo" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tattoo"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tattoos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions/>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="neck"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="alteration:ignorealterationchecks">
         1
      </Core:Property>
      <Core:Property property="appearance:body">
         "skeletal"
      </Core:Property>
      <Core:Property property="appearance:build">
         "sinewy"
      </Core:Property>
      <Core:Property property="appearance:butt">
         "tailed"
      </Core:Property>
      <Core:Property property="appearance:cheekshape">
         "gaunt"
      </Core:Property>
      <Core:Property property="appearance:clawapp">
         "tapered"
      </Core:Property>
      <Core:Property property="appearance:clawlength">
         "bony"
      </Core:Property>
      <Core:Property property="appearance:clawtype">
         "claws"
      </Core:Property>
      <Core:Property property="appearance:earshape">
         "alert"
      </Core:Property>
      <Core:Property property="appearance:eyecolor">
         "flickering red"
      </Core:Property>
      <Core:Property property="appearance:eyeshape">
         "probing"
      </Core:Property>
      <Core:Property property="appearance:facialhair">
         "none"
      </Core:Property>
      <Core:Property property="appearance:feet">
         "bony"
      </Core:Property>
      <Core:Property property="appearance:furcolor">
         "pure white"
      </Core:Property>
      <Core:Property property="appearance:furlength">
         "tendoned"
      </Core:Property>
      <Core:Property property="appearance:furtexture">
         "bloody"
      </Core:Property>
      <Core:Property property="appearance:furtype">
         "bones"
      </Core:Property>
      <Core:Property property="appearance:hands">
         "bony"
      </Core:Property>
      <Core:Property property="appearance:height">
         "miniature"
      </Core:Property>
      <Core:Property property="appearance:jawshape">
         "distended"
      </Core:Property>
      <Core:Property property="appearance:legs">
         "scrawny"
      </Core:Property>
      <Core:Property property="appearance:lipshape">
         "sneering"
      </Core:Property>
      <Core:Property property="appearance:mouthshape">
         "long"
      </Core:Property>
      <Core:Property property="appearance:muscle">
         "corded"
      </Core:Property>
      <Core:Property property="appearance:noseshape">
         "snorting"
      </Core:Property>
      <Core:Property property="appearance:palm">
         "cracked"
      </Core:Property>
      <Core:Property property="appearance:skin">
         "scant"
      </Core:Property>
      <Core:Property property="appearance:stomach">
         "inexistant"
      </Core:Property>
      <Core:Property property="appearance:symbol">
         "a frost dragon bearing a scythe"
      </Core:Property>
      <Core:Property property="appearance:symbolcolor">
         "black and grey"
      </Core:Property>
      <Core:Property property="appearance:teeth">
         "extremely sharp and daunting"
      </Core:Property>
      <Core:Property property="appearance:tongue">
         "pink"
      </Core:Property>
      <Core:Property property="appearance:voice">
         "high and squeeky"
      </Core:Property>
      <Core:Property property="base:combat:weapon">
         \<[IronClaw:Staff:Angelo:Weapons:ScytheMini]#27730\>
      </Core:Property>
      <Core:Property property="client:theme">
         "p_manny_ic"
      </Core:Property>
      <Core:Property property="combat:actions:current">
         200
      </Core:Property>
      <Core:Property property="combat:damage">0</Core:Property>
      <Core:Property property="combat:injuries">
         ([  ])
      </Core:Property>
      <Core:Property property="export:trait:examine">
         "This skeletal rat is a miniature sinewy unknown, with tendoned, bloody pure white bones. Flickering red eyes are set above a snorting nose and a long mouth, complete with sneering lips. Bony tapered claws, on bony hands, and bony feet are also visible. You also note his alert  ears."
      </Core:Property>
      <Core:Property property="export:trait:look">
         "This skeletal rat is a miniature sinewy unknown, with tendoned, bloody pure white bones."
      </Core:Property>
      <Core:Property property="export:trait:nominative">
         "he"
      </Core:Property>
      <Core:Property property="export:trait:objective">
         "him"
      </Core:Property>
      <Core:Property property="export:trait:possessive">
         "his"
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "male"
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:enter%host">
         \<Lib:common\>
      </Core:Property>
      <Core:Property property="merry:inherit:act-post:teleport%host">
         \<Lib:common\>
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] /* Record what room the actor is in */                    
\$room = \$actor."Base:environment";                    
                    
/* Check if the actor is allowed to pick up the rat */                    
  /* check if \$actor is the rat's owner */                    
if(\$actor == \$this."trait:owner") \{                    
  /* if the actor is allowed to pick up the rat */                    
  /* tell the actor that they picked up the rat */                    
  /* tell the room that the actor picked up the rat */                    
  EmitTo(\$actor, "You pick up "+Describe(\$this)+".");                    
  EmitIn(\$room, Describe(\$actor)+" picks up "+ Describe(\$this)+".", \$actor);                    
  \$this."base:environment" = \$actor;                    
                    
\} else \{                    
  /* the actor is not the rats owner */                    
                    
  /* if the rat is already being held by someone */                    
  if(\$this."base:environment"."base:volition") \{                    
    /* use the normal give/take/offer code */                    
    return TRUE;                    
  \} else \{                    
    /* tell the actor that they can't take the rat */                    
    /* tell the room that the actor is a kidnapper! */                    
    EmitTo(\$actor, "That skeletal rat is not yours!");                    
    EmitIn(\$room, Describe(\$actor)+" attempts to kidnap "+ Describe(\$this)+". How dare "+ \$actor."base:objective" + "! Call the guards!", \$actor);                    
  \}                    
\}                    
                    
/* return false, so that the actor doesn't see a message about not being allowed to pick up the rat */                    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* check if we are the owner, or if we are carrying the rat */                    
if((\$actor != \$this."base:environment") \&\& (\$actor != \$this."trait:owner"))                    
\{                    
  /* we aren't allowed to give commands */                    
  EmitTo(\$actor, "You cannot control "+Describe(\$this)+" unless you are carrying "+\$this."base:objective"+".");                    
  return FALSE;                    
\}                    
                    
if(\$evoke) \{                    
                    
  /* If the actor gave a command */                    
  \$command = \$evoke[1..strlen(\$evoke)-2];                    
                    
  /* If the command is sift */                    
  if(\$command == "sift") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" sifts " + \$this."base:possessive" + " bony claws through all the living auras in the area.");                    
    \} else if(\$command == "grin") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" curls " + \$this."base:possessive" + " lips and grins evilly.");                    
    \} else if(\$command == "drop-me") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" growls for freedom from " + Describe(\$actor) + ".");                    
    \} else if(\$command == "tantrum") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" extends " + \$this."base:possessive" + " angry fists at " + Describe(\$actor) + " and throws a horrendous tantrum.");                    
  \} else if(\$command == "sleep") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" falls asleep or maybe not. Skeletal rats don't commonly sleep. Seems suspicious.", \$actor);                    
    EmitTo(\$actor, Describe(\$this) + " falls asleep or maybe not. Skeletal rats don't commonly sleep. Seems suspicious.");                    
    \} else if(\$command == "wiggle") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" wiggles adorably. How uncharacteristic.");         
    \} else if(\$command == "kiss") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" secretly kisses " + \$this."base:possessive" + " tiny bone scythe. Yes, kissed it. Seems kind of personal. What business is it of yours? You should not be watching such things anyhow. It may be best for everyone involved if you just act oblivious. Nothing happened, you didnt see a thing.");         
    \} else if(\$command == "lean") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" leans on " + \$this."base:possessive" + " tiny bone scythe. The bones creak ominously, the bluish nimbus flickers slightly, the souls of the dead are quietly observant.");         
    \} else if(\$command == "pet") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" contently walks " + \$this."base:possessive" + " claws over the blade of the tiny bone scythe. The tendrils of the glowing bluish nimbus wrap themselves among "+\$this."base:possessive"+" passing knuckles as the souls of the dead raise their voices in a sad tune of loss and despair.");         
    \} else if(\$command == "swing") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" swiftly swings " + \$this."base:possessive" + " tiny bone scythe, causing a bluish arc of light to split the air and emblazon itself on your retinas.");         
    \} else if(\$command == "scamper") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" fitfully tries to scamper off of " + \$actor."base:possessive" + " neck.");                    
  \} else if(\$command == "death") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+ " sniffs you haughtily and shifts " + \$this."base:possessive" + " eyes knowingly as the time of your death is revealed unto " + \$this."base:objective" + ".");                    
  \} else if(\$command == "master") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+ " scans the area for a hint of " + \$this."base:possessive" + " master.");                    
  \} else if(\$command == "hungry") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+ " salivates for food. Hide your soul.");                    
  \} else if(\$command == "no-kiss") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" turns " + \$this."base:possessive" + " head, an angry glare in " + \$this."base:possessive" + " eyes, as " +Describe(\$actor) +" tries to kiss " + \$this."base:objective" +".");                     
  \} else if(\$command == "coo") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this) + " distinctly refrains from making any sort of cooing sounds.");                    
  \} else if(\$command == "play") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this) + " gazes entertainedly at "+ \$actor."base:objective" + " as " + \$actor."base:pronoun" + " makes frightful faces.");                    
  \} else if(\$command == "peekaboo") \{                    
    EmitIn(\$actor."base:environment", Describe(\$this)+" certainly does not giggle as " + Describe(\$actor) + " repeatedly hides and reveals " + \$actor."base:possessive" + " face moronically.");                    
  \} else if(\$command == "attack") \{                    
    switch(random(4)) \{                    
      case 3:                    
        EmitTo(\$actor, Describe(\$this)+" attacks you barely as you poke at "+\$this."base:objective"+".");                    
        EmitIn(\$actor."base:environment", Describe(\$this)+" attacks " + Describe(\$actor) + " barely as " + Describe(\$actor) + " pokes at "+\$this."base:objective"+".", \$actor);                    
        break;                    
      case 2:                    
        EmitIn(\$actor."base:environment", Describe(\$this)+" sneers cruelly.");                    
        break;                    
      case 1:                    
        EmitIn(\$actor."base:environment", Describe(\$this)+" swings a fist with bloodlust in " + \$this."base:possessive" + " eyes.");                    
        break;                    
      case 0:                    
        EmitIn(\$actor."base:environment", Describe(\$this)+" lets out an earsplitting screech!");                    
        break;                    
      default:                    
        break;                    
    \}                     
  \} else \{                    
  EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: sift, grin, drop-me, tantrum, sleep, wiggle, scamper, death, master, hungry, no-kiss, coo, play, peekaboo, swing, pet, lean, kiss and attack.");                    
  \}                    
                    
\} else \{                    
                    
  /* If the actor did NOT give a command */                    
   EmitTo(\$actor, "You must include a command you want followed. Such as: control "+Describe(\$this, nil, \$actor)+ " 'grin'.");                    
                    
\}                    
return FALSE;
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:material">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:object">
         X[M] Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);                    
Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replacesname", \$object: this);                    
return TRUE;
      </Core:Property>
      <Core:Property property="misc:lastdropped">
         "1194309841 StoryBuilder Death[tunk_bodin]"
      </Core:Property>
      <Core:Property property="msg:teleportinfirst">
         "A swirl of dust forms a whirlwind, finally settling into your form."
      </Core:Property>
      <Core:Property property="msg:teleportinthird">
         "A swirl of dust forms a whirlwind, causing you to cough before finally settling into the form a miniature, black-cloaked skeletal rat."
      </Core:Property>
      <Core:Property property="msg:teleportoutfirst">
         "You fall to dust."
      </Core:Property>
      <Core:Property property="msg:teleportoutthird">
         "A black-hooded skeletal rat falls to dust before your eyes."
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1107209474, "zwoc", "E", 1126145857, "lunamoon", "E", 1126145897, "lunamoon", "E", 1126227834, "tonyd", "E", 1126229852, "tonyd", "E", 1126229886, "tonyd", "E", 1126229900, "tonyd", "E", 1131061519, "tunk_bodin", "X", 1131061555, "tunk_bodin", "X", 1131063374, "tunk_bodin", "X", 1131063667, "tunk_bodin", "X", 1131064141, "tunk_bodin", "X", 1131064279, "tunk_bodin", "X", 1131064521, "tunk_bodin", "X", 1131064632, "tunk_bodin", "X", 1131066140, "tunk_bodin", "X", 1131066682, "tunk_bodin", "X", 1131066739, "tunk_bodin", "X", 1131066876, "tunk_bodin", "X", 1131067477, "tunk_bodin", "X", 1131068288, "tunk_bodin", "X", 1131068623, "tunk_bodin", "X", 1131068689, "tunk_bodin", "X", 1131068704, "tunk_bodin", "X", 1131068907, "tunk_bodin", "X", 1131069292, "tunk_bodin", "X", 1131069414, "tunk_bodin", "X", 1131069462, "tunk_bodin", "X", 1131069893, "tunk_bodin", "X", 1131069969, "tunk_bodin", "X", 1131070387, "tunk_bodin", "X", 1131070807, "tunk_bodin", "X", 1131070879, "tunk_bodin", "S", 1131072186, "tunk_bodin", "S", 1131172381, "tunk_bodin", "X", 1131174081, "tunk_bodin", "X", 1131174416, "tunk_bodin", "X", 1133327477, "tunk_bodin", "S", 1133327532, "tunk_bodin", "S", 1133329214, "tunk_bodin", "S", 1194309482, "rorschakovacs", "S", 1194309489, "rorschakovacs", "S", 1194309491, "rorschakovacs", "S", 1194309549, "rorschakovacs", "S", 1287199902, "tunk_bodin", "X" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:seesmagic">1</Core:Property>
      <Core:Property property="storyhost">0</Core:Property>
      <Core:Property property="theatre:id">"IC"</Core:Property>
      <Core:Property property="theatre:notwhobody">1</Core:Property>
      <Core:Property property="theatreid">"IC"</Core:Property>
      <Core:Property property="trait:examine">
         "This skeletal rat is a miniature sinewy unknown, with tendoned, bloody pure white bones. Flickering red eyes are set above a snorting nose and a long mouth, complete with sneering lips. Bony tapered claws, on bony hands, and bony feet are also visible. You also note his alert  ears."
      </Core:Property>
      <Core:Property property="trait:look">
         "This skeletal rat is a miniature sinewy unknown, with tendoned, bloody pure white bones."
      </Core:Property>
      <Core:Property property="trait:object">
         "skeletal rat"
      </Core:Property>
      <Core:Property property="trait:override:examine">
         "This is a skeletal rat of glistening bones. Flickering red eyes are set above his nose and mouth, complete with sneering lips. Bony claws and alert ears are also visible."
      </Core:Property>
      <Core:Property property="trait:override:look">
         "This is a skeletal rat of glistening bones."
      </Core:Property>
      <Core:Property property="trait:owner">
         \<Chatters:IC:de:death\>
      </Core:Property>
      <Core:Property property="trait:ownerone">
         "\<Chatters:IC:gu:guinness"
      </Core:Property>
      <Core:Property property="trait:smell">"souls"</Core:Property>
      <Core:Property property="trait:smells:lastchecked">
         1194309573
      </Core:Property>
      <Core:Property property="trait:superbrief">
         "skeletal rat"
      </Core:Property>
      <Core:Property property="trait:taste">
         "of marrow"
      </Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
