<object clone="/base/obj/thing" owner="tunk_bodin">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.05" density="8"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="false" on="true" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="talkingstick"/>
            <Base:SName sname="stic"/>
            <Base:SName sname="stick"/>
            <Base:SName sname="thing"/>
            <Base:SName sname="object"/>
            <Base:SName sname="item"/>
            <Base:SName sname="stuff"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="talkingsticks"/>
            <Base:PName pname="sticks"/>
            <Base:PName pname="things"/>
            <Base:PName pname="items"/>
            <Base:PName pname="objects"/>
            <Base:PName pname="everything"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="carved"/>
          <Base:Adjective adjective="talking"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the talking stick
          </Base:Description>
          <Base:Description type="examine">
             The talking stick is a long dark wood stick used to determine who is in charge of a meeting, who may speak and who may not. Its a method of control and direction. Point the stick at someone who needs to be muted and they shall be. Point it at them again to unmute them.
          </Base:Description>
          <Base:Description type="look">
             The talking stick is a long dark wood stick used to determine who is in charge of a meeting, who may speak and who may not. Its a method of control and direction. Point the stick at someone who needs to be muted and they shall be. Point it at them again to unmute them.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:point-dob">
         X[M] if(!\$(iob-2)) return TRUE;
if(\$actor != \$this."base:environment") \{
  EmitTo(\$actor, "Yeah, nice try.");
  return FALSE;
\}
for(\$i=0;\$i\<sizeof(\$(iob-2));\$i++)\{
  \$victim = NRefOb(\$(iob-2)[\$i]);
  if(\$victim.mute) \{
    \$victim.mute = nil;
    EmitTo(\$victim, "You have been unmuted.");
    EmitTo( \$actor, "You have unmuted " +Describe(\$victim)+ "." );
    EmitIn( \$actor."base:environment", "Graciously, "+Describe(\$actor)+" unmutes "+Describe(\$victim)+".", \$actor, \$victim );
  \} else \{
    \$victim.mute = 1;
    EmitTo(\$victim, "You have been muted.");
    EmitTo( \$actor, "You have muted " +Describe(\$victim)+ "." );
    EmitIn( \$actor."base:environment", "Controllingly, "+Describe(\$actor)+" mutes "+Describe(\$victim)+".", \$actor, \$victim );
  \}
\}
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1136247485, "tunk_bodin", "X", 1136247498, "tunk_bodin", "X", 1136247634, "tunk_bodin", "X", 1136247845, "tunk_bodin", "X", 1136248070, "tunk_bodin", "X", 1136248325, "tunk_bodin", "X", 1136248447, "tunk_bodin", "X", 1136248553, "tunk_bodin", "X", 1136248591, "tunk_bodin", "X", 1136248631, "tunk_bodin", "X", 1136248763, "tunk_bodin", "X", 1136248791, "tunk_bodin", "X", 1136248842, "tonyd", "P", 1136248866, "tonyd", "P", 1136248923, "tonyd", "P", 1136248937, "tonyd", "P", 1136248949, "tonyd", "P", 1136249162, "tonyd", "P", 1136249189, "tonyd", "P", 1136249211, "tonyd", "P", 1136249254, "tonyd", "P", 1136249337, "tonyd", "P", 1151729911, "tonyd", "P" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
