<object clone="/base/obj/thing" owner="librarysage">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Allegory:Props:Crafting:UrCrafting)"/>
    <Base:Bulk immobile="false" mass="25" density="1.1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="dummy"/>
            <Base:SName sname="puppe"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="puppe"/>
            <Base:PName pname="dummies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="straw-filled"/>
          <Base:Adjective adjective="swordplay"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) swordplay puppe
          </Base:Description>
          <Base:Description type="examine">
             A $(this.trait:color) swordplay dummy. Its appearance is made to be that of a humanoid torso with a head both stuffed with straw, and a horizontal beam extending to either side of the figure for arms.  It has no legs, rather it rests on a thick wooden pole set to rotate in its base.  On the end of each of the arms is a leather bag filled with sand, so that someone who struck a dummy would need to avoid the rotating, ingenious in its simplicity.
          </Base:Description>
          <Base:Description type="glance">
             a $(this.trait:color) swordplay dummy.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) straw-filled swordplay dummy shaped like a person with arms outstetched.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="true">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arm"/>
            <Base:SName sname="beam"/>
            <Base:SName sname="pole"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="arms"/>
            <Base:PName pname="beams"/>
            <Base:PName pname="poles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             wooden arms of a dummy
          </Base:Description>
          <Base:Description type="examine">
             The wooden arms of a sword-play dummy.  Extending through the shoulders, they hold a heavy sandbag on either end.
          </Base:Description>
          <Base:Description type="glance">
             wooden arms
          </Base:Description>
          <Base:Description type="look">
             The wooden arms of a sword-play dummy.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="base-pole" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pole"/>
            <Base:SName sname="base"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="poles"/>
            <Base:PName pname="bases"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="base"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             base pole
          </Base:Description>
          <Base:Description type="examine">
             A rotating wooden pole making up the base of the dummy.
          </Base:Description>
          <Base:Description type="glance">
             A base pole.
          </Base:Description>
          <Base:Description type="look">
             A base pole of a dummy.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             sackcloth head of a dummy
          </Base:Description>
          <Base:Description type="examine">
             A sackcloth head of a dummy.
          </Base:Description>
          <Base:Description type="glance">
             A sackcloth head of a dummy.
          </Base:Description>
          <Base:Description type="look">
             A sackcloth head of a dummy.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="torso" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="true" on="true" inside="false" near="true" over="true" behind="true" before="true" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="torso"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="torsos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             straw-filled dummy's torso
          </Base:Description>
          <Base:Description type="examine">
             a straw-filled dummy's torso.
          </Base:Description>
          <Base:Description type="glance">
             a straw-filled dummy's torso.
          </Base:Description>
          <Base:Description type="look">
             a straw-filled dummy's torso.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react:hit-dob">
         X[M] \$delay(1, TRUE, "030f"); 
   switch(random(6)) \{ 
    case 0: \{ 
            \{ 
            EmitIn(\$this."base:environment", "A " +oneof("thump", "clunk")+ " echoes through " + Describe(\$this."base:environment") + " as " + Describe(\$actor) + " brings down " +\$actor."base:possessive"+ " weapon upon the " +oneof("head", "torso", "arm")+ " of " +Describe(\$this)+ "."); 
            \} 
    \} break; 
    case 1: \{ 
            \{ 
            EmitIn(\$this."base:environment", "A " + oneof("thud", "thunk", "creak", "cry of pain")+ " " + oneof("resounds throughout", "echoes through", "fills", "sounds in") + " " + Describe(\$this."base:environment") + " when " +Describe(\$actor) + " strikes " + Describe(\$this) + " but fails to avoid the spinning arm and is hit."); 
 
            \} 
    \} break; 
    case 2: \{ 
            \{ 
            EmitIn(\$this."base:environment", Describe(\$actor) + "'s weapon misses and only hits the wooden base of " + Describe(\$this) + "."); 
            \} 
    \} break; 
    case 3: \{ 
            \{ 
            EmitIn(\$this."base:environment", Describe(\$actor)+ " swings with full force, " + \$actor."base:possessive" + " weapon thundering downwards and straight for " +Describe(\$this)+ ". It swings swiftly before it strikes " +oneof("the true center of the head", "the inner edge of the torso", "the outer edge of the arm", "the base of the dummy", "the sand filled bag of the arm") + ", causing the arms to spin which " + Describe(\$actor)+ " manages to avoid."); 
            \} 
   \} break; 
    case 4: \{ 
            \{ 
            EmitIn(\$this."base:environment", Describe(\$actor)+ " strikes with " + \$actor."base:possessive" + " weapon and aims directly for " +Describe(\$this) + ", and lands well within the " +oneof("torso", "head", "sandbag")+ "."); 
            \} 
\} break; 
    case 5: \{ 
            \{ 
            EmitIn(\$this."base:environment", Describe(\$actor) + " fails miserably. There is little point in even explaining the action of " + \$actor."base:possessive" + " weapon since it would only be cause for more embarrassment and ridicule."); 
            \} 
\} 
\}
      </Core:Property>
      <Core:Property property="merry:react:shoot-dob">
         X[M] \$delay(1, TRUE, "030f"); 
   switch(random(6)) \{ 
    case 0: 
      EmitIn(\$this."base:environment", "A " +oneof("thump", "clunk")+ " echoes through " + Describe(\$this."base:environment") + " as " + Describe(\$actor) + " brings down " +\$actor."base:possessive"+ " weapon upon the " +oneof("head", "torso", "arm")+ " of " +Describe(\$this)+ ".");  
      break; 
    case 1: 
      EmitIn(\$this."base:environment", "A " + oneof("thud", "thunk", 
"creak", "cry of pain")+ " " + oneof("resounds throughout", "echoes through", "fills", "sounds in") + " " + Describe(\$this."base:environment") + " when " + Describe(\$actor) + " strikes " + Describe(\$this) + " but fails to avoid the spinning arm and is hit."); 
      break; 
    case 2: 
      EmitIn(\$this."base:environment", Describe(\$actor) + "'s weapon misses and only hits the wooden base of " + Describe(\$this) + "."); 
      break; 
    case 3: 
      EmitIn(\$this."base:environment", Describe(\$actor)+ " swings with full force, " + \$actor."base:possessive" + " weapon thundering downwards and straight for " +Describe(\$this)+ ". It swings swiftly before it strikes " +oneof("the true center of the head", "the inner edge of the torso", "the outer edge of the arm", "the base of the dummy", "the sand filled bag of the arm") + ", causing the arms to spin which " + Describe(\$actor)+ " manages to avoid."); 
      break; 
    case 4: 
      EmitIn(\$this."base:environment", Describe(\$actor)+ " strikes with " + \$actor."base:possessive" + " weapon and aims directly for " +Describe(\$this) + ", and lands well within the " +oneof("torso", "head", "sandbag")+ "."); 
      break; 
    case 5: 
      EmitIn(\$this."base:environment", Describe(\$actor) + " fails miserably. There is little point in even explaining the action of " + \$actor."base:possessive" + " weapon since it would only be cause for more embarrassment and ridicule."); 
      break; 
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1109317896, "tonyd", "E", 1109371010, "tonyd", "E", 1109371246, "tonyd", "E", 1109371607, "tonyd", "E", 1118042885, "tonyd", "E", 1119761560, "tonyd", "E", 1119761577, "tonyd", "E", 1123298744, "tonyd", "E", 1123298813, "tonyd", "E", 1123298925, "tonyd", "E", 1123299020, "tonyd", "E", 1123299042, "tonyd", "E", 1123299100, "tonyd", "E", 1123299165, "tonyd", "E", 1123299319, "tonyd", "E", 1123299616, "tonyd", "E", 1123299769, "tonyd", "E", 1123299924, "tonyd", "E", 1123300224, "tonyd", "E", 1123300453, "tonyd", "E", 1123300491, "tonyd", "E", 1123300503, "tonyd", "E", 1123300521, "tonyd", "E", 1123300672, "tonyd", "E", 1123300787, "tonyd", "E", 1123300908, "tonyd", "E", 1123302339, "tonyd", "E", 1123302365, "tonyd", "E", 1123302510, "tonyd", "E", 1123302521, "tonyd", "E", 1123302818, "tonyd", "E", 1123303109, "tonyd", "E", 1123303311, "tonyd", "E", 1123303418, "tonyd", "E", 1123303699, "tonyd", "E", 1123303730, "tonyd", "E", 1123303936, "tonyd", "E", 1123303992, "tonyd", "E", 1123304613, "tonyd", "E", 1123304837, "tonyd", "E", 1123304964, "tonyd", "E", 1123305220, "tonyd", "E", 1123305302, "tonyd", "E", 1123305550, "tonyd", "E", 1123305593, "tonyd", "E", 1123305639, "tonyd", "E", 1123305727, "tonyd", "E", 1123305763, "tonyd", "E", 1123305823, "tonyd", "E", 1123306214, "tonyd", "E", 1123306313, "tonyd", "E", 1123306646, "tonyd", "E", 1123307263, "tonyd", "E", 1123307293, "tonyd", "E", 1123307327, "tonyd", "E", 1123307361, "tonyd", "E", 1123307375, "tonyd", "E", 1123307422, "tonyd", "E", 1126066265, "tonyd", "E", 1126066424, "tonyd", "E", 1136169003, "tonyd", "E", 1137049337, "librarysage", "E", 1137049400, "librarysage", "E", 1137049429, "librarysage", "E", 1137049487, "librarysage", "E", 1137049512, "librarysage", "E", 1137049535, "librarysage", "E", 1137049582, "librarysage", "E", 1137049764, "librarysage", "E", 1137050335, "librarysage", "E", 1137050461, "librarysage", "E", 1137050700, "librarysage", "E", 1137050755, "librarysage", "E", 1137050787, "librarysage", "E", 1137050857, "librarysage", "X", 1137050944, "librarysage", "X", 1137051225, "librarysage", "E", 1137051378, "librarysage", "E", 1137051414, "librarysage", "E", 1137051431, "librarysage", "E", 1137051859, "librarysage", "X", 1137051896, "librarysage", "E", 1137051961, "librarysage", "X", 1137052007, "librarysage", "E", 1137052122, "librarysage", "E", 1137052157, "librarysage", "E", 1137052183, "librarysage", "E", 1137052317, "librarysage", "E", 1137052454, "librarysage", "X", 1137052529, "librarysage", "E", 1137052578, "librarysage", "E", 1137053066, "librarysage", "X", 1137053241, "librarysage", "E", 1137053583, "librarysage", "E", 1137054047, "librarysage", "E", 1137054171, "librarysage", "E", 1137054579, "librarysage", "E", 1137054769, "librarysage", "E", 1137054954, "librarysage", "E", 1137210682, "tonyd", "P", 1137210767, "tonyd", "P", 1137211931, "tonyd", "P", 1137212015, "tonyd", "P", 1137212178, "tonyd", "P", 1137212198, "tonyd", "P", 1137212294, "tonyd", "P", 1137212788, "tonyd", "P", 1137212874, "tonyd", "P", 1137212960, "tonyd", "P", 1137213004, "tonyd", "P", 1137213083, "tonyd", "P", 1137213119, "tonyd", "P", 1137213201, "tonyd", "P", 1137213370, "tonyd", "P", 1137213385, "tonyd", "P", 1137213641, "tonyd", "P", 1137213677, "tonyd", "P", 1137213780, "tonyd", "P", 1137213828, "tonyd", "P", 1137213905, "tonyd", "P", 1137213960, "tonyd", "P", 1137214031, "tonyd", "P", 1137215076, "librarysage", "E", 1137217925, "librarysage", "X", 1137218289, "librarysage", "E", 1137372174, "librarysage", "E", 1137372846, "librarysage", "E", 1138602186, "librarysage", "E", 1153939361, "librarysage", "E", 1345347595, "meandmine", "K" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
