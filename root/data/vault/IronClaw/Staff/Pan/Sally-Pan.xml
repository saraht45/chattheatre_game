<object clone="/base/obj/thing" owner="librarysage">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.5" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="are carrying in your mouth" verb3="is carrying in its mouth"/>
    <Base:Misc gender="female" volition="false" weapon="false" default_stance="crouching" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="comhach"/>
            <Base:SName sname="lizard"/>
            <Base:SName sname="reptile"/>
            <Base:SName sname="sally"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="comhaches"/>
            <Base:PName pname="lizards"/>
            <Base:PName pname="reptiles"/>
            <Base:PName pname="sallys"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="red"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="arturl">
             http://greywolf.critter.net/images/ironclaw/standups/lizard-07.gif
          </Base:Description>
          <Base:Description type="brief">
             a small comhach
          </Base:Description>
          <Base:Description type="examine">
             A small rat-like pest, at times she can be charming.  She usually walks on all fours but can stand on its hind legs like a little person.  She is cute and very lovable.
          </Base:Description>
          <Base:Description type="look">
             A small rat-like pest.
          </Base:Description>
          <Base:Description type="worn">
             Sally, perched on <describe what="$(this.base:environment)" nonposs="1"/>'s shoulder cutely
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="back" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="back"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's back
          </Base:Description>
          <Base:Description type="examine">
             A slightly arching, flexible back.
          </Base:Description>
          <Base:Description type="look">
             A slightly arching back.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's $(this.trait:build) body
          </Base:Description>
          <Base:Description type="examine">
             The $(this.trait:build) body is sinuous and flexible.
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:build) sinuous body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="claws" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="claw"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="claws"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's claws
          </Base:Description>
          <Base:Description type="examine">
             There is a claw at each end of the comhach's toes.  Each claw is blunted and hooked and seems ideal for gripping tree bark and similar surfaces.
          </Base:Description>
          <Base:Description type="look">
             Twelve small blunted claws.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="eyes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's eyes
          </Base:Description>
          <Base:Description type="examine">
             The eyes of the comhach are located on either side of its head, and take up half the head's size.  They are perfectly round and contain a large black pupil surrounded by a rim of gold.  The comhach looks back at you almost intelligently and without blinking.
          </Base:Description>
          <Base:Description type="look">
             Large circular unblinking eyes with black pupils and golden irises.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forefeet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foot"/>
            <Base:SName sname="forefoot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="feet"/>
            <Base:PName pname="forefeet"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's forefeet
          </Base:Description>
          <Base:Description type="examine">
             Both forefeet are delicate and look dextrous enough to grasp tiny objects.  Each foot ends in three flexible toes.
          </Base:Description>
          <Base:Description type="look">
             Delicate forefeet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forelegs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foreleg"/>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="forelegs"/>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's forelegs
          </Base:Description>
          <Base:Description type="examine">
             The forelegs are skinny and bowed out slightly to the sides.  They end in small prehensile feet.
          </Base:Description>
          <Base:Description type="look">
             Skinny bowed forelegs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's head
          </Base:Description>
          <Base:Description type="examine">
             A triangular head, with large circular eyes, a pointed nose, and a wide smiling mouth.
          </Base:Description>
          <Base:Description type="look">
             A triangular head.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's mouth
          </Base:Description>
          <Base:Description type="examine">
             The comhach's mouth stretches across the length of its head, ending beneath each eye, and curls at the ends which gives the impression of a permanent smile.  The mouth occasionally opens, revealing no teeth and a pink tongue.
          </Base:Description>
          <Base:Description type="look">
             A wide mouth that seems to smile.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nose" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nose"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="noses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's nose
          </Base:Description>
          <Base:Description type="examine">
             A pointed nose with tiny, slitted nostrils.  The comhach occasionally moistens its nose with a long, pink tongue.
          </Base:Description>
          <Base:Description type="look">
             A pointed nose with tiny slitted nostrils.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rear feet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="feet"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's rear feet
          </Base:Description>
          <Base:Description type="examine">
             The rear feet are relatively wide and have three toes splayed out to give the creature stability while standing upright.
          </Base:Description>
          <Base:Description type="look">
             Splayed prehensile feet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rear legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="legs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="rear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's rear legs
          </Base:Description>
          <Base:Description type="examine">
             The rear legs look sturdy enough to support the creature's weight upright, and end in splayed prehensile feet.
          </Base:Description>
          <Base:Description type="look">
             Sturdy bowed rear legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="skin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="skin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="skins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's $(this.trait:color) skin
          </Base:Description>
          <Base:Description type="examine">
             The skin looks smooth, and is of a mottled $(this.trait:color) color.  It shimmers slightly when light shines on it.
          </Base:Description>
          <Base:Description type="look">
             Smooth mottled $(this.trait:color) skin.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tail" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tail"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tails"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">her tail</Base:Description>
          <Base:Description type="examine">
             The prehensile tail is nearly as long as the rest of the body and smoothly tapers to a rounded point.  It curls slightly and looks ideal for hanging from a tree branch.
          </Base:Description>
          <Base:Description type="look">
             A long curling tail.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toe"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="toes"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's toes
          </Base:Description>
          <Base:Description type="examine">
             There are twelve toes, three per foot, each ending at a small blunted claw.
          </Base:Description>
          <Base:Description type="look">
             Twelve prehensile toes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tongue" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tongue"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tongues"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             comhach's tongue
          </Base:Description>
          <Base:Description type="examine">
             A long, pink tongue, wet and ideal for catching small insects.
          </Base:Description>
          <Base:Description type="look">
             A long wet pink tongue.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:Covered value="shoulders"/>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:trait:smell">
         "earth and tree sap"
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] /* Set a starting colour and build for the comhach */          
          
/* Here's a list of valid colours */          
\$color = (\{ nil, nil, nil, nil, "green", "green", "green", "green", "brown", "brown", "brown", "brown", "grey", "grey", "silver", "black", "red", "blue" \});          
/* ...and builds */          
\$build = (\{ nil, nil, nil, "tiny", "tiny", "small", "small", "large" \});          
          
/* set the colour to be one from the list */          
\$this."trait:color" = \$color[random(sizeof(\$color))];          
\$this."trait:build" = \$build[random(sizeof(\$build))];          
          
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drop-what">
         X[M] /* describe Sally leaping down */                
if(NewNRef( \$actor, "shoulder" ))                
\{                
  EmitTo(\$actor, Describe(\$this) + " leaps gracefully to the ground.");                
  EmitIn(\$actor."base:environment", Describe(\$this) + " leaps off " + Describe(\$actor) + "'s shoulder and lands gracefully on the ground.", \$actor);                
  this."base:environment" = \$actor."base:environment";                
  this."base:proximity" = \$actor;                
\}                
else                
\{                
  EmitTo(\$actor, Describe(\$this) + " leaps gracefully to the ground.");                
  EmitIn(\$actor."base:environment", Describe(\$this) + " leaps off " + Describe(\$actor) + "and lands gracefully on the ground.", \$actor);                
this."base:environment" = \$actor."base:environment";                
this."base:proximity" = \$actor;                
\}                
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] /* Record what room the actor is in */   
\$room = \$actor."Base:environment";   
   
/* Check if the actor is allowed to pick up the comhach */   
  /* check if \$actor is the comhach's owner */   
if(\$actor == \$this."trait:owner") \{   
  /* if the actor is allowed to pick up the comhach */   
  /* tell the actor that they picked up the comhach */   
  /* tell the room that the actor picked up the comhach */   
  EmitTo(\$actor, "You pick up "+Describe(\$this)+".");   
  EmitIn(\$room, Describe(\$actor)+" picks up "+ Describe(\$this)+".", \$actor);   
  \$this."base:environment" = \$actor;   
   
\} else \{   
  /* the actor is not the comhach's owner */   
   
  /* if the comhach is already being held by someone */   
  if(\$this."base:environment"."base:volition") \{   
    /* use the normal give/take/offer code */   
    return TRUE;   
  \} else \{   
    /* tell the actor that they can't take the comhach */   
    /* tell the room that the actor is a kidnapper! */   
    EmitTo(\$actor, "That comhach is not yours!");   
    EmitIn(\$room, Describe(\$actor)+" attempts to take "+ Describe(\$this)+".", \$actor);   
  \}   
\}   
   
/* return false, so that the actor doesn't see a message about not being allowed to pick up the comhach */   
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:control-dob">
         X[M] /* check if we are the owner, or if we are carrying the comhach */   
if((\$actor != \$this."base:environment") \&\& (\$actor != \$this."trait:owner"))   
\{   
  /* we aren't allowed to give commands */   
  EmitTo(\$actor, "You cannot control "+Describe(\$this)+" unless you are carrying "+\$this."base:objective"+".");   
  return FALSE;   
\}   
   
if(\$evoke) \{   
   
  /* If the actor gave a command */   
  \$command = \$evoke[1..strlen(\$evoke)-2];   
   
  /* If the command is cry */   
  if(\$command == "cry") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" lets out a series of small whimpers before breaking into loud sobs.");   
    \} else if(\$command == "smile") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" kicks " + \$this."base:possessive" + " legs and smiles giddily.");   
    \} else if(\$command == "hold-me") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" cries for someone to hold " + \$this."base:objective" + ".");   
    \} else if(\$command == "pout") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" extends " + \$this."base:possessive" + " lower lip at " + Describe(\$actor) + " and childishly pouts.");   
  \} else if(\$command == "sleep") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" sleeps snugly in " + \$actor."base:possessive" + " arms.", \$actor);   
    EmitTo(\$actor, Describe(\$this, nil, \$actor) + " sleeps snugly in your arms.");   
    \} else if(\$command == "wiggle") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" adorably wiggles in " + \$actor."base:possessive" + " arms.");  
    \} else if(\$command == "scamper") \{   
    EmitIn(\$actor."base:environment", Describe(\$this)+" playfully tries to scamper out of " + \$actor."base:possessive" + " arms.");   
  \} else if(\$command == "mommy") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " cries for " + \$this."base:possessive" + " mommy.");   
  \} else if(\$command == "daddy") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " cries for " + \$this."base:possessive" + " daddy.");   
  \} else if(\$command == "hungry") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+ " whines for food.");   
  \} else if(\$command == "no-kiss") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" turns it's head as " +Describe(\$actor) +" tries to kiss " + \$this."base:possessive" +" cheek.");   
  \} else if(\$command == "blow-kiss") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" blows kisses at people passing by.");   
  \} else if(\$command == "kiss-cheek") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" adorably pecks " + Describe(\$actor) +"'s cheek.");   
  \} else if(\$command == "coo") \{   
    EmitIn(\$actor."base:environment", Describe(\$this) + " makes soft cooing sounds.");   
  \} else if(\$command == "play") \{   
    EmitIn(\$actor."base:environment", Describe(\$this) + " gazes entertainedly at "+ \$actor."base:objective" + " as " + \$actor."base:pronoun" + " makes silly faces.");   
  \} else if(\$command == "peekaboo") \{   
    EmitIn(\$actor."base:environment", Describe(\$this, nil, nil, STYLE_NONPOSS)+" giggles as " + Describe(\$actor) + " repeatedly hides and reveals " + \$actor."base:possessive" + " face.");   
  \} else if(\$command == "giggle") \{   
    switch(random(4)) \{   
      case 3:   
        EmitTo(\$actor, Describe(\$this)+" giggles mirthfully as you tickle "+\$this."base:objective"+".");   
        EmitIn(\$actor."base:environment", Describe(\$this)+" giggles mirthfully as " + Describe(\$actor) + " tickles "+\$this."base:objective"+".", \$actor);   
        break;   
      case 2:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" giggles happily.");   
        break;   
      case 1:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" attempts to stifle a giggle.");   
        break;   
      case 0:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" lets out gleeful giggles.");   
        break;   
      default:   
        break;   
    \}   
  \} else if(\$command == "yawn") \{   
    switch(random(4)) \{   
      case 3:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" yawns sleepily.");   
        break;   
      case 2:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" yawns and stretches contently.");   
        break;   
      case 1:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" attempts to stifle a yawn unsuccessfully.");   
        break;   
      case 0:   
        EmitIn(\$actor."base:environment", Describe(\$this)+" hiccups mid-yawn causing it to giggle and blink wakefully.");   
        break;   
      default:   
        break;   
    \}   
  \} else \{   
  EmitTo(\$actor, "Valid controls for "+Describe(\$this)+" are: blow-kiss, coo, cry, daddy, giggle, hold-me, hungry, kiss-cheek, mommy, no-kiss, peekaboo, play, scamper, sleep, wiggle and yawn.");   
  \}   
   
\} else \{   
   
  /* If the actor did NOT give a command */   
   EmitTo(\$actor, "You must include a command you want followed. Such as: control "+Describe(\$this, nil, \$actor)+ " 'cry'.");   
   
\}   
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react:pet-dob">
         X[M] EmitTo(\$actor, "Your name is " + lower_case(\$actor."skotos:charname"));           
switch(lower_case(\$actor."skotos:charname"))           
\{           
  case "bast": EmitTo(\$actor, "Sally smiles warmly at you."); break;           
  case "azrael": EmitTo(\$actor, "Sally giggles at your attention."); break;           
  case "tariris": EmitTo(\$actor, "Sally loves you."); break;           
  case "death": EmitTo(\$actor, "Sally likes you."); break;
  case "pan": EmitTo(\$actor, "Sally likes you."); break;         
  default: EmitTo(\$actor, "Sally doesn't know you."); break;           
\}           
           
\$delay(2, TRUE, "ebd1");           
if( \$iob \&\& sizeof( \$iob ))\{           
\$victim = NRefOb( \$iob[0] );           
EmitIn( \$actor."base:environment", Describe(this)+ " moves toward the extended palm of " +Describe(\$actor)+ ".", \$actor, \$victim );           
EmitTo( \$actor, "The " +Describe(\$this)+ " seems to snuggle " +Describe(\$actor."base:possessive")+ "hand." );           
EmitTo( \$victim, Describe(\$this)+" is so supple and sleek against your hand." );           
\} else \{           
EmitIn( \$actor."base:environment", Describe(\$this)+" moves toward the extended hand." );           
\}
      </Core:Property>
      <Core:Property property="merry:react:smile-iob">
         X[M] \$delay(2, TRUE, "030f");                      
EmitTo( \$actor, Describe(\$this) + " sits silently with a content grin." );                     
EmitIn( \$actor."base:environment", Describe(\$this) + " sits silently and grins contently at "+Describe(\$actor)+" in response.", \$actor );
      </Core:Property>
      <Core:Property property="merry:react:squeeze-dob">
         X[M] \$delay(2, TRUE, "030f");                    
EmitTo( \$actor, "Sally squeaks minutely and then... nothing." );                   
EmitIn( \$actor."base:environment", "Sally squeaks minutely at "+Describe(\$actor)+" and then... nothing.", \$actor );
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:build">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:color">
         X[M] return Call(\$\{Allegory:Props:Crafting:UrCrafting\}, "replaceadj", \$object: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1130069617, "tonyd", "X", 1130069636, "tonyd", "E", 1130069729, "tonyd", "E", 1130070039, "tonyd", "E", 1130070070, "tonyd", "E", 1130070476, "tonyd", "E", 1130070521, "tonyd", "E", 1130070566, "sinistrelle", "E", 1130070884, "sinistrelle", "E", 1130103717, "sinistrelle", "E", 1130103739, "sinistrelle", "E", 1130103750, "sinistrelle", "E", 1130103813, "sinistrelle", "E", 1130103911, "sinistrelle", "E", 1130104016, "sinistrelle", "E", 1130104243, "sinistrelle", "E", 1130104321, "sinistrelle", "E", 1130104386, "sinistrelle", "E", 1130104587, "sinistrelle", "E", 1130106232, "sinistrelle", "E", 1130115945, "sinistrelle", "E", 1130115971, "sinistrelle", "E", 1130116625, "sinistrelle", "E", 1130116858, "sinistrelle", "E", 1130116955, "sinistrelle", "E", 1130117031, "sinistrelle", "E", 1130117418, "sinistrelle", "E", 1130117432, "sinistrelle", "E", 1130117694, "sinistrelle", "E", 1130117920, "sinistrelle", "E", 1130117942, "sinistrelle", "E", 1130118107, "sinistrelle", "E", 1130118257, "sinistrelle", "E", 1130118735, "sinistrelle", "E", 1130541602, "sinistrelle", "E", 1130541775, "sinistrelle", "E", 1130541786, "sinistrelle", "X", 1130615332, "sinistrelle", "X", 1131315575, "sinistrelle", "E", 1131423680, "tunk_bodin", "X", 1131423831, "tunk_bodin", "X", 1131423898, "tunk_bodin", "X", 1131423979, "tunk_bodin", "X", 1131424204, "tunk_bodin", "X", 1131424408, "tunk_bodin", "X", 1131425257, "tunk_bodin", "X", 1131425311, "tunk_bodin", "X", 1131425507, "tunk_bodin", "X", 1131854733, "tunk_bodin", "X", 1137727856, "librarysage", "E", 1137728243, "librarysage", "E", 1137728283, "librarysage", "E", 1137728346, "librarysage", "E", 1137730752, "librarysage", "E", 1137731088, "librarysage", "E", 1137731461, "librarysage", "E", 1145732850, "sinistrelle", "E", 1145732933, "sinistrelle", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="trait:color">"red"</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
