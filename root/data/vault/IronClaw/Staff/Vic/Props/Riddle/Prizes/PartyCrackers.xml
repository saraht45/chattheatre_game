<object clone="/base/obj/thing" owner="necate">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="partycracker"/>
            <Base:SName sname="party-cracker"/>
            <Base:SName sname="cracker"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="crackers"/>
            <Base:PName pname="partycrackers"/>
            <Base:PName pname="party-crackers"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             small party-cracker
          </Base:Description>
          <Base:Description type="look">
             A small party-cracker is wrapped in metalitic-like material and decorated with varies colorful shapes and spirals. The ends of the party-cracker are twisted shut.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ends" prime="false" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="end"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ends"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="twisted"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             the twisted ends of a party-cracker
          </Base:Description>
          <Base:Description type="look">
             The twisted ends of the party-cracker; they just seem to beg you to pull them.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:nip:item:cost">
         0
      </Core:Property>
      <Core:Property property="merry:react-post:pull-dob">
         X[M] \$target = NRefDetail(\$target); 
if(\$target != "ends")\{return FALSE;\} 
 
EmitTo(\$actor, "You pull on both ends of the cracker and it suddenly explodes with a surprising pop and confettii and small streamers fly from it in a dazzling display."); 
EmitIn(\$actor."base:environment", Describe(\$actor)+ " pulls on both ends of the cracker and it suddenly explodes with a surprising pop and confettii and small streamers fly from it in a dazzling display.", \$actor); 
Slay(\$this);
      </Core:Property>
      <Core:Property property="merry:react-pre:pull-dob">
         X[M] /* if they are pulling the cracker, make them pull the ends instead */ 
if(\$target \&\& NRefDetail(\$target) == "default") \{ 
  Social(\$actor, "pull", \$adverb, \$evoke, nil, NewNRef(NRefOb(\$target), "ends")); 
  return FALSE; 
\} 
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1151999516, "necate", "E", 1151999620, "necate", "K", 1151999662, "necate", "K", 1151999699, "necate", "E", 1152000133, "tonyd", "X", 1152000439, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
