<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Props:Clothing:InProgress:RangersCloak)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cloak"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cloaks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="hooded"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             hooded $(this.trait:color) $(this.trait:material) cloak
          </Base:Description>
          <Base:Description type="look">
             A hooded $(this.trait:color) $(this.trait:material) cloak. It hangs loosely from neck to ankles. {? equal | $(this.hood:stance) | raised |. The hood is raised and covering the wearer's head.| The hood hangs freely against the upper back.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hood" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hood"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="hoods"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.trait:color) $(this.trait:material) cloaks hood
          </Base:Description>
          <Base:Description type="look">
             A $(this.trait:color) $(this.trait:material) cloaks hood.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:hood:stance">
         "lowered"
      </Core:Property>
      <Core:Property property="hood:stance">
         "lowered"
      </Core:Property>
      <Core:Property property="merry:lib:reset">
         X[M] \$wearer = \$actor;

\$wearer."trait:title" = \$wearer."trait:hidden:title";
\$wearer."trait:hidden:title" = nil;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:retain">
         X[M] \$wearer = \$actor;

EmitIn(\$wearer."base:environment", Describe(\$wearer)+ " removes " +Describe(\$target)+ ".");
Set(\$wearer, "trait:hidden:title", nil);
Set(\$this, "base:worn-by", nil);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:tug-dob">
         X[M] \$wearer = \$actor;
\$hood = NRefDetail(\$target);

if (\$hood != "hood") \{return TRUE;\}

if(\$this."hood:stance" == "lowered") \{               
this."hood:stance" = "raised";
EmitIn(\$wearer."base:environment", Describe(\$wearer)+ " tugs the hood of " +Describe(\$target)+ " over " +\$wearer."trait:possessive"+ " head.");

\$wearer."trait:hidden:hood:title" = \$wearer."trait:title";
\$wearer."trait:title" = nil;

\$wearer."trait:hidden:superbrief" = \$wearer."trait:superbrief";
\$wearer."trait:superbrief" = "a hooded "+\$wearer."trait:animal";

return FALSE;
\} else \{          
   EmitTo(\$actor, "Your hood is already raised.");          
return FALSE;          
\}           
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:wear">
         X[M] \$wearer = \$actor;

\$wearer."trait:hidden:title" = \$wearer."trait:title";
\$wearer."trait:title" = nil;
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:lower-dob">
         X[M] \$wearer = \$actor;
\$hood = NRefDetail(\$target);

if (\$hood != "hood") \{return TRUE;\}

if(\$this."hood:stance" == "raised") \{               
this."hood:stance" = "lowered";   
EmitIn(\$wearer."base:environment", Describe(\$wearer)+ " lowers the hood of " +Describe(\$target)+ " from " +\$wearer."trait:possessive"+ " head.");

\$wearer."trait:title" = \$wearer."trait:hidden:hood:title";
\$wearer."trait:hidden:hood:title" = nil;

\$wearer."trait:superbrief" = \$wearer."trait:hidden:superbrief";
\$wearer."trait:hidden:superbrief" = nil;

return FALSE;
\} else \{         
   EmitTo(\$actor, "Your hood is already lowered.");          
return FALSE;          
\}           
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:unwear">
         X[M] \$wearer = \$actor;

if(\$wearer."trait:title")\{
interaction::question(\$question: "You have acquired a new title since wearing your cloak. Do you wish to retain this new title or reset to the original?", \$expires: 80, \$env: "FALSE", \$yes_ob: \$this, \$no_ob: \$this, \$expire_ob: \$this, \$yes_fun: "retain", \$no_fun: "reset", \$expire_fun: "retain");
\} 
else \{
\$wearer."trait:hidden:title" = nil;
return TRUE;
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1152240324, "necate", "E", 1152240463, "necate", "E", 1152240532, "necate", "E", 1152240707, "necate", "E", 1152240780, "necate", "E", 1152240916, "necate", "E", 1152241008, "necate", "E", 1152241058, "necate", "E", 1152241220, "necate", "E", 1152241385, "necate", "E", 1152241501, "necate", "E", 1152241608, "necate", "E", 1152241679, "necate", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
