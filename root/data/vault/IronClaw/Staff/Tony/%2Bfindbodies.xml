<object clone="/usr/SkotOS/obj/verb" owner="tonyd">
  <Socials:Verb imp="+findbodies" evoke="forbidden" audible="false" private="false" secret="false" obscured="false" target-abstracts="false" disabled="false" ooc="false" raw_verb="false">
    <Ur:UrObject/>
    <Socials:SocialObjects>
      <Socials:SocialObject role="line" direct="true" single="false" raw="true" requirement="optional" distance="far">
        <Socials:SocObPreps/>
        <Socials:SocObFilters/>
      </Socials:SocialObject>
    </Socials:SocialObjects>
    <Socials:VerbActions/>
    <Core:Properties>
      <Core:Property property="merry:global:command">
         X[M] /* */       

object *bodies;
string name;

if (\$(line:words) == nil) \{
  EmitTo(\$actor, "Syntax: +findbodies \<oldname\> \<newname\>\\n");
  return FALSE;
\}

name = \$(line:words)[0]; 

bodies = Get(UDat::, "all-bodies:" + name);
if (!bodies \|\| sizeof(bodies) == 0) \{
  EmitTo(\$actor, "Error: \\"" + name + "\\" does not exist.");
  return FALSE;
\} else if (sizeof(bodies) \> 0) \{
  EmitTo(\$actor, "bodies owned by " + name + ":");
for(\$i = 0; \$i \< sizeof(bodies); \$i = \$i + 1)
\{
  EmitTo(\$actor, Str(bodies[\$i]));
\}
  EmitTo(\$actor, "Done");
  return FALSE;
\}

return FALSE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1061167901, "zell", "E", 1061168049, "zell", "E", 1061168753, "zell", "E", 1062654507, "tonyd", "E", 1062655111, "tonyd", "E", 1062655341, "tonyd", "E", 1062655731, "tonyd", "E" \})
      </Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Socials:Verb>
</object>
