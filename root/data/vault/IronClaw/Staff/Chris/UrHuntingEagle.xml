<object clone="/base/obj/thing" owner="cbaker">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="0.05" density="10"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0" verb2="contain" verb3="contains"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eagle"/>
            <Base:SName sname="bird"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="birds"/>
            <Base:PName pname="eagles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brown"/>
          <Base:Adjective adjective="eagle"/>
          <Base:Adjective adjective="hunting"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             brown hunting eagle
          </Base:Description>
          <Base:Description type="examine">
             Here is a large eagle with a sharp beak. The eagle's eyes move in all directions cautiously, staying aware of it's surroundings.
          </Base:Description>
          <Base:Description type="glance">
             An eagle with a large, sharp beak.
          </Base:Description>
          <Base:Description type="look">
             Here is a large eagle with a very sharp beak.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brown"/>
          <Base:Adjective adjective="eagle"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             brown eagle's head
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wings" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wing"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="wings"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="brown"/>
          <Base:Adjective adjective="eagles"/>
          <Base:Adjective adjective="long"/>
          <Base:Adjective adjective="pair"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             brown eagle's pair of wings
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:react-post:pet-dob">
         X[M] if (\$actor != Get(this, "trait:master"))
\{
Social(this, "hop", nil, nil, "to", \$actor);
\$delay(1.0, TRUE, "93f9");
EmitTo(\$actor, "You now own a " + Describe(this));
this."trait:master" = \$actor;
\}
else
\{
EmitTo(\$actor, Describe(this) + " flaps it's wings a couple of times.");
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:react-post:poke-dob">
         X[M] Social(this, "peck", nil, nil, nil, \$actor);
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-post:whistle-iob">
         X[M] if (\$actor == Get(this, "trait:master"))
\{
Social(this, "squawk", nil, nil, "at", \$actor);
\}
else
\{
  EmitTo(\$actor, Describe(this) + " tilts its head at you.");
  EmitIn(\$actor."base:environment", Describe(this) + " tilts its head at " + Describe(\$actor) + ".", \$actor);
\}
return TRUE;
      </Core:Property>
      <Core:Property property="merry:react-pre:drop-what">
         X[M] /* describe the bird hopping down */
if(NewNRef( \$actor, "arm" ))
\{
  EmitTo(\$actor, Describe(this) + " hops onto the ground.");
  EmitIn(\$actor."base:environment", Describe(this) + " hops off " + Describe(\$actor) + "'s arm and lands on the ground.", \$actor);
  this."base:environment" = \$actor."base:environment";
  this."base:proximity" = \$actor;
\}
else
\{
  EmitTo(\$actor, Describe(this) + " hops onto the ground.");
  EmitIn(\$actor."base:environment", Describe(this) + " hops off " + Describe(\$actor) + "and lands on the ground.", \$actor);
this."base:environment" = \$actor."base:environment";
this."base:proximity" = \$actor;
\}
return FALSE;
      </Core:Property>
      <Core:Property property="merry:react-pre:take">
         X[M] /* if the actor trying to take the bird is the birds master */
if (\$actor == Get(this, "trait:master"))
\{
/*set the bird to be next to the actor */
  this."base:proximity" = \$actor;
/*if the actor has an arm, make the bird hop onto the arm. Otherwise just hop onto the actor */
  if(NewNRef( \$actor, "arm" ))
  \{
    \$actors_arm = NewNRef( \$actor, "arm" );
    Social(this, "hop", nil, nil, "to", \$actors_arm);
  \} else \{
    Social(this, "hop", nil, nil, "to", \$actor);
  \}
/* wait one second, so that we can see the "hopping onto arm" action, before we take the bird */
  \$delay(1.0, nil, "4a11");
/* set the bird to be in the actors inventory */
  this."base:environment" = \$actor;
  return FALSE;
\} else \{
/* the actor trying to take the bird isn't the master*/
/* set the actor to be next to the bird */
  EmitTo(\$actor, "You try to take " + Describe(this));
  EmitIn(\$actor."base:environment", Describe(\$actor) + " tries to take " + Describe(this));
/*set the actor to be next to the bird */
  \$actor."base:proximity" = this;
  Social(this, "bite", nil, nil, nil, \$actor);
  return FALSE;
\}
      </Core:Property>
      <Core:Property property="new property name">
         "New Property Value"
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1062737442, "bluesunrisenor", "X", 1062738501, "cbaker", "E", 1062738551, "cbaker", "E", 1064202458, "cbaker", "E", 1064203365, "cbaker", "K", 1064203414, "cbaker", "K", 1064203441, "cbaker", "K", 1064203496, "cbaker", "K", 1064203546, "cbaker", "K", 1064203690, "cbaker", "E", 1064203713, "cbaker", "E", 1064203823, "cbaker", "E", 1064204381, "cbaker", "E", 1064204543, "tonyd", "E", 1064204577, "cbaker", "E", 1064204740, "cbaker", "E", 1064204768, "cbaker", "E", 1064204892, "cbaker", "E", 1064204950, "tonyd", "E", 1064205137, "tonyd", "E", 1064205320, "tonyd", "E", 1064205450, "tonyd", "E", 1064206126, "cbaker", "E", 1064206373, "cbaker", "E", 1064206474, "cbaker", "E", 1064206517, "cbaker", "E", 1064206613, "tonyd", "E", 1064206647, "cbaker", "E", 1064206680, "cbaker", "E", 1064206715, "cbaker", "E", 1064206846, "tonyd", "E", 1064206899, "tonyd", "E", 1064207089, "tonyd", "E", 1064207144, "tonyd", "E", 1064207262, "tonyd", "E", 1064207291, "tonyd", "E", 1064207429, "tonyd", "E", 1064207492, "tonyd", "E", 1064207546, "tonyd", "E", 1064207618, "tonyd", "E", 1064207723, "tonyd", "E", 1064207796, "tonyd", "E", 1064207924, "tonyd", "E", 1064208021, "tonyd", "E", 1064208046, "tonyd", "E", 1064208123, "tonyd", "E", 1064208243, "tonyd", "E", 1064208268, "cbaker", "E", 1064208303, "tonyd", "E", 1064208466, "tonyd", "E", 1064208537, "tonyd", "E", 1064208622, "tonyd", "E", 1064208662, "tonyd", "E", 1064208815, "tonyd", "E", 1064209142, "tonyd", "E", 1064209196, "tonyd", "E", 1064209229, "tonyd", "E", 1064209282, "tonyd", "E", 1064209364, "tonyd", "E", 1064209395, "tonyd", "E", 1064209419, "tonyd", "E", 1064209501, "tonyd", "E", 1064209638, "tonyd", "E", 1064209734, "tonyd", "E", 1064209841, "tonyd", "E", 1064210307, "tonyd", "E", 1064210474, "tonyd", "E", 1064210506, "tonyd", "E", 1064210610, "tonyd", "E", 1064210793, "tonyd", "E", 1064210904, "tonyd", "E", 1064210945, "tonyd", "E", 1064211056, "tonyd", "E", 1064211144, "tonyd", "E", 1064211197, "tonyd", "E", 1064211255, "tonyd", "E", 1064211333, "tonyd", "E", 1064211399, "tonyd", "E", 1064211492, "tonyd", "E", 1064211581, "tonyd", "E", 1064255856, "cbaker", "E", 1064255913, "cbaker", "E", 1064256161, "cbaker", "E", 1064256294, "cbaker", "E", 1064256523, "cbaker", "E", 1064256636, "cbaker", "E", 1064256669, "cbaker", "E", 1064256743, "cbaker", "E", 1064307065, "tonyd", "E", 1064309250, "tonyd", "E", 1064309369, "tonyd", "E", 1064326274, "tonyd", "E", 1064326310, "tonyd", "E", 1064326548, "tonyd", "E", 1064326890, "tonyd", "E", 1064327003, "tonyd", "E", 1064327361, "tonyd", "E", 1064327407, "tonyd", "E", 1064328289, "tonyd", "E", 1064328558, "tonyd", "E", 1064330071, "tonyd", "E", 1064334539, "cbaker", "E", 1064334906, "cbaker", "E", 1064334969, "cbaker", "E", 1064335836, "cbaker", "E", 1064335948, "cbaker", "E", 1064335993, "cbaker", "E", 1064336293, "cbaker", "E", 1064336427, "cbaker", "E", 1064337146, "cbaker", "K", 1064348083, "cbaker", "E", 1064348126, "cbaker", "E", 1064348598, "cbaker", "E", 1064348720, "cbaker", "E", 1064348749, "cbaker", "E", 1064348809, "cbaker", "E", 1064348839, "cbaker", "E", 1064348911, "cbaker", "E", 1064348937, "cbaker", "E", 1064348998, "cbaker", "E", 1064349049, "cbaker", "E", 1064371808, "tonyd", "E", 1064371859, "tonyd", "E", 1064372093, "cbaker", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="volition">0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
