<object clone="/base/obj/thing" owner="SkotOS">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(Ironclaw:Races:UrCombat-Roo-backup)"/>
    <Base:Bulk immobile="false" mass="1" density="1"/>
    <Base:Container flexible="false" transparent-container="false" public-container="false" tight="false" capacity="0" maxweight="0"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="merry:act-post:combat_readied_against">
         X[M] Social(this, "ask", "angrily", "Fighting me? You won't win!", nil, NewNRef(\$attacker, "default"));
Social(this, "fight", nil, nil, nil, NewNRef(\$attacker, "default"));
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:combat_break_against">
         X[M] Social(this, "say", nil, "Yeah, I didn't think so.", "to", NewNRef(\$attacker, "default"));
Social(this, "breakcombat");
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:combat_no_actions">
         X[M] /* make the NPC react if it tries to attack, but has no actions */
Social(this, "shake", "confusedly", nil, nil, NewNRef(this, "head"));
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:combat_ready">
         X[M] /* make this NPC start fighting, when it readies itself for combat */
\$delay(5, TRUE, "fc79");
while(this."combat:fighting") \{
  Social(this, "swing", nil, nil, "at", NewNRef(this."combat:target", "default"));
  \$delay(160, TRUE, "f14e");
\}
Social(this, "sing", nil, "I might move like lightning, but for now no more fighting!");
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052085, "-", "SYNC", 1150599935, "tonyd", "E", 1150600200, "tonyd", "P", 1150600232, "tonyd", "P", 1150606231, "tonyd", "P", 1150606335, "tonyd", "P", 1150606502, "tonyd", "P", 1150607264, "tonyd", "P", 1150612637, "tonyd", "P", 1150612944, "tonyd", "P", 1150613023, "tonyd", "P", 1151107756, "tonyd", "P", 1151108444, "tonyd", "P", 1151215955, "tonyd", "E", 1151216411, "tonyd", "E", 1151216550, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
