<object clone="/base/obj/thing" owner="redfoxy">
  <Base:Thing>
    <Ur:UrObject/>
    <Base:Bulk immobile="false" mass="55" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="100" maxweight="100"/>
    <Base:Misc gender="neuter" volition="false" weapon="false" default_stance="none" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="false">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst/>
      <Base:DrinkMessageThird/>
      <Base:Transparency value="true"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="false"/>
      <Base:DieMessageFirst/>
      <Base:DieMessageThird/>
    </Base:Misc>
    <Base:Details/>
    <Base:Combat>
      <Base:Strength value="1"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="bilbo:inherit:react:tattoo">
         "\< Generic:DB:UrPeople:altersub \>"
      </Core:Property>
      <Core:Property property="merry:act-post:linkdie">
         X[M] \$db = \$\{Data:DB:seeDB\};
   
\$list = Get( \$db, "acclisteners" );   
   
\$mute = Get( \$db, "mutelist" );

\$characct = Get( \$actor, "skotos:creator" );   
   
if( !\$list ) return TRUE;   
   
if( !\$list[\$characct] ) return TRUE;   
   
/* Seems we're on the +see-list. Step through the list and notify those that are online */   
   
\$notification = smalltime( time() ) + " [NOTIFICATION] " + \$characct + " [" + Describe( \$actor ) + "]'s connection was lost.";

\$recnotify = short_time( time() ) + " - " + \$characct + " [" + Describe( \$actor ) + "] disconnected.";

for( \$i = 0; \$i \< sizeof( \$list[\$characct] ); \$i++ )\{   
  if( !\$mute[ \$list[\$characct][\$i] ] ) EmitTo( \$list[\$characct][\$i], \$notification );   
  \$z = Get( \$list[\$characct][\$i], "seelist" );
  if( !\$z ) \$z = (\{ \});
  if( sizeof( \$z ) \> 20 ) \$z = \$z[2..];
  \$z += (\{ \$recnotify \});
  Set( \$list[\$characct][\$i], "seelist", \$z );
\}   
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:login">
         X[M] \$db = \$\{Data:DB:seeDB\};
   
\$list = Get( \$db, "acclisteners" );   
   
\$mute = Get( \$db, "mutelist" );

\$characct = Get( \$actor, "skotos:creator" );   
   
if( !\$list ) return TRUE;   
   
if( !\$list[\$characct] ) return TRUE;   
   
/* Seems we're on the +see-list. Step through the list and notify those that are online */   
   
\$notification = smalltime( time() ) + " [NOTIFICATION] " + \$characct + " [" + Describe( \$actor ) + "] has logged on.";

\$recnotify = short_time( time() ) + " - " + \$characct + " [" + Describe( \$actor ) + "] logged on.";

for( \$i = 0; \$i \< sizeof( \$list[\$characct] ); \$i++ )\{   
  if( !\$mute[ \$list[\$characct][\$i] ] ) EmitTo( \$list[\$characct][\$i], \$notification );   
  \$z = Get( \$list[\$characct][\$i], "seelist" );
  if( !\$z ) \$z = (\{ \});
  if( sizeof( \$z ) \> 20 ) \$z = \$z[2..];
  \$z += (\{ \$recnotify \});
  Set( \$list[\$characct][\$i], "seelist", \$z );
\}   
   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-post:quit">
         X[M] \$db = \$\{Data:DB:seeDB\};
   
\$list = Get( \$db, "acclisteners" );   
   
\$characct = Get( \$actor, "skotos:creator" );   

\$mute = Get( \$db, "mutelist" );
   
if( !\$list ) return TRUE;   
   
if( !\$list[\$characct] ) return TRUE;   
   
/* Seems we're on the +see-list. Step through the list and notify those that are online */   
   
\$notification = smalltime( time() ) + " [NOTIFICATION] " + \$characct + " [" + Describe( \$actor ) + "] has logged out.";

\$recnotify = short_time( time() ) + " - " + \$characct + " [" + Describe( \$actor ) + "] logged out.";

for( \$i = 0; \$i \< sizeof( \$list[\$characct] ); \$i++ )\{
  if( !\$mute[ \$list[\$characct][\$i] ] ) EmitTo( \$list[\$characct][\$i], \$notification );   
  \$z = Get( \$list[\$characct][\$i], "seelist" );
  if( !\$z ) \$z = (\{ \});
  if( sizeof( \$z ) \> 20 ) \$z = \$z[2..];
  \$z += (\{ \$recnotify \});
  Set( \$list[\$characct][\$i], "seelist", \$z );
\}   
   
return TRUE;
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1051687791, "arikon", "E", 1051689520, "arikon", "E" \})
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
    </Core:Properties>
    <Notes:Notes/>
  </Base:Thing>
</object>
