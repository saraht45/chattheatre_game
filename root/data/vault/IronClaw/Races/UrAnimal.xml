<object clone="/base/obj/thing" owner="tonyd">
  <Base:Thing>
    <Ur:UrObject urobject="OBJ(IronClaw:Races:UrCombat)"/>
    <Base:Bulk immobile="false" mass="55" density="1"/>
    <Base:Container flexible="true" transparent-container="false" public-container="false" tight="false" capacity="1" maxweight="100" verb2="are carrying" verb3="is carrying"/>
    <Base:Misc gender="neuter" volition="true" weapon="false" default_stance="standing" combinable="false" discrete="false" by_weight="false" tight="false" scriptrunner="true">
      <Base:Edible value="false"/>
      <Base:Potable value="false"/>
      <Base:DrinkMessageFirst></Base:DrinkMessageFirst>
      <Base:DrinkMessageThird></Base:DrinkMessageThird>
      <Base:Transparency value="false"/>
      <Base:Unsafe value="false"/>
      <Base:Safe value="false"/>
      <Base:ClothesExpected value="true"/>
      <Base:DieMessageFirst></Base:DieMessageFirst>
      <Base:DieMessageThird></Base:DieMessageThird>
    </Base:Misc>
    <Base:Details>
      <Base:Detail id="default" prime="true" def="true" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="person"/>
            <Base:SName sname="human"/>
            <Base:SName sname="being"/>
            <Base:SName sname="mammal"/>
            <Base:SName sname="primate"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="humans"/>
            <Base:PName pname="mammals"/>
            <Base:PName pname="people"/>
            <Base:PName pname="persons"/>
            <Base:PName pname="primates"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.trait:title) | none ||$(this.trait:title) }$(this.trait:superbrief){? | $(this.death:dead) | (Deceased)}
          </Base:Description>
          <Base:Description type="brief-unseen">
             someone
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.trait:override:examine) | $(this.trait:override:examine) | $(this.trait:examine) }
Injuries:$[if($this."combat:injuries" && (sizeof(map_indices($this."combat:injuries")) > 0)) return Describe($this)+" appears to be injured.";]
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.trait:override:look) | $(this.trait:override:look) | $(this.trait:look) }
$[if($this."combat:injuries" && (sizeof(map_indices($this."combat:injuries")) > 0)) return Describe($this)+" appears to be injured.";]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ankles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ankles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">ankles</Base:Description>
          <Base:Description type="look">
             A pair of ankles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="armpits" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armpits"/>
            <Base:SName sname="pits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">armpits</Base:Description>
          <Base:Description type="look">
             A pair of armpits.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="arms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">arms</Base:Description>
          <Base:Description type="look">
             A pair of arms.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="back" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="back"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">back</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "back", $detail: "back", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "back", $detail: "back", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="belly" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="stomach"/>
            <Base:SName sname="gut"/>
            <Base:SName sname="paunch"/>
            <Base:SName sname="tummy"/>
            <Base:SName sname="belly"/>
            <Base:SName sname="abdomen"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="abdomens"/>
            <Base:PName pname="bellies"/>
            <Base:PName pname="guts"/>
            <Base:PName pname="paunches"/>
            <Base:PName pname="stomacks"/>
            <Base:PName pname="tummies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">belly</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "belly", $detail: "belly", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "belly", $detail: "belly", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="body" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="body"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bodies"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="human"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">body</Base:Description>
          <Base:Description type="look">
             The body, either considered as the complete person, or the person without their limbs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="breastbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="breastbone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="breastbones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             breastbone
          </Base:Description>
          <Base:Description type="look">
             A breastbone.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="brow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="brow"/>
            <Base:SName sname="forehead"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="brows"/>
            <Base:PName pname="foreheads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:browshape) | ordinary ||$(this.appearance:browshape) }forehead
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:brow:descriptions:brief",$this: this), $detail: "brow", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:brow:descriptions:brief",$this: this), $detail: "brow", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="calves" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="calves"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">calves</Base:Description>
          <Base:Description type="look">
             A pair of calves.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="cheeks" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheeks"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:cheekshape) | ordinary ||$(this.appearance:cheekshape) }cheeks
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:cheekshape) | ordinary |A pair of cheeks.|A pair of $(this.appearance:cheekshape) cheeks.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chest" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chest"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chests"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">chest</Base:Description>
          <Base:Description type="examine">
             A chest.
It has $(this.combat:injury:chest)
          </Base:Description>
          <Base:Description type="look">
             A chest.
It has $(this.combat:injury:chest)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="chin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="chin"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="chins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:jawshape) | ordinary |chin|$(this.appearance:jawshape) chin}
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:chin:descriptions:brief",$this: this), $detail: "chin", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:chin:descriptions:brief",$this: this), $detail: "chin", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="collarbone" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="collarbone"/>
            <Base:SName sname="clavicle"/>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bones"/>
            <Base:PName pname="clavicles"/>
            <Base:PName pname="collarbones"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="collar"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             collarbone
          </Base:Description>
          <Base:Description type="look">
             The bone across the upper front of the body, connecting the breastbone to the shoulders.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="earlobe" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="earlobe"/>
            <Base:SName sname="lobe"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ear"/>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }earlobe
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:earshape) | ordinary |An earlobe.|<describe-prop what="appearance:earshape" cap="1"/> earlobe.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="earlobes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="earlobes"/>
            <Base:SName sname="lobes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="ear"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }earlobes
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:earshape) | ordinary |A pair of ears.|A pair of $(this.appearance:earshape) earlobes.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ears" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ears"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }ears
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:earshape) | ordinary |A pair of ears.|A pair of $(this.appearance:earshape) ears.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="elbows" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="elbows"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">elbows</Base:Description>
          <Base:Description type="look">
             A pair of elbows.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyebrow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyebrow"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:eyebrowshape) | ordinary ||$(this.appearance:eyebrowshape) }eyebrow
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:eyebrowshape) | ordinary |An eyebrow.|<describe-prop what="appearance:eyebrowshape" cap="1"/> eyebrow.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyebrows" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyebrows"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:eyebrowshape) | ordinary ||$(this.appearance:eyebrowshape) }eyebrows
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:eyebrowshape) | ordinary |A pair of eyebrows.|A pair of $(this.appearance:eyebrowshape) eyebrows.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyelash" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyelash"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">eyelash</Base:Description>
          <Base:Description type="look">
             Ordinary eyelashes over an eye.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyelid" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyelid"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">eyelid</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "eyelid", $detail: "eyelid", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "eyelid", $detail: "eyelid", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyelids" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyelids"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">eyelids</Base:Description>
          <Base:Description type="look">
             A pair of ordinary eyelids.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="eyes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eyes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | this.appearance:eyeshapeARR[0] | ordinary ||$(this.appearance:eyeshape) }{? | $(this.appearance:eyecolor) |$(this.appearance:eyecolor) |}eyes
          </Base:Description>
          <Base:Description type="look">
             A pair of {? equal | this.appearance:eyeshapeARR[0] | ordinary ||$(this.appearance:eyeshape) }{? | $(this.appearance:eyecolor) |$(this.appearance:eyecolor) |}eyes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="face" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="face"/>
            <Base:SName sname="feature"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="faces"/>
            <Base:PName pname="features"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">face</Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:facialhair) | none |A face.|A face with <describe-prop what="appearance:faciallength"/> $(this.appearance:facialhair).}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="feet" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="feet"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">feet</Base:Description>
          <Base:Description type="look">
             A pair of feet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="finger" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="finger"/>
            <Base:SName sname="digit"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="index"/>
          <Base:Adjective adjective="middle"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">finger</Base:Description>
          <Base:Description type="look">
             A finger, with a nail at the end.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingernail" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingernail"/>
            <Base:SName sname="nail"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="finger"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingernail
          </Base:Description>
          <Base:Description type="look">
             A {? equal | $(this.appearance:nailtexture) | ordinary || $(this.appearance:nailtexture)}{? equal | $(this.appearance:nailfullshape) | ordinary || $(this.appearance:nailfullshape)} nail{? | $(this.trait:nailstate:desc) |is $(this.trait:nailstate:desc) kept{? | $(this.trait:nailedgeshape:desc) | with a $(this.trait:nailedgeshape:desc) edge.|.}|{? | $(this.trait:nailedgeshape:desc) | has a $(this.trait:nailedgeshape:desc) edge.|.}} <if val="$(this.trait:nailpolishcoating:desc)"> <or val="$(this.trait:nailpolishtexture:desc)"> <or val="$(this.trait:nailpolishcolor:desc)"><true> It is{? | $(this.trait:nailpolishcoating:desc) |$(this.trait:nailpolishcoating:desc)} coated with a{? | $(this.trait:nailpolishtexture:desc) | $(this.trait:nailpolishtexture:desc)}{? | $(this.trait:nailpolishcolor:desc) | $(this.trait:nailpolishcolor:desc)} polish.</true><false> It is unpolished</false></or> </or> </if>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingernails" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingernails"/>
            <Base:SName sname="nails"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="finger"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingernails
          </Base:Description>
          <Base:Description type="look">
             Ten {? equal | $(this.appearance:nailtexture) | ordinary || $(this.appearance:nailtexture)}{? equal | $(this.appearance:nailfullshape) | ordinary || $(this.appearance:nailfullshape)} nails{? | $(this.trait:nailstate:desc) |are $(this.trait:nailstate:desc) kept{? | $(this.trait:nailedgeshape:desc) | with a $(this.trait:nailedgeshape:desc) edge.|.}|{? | $(this.trait:nailedgeshape:desc) | have a $(this.trait:nailedgeshape:desc) edge.|.}} <if val="$(this.trait:nailpolishcoating:desc)"> <or val="$(this.trait:nailpolishtexture:desc)"> <or val="$(this.trait:nailpolishcolor:desc)"><true> They are{? | $(this.trait:nailpolishcoating:desc) |$(this.trait:nailpolishcoating:desc)} coated with a{? | $(this.trait:nailpolishtexture:desc) | $(this.trait:nailpolishtexture:desc)}{? | $(this.trait:nailpolishcolor:desc) | $(this.trait:nailpolishcolor:desc)} polish.</true><false> They are unpolished.</false> </or> </or> </if>
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingers" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingers"/>
            <Base:SName sname="digits"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">fingers</Base:Description>
          <Base:Description type="look">
             A set of fingers, with nails at the ends.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingertip" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingertip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingertip
          </Base:Description>
          <Base:Description type="look">
             A normal human's fingertip.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fingertips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fingertips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             fingertips
          </Base:Description>
          <Base:Description type="look">
             A normal human's fingertips.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fist" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fist"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">fist</Base:Description>
          <Base:Description type="look">A fist.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fists" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fists"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">fists</Base:Description>
          <Base:Description type="look">
             A pair of fists.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="forearms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="forearms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">forearms</Base:Description>
          <Base:Description type="look">
             A pair of forearms.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="fur" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="fur"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="fur"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:furtexture) | ordinary ||$(this.appearance:furtexture) }fur
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:furlength) | ordinary ||$(this.appearance:furlength) }{? equal | $(this.appearance:furtexture) | ordinary ||$(this.appearance:furtexture) }{? equal | $(this.appearance:furcolor) | ordinary ||{? equal | $(this.appearance:furcoloradj) | ordinary ||$(this.appearance:furcoloradj)}$(this.appearance:furcolor) }$(this.appearance:furtype).
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="groin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="groin"/>
            <Base:SName sname="crotch"/>
            <Base:SName sname="private"/>
            <Base:SName sname="genitals"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="crotches"/>
            <Base:PName pname="genitalia"/>
            <Base:PName pname="groins"/>
            <Base:PName pname="privates"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">groin</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "groin", $detail: "groin", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "groin", $detail: "groin", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gum" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gum"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="gums"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bottom"/>
          <Base:Adjective adjective="lower"/>
          <Base:Adjective adjective="top"/>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">gum</Base:Description>
          <Base:Description type="look">
             A gum.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="gums" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="gums"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="gums"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             gums
          </Base:Description>
          <Base:Description type="look">
             A pair of gums.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hair" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hair"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength) }{? equal | $(this.appearance:haircolor) | ordinary ||{? equal | $(this.appearance:haircoloradj) | ordinary ||$(this.appearance:haircoloradj)}$(this.appearance:haircolor) }hair
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:hairlength) | ordinary ||$(this.appearance:hairlength) }{? equal | $(this.appearance:hairtype) | ordinary ||$(this.appearance:hairtype) }{? equal | $(this.appearance:haircolor) | ordinary ||{? equal | $(this.appearance:haircoloradj) | ordinary ||$(this.appearance:haircoloradj)}$(this.appearance:haircolor) }hair.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hands" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hands"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:hands) | ordinary ||$(this.appearance:hands) }hands
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:hands) | ordinary |A pair of hands.|A pair of $(this.appearance:hands) hands.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="head" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="head"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="heads"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">head</Base:Description>
          <Base:Description type="examine">
             A head.
It has $(this.combat:injury:head)
          </Base:Description>
          <Base:Description type="look">
             A head.
It has $(this.combat:injury:head)
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="heart" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heart"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">heart</Base:Description>
          <Base:Description type="look">
             You cannot see a heart.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="heels" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heels"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">heels</Base:Description>
          <Base:Description type="look">
             A pair of heels.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="hips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">hips</Base:Description>
          <Base:Description type="look">
             A pair of hips.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="jaw" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="jaw"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="jaws"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:jawshape) | ordinary |jaw|$(this.appearance:jawshape) jaw}
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:jaw:descriptions:brief",$this: this), $detail: "jaw", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:jaw:descriptions:brief",$this: this), $detail: "jaw", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="jugular" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="vein"/>
            <Base:SName sname="jugular"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="jugulars"/>
            <Base:PName pname="veins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="jugular"/>
          <Base:Adjective adjective="neck"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             jugular vein
          </Base:Description>
          <Base:Description type="look">
             The jugular veins, running along the neck.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knees" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knees"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">knees</Base:Description>
          <Base:Description type="look">
             A pair of knees.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knuckle" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knuckle"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">knuckle</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "knuckle", $detail: "knuckle", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "knuckle", $detail: "knuckle", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="knuckles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knuckles"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">knuckles</Base:Description>
          <Base:Description type="look">
             A set of knuckles.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lap" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="true" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lap"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="laps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">lap</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "lap", $detail: "lap", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "lap", $detail: "lap", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftankle" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ankle"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left ankle
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "ankle", $detail: "leftankle", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "ankle", $detail: "leftankle", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftarm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="left arm"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="arm"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">left arm</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "arm", $detail: "leftarm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "arm", $detail: "leftarm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftarmpit" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armpit"/>
            <Base:SName sname="pit"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left armpit
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.leftarmpit:desc:look) |$(this.leftarmpit:desc:look)|An} armpit. {? | $(this.trait:leftarmpit:symbol:override) |$(this.trait:leftarmpit:symbol:override)|{? | $(this.trait:leftarmpit:symbol:desc) |It is $(this.trait:symboladj) with a $(this.trait:leftarmpit:symbol:desc).|}}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftcalve" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="calve"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left calve
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "calve", $detail: "leftcalve", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "calve", $detail: "leftcalve", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftcheek" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheek"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cheeks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:cheekshape) | ordinary ||$(this.appearance:cheekshape) }left cheek
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:leftcheek:descriptions:brief",$this: this), $detail: "leftcheek", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:leftcheek:descriptions:brief",$this: this), $detail: "leftcheek", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftear" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ear"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }left ear
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:leftear:descriptions:brief",$this: this), $detail: "leftear", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:leftear:descriptions:brief",$this: this), $detail: "leftear", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftelbow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="elbow"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left elbow
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "elbow", $detail: "leftelbow", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "elbow", $detail: "leftelbow", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lefteye" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:eyeshape) | ordinary ||$(this.appearance:eyeshape) }{? | $(this.appearance:eyecolor) |$(this.appearance:eyecolor) |}left eye
          </Base:Description>
          <Base:Description type="examine">
             {? | $(this.appearance:eyeshape) |{? equal | $(this.appearance:eyeshape) | ordinary |<describe-prop this="$(this)" what="appearance:eyecolor"/>|<describe-prop this="$(this)" what="appearance:eyeshape"/> $(this.appearance:eyecolor)}
|<describe-prop this="$(this)" what="appearance:eyecolor"/>}
 left eye.
          </Base:Description>
          <Base:Description type="look">
             {? | $(this.appearance:eyeshape) |{? equal | $(this.appearance:eyeshape) | ordinary |<describe-prop this="$(this)" what="appearance:eyecolor"/>|<describe-prop this="$(this)" what="appearance:eyeshape"/> $(this.appearance:eyecolor)}
|<describe-prop this="$(this)" what="appearance:eyecolor"/>}
 left eye.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftfoot" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="left foot"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="foot"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left foot
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "foot", $detail: "leftfoot", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "foot", $detail: "leftfoot", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftforearm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="left forearm"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="forearm"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left forearm
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "forearm", $detail: "leftforearm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "forearm", $detail: "leftforearm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lefthand" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="left hand"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="hand"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:hands) | ordinary ||$(this.appearance:hands) }left hand
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:lefthand:descriptions:brief",$this: this), $detail: "lefthand", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:lefthand:descriptions:brief",$this: this), $detail: "lefthand", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftheel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heel"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">heel</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "heel", $detail: "leftheel", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "heel", $detail: "leftheel", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lefthip" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">left hip</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "hip", $detail: "lefthip", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "hip", $detail: "lefthip", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftknee" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knee"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">knee</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "knee", $detail: "leftknee", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "knee", $detail: "leftknee", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftleg" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">left leg</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "leg", $detail: "leftleg", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "leg", $detail: "leftleg", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftpalm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="palm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left palm
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "palm", $detail: "leftpalm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "palm", $detail: "leftpalm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftshin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shin"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left shin
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "shin", $detail: "leftshin", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "shin", $detail: "leftshin", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftshoulder" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulder"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left shoulder
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "shoulder", $detail: "leftshoulder", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "shoulder", $detail: "leftshoulder", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lefttemple" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="temple"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">temple</Base:Description>
          <Base:Description type="look">
             A temple, to one side of the forehead.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftthigh" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thigh"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left thigh
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "thigh", $detail: "leftthigh", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "thigh", $detail: "leftthigh", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="leftwrist" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wrist"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             left wrist
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "wrist", $detail: "leftwrist", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "wrist", $detail: "leftwrist", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="legs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="legs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">legs</Base:Description>
          <Base:Description type="look">
             A pair of legs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="limbs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="limb"/>
            <Base:SName sname="member"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="limbs"/>
            <Base:PName pname="members"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="lower"/>
          <Base:Adjective adjective="nether"/>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">limbs</Base:Description>
          <Base:Description type="look">
             The arms and legs, together with their hands, feet, elbows, knees, etc..
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lip lower" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bottom"/>
          <Base:Adjective adjective="lower"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape) }lower lip
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:lipshape) | ordinary |A lower lip.|<describe-prop what="appearance:lipshape" cap="1"/> lower lip.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lip upper" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="top"/>
          <Base:Adjective adjective="upper"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape) }upper lip
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:lipshape) | ordinary |An upper lip.|<describe-prop what="appearance:lipshape" cap="1"/> upper lip.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="lips" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="lips"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:lipshape) | ordinary ||$(this.appearance:lipshape) }lips
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:lipshape) | ordinary |A pair of lips.|A pair of $(this.appearance:lipshape) lips.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="mouth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="mouth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="mouths"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:mouthshape) | ordinary ||$(this.appearance:mouthshape) }mouth
          </Base:Description>
          <Base:Description type="look">
             {? equal | $(this.appearance:mouthshape) | ordinary |A mouth.|<describe-prop what="appearance:mouthshape" cap="1"/> mouth.}
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="muscles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="muscle"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="muscles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">muscles</Base:Description>
          <Base:Description type="look">
             The contractile tissue which produces movement in the human body.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="navel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="navel"/>
            <Base:SName sname="bellybutton"/>
            <Base:SName sname="omphalos"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bellybuttons"/>
            <Base:PName pname="navels"/>
            <Base:PName pname="omphalae"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">navel</Base:Description>
          <Base:Description type="look">A navel.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="neck" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="neck"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="necks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">neck</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "neck", $detail: "neck", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "neck", $detail: "neck", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nose" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nose"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="noses"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:noseshape) | ordinary ||$(this.appearance:noseshape) }nose
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:nose:descriptions:brief",$this: this), $detail: "nose", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:nose:descriptions:brief",$this: this), $detail: "nose", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nostil" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nostril"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">nostril</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "nostril", $detail: "nostril", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "nostril", $detail: "nostril", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="nostrils" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="nostrils"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">nostrils</Base:Description>
          <Base:Description type="look">
             A pair of nostrils, on a nose.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="palms" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="palms"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">palms</Base:Description>
          <Base:Description type="look">
             A pair of palms.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pate" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames/>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="bald"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             bald pate
          </Base:Description>
          <Base:Description type="examine">
             A bald pate.
          </Base:Description>
          <Base:Description type="look">
             A bald pate.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pinkies" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pinkies"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="little"/>
          <Base:Adjective adjective="pinky"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">pinkies</Base:Description>
          <Base:Description type="look">
             The little fingers of the hands, with nails at the ends.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="pinky" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="pinky"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="little"/>
          <Base:Adjective adjective="pinky"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">pinky</Base:Description>
          <Base:Description type="look">
             The little finger on a hand, with a nail at the end.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="ribs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ribcage"/>
            <Base:SName sname="rib"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="ribcages"/>
            <Base:PName pname="ribs"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">ribs</Base:Description>
          <Base:Description type="examine">
             A set of ribs forming a ribcage.
          </Base:Description>
          <Base:Description type="look">
             A set of ribs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightankle" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ankle"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right ankle
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "ankle", $detail: "rightankle", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "ankle", $detail: "rightankle", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightarm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="arm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right arm
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "arm", $detail: "rightarm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "arm", $detail: "rightarm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightarmpit" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="armpit"/>
            <Base:SName sname="pit"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right armpit
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "armpit", $detail: "rightarmpit", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "armpit", $detail: "rightarmpit", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightcalve" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="calve"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right calve
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "calve", $detail: "rightcalve", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "calve", $detail: "rightcalve", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightcheek" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="cheek"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="cheeks"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:cheekshape) | ordinary ||$(this.appearance:cheekshape) }right cheek
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:rightcheek:descriptions:brief",$this: this), $detail: "rightcheek", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:rightcheek:descriptions:brief",$this: this), $detail: "rightcheek", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightear" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="ear"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:earshape) | ordinary ||$(this.appearance:earshape) }right ear
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:rightear:descriptions:brief",$this: this), $detail: "rightear", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:rightear:descriptions:brief",$this: this), $detail: "rightear", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightelbow" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="elbow"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right elbow
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "elbow", $detail: "rightelbow", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "elbow", $detail: "rightelbow", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="righteye" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="eye"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:eyeshape) | ordinary ||$(this.appearance:eyeshape) }{? | $(this.appearance:eyecolor) |$(this.appearance:eyecolor) |}right eye
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:righteye:descriptions:brief",$this: this), $detail: "righteye", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:righteye:descriptions:brief",$this: this), $detail: "righteye", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightfoot" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="foot"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right foot
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "foot", $detail: "rightfoot", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "foot", $detail: "rightfoot", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightforearm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="forearm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right forearm
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "forearm", $detail: "rightforearm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "forearm", $detail: "rightforearm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="righthand" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hand"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             {? equal | $(this.appearance:hands) | ordinary ||$(this.appearance:hands) }right hand
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:righthand:descriptions:brief",$this: this), $detail: "righthand", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: UnSAM(this."details:righthand:descriptions:brief",$this: this), $detail: "righthand", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightheel" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="heel"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">heel</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "heel", $detail: "rightheel", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "heel", $detail: "rightheel", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="righthip" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="hip"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right hip
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "hip", $detail: "righthip", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "hip", $detail: "righthip", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightknee" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="knee"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right knee
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "knee", $detail: "rightknee", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "knee", $detail: "rightknee", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightleg" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="leg"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right leg
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "leg", $detail: "rightleg", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "leg", $detail: "rightleg", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightpalm" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="palm"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right palm
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "palm", $detail: "rightpalm", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "palm", $detail: "rightpalm", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightshin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shin"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right shin
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "shin", $detail: "rightshin", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "shin", $detail: "rightshin", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightshoulder" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulder"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right shoulder
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "shoulder", $detail: "rightshoulder", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "shoulder", $detail: "rightshoulder", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="righttemple" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="temple"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">temple</Base:Description>
          <Base:Description type="look">
             A temple, to one side of the forehead.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightthigh" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thigh"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right thigh
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "thigh", $detail: "rightthigh", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "thigh", $detail: "rightthigh", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rightwrist" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wrist"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             right wrist
          </Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "wrist", $detail: "rightwrist", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "wrist", $detail: "rightwrist", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="rump" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="rump"/>
            <Base:SName sname="butt"/>
            <Base:SName sname="ass"/>
            <Base:SName sname="rear"/>
            <Base:SName sname="buttock"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="asses"/>
            <Base:PName pname="buttocks"/>
            <Base:PName pname="butts"/>
            <Base:PName pname="rears"/>
            <Base:PName pname="rumps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">rump</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "rump", $detail: "rump", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "rump", $detail: "rump", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="scalp" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="scalp"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="scalps"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">scalp</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "scalp", $detail: "scalp", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "scalp", $detail: "scalp", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shins" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shins"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">shins</Base:Description>
          <Base:Description type="look">
             A pair of shins.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shoulderblades" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulderblade"/>
            <Base:SName sname="scapula"/>
            <Base:SName sname="bone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="bones"/>
            <Base:PName pname="scapulas"/>
            <Base:PName pname="shoulderblades"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             shoulderblades
          </Base:Description>
          <Base:Description type="look">
             The triangular bones across the upper back of the body, connected to the collarbone.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="shoulders" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="shoulders"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             shoulders
          </Base:Description>
          <Base:Description type="look">
             A pair of shoulders.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="side" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="true" against="true" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="true"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="side"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sides"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">side</Base:Description>
          <Base:Description type="look">
             The side, between the ribs and the waist.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="sides" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sides"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">sides</Base:Description>
          <Base:Description type="look">
             The sides, between the ribs and the waist.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="skin" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="skin"/>
            <Base:SName sname="complexion"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="complexions"/>
            <Base:PName pname="skins"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">
             $(this.appearance:skin) skin
          </Base:Description>
          <Base:Description type="look">
             <describe-prop what="appearance:skin" cap="1"/> complexion.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="skull" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="skull"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="skulls"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">skull</Base:Description>
          <Base:Description type="look">A skull.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="sole" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="sole"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="sole"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="foot"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             foot's sole
          </Base:Description>
          <Base:Description type="look">
             The sole of a foot.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="soles" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="soles"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="soles"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="foot"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">
             feet's soles
          </Base:Description>
          <Base:Description type="look">
             The soles of some feet.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="spine" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="spine"/>
            <Base:SName sname="chord"/>
            <Base:SName sname="vertebra"/>
            <Base:SName sname="bone"/>
            <Base:SName sname="backbone"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="backbones"/>
            <Base:PName pname="bones"/>
            <Base:PName pname="chords"/>
            <Base:PName pname="spines"/>
            <Base:PName pname="vertebrae"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="back"/>
          <Base:Adjective adjective="spinal"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">backbone</Base:Description>
          <Base:Description type="look">
             A backbone.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="teeth" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tooth"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="teeth"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">teeth</Base:Description>
          <Base:Description type="look">
             A set of teeth.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="temples" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="temples"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">temples</Base:Description>
          <Base:Description type="look">
             A pair of temples, on either side of the forehead.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thighs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="true" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thighs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">thighs</Base:Description>
          <Base:Description type="look">
             A pair of thighs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="throat" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="throat"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="throats"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">throat</Base:Description>
          <Base:Description type="look">A throat.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thumb" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thumb"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="left"/>
          <Base:Adjective adjective="right"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">thumb</Base:Description>
          <Base:Description type="look">A thumb.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="thumbs" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="thumbs"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">thumbs</Base:Description>
          <Base:Description type="look">
             A pair of thumbs.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toe" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toe"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="big"/>
          <Base:Adjective adjective="little"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">toe</Base:Description>
          <Base:Description type="look">A toe.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toenail" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toenail"/>
            <Base:SName sname="nail"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toe"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">toenail</Base:Description>
          <Base:Description type="look">
             A toenail, at the end of a toe.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toenails" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toenails"/>
            <Base:SName sname="nails"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives>
          <Base:Adjective adjective="toe"/>
        </Base:Adjectives>
        <Base:Descriptions>
          <Base:Description type="brief">toenails</Base:Description>
          <Base:Description type="look">
             Ten toenails, at the ends of the toes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="toes" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="toes"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">toes</Base:Description>
          <Base:Description type="look">
             A set of toes.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="tongue" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="tongue"/>
            <Base:SName sname="tounge"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="tongues"/>
            <Base:PName pname="tounges"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">tongue</Base:Description>
          <Base:Description type="look">A tongue.</Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="torso" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="true" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="torso"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="torsos"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">torso</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "torso", $detail: "torso", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "torso", $detail: "torso", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="waist" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="waist"/>
          </Base:SNames>
          <Base:PNames>
            <Base:PName pname="waists"/>
          </Base:PNames>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">waist</Base:Description>
          <Base:Description type="examine">
             $[Call(this,"makebodypartdescription",$part: "waist", $detail: "waist", $required: "e")]
          </Base:Description>
          <Base:Description type="look">
             $[Call(this,"makebodypartdescription",$part: "waist", $detail: "waist", $required: "l")]
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
      <Base:Detail id="wrists" prime="false" def="false" abstract="false" hidden="false" luminosity="0" targetable_in_dark="false" plural="false">
        <Base:Preposition close="false" against="false" under="false" on="false" inside="false" near="false" over="false" behind="false" before="false" beside="false"/>
        <Base:Names>
          <Base:SNames>
            <Base:SName sname="wrists"/>
          </Base:SNames>
          <Base:PNames/>
        </Base:Names>
        <Base:Adjectives/>
        <Base:Descriptions>
          <Base:Description type="brief">wrists</Base:Description>
          <Base:Description type="look">
             A pair of wrists.
          </Base:Description>
        </Base:Descriptions>
        <Base:Exit door="false" never_obvious="false" obvious_when_open="false" hidden_when_closed="false" separate="false" self-locking="false" deadbolt="false"/>
        <Base:Climbable/>
      </Base:Detail>
    </Base:Details>
    <Base:Combat>
      <Base:Strength value="10"/>
      <Base:MaxFatigue value="1"/>
    </Base:Combat>
    <Base:Clothing>
      <Base:SingleWear value="false"/>
    </Base:Clothing>
    <Base:Crafting see_level="0" do_level="0" time="0" attention="false" held="false">
      <Base:Ingredients/>
      <Base:Tools/>
      <Base:CraftVerbs/>
    </Base:Crafting>
    <Base:InitialContents/>
    <Base:InitialProperties/>
    <Core:Properties>
      <Core:Property property="export:appearance:clawtype">
         "nails"
      </Core:Property>
      <Core:Property property="export:appearance:feettype">
         "feet"
      </Core:Property>
      <Core:Property property="export:appearance:furtype">
         "fur"
      </Core:Property>
      <Core:Property property="export:appearance:hashair">
         "yes"
      </Core:Property>
      <Core:Property property="export:detailtocoverage">
         ([ "ankles":(\{ "ankle-left", "ankle-right" \}), "armpits":(\{ "arm-upper-left", "arm-upper-right" \}), "arms":(\{ "arm-upper-left", "elbow-left", "arm-lower-left", "wrist-left", "hand-left", "fingers-left", "arm-upper-right", "elbow-right", "arm-lower-right", "wrist-right", "hand-right", "fingers-right" \}), "back":(\{ "back" \}), "belly":(\{ "chest", "waist" \}), "body":(\{ "chest" \}), "breastbone":(\{ "chest" \}), "brow":(\{ "head-face-upper" \}), "calves":(\{ "calve-right", "calve-left" \}), "cheeks":(\{ "head-fore" \}), "chest":(\{ "chest" \}), "chin":(\{ "head-face-lower" \}), "collarbone":(\{ "shoulders" \}), "earlobe":(\{ "earlobe-right", "earlobe-left" \}), "earlobes":(\{ "earlobe-right", "earlobe-left" \}), "ears":(\{ "earlobe-right", "earlobe-left" \}), "elbows":(\{ "elbow-left", "elbow-right" \}), "eyebrow":(\{ "head-face-upper" \}), "eyebrows":(\{ "head-face-upper" \}), "eyelash":(\{ "head-face-upper" \}), "eyelid":(\{ "head-face-upper" \}), "eyelids":(\{ "head-face-upper" \}), "eyes":(\{ "head-face-upper" \}), "face":(\{ "head-face-fore", "head-face-upper", "head-face-nose", "head-face-lower" \}), "feet":(\{ "foot-right", "foot-left" \}), "finger":(\{ "fingers-left", "fingers-right" \}), "fingernail":(\{ "fingers-left", "fingers-right" \}), "fingernails":(\{ "fingers-left", "fingers-right" \}), "fingers":(\{ "fingers-left", "fingers-right" \}), "fingertip":(\{ "fingers-left", "fingers-right" \}), "fingertips":(\{ "fingers-left", "fingers-right" \}), "fist":(\{ "hand-left", "hand-right" \}), "fists":(\{ "hand-left", "hand-right" \}), "groin":(\{ "groin" \}), "hands":(\{ "hand-left", "hand-right" \}), "head":(\{ "head-top", "head-fore", "head-face-upper", "head-face-nose", "head-face-lower", "head-back", "earlobe-right", "earlobe-left", "throat", "neck" \}), "heart":(\{ "chest" \}), "heels":(\{ "foot-left", "foot-right" \}), "hips":(\{ "thigh-right", "thigh-left" \}), "jaw":(\{ "head-face-lower" \}), "jugular":(\{ "neck", "throat" \}), "knees":(\{ "knee-left", "knee-right" \}), "knuckle":(\{ "hand-left", "hand-right" \}), "knuckles":(\{ "hand-left", "hand-right" \}), "lap":(\{ "waist", "groin" \}), "leftankle":(\{ "ankle-left" \}), "leftarm":(\{ "arm-upper-left", "elbow-left", "arm-lower-left" \}), "leftarmpit":(\{ "arm-upper-left" \}), "leftcalf":(\{ "calve-left" \}), "leftcheek":(\{ "head-face-upper" \}), "leftear":(\{ "earlobe-left" \}), "leftelbow":(\{ "elbow-left" \}), "lefteye":(\{ "head-face-upper" \}), "leftfoot":(\{ "foot-left" \}), "lefthand":(\{ "hand-left" \}), "leftheel":(\{ "foot-left" \}), "lefthip":(\{ "thigh-left" \}), "leftknee":(\{ "knee-left" \}), "leftleg":(\{ "leg-upper-left", "thigh-left", "knee-left", "calve-left", "ankle-left", "foot-left" \}), "leftpalm":(\{ "hand-left" \}), "leftshin":(\{ "calve-left" \}), "leftshoulder":(\{ "shoulders" \}), "lefttemple":(\{ "head-face-upper" \}), "leftthigh":(\{ "thigh-left" \}), "leftwrist":(\{ "wrist-left" \}), "legs":(\{ "thigh-left", "knee-left", "calve-left", "ankle-left", "foot-left", "thigh-right", "knee-right", "calve-right", "ankle-right", "foot-right" \}), "lip":(\{ "head-face-lower" \}), "lip lower":(\{ "head-face-lower" \}), "lip upper":(\{ "head-face-lower" \}), "lips":(\{ "head-face-lower" \}), "mouth":(\{ "head-face-lower" \}), "navel":(\{ "waist" \}), "neck":(\{ "neck" \}), "nose":(\{ "head-face-nose" \}), "nostril":(\{ "head-face-nose" \}), "nostrils":(\{ "head-face-nose" \}), "palms":(\{ "hand-left", "hand-right" \}), "pinkies":(\{ "fingers-left", "fingers-right" \}), "pinky":(\{ "fingers-left", "fingers-right" \}), "rightankle":(\{ "ankle-right" \}), "rightarm":(\{ "arm-upper-right", "elbow-right", "arm-lower-right" \}), "rightarmpit":(\{ "arm-upper-right" \}), "rightcalf":(\{ "calve-right" \}), "rightcheek":(\{ "head-face-lower" \}), "rightear":(\{ "earlobe-right" \}), "rightelbow":(\{ "elbow-right" \}), "righteye":(\{ "head-face-upper" \}), "rightfoot":(\{ "foot-right" \}), "righthand":(\{ "hand-right" \}), "rightheel":(\{ "foot-right" \}), "righthip":(\{ "thigh-right" \}), "rightknee":(\{ "knee-right" \}), "rightleg":(\{ "thigh-right", "knee-right", "calve-right", "ankle-right", "foot-right", "leg-upper-right" \}), "rightpalm":(\{ "hand-right" \}), "rightshin":(\{ "calve-right" \}), "rightshoulder":(\{ "shoulders" \}), "righttemple":(\{ "head-face-upper" \}), "rightthigh":(\{ "thigh-right" \}), "rightwrist":(\{ "wrist-right" \}), "rump":(\{ "thigh-right", "thigh-left" \}), "scalp":(\{ "head-top" \}), "shins":(\{ "calve-right", "calve-left" \}), "shoulderblades":(\{ "shoulders" \}), "shoulders":(\{ "shoulders" \}), "side":(\{ "waist" \}), "sides":(\{ "waist" \}), "sole":(\{ "foot-left", "foot-right" \}), "spine":(\{ "back" \}), "teeth":(\{ "head-face-lower" \}), "temples":(\{ "head-face-upper" \}), "thighs":(\{ "thigh-right", "thigh-left" \}), "throat":(\{ "neck", "throat" \}), "thumb":(\{ "fingers-left", "fingers-right" \}), "thumbs":(\{ "fingers-left", "fingers-right" \}), "toe":(\{ "foot-left", "foot-right" \}), "toenail":(\{ "foot-left", "foot-right" \}), "toenails":(\{ "foot-left", "foot-right" \}), "toes":(\{ "foot-left", "foot-right" \}), "tongue":(\{ "head-face-lower" \}), "torso":(\{ "back", "chest", "shoulders", "waist", "groin", "decolletage" \}), "waist":(\{ "waist" \}), "wrists":(\{ "wrist-right", "wrist-left" \}) ])
      </Core:Property>
      <Core:Property property="export:generic">1</Core:Property>
      <Core:Property property="export:generic:character">
         1
      </Core:Property>
      <Core:Property property="export:state:cansetstate">
         "true"
      </Core:Property>
      <Core:Property property="export:trait:agility">
         3
      </Core:Property>
      <Core:Property property="export:trait:animal">
         "unknown"
      </Core:Property>
      <Core:Property property="export:trait:animaltype">
         "unknown"
      </Core:Property>
      <Core:Property property="export:trait:body">3</Core:Property>
      <Core:Property property="export:trait:brief">
         "someone"
      </Core:Property>
      <Core:Property property="export:trait:dex">3</Core:Property>
      <Core:Property property="export:trait:examine">
         "You examine someone."
      </Core:Property>
      <Core:Property property="export:trait:intelligence">
         5
      </Core:Property>
      <Core:Property property="export:trait:look">
         "You look at someone."
      </Core:Property>
      <Core:Property property="export:trait:mind">3</Core:Property>
      <Core:Property property="export:trait:nominative">
         "he"
      </Core:Property>
      <Core:Property property="export:trait:objective">
         "him"
      </Core:Property>
      <Core:Property property="export:trait:possessive">
         "his"
      </Core:Property>
      <Core:Property property="export:trait:sex">
         "man"
      </Core:Property>
      <Core:Property property="export:trait:speed">5</Core:Property>
      <Core:Property property="export:trait:wits">5</Core:Property>
      <Core:Property property="merry:act-pre:evoke">
         X[M] return TRUE; 
EmitTo(\$actor, "Check evoke"); 
if(!\$actor."SkotOS:CurrentLang" \|\| (\$actor."SkotOS:CurrentLang" == "0")) return TRUE; 
 
EmitTo(\$actor, "Act evoke"); 
return TRUE; 
 
\$(evoke-actor) = \$evoke; 
 
\$(evoke-target) = INLANG("western", 8, \$evoke); 
\$(evoke-witness) = INLANG("western", 8, \$evoke); 
\$(verb-extra:pe) = "(in something)"; 
 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act-pre:skill">
         X[M] EmitTo(\$actor, "SKILL"); 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:roll">
         X[M] if(\$evoke) 
\{ 
\$multiplier = 1; 
\$dice = 0; 
\$addition = 0; 
 
\$finding = "addition"; 
 
\$result = 0; 
 
for (\$i = 1; \$i \< strlen(\$evoke)-1; \$i++) \{ 
  switch(\$evoke[\$i]) \{ 
    case '0' .. '9': 
      if(\$finding == "addition") 
      \{ 
        \$addition = \$addition*10+(Int(\$evoke[\$i])-48); 
      \} else \{ 
        \$dice = \$dice*10+(Int(\$evoke[\$i])-48); 
      \} 
    break; 
    case 'd': 
    case 'D': 
      \$multiplier = \$addition; 
      \$addition = 0; 
      \$finding = "dice"; 
      if(\$multiplier == 0) \$multiplier = 1; 
    break; 
    case '+': 
      \$result = \$result + ((\$multiplier * (random(\$dice)+1))+\$addition); 
      \$finding = "addition"; 
      \$multiplier = 1; \$addition = 0; \$dice = 0; 
    break; 
    default: 
    break; 
      EmitTo(\$actor, "Unknown roll"); 
      return FALSE; 
  \} 
 
\} 
 
\$result = \$result + ((\$multiplier * (random(\$dice)+1))+\$addition); 
  EmitTo(\$actor, ":"+ Describe(\$actor) +" rolled a "+Str(\$result)+" ("+\$evoke[1..strlen(\$evoke)-2]+")"); 
  EmitTo(nil /* defunct */, ":"+ Describe(\$actor) +" rolled a "+Str(\$result)+" ("+\$evoke[1..strlen(\$evoke)-2]+")"); 
 
/*  EmitIn(\$actor."base:environment", ":"+ Describe(\$actor) +" rolled a "+Str(\$result)+".");*/ 
\} else \{ 
  \$result = random(20)+1; 
  EmitTo(\$actor, ":"+ Describe(\$actor) +" rolled a "+Str(\$result)+"."); 
  EmitTo(nil /* defunct */, ":"+ Describe(\$actor) +" rolled a "+Str(\$result)+"."); 
\} 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:act:sniff">
         X[M] EmitTo(\$actor, "CALLING");                 
Call(\$\{Allegory:Lib:UrPeople:Description\}, "updatedesc", \$body: this);                 
EmitTo(\$actor, "SNIFFING");                 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:act:start">
         X[M] if(this."skotos:playercapname")\{               
 this."trait:superbrief" = this."skotos:playercapname";               
\}                                         
                                                                                /*                                                               
Call(this,"makehairdesc");               
                                                        
Call(this,"makeexaminedescpart");               
  */                                                                                                                                             
return TRUE;
      </Core:Property>
      <Core:Property property="merry:inherit:lib:wound-bruise">
         \<MOVED:20080918-114107:MGeneric:DB:WoundDB\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:wound-heal">
         \<MOVED:20080918-114107:MGeneric:DB:Healing\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:wound-heal:pre">
         \<MOVED:20080918-114107:MGeneric:DB:Healing\>
      </Core:Property>
      <Core:Property property="merry:inherit:lib:wound-wound">
         \<MOVED:20080918-114107:MGeneric:DB:WoundDB\>
      </Core:Property>
      <Core:Property property="merry:lib:alteration:hooks:createdetail-facialhair">
         X[M] string *snames;                    
string value;                    
int ctr;                    
                    
if(this."details:facialhair:snames" \&\& this."alteration:facialhair")\{                         
 this."details:facialhair:hidden" = FALSE;                         
 value = this."alteration:facialhair";                    
 if(value=="none")\{                         
  this."details:facialhair:hidden" = TRUE;                         
    
 \}                         
 else\{                         
  snames = this."details:facialhair:snames";                         
  for(ctr=0;ctr\<sizeof(snames);ctr++)\{                         
   Set(this,"details:facialhair:sname:" + snames[ctr],nil);                         
  \}                         
  Set(this,"details:facialhair:sname:" + value,value + "s");                         
 \}                         
\}
      </Core:Property>
      <Core:Property property="merry:lib:alteration:hooks:createdetail-tattoo">
         X[M] /*                                                  
\$trait                                                  
\$value                                                  
\$objalter                                                  
\$detail                                                  
*/                                                  
int hide;                                                  
string value;                                                  
string *spl;                                                  
string detbrief,detlook,n1,a1;                                                  
string b;                                     
                                                  
hide = 0;                                                  
if(\$value == "none") hide = 1;                                                  
                                     
b = UnSAM(Get(\$objalter,"details:" + \$detail + ":descriptions:brief"),\$this: \$objalter);                                     
                                     
n1="";                                     
a1="";                                     
spl = explode(b," ");                                     
                                     
if(sizeof(spl)\>=2)\{                                     
a1=spl[0];                                     
n1=spl[1];                                     
\}                                     
else\{                                     
n1 = spl[0];                                     
\}                                                  
                                     
value = Call(\$\{MOVED:20080918-114107:MGeneric:DB:General\},"aan",\$word: \$value);                                                  
                                                  
detbrief = b + " tattoo";                                                  
                                                  
detlook = "The tattoo of " + value + ".";                                                  
                                                  
                                                  
Call(\$\{MOVED:20080918-114107:MGeneric:DB:General\},"makedetail", \$hide: hide, \$detail: \$detail, \$trait: \$trait, \$objalter: \$objalter, \$detbrief: detbrief, \$detlook: detlook, \$detexamine: detlook, \$snames: (\{"tattoo"\}), \$adjectives: (\{\$value,n1,a1\}));
      </Core:Property>
      <Core:Property property="merry:lib:createdescriptiontraits">
         X[M] if(this."alteration:createdescriptiontraits:norecurse"==1)return FALSE;                   
this."alteration:createdescriptiontraits:norecurse" = 1;                   
                   
if(this."details:default:descriptions:brief")\{                                                                                this."trait:brief" = replace_strings(UnSAM(this."details:default:descriptions:brief"),"\\n","");                   
\}                   
                   
if(this."details:default:descriptions:look")\{                                                                                this."trait:look" = replace_strings(UnSAM(this."details:default:descriptions:look"),"\\n","");                   
\}                   
                   
if(this."details:default:descriptions:examine")\{                                                                                this."trait:examine" = replace_strings(UnSAM(this."details:default:descriptions:examine"),"\\n","");                   
\}                   
else\{                                                                                this."trait:examine" = this."trait:look";                   
\}                   
this."alteration:createdescriptiontraits:norecurse" = nil;                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makebodypartdescription">
         X[M] /*                   
create briefs,looks and examines for a body part to show                   
1) tattoos                   
2) wounds and bruises                   
3) bandages                   
4) scars *put these in*                   
                   
these details will only show on a look if the body part is not covered by clothing                   
                   
A/an [wounded/bruised/bandaged] \$detail. It has been tattooed with a/an [tattoo]                   
                   
\$part - text descript                   
\$detail - detail name                   
\$required -b,l or e                   
*/                   
                   
string bdesc,ldesc,edesc;                   
object obj;                   
object *arro;                   
string *covers;                   
int covered,ctr,ctr2,sz;                   
string bandaged,tattooed;                   
string *desc;                   
object clothing;                   
                   
\$part = replace_strings(\$part,"\\n","");                   
                   
obj = \$\{MOVED:20080918-114107:MGeneric:DB:General\};                   
desc = (\{\})   ;                   
if(\$required == "b")\{                   
 return Call(obj,"aan",\$word: \$part);                   
\}                   
                   
covered = 0;                   
bandaged = "";                   
tattooed = "";                   
                   
                   
/*covered*/                   
if(this.detailtocoverage[\$detail])\{                   
 covers = this.detailtocoverage[\$detail];                   
                   
 covered = 0;                   
 for(ctr=0;ctr\<sizeof(covers);ctr++)\{                   
  if(this."base:clothes-worn"[covers[ctr]])\{                   
   covered = 1;                   
   bandaged="";                   
   sz = sizeof(this."base:clothes-worn"[covers[ctr]]);                   
   clothing = this."base:clothes-worn"[covers[ctr]][0];                   
   if(sz==1 \&\& clothing."healing:isbandage") \{                   
    bandaged = "bandaged ";                   
   \}                   
   break;                   
                   
  \}                   
 \}                   
                   
\}                   
                   
if(\$required =="l" \&\& covered==1)\{                   
 return capitalize(Call(obj,"aan",\$word: bandaged + \$part) + ".");                   
\}                   
                   
                   
if(covered==1)\{                   
 bandaged = "A bandaged ";                   
 if(this."debug:2") EmitTo(this,"mbpd-----this.base:clothes-worn is " + dump_value(this."base:clothes-worn"));                   
                   
 if(\$required =="l")\{                   
  for(ctr=0;ctr\<sizeof(covers);ctr++)\{                   
   if(this."debug:2") EmitTo(this,"mbpd-----covers[ctr] is " + dump_value(covers[ctr]));                   
   if(this."base:clothes-worn"[covers[ctr]])\{                   
    arro = this."base:clothes-worn"[covers[ctr]];                   
    for(ctr2=0;ctr2\<sizeof(arro);ctr2++)\{                   
     if(!arro[ctr2]."healing:isbandage")\{                   
      bandaged="";                   
     \}                   
    \}                   
   \}                   
  \}                   
 \}                   
 else\{                   
  bandaged="";                   
  for(ctr=0;ctr\<sizeof(covers);ctr++)\{                   
   if(this."debug:2") EmitTo(this,"mbpd-----covers[ctr] is " + dump_value(covers[ctr]));                   
   if(this."base:clothes-worn"[covers[ctr]])\{                   
    arro = this."base:clothes-worn"[covers[ctr]];                   
    for(ctr2=0;ctr2\<sizeof(arro);ctr2++)\{                   
     if(arro[ctr2]."healing:isbandage")\{                   
      bandaged="A bandaged ";                   
      break;                   
     \}                   
    \}                   
   \}                   
  \}                   
 \}                   
\}                   
                   
                   
/*wounded*/                   
if(Get(this,"wound:" + \$detail +":desc"))\{                   
 desc += (\{Get(this,"wound:" + \$detail +":desc")\});                   
\}                   
                   
/*bruised*/                   
if(Get(this,"bruise:" + \$detail +":desc"))\{                   
 desc += (\{Get(this,"bruise:" + \$detail +":desc")\});                   
\}                   
/*tattooed*/                   
if(Get(this,"alteration:" + \$detail +":tattoo"))\{                   
 if(Get(this,"alteration:" + \$detail +":tattoo")!="none")\{                   
  tattooed=Get(this,"alteration:" + \$detail +":tattoo");                   
 \}                   
\}                   
                   
/*scarred*/                   
if(Get(this,"scar:" + \$detail + ":desc"))\{                   
 desc += (\{Get(this,"scar:" + \$detail + ":desc")\});                   
\}                   
                   
if(this."debug:2")\{                   
 EmitTo(this,"mbpd-----covered is " + dump_value(covered));                   
 EmitTo(this,"mbpd-----bandaged is " + dump_value(bandaged));                   
 EmitTo(this,"mbpd-----tattooed is " + dump_value(tattooed));                   
 EmitTo(this,"mbpd-----desc is " + dump_value(desc));                   
\}                   
                   
edesc = Call(obj,"aan",\$word: \$part) + ".";                   
                   
/*do edesc*/                   
if(bandaged!="")\{                   
 edesc = bandaged + \$part + ".";                   
\}                   
else\{                   
 /*wounded,bruised and scarred*/                   
 if(sizeof(desc)\>0)\{                   
  edesc = "";                   
  sz = sizeof(desc);                   
  for(ctr=0;ctr\<sz;ctr++)\{                   
   edesc += desc[ctr];                   
   if(ctr\<=sz-2)\{                   
    if(ctr==sz-2)\{                   
     edesc += " and ";                   
    \}                   
    else\{                   
     edesc += ", ";                   
    \}                   
   \}                   
  \}                   
  edesc += " " + \$part;                   
  edesc = Call(obj,"aan",\$word: edesc) + ".";                   
 \}                   
                   
\}                   
                   
if(tattooed !="")\{                   
 edesc += " It is tattooed with " + Call(obj,"aan",\$word: tattooed) + ".";                   
\}                   
                   
                   
                   
if(this."debug:2")\{                   
 EmitTo(this,"mbpd-----edesc is " + dump_value(edesc));                   
\}                   
                   
return capitalize(edesc);
      </Core:Property>
      <Core:Property property="merry:lib:makeexaminedescpart">
         X[M] /*put together nose shape, lipshape, mouthshape, cheeckshape and ear shape*/                   
                   
                   
string *desc;                   
string *descpart;                   
string *desc2;                   
int ctr,found;                   
                   
if(this."alteration:makeexaminepartdesc:norecurse"==1)return FALSE;                   
this."alteration:makeexaminepartdesc:norecurse" = 1;                   
desc=(\{\});                   
                   
desc += (\{this."appearance:eyeshape"\});                   
                   
desc += (\{this."appearance:eyecolor"\});                   
                   
desc += (\{this."appearance:eyebrowshape"\});                   
                   
desc += (\{this."appearance:browshape"\});                   
                   
                   
if(desc[0]!="ordinary")\{                   
 this."appearance:examinedescpart" = capitalize(desc[0]) + " " + desc[1];                   
                   
\}                   
else\{                   
 this."appearance:examinedescpart" = capitalize(desc[1]);                   
\}                   
                   
this."appearance:examinedescpart" += " eyes return your gaze";                   
                   
if(desc[2]!="ordinary" \&\& desc[3]!="ordinary")\{                   
 this."appearance:examinedescpart" += " from beneath ";                   
 if(desc[2] !="ordinary")\{                   
  this."appearance:examinedescpart" += desc[2] + " eyebrows";                   
 \}                   
 if(desc[3]!="ordinary")\{                   
  if(desc[2]!="ordinary")\{                   
   this."appearance:examinedescpart" += " and a " + desc[3] + " forehead";                   
  \}                   
  else\{                   
   this."appearance:examinedescpart" += " a " + desc[3] + " forehead";                   
                   
                   
  \}                   
 \}                   
\}                   
this."appearance:examinedescpart" += ". ";                   
                   
                   
                   
                   
                   
                   
                   
desc=(\{\});                   
desc2=(\{\});                   
descpart=(\{"nose","lips","mouth","jaw","cheeks","ears","jaw"\});                   
                   
desc += (\{this."appearance:noseshape"\});                   
desc += (\{this."appearance:lipshape"\});                   
desc += (\{this."appearance:mouthshape"\});                   
desc += (\{this."appearance:jawshape"\});                   
desc += (\{this."appearance:cheekshape"\});                   
desc += (\{this."appearance:earshape"\});                   
                   
                   
                   
for(ctr=0;ctr\<sizeof(desc);ctr++)\{                   
 if(desc[ctr]!="ordinary")\{                   
  desc2+= (\{desc[ctr] + " " + descpart[ctr]\});                   
 \}                   
\}                   
                   
if(sizeof(desc2)\>0)\{                   
 this."appearance:examinedescpart" += "You also note " + this."trait:possessive" + " ";                   
 for(ctr=0;ctr\<sizeof(desc2);ctr++)\{                   
  this."appearance:examinedescpart" += desc2[ctr];                   
  if(ctr\<sizeof(desc2)-2)\{                   
   this."appearance:examinedescpart" += ", ";                   
  \}                   
  else\{                   
   if(ctr\<sizeof(desc2)-1) this."appearance:examinedescpart" += " and ";                   
  \}                   
 \}                   
 this."appearance:examinedescpart" += ".";                   
\}                   
Call(this,"createdescriptiontraits");                   
this."alteration:makeexaminepartdesc:norecurse" = nil;                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makefacialhairdesc">
         X[M] /*                   
make the description for facialhair detail                   
*/                   
if(this."alteration:makefacialhairdesc:norecurse"==1) return FALSE;                   
this."alteration:makefacialhairdesc:norecurse" = 1;                   
                   
this."alteration:facialhair:brief" = this."alteration:facialhair";                   
this."alteration:facialhair:look" = "A " + this."alteration:facialhair:faciallength" + " " + this."alteration:facialhair" + ".";                   
this."alteration:makefacialhairdesc:norecurse" = nil;                   
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makehairdesc">
         X[M] string coverage,coverage1,hairstyle,hairtype,haircolor,hairlength,coverage2,hairstyle2;     
/*     
 * do no recursion check for new implementation of setprop post triggers     
 */     
if(this."alteration:makehairdesc:norecurse"==1) return FALSE;     
     
this."alteration:makehairdesc:norecurse" = 1;     
this."trait:hair:brief" = "";     
this."trait:hair:look" = "";     
     
coverage = "";     
hairtype="";     
hairlength="";     
hairstyle="";     
hairstyle2="";     
haircolor="";     
     
EmitTo(\$actor, dump_value(coverage) +"^"+ dump_value(hairtype) +"^"+ dump_value(hairlength) +"^"+ dump_value(hairstyle) +"^"+ dump_value(hairstyle2) +"^"+ dump_value(haircolor));     
     
if(this."appearance:haircoverage")\{     
 coverage = this."appearance:haircoverage";     
 if(coverage=="bald")\{     
  this."trait:hair:brief" = "bald head";     
  this."trait:hair:look" = "a bald head";     
  this."alteration:makehairdesc:norecurse" = nil;     
  return TRUE;     
 \}     
\}     
     
if(this."alteration:hair:hairtype")\{     
 if(this."alteration:hair:hairtype"!="ordinary")\{     
  hairtype = " " + this."alteration:hair:hairtype";     
 \}     
\}     
     
if(this."alteration:hair:hairlength")\{     
 if(this."alteration:hair:hairlength"!="ordinary")\{     
  hairlength = " " + this."alteration:hair:hairlength";     
 \}     
\}     
     
if(this."alteration:hair:hairstyle")\{     
 if(this."alteration:hair:hairstyle"!="ordinary")\{     
  if(mghairstyle::.alternativevalues)\{     
   if(mghairstyle::.alternativevalues[this."alteration:hair:hairstyle"])     
   \{     
    hairstyle2 = " " + mghairstyle::.alternativevalues[this."alteration:hair:hairstyle"];     
   \}     
   else\{     
    hairstyle = " " + this."alteration:hair:hairstyle";     
   \}     
  \}     
  else\{     
   hairstyle = " " + this."alteration:hair:hairstyle";     
  \}     
 \}     
\}     
     
if(this."alteration:hair:haircolor")\{     
 if(this."alteration:hair:haircolor"!="ordinary")\{     
  haircolor = " " + this."alteration:hair:haircolor";     
 \}     
\}     
     
EmitTo(\$actor, dump_value(coverage) +"^"+ dump_value(hairtype) +"^"+ dump_value(hairlength) +"^"+ dump_value(hairstyle) +"^"+ dump_value(hairstyle2) +"^"+ dump_value(haircolor));     
     
coverage1="";     
coverage2="";     
     
if(mgdata::.coverage1[coverage])\{     
 coverage1 = mgdata::.coverage1[coverage] + " ";     
\}     
     
if(mgdata::.coverage2[coverage])\{     
 coverage2 = " with " + mgdata::.coverage2[coverage];     
\}     
     
EmitTo(\$actor, dump_value(coverage) +"^"+ dump_value(hairtype) +"^"+ dump_value(hairlength) +"^"+ dump_value(hairstyle) +"^"+ dump_value(hairstyle2) +"^"+ dump_value(haircolor));     
     
this."trait:hair:brief" = hairtype + hairlength + haircolor + " hair";     
if(hairstyle!="") \{     
 this."trait:hair:look" = "a "  + coverage1 + "head of" + hairtype + haircolor + hairstyle + hairlength+ " hair" +  coverage2;     
\}     
    
else\{     
 this."trait:hair:look" = "a "  + coverage1 + "head of" + hairtype + haircolor + hairstyle + " hair," + hairlength + " and " +  hairstyle2 + coverage2;     
\}     
this."alteration:makehairdesc:norecurse" = nil;     
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:makelookwounddesc">
         X[M] /*              
*              
*/              
              
string *locations,*descriptions,*states, *descs;              
float *shows;              
int ctr,ctr2,ctr3,sz;              
string *arr;              
string descstr;              
mapping statedesc;              
mapping st;              
string *covers;              
int covered;              
              
locations=(\{"healing:scarlocations","wound:bruiselocations","wound:woundlocations"\});              
descriptions=(\{"state:scar:scar:desc","state:wound:bruise:desc","state:wound:wound:desc"\});              
states=(\{"state:scar:scar","state:wound:bruise","state:wound:wound"\});              
              
shows = (\{0.0,0.0,0.0\});              
descs=(\{\});              
              
              
for(ctr=0;ctr\<sizeof(locations);ctr++)\{              
 if(Get(this,locations[ctr]))\{              
  covered = 0;              
  arr = map_indices(Get(this,locations[ctr]));              
              
  for(ctr2=0;ctr2\<sizeof(arr);ctr2++)\{              
   covered = 0;              
   if(this.detailtocoverage[arr[ctr2]])\{              
    covers = this.detailtocoverage[arr[ctr2]];              
    for(ctr3=0;ctr3\<sizeof(covers);ctr3++)\{              
     if(this."base:clothes-worn"[covers[ctr3]])\{              
      covered=1;              
      break;              
     \}              
    \}              
   \}              
   if(covered==0)\{              
    st = Get(this,locations[ctr]);              
    shows[ctr] += (float)st[arr[ctr2]];              
   \}              
  \}              
              
              
/*make description*/              
  if(shows[ctr]\>0.0)\{              
   statedesc = Get(this,states[ctr]);              
   statedesc = statedesc["desc"];              
   if(statedesc[shows[ctr]])\{              
    descs+=(\{statedesc[shows[ctr]]\});              
   \}              
   else\{              
    arr = map_indices(statedesc);              
    descs+=(\{arr[sizeof(arr)]\});              
   \}              
  \}              
 \}              
\}              
              
descstr="";              
sz = sizeof(descs);              
              
/*string description together*/              
for(ctr=0;ctr\<sizeof(descs);ctr++)\{              
 descstr+= descs[ctr];              
 if(ctr == sz-2)\{              
  descstr += " and ";              
 \}              
 if(ctr\<sz-2)\{              
  descstr += ", ";              
 \}              
\}              
if(descstr != "")\{              
 descstr = " " + capitalize(this."trait:nominative") + " is " + descstr + ".";              
\}              
return descstr;
      </Core:Property>
      <Core:Property property="merry:setprop-post:converttomgeneric">
         X[M] if(this.converttomgeneric == "true")\{                                                                                                     
mggeneral::convertToMGeneric(\$conversionList: "\\"" + lower_case(this."trait:superbrief") + "\\"", \$objOverride: this);                            
\}
      </Core:Property>
      <Core:Property property="merry:setprop-post:skotos:charname">
         X[M] this."trait:superbrief" = capitalize(this."skotos:charname");
      </Core:Property>
      <Core:Property property="merry:setprop-post:trait:name">
         X[M] bodies::compile_name(\$what: this);
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1111185951, "tonyd", "E", 1112594360, "tonyd", "E", 1112594480, "tonyd", "E", 1112594531, "tonyd", "P", 1112594550, "tonyd", "P", 1112594563, "tonyd", "P", 1112594587, "tonyd", "P", 1112594926, "tonyd", "P", 1112594957, "tonyd", "P", 1112594987, "tonyd", "P", 1112595141, "tonyd", "P", 1112595290, "tonyd", "P", 1112595388, "tonyd", "P", 1112595468, "tonyd", "P", 1112595484, "tonyd", "P", 1112595522, "tonyd", "P", 1112595590, "tonyd", "P", 1112595616, "tonyd", "P", 1112595637, "tonyd", "P", 1112595924, "tonyd", "P", 1112596061, "tonyd", "P", 1112596166, "tonyd", "P", 1112596208, "tonyd", "E", 1112596234, "tonyd", "P", 1112596243, "tonyd", "P", 1112596356, "tonyd", "P", 1112596412, "tonyd", "P", 1112596486, "tonyd", "P", 1112596573, "tonyd", "P", 1112596619, "tonyd", "P", 1112596776, "tonyd", "P", 1112596858, "tonyd", "P", 1112596926, "tonyd", "P", 1112597028, "tonyd", "P", 1112597654, "tonyd", "P", 1112598280, "tonyd", "P", 1112598415, "tonyd", "P", 1112598438, "tonyd", "P", 1112598454, "tonyd", "P", 1112598478, "tonyd", "P", 1112598508, "tonyd", "P", 1112598522, "tonyd", "E", 1112598549, "tonyd", "P", 1112598562, "tonyd", "P", 1112598691, "tonyd", "P", 1112601293, "tonyd", "P", 1112601342, "tonyd", "P", 1112601373, "tonyd", "P", 1112601402, "tonyd", "P", 1112601425, "tonyd", "P", 1112601472, "tonyd", "P", 1112601588, "tonyd", "P", 1112601614, "tonyd", "P", 1112601736, "tonyd", "P", 1112601892, "tonyd", "P", 1112601935, "tonyd", "P", 1112601964, "tonyd", "P", 1112602006, "tonyd", "P", 1113447184, "tonyd", "E", 1113723200, "tonyd", "E", 1113782342, "tonyd", "E", 1115608002, "tonyd", "E", 1117164626, "tonyd", "E", 1117164951, "tonyd", "E", 1117165183, "tonyd", "E", 1117165225, "tonyd", "E", 1117165276, "tonyd", "E", 1117165664, "tonyd", "E", 1117165779, "tonyd", "E", 1117246148, "tonyd", "E", 1117246753, "tonyd", "E", 1117246976, "tonyd", "E", 1120269946, "tonyd", "E", 1120270077, "tonyd", "E", 1120270206, "tonyd", "E", 1120275058, "tonyd", "E", 1120275360, "tonyd", "E", 1120275963, "tonyd", "E", 1135900145, "tonyd", "X", 1138440550, "tonyd", "E", 1138440707, "tonyd", "E", 1150590088, "tonyd", "E" \})
      </Core:Property>
      <Core:Property property="skill:advancedefensive">
         2
      </Core:Property>
      <Core:Property property="skill:attackingdefensive">
         0
      </Core:Property>
      <Core:Property property="skill:cutoffensive">3</Core:Property>
      <Core:Property property="skill:dodgedefensive">
         1
      </Core:Property>
      <Core:Property property="skill:fatigue">1.0</Core:Property>
      <Core:Property property="skill:feintoffensive">
         0
      </Core:Property>
      <Core:Property property="skill:fumbledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:guarddefensive">
         3
      </Core:Property>
      <Core:Property property="skill:idledefensive">
         0
      </Core:Property>
      <Core:Property property="skill:recoverdefensive">
         2
      </Core:Property>
      <Core:Property property="skill:restdefensive">
         1
      </Core:Property>
      <Core:Property property="skill:retiredefensive">
         2
      </Core:Property>
      <Core:Property property="skill:salutedefensive">
         0
      </Core:Property>
      <Core:Property property="skill:thrustoffensive">
         3
      </Core:Property>
      <Core:Property property="trait:title">"none"</Core:Property>
      <Core:Property property="volition">1</Core:Property>
    </Core:Properties>
    <Notes:Notes>
      <Notes:Category cat="QA" catstate="Open">
        <Notes:Note ix="966637404" state="Open" user="carlg">
           Base Human inheriting code from UrHumanCodeDB.
        </Notes:Note>
      </Notes:Category>
    </Notes:Notes>
  </Base:Thing>
</object>
