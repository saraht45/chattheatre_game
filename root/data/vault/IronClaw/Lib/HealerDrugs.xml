<object clone="/obj/properties" owner="SkotOS">
  <Core:PropertyContainer>
    <Ur:UrObject/>
    <Core:PCProperties>
      <Core:Property property="merry:lib:blindemits">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 

/* The emits sent while blind */     
switch(random(4))                   
\{             
  case 3:
    EmitIn(\$target."base:environment", Describe(\$target)+ " flails " +oneof("uselessly", "stupidly", "blindly")+ ".", \$target);
    EmitTo(\$target, "You flail " +oneof("uselessly", "stupidly", "blindly")+ ".");
  break; 
  case 2:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " blinks " +oneof("unseeingly", "frantically", "helplessly")+ ".", \$target);           
    EmitTo(\$target, "You blink " +oneof("unseeingly", "frantically", "helplessly")+ ".");                   
  break;              
  case 1:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " gropes around " +oneof("searchingly", "blindly", "unseeingly")+ ".", \$target);           
    EmitTo(\$target, "You grope around " +oneof("searchingly", "blindly", "unseeingly")+ ".");                   
  break;              
  case 0:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " gazes " +oneof("distantly", "blindly", "unseeingly")+ ".", \$target);           
    EmitTo(\$target, "You gaze " +oneof("distantly", "blindly", "unseeingly")+ ".");                   
  break;                             
  default:                   
  break;                   
\}                   
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:coughemits">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 

/* The emits sent while coughing */     
switch(random(4))                   
\{             
  case 3:
    EmitIn(\$target."base:environment", Describe(\$target)+ " coughs " +oneof("forcefully", "repeatedly", "manically")+ ".", \$target);
    EmitTo(\$target, "You cough " +oneof("forcefully", "repeatedly", "manically")+ ".");
  break; 
  case 2:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " splutters " +oneof("mercilessly", "frantically", "helplessly")+ ".", \$target);           
    EmitTo(\$target, "You splutter " +oneof("mercilessly", "frantically", "helplessly")+ ".");                   
  break;              
  case 1:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " sweats " +oneof("coughingly", "alot", "painedly")+ ".", \$target);           
    EmitTo(\$target, "You sweat " +oneof("coughingly", "alot", "painedly")+ ".");                   
  break;              
  case 0:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " chokes " +oneof("coughingly", "helplessly", "painedly")+ ".", \$target);           
    EmitTo(\$target, "You choke " +oneof("coughingly", "helplessly", "painedly")+ ".");                   
  break;                             
  default:                   
  break;                   
\}                   
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:deathemits">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 

/* The emits sent while under the frozen condition */     
switch(random(4))                   
\{             
  case 3:
    EmitIn(\$target."base:environment", Describe(\$target)+ " gasps" +oneof("needfully", "helplessly", "breathlessly")+ ".", \$target);
    EmitTo(\$target, "You shiver" +oneof("needfully", "helplessly", "breathlessly")+ ".");
  break; 
  case 2:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " rigidly stills" +\$target."base:possessive"+ " body lifelessly.", \$target);           
    EmitTo(\$target, "You clutch your body lifelessly.");                   
  break;              
  case 1:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " wails " +oneof("moaningly", "painedly", "unseeingly")+ ".", \$target);           
    EmitTo(\$target, "You wail " +oneof("moaningly", "painedly", "unseeingly")+ ".");                   
  break;              
  case 0:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " rasps " +oneof("breathlessly", "painedly", "lethargically")+ ".", \$target);           
    EmitTo(\$target, "You rasp " +oneof("breathlessly", "painedly", "lethargically")+ ".");                   
  break;                             
  default:                   
  break;                   
\}                   
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:frozenemits">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 

/* The emits sent while under the death condition */     
switch(random(4))                   
\{             
  case 3:
    EmitIn(\$target."base:environment", Describe(\$target)+ " shivers" +oneof("needfully", "helplessly", "frozenly")+ ".", \$target);
    EmitTo(\$target, "You shiver" +oneof("needfully", "helplessly", "frozenly")+ ".");
  break; 
  case 2:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " rigidly stills" +\$target."base:possessive"+ " body frozenly.", \$target);           
    EmitTo(\$target, "You clutch your body frozenly.");                   
  break;              
  case 1:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " wails " +oneof("moaningly", "painedly", "unseeingly")+ ".", \$target);           
    EmitTo(\$target, "You wail " +oneof("moaningly", "painedly", "unseeingly")+ ".");                   
  break;              
  case 0:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " rasps " +oneof("blue-lippedly", "painedly", "lethargically")+ ".", \$target);           
    EmitTo(\$target, "You rasp " +oneof("blue-lippedly", "painedly", "lethargically")+ ".");                   
  break;                             
  default:                   
  break;                   
\}                   
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:itchemits">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 

/* The emits sent while itching */     
switch(random(4))                   
\{             
  case 3:
    EmitIn(\$target."base:environment", Describe(\$target)+ " scratches " +oneof("forcefully", "repeatedly", "manically")+ ".", \$target);
    EmitTo(\$target, "You scratch " +oneof("forcefully", "repeatedly", "manically")+ ".");
  break; 
  case 2:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " itches " +oneof("mercilessly", "frantically", "helplessly")+ ".", \$target);           
    EmitTo(\$target, "You itch " +oneof("mercilessly", "frantically", "helplessly")+ ".");                   
  break;              
  case 1:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " sweats " +oneof("itchily", "alot", "extensively")+ ".", \$target);           
    EmitTo(\$target, "You sweat " +oneof("itchily", "alot", "extensively")+ ".");                   
  break;              
  case 0:                   
    EmitIn(\$target."base:environment", Describe(\$target)+ " itches " +\$actor."base:objective"+ " skin needfully.", \$target);           
    EmitTo(\$target, "You itch needfully.");                   
  break;                             
  default:                   
  break;                   
\}                   
return TRUE;
\}
      </Core:Property>
      <Core:Property property="merry:lib:paralyze">
         X[M] EmitTo (\$actor, "You take a good bite of " +Describe(\$mix, nil, \$actor)+ ". After a few moments, you begin to lose the feelings in your limbs. As you try to move your legs, and your arms, you realize that you are unable to. (OOC: This effect will last for 5 minutes)"); 
EmitIn (\$actor."base:environment", +Describe(\$actor)+ " takes a good bite of " +Describe(\$mix, nil, nil, STYLE_NONPOSS)+ ". After a few moments, " +\$actor."base:pronoun" + " ceases to move.", \$actor); 
 
/* effects of the mixture */ 
 
Set(\$actor, "base:immobile", 1); 
\$actor.mute = 1; 
 
/* Slays the mixture */ 
 
Slay(\$mix); 

/* Coming out of the effect */ 
 
\$delay(300, TRUE, "0a08"); 
Set(\$actor, "base:immobile", nil); 
\$actor.mute = 0; 
EmitTo (\$actor, "Your limbs feel less numb, as if you can move again."); 
EmitIn (\$actor."base:environment", +Describe(\$actor)+" seems to be able to move " +\$actor."base:pronoun" + " legs again.", \$actor); 
return FALSE;
      </Core:Property>
      <Core:Property property="merry:lib:silence">
         X[M] EmitTo (\$actor, "You take a good bite of " +Describe(\$mix, nil, \$actor)+ ". After a few moments, you feel your throat beginning to swell to the point of still being able to breathe, but being unable to utter a word. (OOC: This effect will last for 10 minutes)"); 
EmitIn (\$actor."base:environment", +Describe(\$actor)+ " takes a good bite of " +Describe(\$mix, nil, nil, STYLE_NONPOSS)+ ". After a few moments, " +\$actor."base:pronoun" + " seem to be fine.", \$actor); 
 
/* effects of the mixture */ 

\$actor.mute = 1; 
 
/* Slays the mixture */ 
 
Slay(\$mix); 
 
/* Coming out of the effect */ 
 
\$delay(600, TRUE, "0a08"); 
\$actor.mute = 0; 
EmitTo (\$actor, "Your throat dies down, and you are able to speak again"); 
EmitIn (\$actor."base:environment", +Describe(\$actor)+" seems to be able to speak again.", \$actor); 
return TRUE;
      </Core:Property>
      <Core:Property property="merry:lib:start">
         X[M] \$target = \$actor;
if(\$target) \{
if(\$ob."effect:type" == "itch") \{    
EmitTo (\$target, "You suddenly feel very itchy!");
EmitIn (\$target."base:environment", Describe(\$target)+ " suddenly starts itching!", \$target);
\$target."is:itch" = 1;       
Call(\$this, "starttimer");             
\} else if(\$ob."effect:type" == "cough") \{    
EmitTo (\$target, "You suddenly start coughing!");
EmitIn (\$target."base:environment", Describe(\$target)+ " suddenly starts coughing!", \$target);       
\$target."is:cough" = 1;                
Call(\$this, "starttimer");           
\} else if(\$ob."effect:type" == "frozen") \{    
EmitTo (\$target, "You suddenly start shiver! It feels like your dying.");
EmitIn (\$target."base:environment", Describe(\$target)+ " suddenly starts shivering!", \$target);       
\$target."is:frozen" = 1;                
Call(\$this, "starttimer");           
\} else if(\$ob."effect:type" == "blind") \{   
EmitTo (\$target, "You suddenly realize that you are blind!");
EmitIn (\$target."base:environment", Describe(\$target)+ " flails around blindly!", \$target);
\$target."is:blind" = 1;   
Call(\$this, "starttimer");   
\} else if (\$ob."effect:type" == "death") \{   
EmitTo (\$target, "You abruptly begin gasping for breath, but can hardly find any air at all. You must be dying!!");
EmitIn (\$target."base:environment", Describe(\$target)+ " begins gasping desperately for air!", \$target);
\$target."is:death" = 1;   
Call(\$this, "starttimer"); 
\} else \{
return FALSE;   
\}
if(\$ob."no:slay") \{   
 return FALSE;   
 \} else \{   
 Slay(\$ob);   
 return FALSE;   
 \}
\}
      </Core:Property>
      <Core:Property property="merry:lib:starttimer">
         X[M] if(\$iob \&\& (sizeof(\$iob) == 1) \&\& (NRefOb(\$iob[0])."base:volition" == 1 )) \{      
\$target = NRefOb(\$iob[0]); 
/* The timer and finish code when it runs out */       
if(\$target.timer)                     
\{                     
  \$target.timer = 10;                     
  \$delay(1, TRUE, "484b");                     
if(\$target."is:cough") \{                
  Call(\$this, "coughemits");     
return TRUE;   
\}      
if(\$target."is:death") \{
  Call(\$this, "deathemits");
return TRUE;
\}
if(\$target."is:frozen") \{
  Call(\$this, "frozenemits");
return TRUE;
\}
if(\$target."is:itch") \{                
  Call(\$this, "itchemits");     
return TRUE;   
\}      
if(\$target."is:blind") \{                
  Call(\$this, "blindemits");     
return TRUE;   
\}                     
  return TRUE;                     
\} else \{                     
  \$target.timer = 10;                     
\}                     
\$delay(1, TRUE, "8a49");                     
while(\$target.timer \&\& (\$target.timer \< 240)) \{         
if(\$target."is:cough") \{                
  Call(\$this, "coughemits");  \}  
if(\$target."is:death") \{
  Call(\$this, "deathemits");  \}  
if(\$target."is:frozen") \{
  Call(\$this, "frozenemits");  \}  
if(\$target."is:itch") \{                
  Call(\$this, "itchemits");  \}      
if(\$target."is:blind") \{                
  Call(\$this, "blindemits");  \}                   
  \$delay(\$target.timer, TRUE, "b73d");                     
  \$target.timer += random(30);                     
\}                     
\$target.timer = nil;           
\$target."is:itch" = nil;   
\$target."is:death" = nil;
\$target."is:frozen" = nil; 
\$target."is:cough" = nil;    
\$target."is:blind" = nil;              
EmitTo(\$target, "You feel much better.");             
return TRUE;
\}
      </Core:Property>
      <Core:Property property="revisions">
         (\{ 1144052088, "-", "SYNC", 1151017291, "barbra18", "E", 1151017351, "barbra18", "E", 1151017444, "barbra18", "E", 1151017559, "barbra18", "E", 1151017690, "barbra18", "E", 1151036875, "barbra18", "E", 1151037327, "barbra18", "E", 1151037768, "barbra18", "E", 1151037908, "barbra18", "E", 1151037951, "barbra18", "E", 1151038118, "barbra18", "E", 1151093174, "barbra18", "E", 1151093182, "barbra18", "E", 1151093349, "barbra18", "E", 1151093964, "barbra18", "E", 1151094751, "barbra18", "E", 1151094902, "barbra18", "E", 1151094957, "barbra18", "E", 1151095031, "barbra18", "E", 1151095225, "barbra18", "E", 1151111406, "barbra18", "E", 1151111614, "barbra18", "E", 1151139122, "barbra18", "E", 1151139344, "barbra18", "E", 1151139445, "barbra18", "E", 1151139649, "barbra18", "E", 1151139816, "barbra18", "E", 1151140010, "barbra18", "E", 1151140019, "barbra18", "E", 1151140193, "barbra18", "E", 1151140663, "barbra18", "E", 1151140799, "barbra18", "E", 1151141126, "barbra18", "E", 1151141149, "barbra18", "E", 1151144157, "barbra18", "E", 1151144378, "barbra18", "E", 1151144452, "barbra18", "E", 1151145753, "barbra18", "E", 1155618469, "barbra18", "E", 1155618553, "barbra18", "E", 1352572630, "meandmine", "E", 1352572686, "meandmine", "E", 1352572963, "meandmine", "E", 1352573002, "meandmine", "E", 1352573125, "meandmine", "E", 1352596535, "meandmine", "E", 1422687493, "slurpeeslurp", "E", 1422720488, "jominey", "E", 1422720519, "jominey", "E", 1422720540, "jominey", "E", 1422720593, "jominey", "E" \})
      </Core:Property>
    </Core:PCProperties>
    <Notes:Notes/>
  </Core:PropertyContainer>
</object>
